!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/eb/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20211107.0/
#content	plugged/emmet-vim/docs/static/css/style-sites.css	/^#content {$/;"	i
#tty	plugged/emmet-vim/docs/static/css/style-sites.css	/^#tty {$/;"	i
$	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
$	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:OR
$	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
$$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
$0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
$4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
$6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
$A	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
$D	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
$Ee	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
$G	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
$J	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
$K	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
$L	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$M	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$NODE_CLIENT_LOG_FILE	plugged/coc.nvim/autoload/coc/client.vim	/^    let $NODE_CLIENT_LOG_FILE = s:logfile$/;"	v
$NODE_CLIENT_LOG_LEVEL	plugged/coc.nvim/autoload/coc/client.vim	/^  let $NODE_CLIENT_LOG_LEVEL = 'debug'$/;"	v
$O	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
$P	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
$T	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
$V	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
$X	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
$Y	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
$Z	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$a	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$ae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
$b	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$c	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	f
$d	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
$e	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
$g	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
$i	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$ie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
$j	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
$me	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
$mid	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	p	class:e.toJSON.t
$n	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
$r	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerCommand"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.1
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerModule"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.0
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerSocket"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.2
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.diagnostic.floatConfig.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.hover.floatConfig.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.signature.floatConfig.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.suggest.floatConfig.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerCommand.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerModule.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerSocket.allOf.0
$schema	plugged/coc.nvim/data/schema.json	/^  "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",$/;"	s
$se	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$u	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$w	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
$y	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
%	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
*	coc-settings.json	/^        "*":"html"$/;"	s	object:emmet.includeLanguages
*.php	coc-settings.json	/^        "*.php":"html",$/;"	s	object:emmet.includeLanguages
*Backward incompatible changes*	plugged/fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	S	section:CHANGELOG""0.9.4
,,x	plugged/plenary.nvim/scratch/minimal_init.vim	/^nnoremap ,,x :luafile %<CR>$/;"	m
,,x	plugged/plenary.nvim/tests/minimal_init.vim	/^nnoremap ,,x :luafile %<CR>$/;"	m
.	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> .           :call b:buffergator_catalog_viewer.visit_targe/;"	m
.DEFAULT_GOAL	plugged/github-nvim-theme/Makefile	/^.DEFAULT_GOAL = check$/;"	m
.DEFAULT_GOAL	plugged/gitsigns.nvim/Makefile	/^.DEFAULT_GOAL := build$/;"	m
.DEFAULT_GOAL	plugged/lualine.nvim/Makefile	/^.DEFAULT_GOAL = check$/;"	m
.blocked-content	plugged/emmet-vim/docs/static/css/style-sites.css	/^.blocked-content {$/;"	c
.maintitle	plugged/emmet-vim/docs/static/css/style-sites.css	/^.maintitle {$/;"	c
.subtitle	plugged/emmet-vim/docs/static/css/style-sites.css	/^.subtitle {$/;"	c
0	coc-settings.json	/^                "--lib",$/;"	s	array:languageserver.racket.args
0	coc-settings.json	/^                "scheme"$/;"	s	array:languageserver.racket.filetypes
0	coc-settings.json	/^         "cpp": ["c"],$/;"	s	array:snippets.extends.cpp
0	coc-settings.json	/^        "html",$/;"	s	array:html.filetypes
0	coc-settings.json	/^        "http": ["php","blade"],$/;"	s	array:emmet.includeLanguages.http
0	coc-settings.json	/^        "javascriptreact": ["javascript"],$/;"	s	array:snippets.extends.javascriptreact
0	coc-settings.json	/^        "typescript": ["javascript"]$/;"	s	array:snippets.extends.typescript
0	plugged/coc.nvim/data/schema.json	/^            "edit",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
0	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
0	plugged/coc.nvim/data/schema.json	/^        "%#CocListMode#-- %{get(b:list_status, \\"mode\\", \\"\\")} --%*",$/;"	s	array:properties.list.statusLineSegments.default
0	plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
0	plugged/coc.nvim/data/schema.json	/^        {$/;"	o	array:properties.coc.preferences.jumpCommand.anyOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.diagnostic.floatConfig.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.hover.floatConfig.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.signature.floatConfig.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.suggest.floatConfig.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerCommand.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerModule.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerSocket.allOf
0	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
0	plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
0	plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
0	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
0	plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
0	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
0	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
0	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
0	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
0	plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
0	plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
0	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
0	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
0	plugged/coc.nvim/package.json	/^      "<rootDir>"$/;"	s	array:jest.projects
0	plugged/coc.nvim/package.json	/^      "ts",$/;"	s	array:jest.moduleFileExtensions
0	plugged/coc.nvim/package.json	/^    "complete",$/;"	s	array:keywords
0.1.0	plugged/nord-vim/CHANGELOG.md	/^# 0.1.0$/;"	c
0.1.1	plugged/nord-vim/CHANGELOG.md	/^# 0.1.1$/;"	c
0.1.2	plugged/nord-vim/CHANGELOG.md	/^# 0.1.2$/;"	c
0.10.0	plugged/fzf/CHANGELOG.md	/^0.10.0$/;"	s	chapter:CHANGELOG
0.10.0	plugged/nord-vim/CHANGELOG.md	/^# 0.10.0$/;"	c
0.10.1	plugged/fzf/CHANGELOG.md	/^0.10.1$/;"	s	chapter:CHANGELOG
0.10.2	plugged/fzf/CHANGELOG.md	/^0.10.2$/;"	s	chapter:CHANGELOG
0.10.3	plugged/fzf/CHANGELOG.md	/^0.10.3$/;"	s	chapter:CHANGELOG
0.10.4	plugged/fzf/CHANGELOG.md	/^0.10.4$/;"	s	chapter:CHANGELOG
0.10.5	plugged/fzf/CHANGELOG.md	/^0.10.5$/;"	s	chapter:CHANGELOG
0.10.6	plugged/fzf/CHANGELOG.md	/^0.10.6$/;"	s	chapter:CHANGELOG
0.10.7	plugged/fzf/CHANGELOG.md	/^0.10.7$/;"	s	chapter:CHANGELOG
0.10.8	plugged/fzf/CHANGELOG.md	/^0.10.8$/;"	s	chapter:CHANGELOG
0.10.9	plugged/fzf/CHANGELOG.md	/^0.10.9$/;"	s	chapter:CHANGELOG
0.11.0	plugged/fzf/CHANGELOG.md	/^0.11.0$/;"	s	chapter:CHANGELOG
0.11.0	plugged/nord-vim/CHANGELOG.md	/^# 0.11.0$/;"	c
0.11.1	plugged/fzf/CHANGELOG.md	/^0.11.1$/;"	s	chapter:CHANGELOG
0.11.2	plugged/fzf/CHANGELOG.md	/^0.11.2$/;"	s	chapter:CHANGELOG
0.11.3	plugged/fzf/CHANGELOG.md	/^0.11.3$/;"	s	chapter:CHANGELOG
0.11.4	plugged/fzf/CHANGELOG.md	/^0.11.4$/;"	s	chapter:CHANGELOG
0.12.0	plugged/fzf/CHANGELOG.md	/^0.12.0$/;"	s	chapter:CHANGELOG
0.12.0	plugged/nord-vim/CHANGELOG.md	/^# 0.12.0$/;"	c
0.12.1	plugged/fzf/CHANGELOG.md	/^0.12.1$/;"	s	chapter:CHANGELOG
0.12.2	plugged/fzf/CHANGELOG.md	/^0.12.2$/;"	s	chapter:CHANGELOG
0.13.0	plugged/fzf/CHANGELOG.md	/^0.13.0$/;"	s	chapter:CHANGELOG
0.13.0	plugged/nord-vim/CHANGELOG.md	/^# 0.13.0$/;"	c
0.13.1	plugged/fzf/CHANGELOG.md	/^0.13.1$/;"	s	chapter:CHANGELOG
0.13.2	plugged/fzf/CHANGELOG.md	/^0.13.2$/;"	s	chapter:CHANGELOG
0.13.3	plugged/fzf/CHANGELOG.md	/^0.13.3$/;"	s	chapter:CHANGELOG
0.13.4	plugged/fzf/CHANGELOG.md	/^0.13.4$/;"	s	chapter:CHANGELOG
0.13.5	plugged/fzf/CHANGELOG.md	/^0.13.5$/;"	s	chapter:CHANGELOG
0.14.0	plugged/nord-vim/CHANGELOG.md	/^# 0.14.0$/;"	c
0.15.0	plugged/fzf/CHANGELOG.md	/^0.15.0$/;"	s	chapter:CHANGELOG
0.15.0	plugged/nord-vim/CHANGELOG.md	/^# 0.15.0$/;"	c
0.15.1	plugged/fzf/CHANGELOG.md	/^0.15.1$/;"	s	chapter:CHANGELOG
0.15.2	plugged/fzf/CHANGELOG.md	/^0.15.2$/;"	s	chapter:CHANGELOG
0.15.3	plugged/fzf/CHANGELOG.md	/^0.15.3$/;"	s	chapter:CHANGELOG
0.15.4	plugged/fzf/CHANGELOG.md	/^0.15.4$/;"	s	chapter:CHANGELOG
0.15.5	plugged/fzf/CHANGELOG.md	/^0.15.5$/;"	s	chapter:CHANGELOG
0.15.6	plugged/fzf/CHANGELOG.md	/^0.15.6$/;"	s	chapter:CHANGELOG
0.15.7	plugged/fzf/CHANGELOG.md	/^0.15.7$/;"	s	chapter:CHANGELOG
0.15.8	plugged/fzf/CHANGELOG.md	/^0.15.8$/;"	s	chapter:CHANGELOG
0.15.9	plugged/fzf/CHANGELOG.md	/^0.15.9$/;"	s	chapter:CHANGELOG
0.16.0	plugged/fzf/CHANGELOG.md	/^0.16.0$/;"	s	chapter:CHANGELOG
0.16.0	plugged/nord-vim/CHANGELOG.md	/^# 0.16.0$/;"	c
0.16.1	plugged/fzf/CHANGELOG.md	/^0.16.1$/;"	s	chapter:CHANGELOG
0.16.10	plugged/fzf/CHANGELOG.md	/^0.16.10$/;"	s	chapter:CHANGELOG
0.16.11	plugged/fzf/CHANGELOG.md	/^0.16.11$/;"	s	chapter:CHANGELOG
0.16.2	plugged/fzf/CHANGELOG.md	/^0.16.2$/;"	s	chapter:CHANGELOG
0.16.3	plugged/fzf/CHANGELOG.md	/^0.16.3$/;"	s	chapter:CHANGELOG
0.16.4	plugged/fzf/CHANGELOG.md	/^0.16.4$/;"	s	chapter:CHANGELOG
0.16.5	plugged/fzf/CHANGELOG.md	/^0.16.5$/;"	s	chapter:CHANGELOG
0.16.6	plugged/fzf/CHANGELOG.md	/^0.16.6$/;"	s	chapter:CHANGELOG
0.16.7	plugged/fzf/CHANGELOG.md	/^0.16.7$/;"	s	chapter:CHANGELOG
0.16.8	plugged/fzf/CHANGELOG.md	/^0.16.8$/;"	s	chapter:CHANGELOG
0.16.9	plugged/fzf/CHANGELOG.md	/^0.16.9$/;"	s	chapter:CHANGELOG
0.17.0	plugged/fzf/CHANGELOG.md	/^0.17.0$/;"	s	chapter:CHANGELOG
0.17.0	plugged/nord-vim/CHANGELOG.md	/^# 0.17.0$/;"	c
0.17.0-2	plugged/fzf/CHANGELOG.md	/^0.17.0-2$/;"	s	chapter:CHANGELOG
0.17.1	plugged/fzf/CHANGELOG.md	/^0.17.1$/;"	s	chapter:CHANGELOG
0.17.3	plugged/fzf/CHANGELOG.md	/^0.17.3$/;"	s	chapter:CHANGELOG
0.17.4	plugged/fzf/CHANGELOG.md	/^0.17.4$/;"	s	chapter:CHANGELOG
0.17.5	plugged/fzf/CHANGELOG.md	/^0.17.5$/;"	s	chapter:CHANGELOG
0.18.0	plugged/fzf/CHANGELOG.md	/^0.18.0$/;"	s	chapter:CHANGELOG
0.18.0	plugged/nord-vim/CHANGELOG.md	/^# 0.18.0$/;"	c
0.19.0	plugged/fzf/CHANGELOG.md	/^0.19.0$/;"	s	chapter:CHANGELOG
0.2.0	plugged/nord-vim/CHANGELOG.md	/^# 0.2.0$/;"	c
0.20.0	plugged/fzf/CHANGELOG.md	/^0.20.0$/;"	s	chapter:CHANGELOG
0.21.1	plugged/fzf/CHANGELOG.md	/^0.21.1$/;"	s	chapter:CHANGELOG
0.22.0	plugged/fzf/CHANGELOG.md	/^0.22.0$/;"	s	chapter:CHANGELOG
0.23.0	plugged/fzf/CHANGELOG.md	/^0.23.0$/;"	s	chapter:CHANGELOG
0.23.1	plugged/fzf/CHANGELOG.md	/^0.23.1$/;"	s	chapter:CHANGELOG
0.24.0	plugged/fzf/CHANGELOG.md	/^0.24.0$/;"	s	chapter:CHANGELOG
0.24.1	plugged/fzf/CHANGELOG.md	/^0.24.1$/;"	s	chapter:CHANGELOG
0.24.2	plugged/fzf/CHANGELOG.md	/^0.24.2$/;"	s	chapter:CHANGELOG
0.24.3	plugged/fzf/CHANGELOG.md	/^0.24.3$/;"	s	chapter:CHANGELOG
0.24.4	plugged/fzf/CHANGELOG.md	/^0.24.4$/;"	s	chapter:CHANGELOG
0.25.0	plugged/fzf/CHANGELOG.md	/^0.25.0$/;"	s	chapter:CHANGELOG
0.25.1	plugged/fzf/CHANGELOG.md	/^0.25.1$/;"	s	chapter:CHANGELOG
0.26.0	plugged/fzf/CHANGELOG.md	/^0.26.0$/;"	s	chapter:CHANGELOG
0.27.0	plugged/fzf/CHANGELOG.md	/^0.27.0$/;"	s	chapter:CHANGELOG
0.27.1	plugged/fzf/CHANGELOG.md	/^0.27.1$/;"	s	chapter:CHANGELOG
0.27.2	plugged/fzf/CHANGELOG.md	/^0.27.2$/;"	s	chapter:CHANGELOG
0.27.3	plugged/fzf/CHANGELOG.md	/^0.27.3$/;"	s	chapter:CHANGELOG
0.28.0	plugged/fzf/CHANGELOG.md	/^0.28.0$/;"	s	chapter:CHANGELOG
0.3.0	plugged/nord-vim/CHANGELOG.md	/^# 0.3.0$/;"	c
0.4.0	plugged/nord-vim/CHANGELOG.md	/^# 0.4.0$/;"	c
0.5.0	plugged/nord-vim/CHANGELOG.md	/^# 0.5.0$/;"	c
0.6.0	plugged/nord-vim/CHANGELOG.md	/^# 0.6.0$/;"	c
0.7.0	plugged/nord-vim/CHANGELOG.md	/^# 0.7.0$/;"	c
0.8.0	plugged/nord-vim/CHANGELOG.md	/^# 0.8.0$/;"	c
0.9.0	plugged/nord-vim/CHANGELOG.md	/^# 0.9.0$/;"	c
0.9.0 (Jul 21, 2013)	plugged/vim-bbye/CHANGELOG.md	/^## 0.9.0 (Jul 21, 2013)$/;"	s
0.9.1 (Jul 21, 2013)	plugged/vim-bbye/CHANGELOG.md	/^## 0.9.1 (Jul 21, 2013)$/;"	s
0.9.10	plugged/fzf/CHANGELOG.md	/^0.9.10$/;"	s	chapter:CHANGELOG
0.9.11	plugged/fzf/CHANGELOG.md	/^0.9.11$/;"	s	chapter:CHANGELOG
0.9.12	plugged/fzf/CHANGELOG.md	/^0.9.12$/;"	s	chapter:CHANGELOG
0.9.13	plugged/fzf/CHANGELOG.md	/^0.9.13$/;"	s	chapter:CHANGELOG
0.9.3	plugged/fzf/CHANGELOG.md	/^0.9.3$/;"	s	chapter:CHANGELOG
0.9.4	plugged/fzf/CHANGELOG.md	/^0.9.4$/;"	s	chapter:CHANGELOG
0.9.5	plugged/fzf/CHANGELOG.md	/^0.9.5$/;"	s	chapter:CHANGELOG
0.9.6	plugged/fzf/CHANGELOG.md	/^0.9.6$/;"	s	chapter:CHANGELOG
0.9.7	plugged/fzf/CHANGELOG.md	/^0.9.7$/;"	s	chapter:CHANGELOG
0.9.8	plugged/fzf/CHANGELOG.md	/^0.9.8$/;"	s	chapter:CHANGELOG
0.9.9	plugged/fzf/CHANGELOG.md	/^0.9.9$/;"	s	chapter:CHANGELOG
1	coc-settings.json	/^                "racket-langserver"$/;"	s	array:languageserver.racket.args
1	coc-settings.json	/^        "handlebars",$/;"	s	array:html.filetypes
1	coc-settings.json	/^        "http": ["php","blade"],$/;"	s	array:emmet.includeLanguages.http
1	plugged/coc.nvim/data/schema.json	/^            "split",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
1	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
1	plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"loading\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
1	plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
1	plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	o	array:properties.coc.preferences.jumpCommand.anyOf
1	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
1	plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
1	plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
1	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
1	plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
1	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
1	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
1	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
1	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
1	plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
1	plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
1	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
1	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
1	plugged/coc.nvim/package.json	/^      "tsx",$/;"	s	array:jest.moduleFileExtensions
1	plugged/coc.nvim/package.json	/^    "neovim"$/;"	s	array:keywords
1. Correction	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^### 1. Correction$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
1. Correction	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^### 1. Correction$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
1. Update the list of processes by pressing CTRL-R	plugged/fzf/README.md	/^#### 1. Update the list of processes by pressing CTRL-R$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
1.0.0 (Jul 23, 2013)	plugged/vim-bbye/CHANGELOG.md	/^## 1.0.0 (Jul 23, 2013)$/;"	s
1.0.1 (Jul 23, 2013)	plugged/vim-bbye/CHANGELOG.md	/^## 1.0.1 (Jul 23, 2013)$/;"	s
16color	plugged/lualine.nvim/THEMES.md	/^### 16color$/;"	S	chapter:Available themes
2	coc-settings.json	/^        "htmldjango",$/;"	s	array:html.filetypes
2	plugged/coc.nvim/data/schema.json	/^            "vsplit",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
2	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
2	plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"args\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
2	plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
2	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
2	plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
2	plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
2	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
2	plugged/coc.nvim/package.json	/^      "json",$/;"	s	array:jest.moduleFileExtensions
2. Switch between sources by pressing CTRL-D or CTRL-F	plugged/fzf/README.md	/^#### 2. Switch between sources by pressing CTRL-D or CTRL-F$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
2. Warning	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^### 2. Warning$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
2. Warning	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^### 2. Warning$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
2018-07-12	plugged/coc.nvim/history.md	/^# 2018-07-12$/;"	c
2018-07-13	plugged/coc.nvim/history.md	/^# 2018-07-13$/;"	c
2018-07-14	plugged/coc.nvim/history.md	/^# 2018-07-14$/;"	c
2018-07-15	plugged/coc.nvim/history.md	/^# 2018-07-15$/;"	c
2018-07-16	plugged/coc.nvim/history.md	/^# 2018-07-16$/;"	c
2018-07-17	plugged/coc.nvim/history.md	/^# 2018-07-17$/;"	c
2018-07-19	plugged/coc.nvim/history.md	/^# 2018-07-19$/;"	c
2018-07-20	plugged/coc.nvim/history.md	/^# 2018-07-20$/;"	c
2018-07-21	plugged/coc.nvim/history.md	/^# 2018-07-21$/;"	c
2018-07-23	plugged/coc.nvim/history.md	/^# 2018-07-23$/;"	c
2018-07-24	plugged/coc.nvim/history.md	/^# 2018-07-24$/;"	c
2018-07-27	plugged/coc.nvim/history.md	/^# 2018-07-27$/;"	c
2018-07-28	plugged/coc.nvim/history.md	/^# 2018-07-28$/;"	c
2018-07-29	plugged/coc.nvim/history.md	/^# 2018-07-29$/;"	c
2018-07-30	plugged/coc.nvim/history.md	/^# 2018-07-30$/;"	c
2018-07-31	plugged/coc.nvim/history.md	/^# 2018-07-31$/;"	c
2018-08-02	plugged/coc.nvim/history.md	/^# 2018-08-02$/;"	c
2018-08-03	plugged/coc.nvim/history.md	/^# 2018-08-03$/;"	c
2018-08-04	plugged/coc.nvim/history.md	/^# 2018-08-04$/;"	c
2018-08-05	plugged/coc.nvim/history.md	/^# 2018-08-05$/;"	c
2018-08-07	plugged/coc.nvim/history.md	/^# 2018-08-07$/;"	c
2018-08-08	plugged/coc.nvim/history.md	/^# 2018-08-08$/;"	c
2018-08-09	plugged/coc.nvim/history.md	/^# 2018-08-09$/;"	c
2018-08-10	plugged/coc.nvim/history.md	/^# 2018-08-10$/;"	c
2018-08-11	plugged/coc.nvim/history.md	/^# 2018-08-11$/;"	c
2018-08-12	plugged/coc.nvim/history.md	/^# 2018-08-12$/;"	c
2018-08-14	plugged/coc.nvim/history.md	/^# 2018-08-14$/;"	c
2018-08-15	plugged/coc.nvim/history.md	/^# 2018-08-15$/;"	c
2018-08-16	plugged/coc.nvim/history.md	/^# 2018-08-16$/;"	c
2018-08-17	plugged/coc.nvim/history.md	/^# 2018-08-17$/;"	c
2018-08-21	plugged/coc.nvim/history.md	/^# 2018-08-21$/;"	c
2018-08-23	plugged/coc.nvim/history.md	/^# 2018-08-23$/;"	c
2018-08-30	plugged/coc.nvim/history.md	/^# 2018-08-30$/;"	c
2018-09-07	plugged/coc.nvim/history.md	/^# 2018-09-07$/;"	c
2018-09-10	plugged/coc.nvim/history.md	/^# 2018-09-10$/;"	c
2018-09-15	plugged/coc.nvim/history.md	/^# 2018-09-15$/;"	c
2018-09-20	plugged/coc.nvim/history.md	/^# 2018-09-20$/;"	c
2018-09-24	plugged/coc.nvim/history.md	/^# 2018-09-24$/;"	c
2018-09-27	plugged/coc.nvim/history.md	/^# 2018-09-27$/;"	c
2018-09-28	plugged/coc.nvim/history.md	/^# 2018-09-28$/;"	c
2018-09-30	plugged/coc.nvim/history.md	/^# 2018-09-30$/;"	c
2018-10-01	plugged/coc.nvim/history.md	/^# 2018-10-01$/;"	c
2018-10-05	plugged/coc.nvim/history.md	/^# 2018-10-05$/;"	c
2018-10-14	plugged/coc.nvim/history.md	/^# 2018-10-14$/;"	c
2018-10-18	plugged/coc.nvim/history.md	/^# 2018-10-18$/;"	c
2018-10-21	plugged/coc.nvim/history.md	/^# 2018-10-21$/;"	c
2018-10-25	plugged/coc.nvim/history.md	/^# 2018-10-25$/;"	c
2018-10-29	plugged/coc.nvim/history.md	/^# 2018-10-29$/;"	c
2018-11-02	plugged/coc.nvim/history.md	/^# 2018-11-02$/;"	c
2018-11-07	plugged/coc.nvim/history.md	/^# 2018-11-07$/;"	c
2018-11-13	plugged/coc.nvim/history.md	/^# 2018-11-13$/;"	c
2018-11-19	plugged/coc.nvim/history.md	/^# 2018-11-19$/;"	c
2018-11-24	plugged/coc.nvim/history.md	/^# 2018-11-24$/;"	c
2018-11-28	plugged/coc.nvim/history.md	/^# 2018-11-28$/;"	c
2018-12-05	plugged/coc.nvim/history.md	/^# 2018-12-05$/;"	c
2018-12-06	plugged/coc.nvim/history.md	/^# 2018-12-06$/;"	c
2018-12-08	plugged/coc.nvim/history.md	/^# 2018-12-08$/;"	c
2018-12-12	plugged/coc.nvim/history.md	/^# 2018-12-12$/;"	c
2018-12-17	plugged/coc.nvim/history.md	/^# 2018-12-17$/;"	c
2018-12-20	plugged/coc.nvim/history.md	/^# 2018-12-20$/;"	c
2018-12-27	plugged/coc.nvim/history.md	/^# 2018-12-27$/;"	c
2018-12-31	plugged/coc.nvim/history.md	/^# 2018-12-31$/;"	c
2019-01-01	plugged/coc.nvim/history.md	/^# 2019-01-01$/;"	c
2019-01-03	plugged/coc.nvim/history.md	/^# 2019-01-03$/;"	c
2019-01-09	plugged/coc.nvim/history.md	/^# 2019-01-09$/;"	c
2019-01-24	plugged/coc.nvim/history.md	/^# 2019-01-24$/;"	c
2019-01-28	plugged/coc.nvim/history.md	/^# 2019-01-28$/;"	c
2019-02-02	plugged/coc.nvim/history.md	/^# 2019-02-02$/;"	c
2019-02-04	plugged/coc.nvim/history.md	/^# 2019-02-04$/;"	c
2019-02-11	plugged/coc.nvim/history.md	/^# 2019-02-11$/;"	c
2019-02-12	plugged/coc.nvim/history.md	/^# 2019-02-12$/;"	c
2019-02-17	plugged/coc.nvim/history.md	/^# 2019-02-17$/;"	c
2019-02-22	plugged/coc.nvim/history.md	/^# 2019-02-22$/;"	c
2019-02-25	plugged/coc.nvim/history.md	/^# 2019-02-25$/;"	c
2019-03-03	plugged/coc.nvim/history.md	/^# 2019-03-03$/;"	c
2019-03-11	plugged/coc.nvim/history.md	/^# 2019-03-11$/;"	c
2019-03-16	plugged/coc.nvim/history.md	/^# 2019-03-16$/;"	c
2019-03-19	plugged/coc.nvim/history.md	/^# 2019-03-19$/;"	c
2019-03-24	plugged/coc.nvim/history.md	/^# 2019-03-24$/;"	c
2019-03-28	plugged/coc.nvim/history.md	/^# 2019-03-28$/;"	c
2019-03-31	plugged/coc.nvim/history.md	/^# 2019-03-31$/;"	c
2019-04-09	plugged/coc.nvim/history.md	/^# 2019-04-09$/;"	c
2019-04-27	plugged/coc.nvim/history.md	/^# 2019-04-27$/;"	c
2019-05-07	plugged/coc.nvim/history.md	/^# 2019-05-07$/;"	c
2019-05-30	plugged/coc.nvim/history.md	/^# 2019-05-30$/;"	c
2019-06-09	plugged/coc.nvim/history.md	/^# 2019-06-09$/;"	c
2019-06-12	plugged/coc.nvim/history.md	/^# 2019-06-12$/;"	c
2019-06-15	plugged/coc.nvim/history.md	/^# 2019-06-15$/;"	c
2019-07-01	plugged/coc.nvim/history.md	/^# 2019-07-01$/;"	c
2019-07-11 0.0.73	plugged/coc.nvim/history.md	/^# 2019-07-11 0.0.73$/;"	c
2019-08-18 0.0.74	plugged/coc.nvim/history.md	/^# 2019-08-18 0.0.74$/;"	c
3	coc-settings.json	/^        "blade",$/;"	s	array:html.filetypes
3	plugged/coc.nvim/data/schema.json	/^            "tabe",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
3	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
3	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
3	plugged/coc.nvim/data/schema.json	/^        "(%L\/%{get(b:list_status, \\"total\\", \\"\\")})",$/;"	s	array:properties.list.statusLineSegments.default
3	plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
3	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
3	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
3	plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
3	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
3	plugged/coc.nvim/package.json	/^      "js"$/;"	s	array:jest.moduleFileExtensions
3. Interactive ripgrep integration	plugged/fzf/README.md	/^#### 3. Interactive ripgrep integration$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
3. Temporary Ban	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^### 3. Temporary Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
3. Temporary Ban	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^### 3. Temporary Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
4	coc-settings.json	/^        "php"$/;"	s	array:html.filetypes
4	plugged/coc.nvim/data/schema.json	/^            "drop",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
4	plugged/coc.nvim/data/schema.json	/^        "%=",$/;"	s	array:properties.list.statusLineSegments.default
4	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
4. Permanent Ban	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^### 4. Permanent Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
4. Permanent Ban	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^### 4. Permanent Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
5	plugged/coc.nvim/data/schema.json	/^            "tab drop",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
5	plugged/coc.nvim/data/schema.json	/^        "%#CocListPath# %{get(b:list_status, \\"cwd\\", \\"\\")} %l\/%L%*"$/;"	s	array:properties.list.statusLineSegments.default
5	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
6	plugged/coc.nvim/data/schema.json	/^            "pedit"$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
6	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
:book: Table of Contents	plugged/onedarkpro.nvim/README.md	/^## :book: Table of Contents$/;"	s	chapter:OneDarkPro.nvim
:camera: Screenshots	plugged/onedarkpro.nvim/README.md	/^## :camera: Screenshots$/;"	s	chapter:OneDarkPro.nvim
:clap: Credits	plugged/onedarkpro.nvim/README.md	/^## :clap: Credits$/;"	s	chapter:OneDarkPro.nvim
:gift: Extras	plugged/onedarkpro.nvim/README.md	/^## :gift: Extras$/;"	s	chapter:OneDarkPro.nvim
:package: Installation	plugged/onedarkpro.nvim/README.md	/^## :package: Installation$/;"	s	chapter:OneDarkPro.nvim
:page_with_curl: License	plugged/onedarkpro.nvim/README.md	/^## :page_with_curl: License$/;"	s	chapter:OneDarkPro.nvim
:sparkles: Features	plugged/onedarkpro.nvim/README.md	/^## :sparkles: Features$/;"	s	chapter:OneDarkPro.nvim
:wrench: Configuration	plugged/onedarkpro.nvim/README.md	/^## :wrench: Configuration$/;"	s	chapter:OneDarkPro.nvim
:zap: Requirements	plugged/onedarkpro.nvim/README.md	/^## :zap: Requirements$/;"	s	chapter:OneDarkPro.nvim
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <2-LeftMouse> :call startify#open_buffers()<cr>$/;"	m
<A-b>	init.vim	/^nmap <A-b> :NvimTreeToggle<CR>$/;"	m
<A-e>	init.vim	/^nmap <A-e> <Cmd>CocCommand explorer <CR>$/;"	m
<A-r>	init.vim	/^nmap <A-r> :set relativenumber!<CR>$/;"	m
<A-t>	init.vim	/^inoremap <silent><A-t> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<A-t>	init.vim	/^nnoremap <silent><A-t> <Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<BS>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <BS> <c-g>c$/;"	m
<C-@>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-@>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-@>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-@>       :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-N>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-N>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-N>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-N>       :<C-U>call b:buffergator_catalog_viewer.goto_win_e/;"	m
<C-P>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-P>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-P>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-P>       :<C-U>call b:buffergator_catalog_viewer.goto_win_e/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-SPACE>   :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-SPACE>   :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<C-a>	init.vim	/^nmap <C-a> gg0vG\$$/;"	m
<C-a>	plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer> <C-a> <Home>$/;"	m
<C-c>	init.vim	/^vnoremap <C-c> "+y:echo "COPY"<cr>$/;"	m
<C-e>	plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer><expr><C-e> pumvisible() ? "\\<C-e>" : "\\<End>"$/;"	m
<C-h>	init.vim	/^imap <C-h> <C-W>$/;"	m
<C-s>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-s>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<C-t>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-t>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<C-v>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-v>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <CR>        :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <CR>  :call b:buffergator_catalog_viewer.visit_target(!g:b/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <CR>        :call b:buffergator_catalog_viewer.visit_target()</;"	m
<CR>	plugged/vim-easy-replace/autoload/easy_replace.vim	/^  inoremap <buffer> <silent> <CR> <ESC>:call easy_replace#next_mode()<CR>$/;"	m
<DEL>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <DEL> <c-g>c$/;"	m
<DOWN>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <DOWN>   <DOWN>$/;"	m
<ESC>	plugged/vim-easy-replace/autoload/easy_replace.vim	/^  inoremap <buffer> <silent> <ESC> <ESC>:call easy_replace#exit()<CR>$/;"	m
<F10>	plugged/vim-blade/vimrc	/^map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'$/;"	m
<Leader><DOWN>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><DOWN> :BuffergatorMruCyclePrev rightbelow sbuffer<CR>$/;"	m
<Leader><LEFT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><LEFT> :BuffergatorMruCyclePrev leftabove vert sbuffer<CR>$/;"	m
<Leader><RIGHT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><RIGHT> :BuffergatorMruCyclePrev rightbelow vert sbuffer<CR>$/;"	m
<Leader><S-DOWN>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-DOWN> :BuffergatorMruCycleNext rightbelow sbuffer<CR>$/;"	m
<Leader><S-LEFT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-LEFT> :BuffergatorMruCycleNext leftabove vert sbuffer<CR>$/;"	m
<Leader><S-RIGHT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-RIGHT> :BuffergatorMruCycleNext rightbelow vert sbuffer<CR>$/;"	m
<Leader><S-UP>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-UP> :BuffergatorMruCycleNext leftabove sbuffer<CR>$/;"	m
<Leader><UP>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><UP> :BuffergatorMruCyclePrev leftabove sbuffer<CR>$/;"	m
<Leader>B	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>B :BuffergatorClose<CR>$/;"	m
<Leader>T	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>T :BuffergatorTabsClose<CR>$/;"	m
<Leader>b	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>b :BuffergatorOpen<CR>$/;"	m
<Leader>t	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>t :BuffergatorTabsOpen<CR>$/;"	m
<Leader>tc	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>tc :BuffergatorTabsClose<CR>$/;"	m
<Leader>to	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>to :BuffergatorTabsOpen<CR>$/;"	m
<LeftMouse>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <LeftMouse> :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<LeftMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <LeftMouse>   :call <sid>leftmouse()<cr>$/;"	m
<LeftRelease>	plugged/coc.nvim/autoload/coc/float.vim	/^      nnoremap <buffer><silent> <LeftRelease> :call coc#float#nvim_float_click()<CR>$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<M-Down>	init.vim	/^nnoremap <silent> <M-Down> :TmuxNavigateDown<cr>$/;"	m
<M-Left>	init.vim	/^nnoremap <silent> <M-Left> :TmuxNavigateLeft<cr>$/;"	m
<M-Right>	init.vim	/^nnoremap <silent> <M-Right> :TmuxNavigateRight<cr>$/;"	m
<M-S-Left>	init.vim	/^nmap <M-S-Left> :bp<cr>$/;"	m
<M-S-Right>	init.vim	/^nmap <M-S-Right> :bn<cr>$/;"	m
<M-S-b>	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> <M-S-b> :BuffergatorMruCycleNext<CR>$/;"	m
<M-Up>	init.vim	/^nnoremap <silent> <M-Up> :TmuxNavigateUp<cr>$/;"	m
<M-b>	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> <M-b> :BuffergatorMruCyclePrev<CR>$/;"	m
<M-c>	init.vim	/^nmap <M-c> :Bdelete<cr>$/;"	m
<M-i>	init.vim	/^nmap <M-i> =G$/;"	m
<M-q>	init.vim	/^nnoremap <M-q> :q<cr>$/;"	m
<M-s>h	init.vim	/^nmap <M-s>h :split<cr>$/;"	m
<M-s>v	init.vim	/^nmap <M-s>v :vertical split<cr>$/;"	m
<M-w>	init.vim	/^nnoremap <M-w> :w<cr>$/;"	m
<MiddleMouse>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <MiddleMouse> :enew <bar> execute 'normal! "'.(v:register=='/;"	m
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(StopHL)	plugged/vim-cool/plugin/cool.vim	/^            noremap! <expr> <Plug>(StopHL) <SID>AuNohlsearch()$/;"	m
<Plug>(StopHL)	plugged/vim-cool/plugin/cool.vim	/^            noremap! <expr> <Plug>(StopHL) execute('nohlsearch')[-1]$/;"	m
<Plug>(StopHL)	plugged/vim-cool/plugin/cool.vim	/^        noremap <silent> <Plug>(StopHL) :<C-U>nohlsearch<cr>$/;"	m
<Plug>(TelescopeFuzzyCommandSearch)	plugged/telescope.nvim/plugin/telescope.vim	/^cnoremap <silent> <Plug>(TelescopeFuzzyCommandSearch) <C-\\>e$/;"	m
<Plug>(coc-classobj-a)	plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-classobj-a)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-classobj-i)	plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-classobj-i)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-codeaction)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)            :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-cursor)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-cursor)     :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-line)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-line)       :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-selected)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected)   :<C-u>set        operatorfunc=<SID>CodeActionFromSele/;"	m
<Plug>(coc-codeaction-selected)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-codeaction-selected)   :<C-u>call       CocActionAsync('codeAction'/;"	m
<Plug>(coc-codelens-action)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)       :<C-u>call       CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-command-repeat)        :<C-u>call       CocAction('repeatCommand')</;"	m
<Plug>(coc-cursors-operator)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-operator) :<C-u>set operatorfunc=<SID>CursorRangeFromSelect/;"	m
<Plug>(coc-cursors-position)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-position) :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-cursors-range)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-cursors-range)    :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-cursors-word)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-word)     :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-declaration)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-declaration)           :<C-u>call       CocActionAsync('jumpDeclara/;"	m
<Plug>(coc-definition)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-definition)            :<C-u>call       CocActionAsync('jumpDefinit/;"	m
<Plug>(coc-diagnostic-info)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-info)       :<C-u>call       CocActionAsync('diagnosticI/;"	m
<Plug>(coc-diagnostic-next)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next)       :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-next-error)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next-error) :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-prev)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev)       :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-diagnostic-prev-error)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev-error) :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-fix-current)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-fix-current)           :<C-u>call       CocActionAsync('doQuickfix'/;"	m
<Plug>(coc-float-hide)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-hide)            :<C-u>call       coc#float#close_all()<CR>$/;"	m
<Plug>(coc-float-jump)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-jump)            :<c-u>call       coc#float#jump()<cr>$/;"	m
<Plug>(coc-format)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format)                :<C-u>call       CocActionAsync('format')<CR/;"	m
<Plug>(coc-format-selected)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format-selected)       :<C-u>set        operatorfunc=<SID>FormatFro/;"	m
<Plug>(coc-format-selected)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-format-selected)       :<C-u>call       CocActionAsync('formatSelec/;"	m
<Plug>(coc-funcobj-a)	plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-funcobj-a)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-funcobj-i)	plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-funcobj-i)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-implementation)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-implementation)        :<C-u>call       CocActionAsync('jumpImpleme/;"	m
<Plug>(coc-openlink)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-openlink)              :<C-u>call       CocActionAsync('openLink')</;"	m
<Plug>(coc-range-select)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     ''/;"	m
<Plug>(coc-range-select)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-range-select-backward)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select-backward) :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-refactor)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-refactor)              :<C-u>call       CocActionAsync('refactor')</;"	m
<Plug>(coc-references)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references)            :<C-u>call       CocActionAsync('jumpReferen/;"	m
<Plug>(coc-references-used)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references-used)       :<C-u>call       CocActionAsync('jumpUsed')</;"	m
<Plug>(coc-rename)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-rename)                :<C-u>call       CocActionAsync('rename')<CR/;"	m
<Plug>(coc-type-definition)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-type-definition)       :<C-u>call       CocActionAsync('jumpTypeDef/;"	m
<Plug>(fzf-insert)	plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-normal)	plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>CocRefresh	plugged/coc.nvim/plugin/coc.vim	/^inoremap <silent>                          <Plug>CocRefresh <C-r>=coc#_complete()<CR>$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==#/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^xnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>CommentaryLine	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Comme/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>PlenaryTestFile	plugged/plenary.nvim/plugin/plenary.vim	/^nnoremap <Plug>PlenaryTestFile :lua require('plenary.test_harness').test_directory(vim.fn.expand/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 /;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 /;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<S-TAB>	init.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<SID>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <SPACE>     :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <SPACE>     :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<TAB>	init.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<UP>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <UP>     <UP>$/;"	m
<c-@>	init.vim	/^    inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-\\>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-\\> :TmuxNavigatePrevious<cr>$/;"	m
<c-h>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <c-h> <c-g>c$/;"	m
<c-h>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>$/;"	m
<c-j>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-j> :TmuxNavigateDown<cr>$/;"	m
<c-k>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-k> :TmuxNavigateUp<cr>$/;"	m
<c-l>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-l> :TmuxNavigateRight<cr>$/;"	m
<c-r>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-space>	init.vim	/^    inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-t>	init.vim	/^inoremap <silent><c-t> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<c-t>	init.vim	/^nnoremap <silent><c-t> <Cmd>exe v:count1 . "ToggleTerm"<CR>$/;"	m
<cr>	init.vim	/^inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()$/;"	m
<cr>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <cr>          :call startify#open_buffers()<cr>$/;"	m
<esc>	plugged/coc.nvim/autoload/coc/list.vim	/^  nnoremap <silent><nowait><buffer> <esc> <C-w>c$/;"	m
<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)	plugged/fzf/README.md	/^<img src="https:\/\/raw.githubusercontent.com\/junegunn\/i\/master\/fzf.png" height="170" alt="f/;"	c
<insert>	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> <insert>      :enew <bar> startinsert<cr>$/;"	m
<leader><Tab>	init.vim	/^nnoremap <silent><leader><Tab> :JABSOpen <cr>$/;"	m
<leader>S	init.vim	/^nnoremap <leader>S :lua require('spectre').open()<CR>$/;"	m
<leader>eb	init.vim	/^nmap <leader>eb <Cmd>CocCommand explorer --preset buffer<CR>$/;"	m
<leader>ec	init.vim	/^nmap <leader>ec <Cmd>CocCommand explorer --preset cocConfig<CR>$/;"	m
<leader>ed	init.vim	/^nmap <leader>ed <Cmd>CocCommand explorer --preset .vim<CR>$/;"	m
<leader>ef	init.vim	/^nmap <leader>ef <Cmd>CocCommand explorer --preset floating<CR>$/;"	m
<leader>el	init.vim	/^nmap <leader>el <Cmd>CocList explPresets<CR>$/;"	m
<leader>gf	funcs.vim	/^nmap <leader>gf :call OFPHP()<CR>$/;"	m
<leader>l	init.vim	/^nnoremap <silent><leader>l :IndentBlanklineToggle <cr>$/;"	m
<leader>ld	init.vim	/^nmap <leader>ld <CMD>CocList diagnostics<CR>$/;"	m
<leader>rn	init.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>s	init.vim	/^nnoremap <silent><leader>s :Telescope sessions <cr>$/;"	m
<leader>s	init.vim	/^vnoremap <leader>s :lua require('spectre').open_visual()<CR>$/;"	m
<leader>sw	init.vim	/^nnoremap <leader>sw :lua require('spectre').open_visual({select_word=true})<CR>$/;"	m
<leader>w	init.vim	/^nnoremap <leader>w :set wrap!<cr>$/;"	m
<plug>(-fzf-/)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(startify-open-buffers)	plugged/vim-startify/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.eslint.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.jest-message-util.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.parse-json.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/core.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/template.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/code-frame	plugged/coc.nvim/package-lock.json	/^    "@babel\/code-frame": {$/;"	o	object:dependencies
@babel/compat-data	plugged/coc.nvim/package-lock.json	/^        "@babel\/compat-data": "^7.14.4",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
@babel/compat-data	plugged/coc.nvim/package-lock.json	/^    "@babel\/compat-data": {$/;"	o	object:dependencies
@babel/core	plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.1.0",$/;"	s	object:dependencies.@jest/transform.requires
@babel/core	plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.1.0",$/;"	s	object:dependencies.jest-config.requires
@babel/core	plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.7.5",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
@babel/core	plugged/coc.nvim/package-lock.json	/^    "@babel\/core": {$/;"	o	object:dependencies
@babel/generator	plugged/coc.nvim/package-lock.json	/^        "@babel\/generator": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/generator	plugged/coc.nvim/package-lock.json	/^        "@babel\/generator": "^7.14.3",$/;"	s	object:dependencies.@babel/core.requires
@babel/generator	plugged/coc.nvim/package-lock.json	/^    "@babel\/generator": {$/;"	o	object:dependencies
@babel/helper-compilation-targets	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-compilation-targets": "^7.13.16",$/;"	s	object:dependencies.@babel/core.requires
@babel/helper-compilation-targets	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-compilation-targets": {$/;"	o	object:dependencies
@babel/helper-function-name	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-function-name": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/helper-function-name	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-function-name": {$/;"	o	object:dependencies
@babel/helper-get-function-arity	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-get-function-arity": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/helper-get-function-arity	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-get-function-arity": {$/;"	o	object:dependencies
@babel/helper-member-expression-to-functions	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-member-expression-to-functions": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/helper-member-expression-to-functions	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-member-expression-to-functions": {$/;"	o	object:dependencies
@babel/helper-module-imports	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-module-imports": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-module-imports	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-module-imports": {$/;"	o	object:dependencies
@babel/helper-module-transforms	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-module-transforms": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/helper-module-transforms	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-module-transforms": {$/;"	o	object:dependencies
@babel/helper-optimise-call-expression	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-optimise-call-expression": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/helper-optimise-call-expression	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-optimise-call-expression": {$/;"	o	object:dependencies
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-import-meta.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.12.13"$/;"	s	object:dependencies.@babel/plugin-syntax-class-properties.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.12.13"$/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-async-generators.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-bigint.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-json-strings.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining.requires
@babel/helper-plugin-utils	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-plugin-utils": {$/;"	o	object:dependencies
@babel/helper-replace-supers	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-replace-supers": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-replace-supers	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-replace-supers": {$/;"	o	object:dependencies
@babel/helper-simple-access	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-simple-access": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-simple-access	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-simple-access": {$/;"	o	object:dependencies
@babel/helper-split-export-declaration	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-split-export-declaration": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-split-export-declaration	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-split-export-declaration": "^7.12.13",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/helper-split-export-declaration	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-split-export-declaration": {$/;"	o	object:dependencies
@babel/helper-validator-identifier	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-validator-identifier	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/highlight.requires
@babel/helper-validator-identifier	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/types.requires
@babel/helper-validator-identifier	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-validator-identifier": {$/;"	o	object:dependencies
@babel/helper-validator-option	plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-option": "^7.12.17",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
@babel/helper-validator-option	plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-validator-option": {$/;"	o	object:dependencies
@babel/helpers	plugged/coc.nvim/package-lock.json	/^        "@babel\/helpers": "^7.14.0",$/;"	s	object:dependencies.@babel/core.requires
@babel/helpers	plugged/coc.nvim/package-lock.json	/^    "@babel\/helpers": {$/;"	o	object:dependencies
@babel/highlight	plugged/coc.nvim/package-lock.json	/^        "@babel\/highlight": "^7.12.13"$/;"	s	object:dependencies.@babel/code-frame.requires
@babel/highlight	plugged/coc.nvim/package-lock.json	/^    "@babel\/highlight": {$/;"	o	object:dependencies
@babel/parser	plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.1.0",$/;"	s	object:dependencies.@types/babel__core.requires
@babel/parser	plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.1.0",$/;"	s	object:dependencies.@types/babel__template.requires
@babel/parser	plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.12.13",$/;"	s	object:dependencies.@babel/template.requires
@babel/parser	plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/parser	plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.14.3",$/;"	s	object:dependencies.@babel/core.requires
@babel/parser	plugged/coc.nvim/package-lock.json	/^    "@babel\/parser": {$/;"	o	object:dependencies
@babel/plugin-syntax-async-generators	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-async-generators": "^7.8.4",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-async-generators	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-async-generators": {$/;"	o	object:dependencies
@babel/plugin-syntax-bigint	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-bigint": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-bigint	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-bigint": {$/;"	o	object:dependencies
@babel/plugin-syntax-class-properties	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-class-properties": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-class-properties	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-class-properties": {$/;"	o	object:dependencies
@babel/plugin-syntax-import-meta	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-import-meta": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-import-meta	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-import-meta": {$/;"	o	object:dependencies
@babel/plugin-syntax-json-strings	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-json-strings": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-json-strings	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-json-strings": {$/;"	o	object:dependencies
@babel/plugin-syntax-logical-assignment-operators	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-logical-assignment-operators": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-logical-assignment-operators	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-logical-assignment-operators": {$/;"	o	object:dependencies
@babel/plugin-syntax-nullish-coalescing-operator	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-nullish-coalescing-operator": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-nullish-coalescing-operator	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-nullish-coalescing-operator": {$/;"	o	object:dependencies
@babel/plugin-syntax-numeric-separator	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-numeric-separator": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-numeric-separator	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-numeric-separator": {$/;"	o	object:dependencies
@babel/plugin-syntax-object-rest-spread	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-object-rest-spread": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-object-rest-spread	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-object-rest-spread": {$/;"	o	object:dependencies
@babel/plugin-syntax-optional-catch-binding	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-optional-catch-binding": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-optional-catch-binding	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-optional-catch-binding": {$/;"	o	object:dependencies
@babel/plugin-syntax-optional-chaining	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-optional-chaining": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-optional-chaining	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-optional-chaining": {$/;"	o	object:dependencies
@babel/plugin-syntax-top-level-await	plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-top-level-await": "^7.8.3"$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-top-level-await	plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-top-level-await": {$/;"	o	object:dependencies
@babel/template	plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/core.requires
@babel/template	plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/template	plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/template	plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helpers.requires
@babel/template	plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.3.3",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@babel/template	plugged/coc.nvim/package-lock.json	/^    "@babel\/template": {$/;"	o	object:dependencies
@babel/traverse	plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.1.0",$/;"	s	object:dependencies.jest-jasmine2.requires
@babel/traverse	plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.0",$/;"	s	object:dependencies.@babel/helpers.requires
@babel/traverse	plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/traverse	plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/traverse	plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/traverse	plugged/coc.nvim/package-lock.json	/^    "@babel\/traverse": {$/;"	o	object:dependencies
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0"$/;"	s	object:dependencies.@types/babel__generator.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0"$/;"	s	object:dependencies.@types/babel__template.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0",$/;"	s	object:dependencies.@types/babel__core.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-get-function-arity.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-optimise-call-expression.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-split-export-declaration.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/template.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-member-expression-to-functions.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-module-imports.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-simple-access.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.0"$/;"	s	object:dependencies.@babel/helpers.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2"$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2"$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/generator.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.4"$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.3.0"$/;"	s	object:dependencies.@types/babel__traverse.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.3.3",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@babel/types	plugged/coc.nvim/package-lock.json	/^    "@babel\/types": {$/;"	o	object:dependencies
@bcoe/v8-coverage	plugged/coc.nvim/package-lock.json	/^        "@bcoe\/v8-coverage": "^0.2.3",$/;"	s	object:dependencies.@jest/reporters.requires
@bcoe/v8-coverage	plugged/coc.nvim/package-lock.json	/^    "@bcoe\/v8-coverage": {$/;"	o	object:dependencies
@chemzqm/neovim	plugged/coc.nvim/package-lock.json	/^    "@chemzqm\/neovim": {$/;"	o	object:dependencies
@cnakazawa/watch	plugged/coc.nvim/package-lock.json	/^        "@cnakazawa\/watch": "^1.0.3",$/;"	s	object:dependencies.sane.requires
@cnakazawa/watch	plugged/coc.nvim/package-lock.json	/^    "@cnakazawa\/watch": {$/;"	o	object:dependencies
@eslint/eslintrc	plugged/coc.nvim/package-lock.json	/^        "@eslint\/eslintrc": "^0.2.2",$/;"	s	object:dependencies.eslint.requires
@eslint/eslintrc	plugged/coc.nvim/package-lock.json	/^    "@eslint\/eslintrc": {$/;"	o	object:dependencies
@function.macro	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^(defun_keyword) @function.macro$/;"	f
@istanbuljs/load-nyc-config	plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/load-nyc-config": "^1.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@istanbuljs/load-nyc-config	plugged/coc.nvim/package-lock.json	/^    "@istanbuljs\/load-nyc-config": {$/;"	o	object:dependencies
@istanbuljs/schema	plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@istanbuljs/schema	plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
@istanbuljs/schema	plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.test-exclude.requires
@istanbuljs/schema	plugged/coc.nvim/package-lock.json	/^    "@istanbuljs\/schema": {$/;"	o	object:dependencies
@jest/console	plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/console	plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/console	plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/test-result.requires
@jest/console	plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/console	plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/console	plugged/coc.nvim/package-lock.json	/^    "@jest\/console": {$/;"	o	object:dependencies
@jest/core	plugged/coc.nvim/package-lock.json	/^            "@jest\/core": "^26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/core	plugged/coc.nvim/package-lock.json	/^        "@jest\/core": "^26.6.3",$/;"	s	object:dependencies.jest.requires
@jest/core	plugged/coc.nvim/package-lock.json	/^    "@jest\/core": {$/;"	o	object:dependencies
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.@jest/globals.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/environment	plugged/coc.nvim/package-lock.json	/^    "@jest\/environment": {$/;"	o	object:dependencies
@jest/fake-timers	plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.@jest/environment.requires
@jest/fake-timers	plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/fake-timers	plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/fake-timers	plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/fake-timers	plugged/coc.nvim/package-lock.json	/^    "@jest\/fake-timers": {$/;"	o	object:dependencies
@jest/globals	plugged/coc.nvim/package-lock.json	/^        "@jest\/globals": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/globals	plugged/coc.nvim/package-lock.json	/^    "@jest\/globals": {$/;"	o	object:dependencies
@jest/reporters	plugged/coc.nvim/package-lock.json	/^        "@jest\/reporters": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/reporters	plugged/coc.nvim/package-lock.json	/^    "@jest\/reporters": {$/;"	o	object:dependencies
@jest/source-map	plugged/coc.nvim/package-lock.json	/^        "@jest\/source-map": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/source-map	plugged/coc.nvim/package-lock.json	/^        "@jest\/source-map": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/source-map	plugged/coc.nvim/package-lock.json	/^    "@jest\/source-map": {$/;"	o	object:dependencies
@jest/test-result	plugged/coc.nvim/package-lock.json	/^            "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/test-sequencer.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
@jest/test-result	plugged/coc.nvim/package-lock.json	/^    "@jest\/test-result": {$/;"	o	object:dependencies
@jest/test-sequencer	plugged/coc.nvim/package-lock.json	/^        "@jest\/test-sequencer": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
@jest/test-sequencer	plugged/coc.nvim/package-lock.json	/^    "@jest\/test-sequencer": {$/;"	o	object:dependencies
@jest/transform	plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/transform	plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/transform	plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
@jest/transform	plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/transform	plugged/coc.nvim/package-lock.json	/^    "@jest\/transform": {$/;"	o	object:dependencies
@jest/types	plugged/coc.nvim/package-lock.json	/^            "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/environment.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/globals.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/test-result.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.expect.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-changed-files.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-each.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-message-util.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-mock.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-resolve-dependencies.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-resolve.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-util.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-validate.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.pretty-format.requires
@jest/types	plugged/coc.nvim/package-lock.json	/^    "@jest\/types": {$/;"	o	object:dependencies
@nodelib/fs.scandir	plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.scandir": "2.1.5",$/;"	s	object:dependencies.@nodelib/fs.walk.requires
@nodelib/fs.scandir	plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.scandir": {$/;"	o	object:dependencies
@nodelib/fs.stat	plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.stat": "2.0.5",$/;"	s	object:dependencies.@nodelib/fs.scandir.requires
@nodelib/fs.stat	plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.stat": "^2.0.2",$/;"	s	object:dependencies.fast-glob.requires
@nodelib/fs.stat	plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.stat": {$/;"	o	object:dependencies
@nodelib/fs.walk	plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.walk": "^1.2.3",$/;"	s	object:dependencies.fast-glob.requires
@nodelib/fs.walk	plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.walk": {$/;"	o	object:dependencies
@scope	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^(defun) @scope$/;"	f
@sinonjs/commons	plugged/coc.nvim/package-lock.json	/^        "@sinonjs\/commons": "^1.7.0"$/;"	s	object:dependencies.@sinonjs/fake-timers.requires
@sinonjs/commons	plugged/coc.nvim/package-lock.json	/^    "@sinonjs\/commons": {$/;"	o	object:dependencies
@sinonjs/fake-timers	plugged/coc.nvim/package-lock.json	/^        "@sinonjs\/fake-timers": "^6.0.1",$/;"	s	object:dependencies.@jest/fake-timers.requires
@sinonjs/fake-timers	plugged/coc.nvim/package-lock.json	/^    "@sinonjs\/fake-timers": {$/;"	o	object:dependencies
@tootallnate/once	plugged/coc.nvim/package-lock.json	/^        "@tootallnate\/once": "1",$/;"	s	object:dependencies.http-proxy-agent.requires
@tootallnate/once	plugged/coc.nvim/package-lock.json	/^    "@tootallnate\/once": {$/;"	o	object:dependencies
@types/babel__core	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__core": "^7.0.0",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@types/babel__core	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__core": "^7.1.7",$/;"	s	object:dependencies.babel-jest.requires
@types/babel__core	plugged/coc.nvim/package-lock.json	/^    "@types\/babel__core": {$/;"	o	object:dependencies
@types/babel__generator	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__generator": "*",$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__generator	plugged/coc.nvim/package-lock.json	/^    "@types\/babel__generator": {$/;"	o	object:dependencies
@types/babel__template	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__template": "*",$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__template	plugged/coc.nvim/package-lock.json	/^    "@types\/babel__template": {$/;"	o	object:dependencies
@types/babel__traverse	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "*"$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__traverse	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "^7.0.4",$/;"	s	object:dependencies.jest-snapshot.requires
@types/babel__traverse	plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "^7.0.6"$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@types/babel__traverse	plugged/coc.nvim/package-lock.json	/^    "@types\/babel__traverse": {$/;"	o	object:dependencies
@types/cli-table	plugged/coc.nvim/package-lock.json	/^    "@types\/cli-table": {$/;"	o	object:dependencies
@types/debounce	plugged/coc.nvim/package-lock.json	/^    "@types\/debounce": {$/;"	o	object:dependencies
@types/events	plugged/coc.nvim/package-lock.json	/^        "@types\/events": "*"$/;"	s	object:dependencies.@types/fb-watchman.requires
@types/events	plugged/coc.nvim/package-lock.json	/^    "@types\/events": {$/;"	o	object:dependencies
@types/fb-watchman	plugged/coc.nvim/package-lock.json	/^    "@types\/fb-watchman": {$/;"	o	object:dependencies
@types/fs-extra	plugged/coc.nvim/package-lock.json	/^    "@types\/fs-extra": {$/;"	o	object:dependencies
@types/glob	plugged/coc.nvim/package-lock.json	/^    "@types\/glob": {$/;"	o	object:dependencies
@types/graceful-fs	plugged/coc.nvim/package-lock.json	/^        "@types\/graceful-fs": "^4.1.2",$/;"	s	object:dependencies.jest-haste-map.requires
@types/graceful-fs	plugged/coc.nvim/package-lock.json	/^    "@types\/graceful-fs": {$/;"	o	object:dependencies
@types/istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "*"$/;"	s	object:dependencies.@types/istanbul-lib-report.requires
@types/istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.0",$/;"	s	object:dependencies.@jest/test-result.requires
@types/istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.1",$/;"	s	object:dependencies.v8-to-istanbul.requires
@types/istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-lib-coverage": {$/;"	o	object:dependencies
@types/istanbul-lib-report	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-report": "*"$/;"	s	object:dependencies.@types/istanbul-reports.requires
@types/istanbul-lib-report	plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-lib-report": {$/;"	o	object:dependencies
@types/istanbul-reports	plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-reports": "^3.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/istanbul-reports	plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-reports": {$/;"	o	object:dependencies
@types/jest	plugged/coc.nvim/package-lock.json	/^        "@types\/jest": "26.x",$/;"	s	object:dependencies.ts-jest.requires
@types/jest	plugged/coc.nvim/package-lock.json	/^    "@types\/jest": {$/;"	o	object:dependencies
@types/json-schema	plugged/coc.nvim/package-lock.json	/^        "@types\/json-schema": "^7.0.3",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@types/json-schema	plugged/coc.nvim/package-lock.json	/^    "@types\/json-schema": {$/;"	o	object:dependencies
@types/marked	plugged/coc.nvim/package-lock.json	/^    "@types\/marked": {$/;"	o	object:dependencies
@types/minimatch	plugged/coc.nvim/package-lock.json	/^        "@types\/minimatch": "*",$/;"	s	object:dependencies.@types/glob.requires
@types/minimatch	plugged/coc.nvim/package-lock.json	/^    "@types\/minimatch": {$/;"	o	object:dependencies
@types/minipass	plugged/coc.nvim/package-lock.json	/^        "@types\/minipass": "*",$/;"	s	object:dependencies.@types/tar.requires
@types/minipass	plugged/coc.nvim/package-lock.json	/^    "@types\/minipass": {$/;"	o	object:dependencies
@types/mkdirp	plugged/coc.nvim/package-lock.json	/^    "@types\/mkdirp": {$/;"	o	object:dependencies
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/fs-extra.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/glob.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/graceful-fs.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/minipass.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/mkdirp.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/tar.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.jest-mock.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/console.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/core.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/environment.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/fake-timers.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/types.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-environment-node.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-haste-map.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-jasmine2.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-runner.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-serializer.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-util.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-watcher.requires
@types/node	plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-worker.requires
@types/node	plugged/coc.nvim/package-lock.json	/^    "@types\/node": {$/;"	o	object:dependencies
@types/normalize-package-data	plugged/coc.nvim/package-lock.json	/^        "@types\/normalize-package-data": "^2.4.0",$/;"	s	object:dependencies.read-pkg.requires
@types/normalize-package-data	plugged/coc.nvim/package-lock.json	/^    "@types\/normalize-package-data": {$/;"	o	object:dependencies
@types/prettier	plugged/coc.nvim/package-lock.json	/^        "@types\/prettier": "^2.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
@types/prettier	plugged/coc.nvim/package-lock.json	/^    "@types\/prettier": {$/;"	o	object:dependencies
@types/semver	plugged/coc.nvim/package-lock.json	/^    "@types\/semver": {$/;"	o	object:dependencies
@types/stack-utils	plugged/coc.nvim/package-lock.json	/^        "@types\/stack-utils": "^2.0.0",$/;"	s	object:dependencies.jest-message-util.requires
@types/stack-utils	plugged/coc.nvim/package-lock.json	/^    "@types\/stack-utils": {$/;"	o	object:dependencies
@types/tar	plugged/coc.nvim/package-lock.json	/^    "@types\/tar": {$/;"	o	object:dependencies
@types/uuid	plugged/coc.nvim/package-lock.json	/^    "@types\/uuid": {$/;"	o	object:dependencies
@types/which	plugged/coc.nvim/package-lock.json	/^    "@types\/which": {$/;"	o	object:dependencies
@types/yargs	plugged/coc.nvim/package-lock.json	/^        "@types\/yargs": "^15.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/yargs	plugged/coc.nvim/package-lock.json	/^        "@types\/yargs": "^15.0.0",$/;"	s	object:dependencies.jest-runtime.requires
@types/yargs	plugged/coc.nvim/package-lock.json	/^    "@types\/yargs": {$/;"	o	object:dependencies
@types/yargs-parser	plugged/coc.nvim/package-lock.json	/^        "@types\/yargs-parser": "*"$/;"	s	object:dependencies.@types/yargs.requires
@types/yargs-parser	plugged/coc.nvim/package-lock.json	/^    "@types\/yargs-parser": {$/;"	o	object:dependencies
@typescript-eslint/eslint-plugin	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/eslint-plugin": {$/;"	o	object:dependencies
@typescript-eslint/experimental-utils	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/experimental-utils": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
@typescript-eslint/experimental-utils	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/experimental-utils": "^4.0.1"$/;"	s	object:dependencies.eslint-plugin-jest.requires
@typescript-eslint/experimental-utils	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/experimental-utils": {$/;"	o	object:dependencies
@typescript-eslint/parser	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/parser": {$/;"	o	object:dependencies
@typescript-eslint/scope-manager	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
@typescript-eslint/scope-manager	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/scope-manager	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/scope-manager	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/scope-manager": {$/;"	o	object:dependencies
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/scope-manager.requires
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/visitor-keys.requires
@typescript-eslint/types	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/types": {$/;"	o	object:dependencies
@typescript-eslint/typescript-estree	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/typescript-estree": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/typescript-estree	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/typescript-estree": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/typescript-estree	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/typescript-estree": {$/;"	o	object:dependencies
@typescript-eslint/visitor-keys	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/visitor-keys": "4.11.1"$/;"	s	object:dependencies.@typescript-eslint/scope-manager.requires
@typescript-eslint/visitor-keys	plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/visitor-keys": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
@typescript-eslint/visitor-keys	plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/visitor-keys": {$/;"	o	object:dependencies
@yaegassy/coc-intelephense	package.json	/^    "@yaegassy\/coc-intelephense": ">=0.10.0",$/;"	s	object:dependencies
@yaegassy/coc-phpstan	package.json	/^    "@yaegassy\/coc-phpstan": ">=0.3.0",$/;"	s	object:dependencies
A	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
A	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
A	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
A	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    A = 1,$/;"	e	enum:foo	file:
A	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> A           :call b:buffergator_catalog_viewer.toggle_zoom()<C/;"	m
A File Explorer For Neovim Written In Lua	plugged/nvim-tree.lua/README.md	/^# A File Explorer For Neovim Written In Lua$/;"	c
A quick example	plugged/plenary.nvim/README.md	/^#### A quick example$/;"	t	subsection:plenary.nvim""Modules""plenary.async
A simple test	plugged/plenary.nvim/TESTS_README.md	/^# A simple test$/;"	c
A$	plugged/coc.nvim/build/index.js	/^`),a=s.line-n.line-o.length+1,l=o[o.length-1],c=r.line-a;if(r.line!=s.line)return{line:c,charact/;"	f
A0	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
A1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
A5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
A6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
A8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
A9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ACe	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
AD	plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
AG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
AJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AP	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
API	plugged/nord-vim/CHANGELOG.md	/^### API$/;"	S	section:0.16.0""Features
API	plugged/telescope.nvim/README.md	/^## API$/;"	s	chapter:telescope.nvim
API	plugged/vim-devicons/DEVELOPER.md	/^### API$/;"	S
API Examples	plugged/vim-devicons/DEVELOPER.md	/^#### API Examples$/;"	t	subsection:API
AQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
AUTHOR	plugged/fzf/man/man1/fzf.1	/^.SH AUTHOR$/;"	s	title:fzf
AV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
AW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AY	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
AZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
A_	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Ab	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
About	plugged/vim-bbye/README.md	/^About$/;"	s	chapter:Bbye (Buffer Bye) for Vim
Accessing pickers from extensions	plugged/telescope.nvim/README.md	/^### Accessing pickers from extensions$/;"	S	section:telescope.nvim""Extensions
Acknowledgments	plugged/vim-devicons/README.md	/^Acknowledgments$/;"	s
Actions	plugged/telescope.nvim/developers.md	/^### Actions$/;"	S	section:Developers""Technical
Actual behaviour	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### Actual behaviour$/;"	S
Ad	plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	c
Add	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f	struct:fzf.ChunkCache
Add a snippet	plugged/vim-tmux-navigator/README.md	/^#### Add a snippet$/;"	t	subsection:Vim Tmux Navigator""Installation""tmux
Added	plugged/github-nvim-theme/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[unreleased]
Added	plugged/github-nvim-theme/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[v0.0.1] - 9 Jul 2021
Added	plugged/github-nvim-theme/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[v0.0.2] - 15 Sep 2021
Added `--ansi` option (#150)	plugged/fzf/CHANGELOG.md	/^#### Added `--ansi` option (#150)$/;"	t	subsection:CHANGELOG""0.9.5""New features
Added `--expect` option (#163)	plugged/fzf/CHANGELOG.md	/^#### Added `--expect` option (#163)$/;"	t	subsection:CHANGELOG""0.9.6""New features
Added `--tac` option to reverse the order of the input.	plugged/fzf/CHANGELOG.md	/^#### Added `--tac` option to reverse the order of the input.$/;"	t	subsection:CHANGELOG""0.9.4""New features
Adding a theme	plugged/lualine.nvim/CONTRIBUTING.md	/^### Adding a theme$/;"	S	chapter:Contributing to lualine.nvim
Adding modules	plugged/nvim-treesitter/README.md	/^## Adding modules$/;"	s	chapter:Advanced setup
Adding new modules	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Adding new modules$/;"	s	chapter:Contributing to `nvim-treesitter`
Adding parsers	plugged/nvim-treesitter/README.md	/^## Adding parsers$/;"	s	chapter:Advanced setup
Adding queries	plugged/nvim-treesitter/README.md	/^## Adding queries$/;"	s	chapter:Advanced setup
Additional Customization	plugged/vim-tmux-navigator/README.md	/^### Additional Customization$/;"	S	section:Vim Tmux Navigator""Configuration
Aditional information	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### Aditional information$/;"	S
Advanced customization	plugged/fzf.vim/README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
Advanced fzf examples	plugged/fzf/ADVANCED.md	/^Advanced fzf examples$/;"	c
Advanced setup	plugged/nvim-treesitter/README.md	/^# Advanced setup$/;"	c
Advanced topics	plugged/fzf/README.md	/^Advanced topics$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Ae	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Aee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ag	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ai	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Airline	plugged/aquarium-vim/README.md	/^### Airline$/;"	S	section:Features and Stuff
AirlineWebDevIcons	plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
Aj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Ale	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
Algo	plugged/fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []ru/;"	t	package:algo	typeref:typename:func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)
Aliasing to :Bclose	plugged/vim-bbye/README.md	/^### Aliasing to :Bclose$/;"	S	section:Bbye (Buffer Bye) for Vim""Using
All known unimplemented vim features at the moment	plugged/plenary.nvim/POPUP.md	/^## All known unimplemented vim features at the moment$/;"	s	chapter:Popup tracking
Alt	plugged/fzf/src/tui/tui.go	/^	Alt$/;"	c	package:tui
AltBS	plugged/fzf/src/tui/tui.go	/^	AltBS$/;"	c	package:tui
AltDown	plugged/fzf/src/tui/tui.go	/^	AltDown$/;"	c	package:tui
AltKey	plugged/fzf/src/tui/tui.go	/^func AltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
AltLeft	plugged/fzf/src/tui/tui.go	/^	AltLeft$/;"	c	package:tui
AltRight	plugged/fzf/src/tui/tui.go	/^	AltRight$/;"	c	package:tui
AltSDown	plugged/fzf/src/tui/tui.go	/^	AltSDown$/;"	c	package:tui
AltSLeft	plugged/fzf/src/tui/tui.go	/^	AltSLeft$/;"	c	package:tui
AltSRight	plugged/fzf/src/tui/tui.go	/^	AltSRight$/;"	c	package:tui
AltSUp	plugged/fzf/src/tui/tui.go	/^	AltSUp$/;"	c	package:tui
AltUp	plugged/fzf/src/tui/tui.go	/^	AltUp$/;"	c	package:tui
Alternate styling	plugged/bufferline.nvim/README.md	/^#### Alternate styling$/;"	t	section:Table of Contents""Features
Ame	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
AnonymousFunctionaf1e5c4a0100	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AnonymousFunctionaf1e5c4a0200	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AnonymousFunctionaf1e5c4a0300	plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
AnonymousFunctionaf1e5c4a0400	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunctionaf1e5c4a0500	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:sK
AnonymousFunctionaf1e5c4a0600	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:sK
AnonymousFunctionaf1e5c4a0700	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunctionaf1e5c4a0800	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunctionaf1e5c4a0900	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
AnonymousFunctionaf1e5c4a0a00	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunctionaf1e5c4a0b00	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00.t.stringify
AnonymousFunctionaf1e5c4a0c00	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00.t.stringify
AnonymousFunctionaf1e5c4a0d00	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunctionaf1e5c4a0e00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a0f00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a1000	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a10000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10100.e
AnonymousFunctionaf1e5c4a10300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10600.r
AnonymousFunctionaf1e5c4a10800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10600.r
AnonymousFunctionaf1e5c4a10900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10a00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10b00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10c00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10d00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10e00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a10f00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a1100	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a11000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11a00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11b00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11c00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11d00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11e00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a11f00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a1200	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a12000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4a12900	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunctionaf1e5c4a12a00	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunctionaf1e5c4a12900.i
AnonymousFunctionaf1e5c4a12b00	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunctionaf1e5c4a12c00	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunctionaf1e5c4a12d00	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunctionaf1e5c4a12e00	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunctionaf1e5c4a12f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1300	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a13000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a13f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1400	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a14000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a14f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1500	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a15000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a15f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1600	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a16000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a16f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1700	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a17000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a17f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1800	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a18000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a18f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1900	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionaf1e5c4a1800
AnonymousFunctionaf1e5c4a19000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19a00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19b00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19c00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19d00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19e00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a19f00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionaf1e5c4a1800.AnonymousFunctionaf1e5c4a1900.b
AnonymousFunctionaf1e5c4a1a000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1a900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1aa00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ab00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ac00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ad00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ae00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1af00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a1b000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1b900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ba00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1bb00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1bc00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1bd00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1be00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1bf00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a1c000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c200	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c300	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c400	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c500	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c600	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a1c500
AnonymousFunctionaf1e5c4a1c700	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c800	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1c900	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1ca00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1cb00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1cc00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1cd00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC
AnonymousFunctionaf1e5c4a1ce00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC.AnonymousFunctionaf1e5c4a1cd00
AnonymousFunctionaf1e5c4a1cf00	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC
AnonymousFunctionaf1e5c4a1d00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionaf1e5c4a1c00
AnonymousFunctionaf1e5c4a1d000	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1d100	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionaf1e5c4a1d200	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
AnonymousFunctionaf1e5c4a1d300	plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(n=this.tokenizer.fences(e)){e=e.substring(n.raw.length),t.push(n/;"	f
AnonymousFunctionaf1e5c4a1d400	plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(e){let u="Infinite loop on byte: "+e.charCodeAt(0);if(this.optio/;"	f
AnonymousFunctionaf1e5c4a1d500	plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
AnonymousFunctionaf1e5c4a1d600	plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
AnonymousFunctionaf1e5c4a1d700	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1d800	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1d900	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1da00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1db00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1dc00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1dd00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1de00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1df00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a1e000	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e100	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e200	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e300	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e400	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e300
AnonymousFunctionaf1e5c4a1e500	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e600	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e700	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e600
AnonymousFunctionaf1e5c4a1e800	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1e900	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e800
AnonymousFunctionaf1e5c4a1ea00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1eb00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1ec00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1ed00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1ee00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1ef00	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a1f000	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f100	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f200	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f300	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f400	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f500	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f600	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f700	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionaf1e5c4a1f800	plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	f
AnonymousFunctionaf1e5c4a1f900	plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	f
AnonymousFunctionaf1e5c4a1fa00	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionaf1e5c4a1fb00	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionaf1e5c4a1fc00	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionaf1e5c4a1fd00	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionaf1e5c4a1fe00	plugged/coc.nvim/build/index.js	/^`)}function h(y,S){var w=[],_=0;if(!Array.isArray(y)&&typeof y=="object"){var L=Object.keys(y)[0/;"	f
AnonymousFunctionaf1e5c4a1ff00	plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f	function:AnonymousFunctionaf1e5c4a1fe00
AnonymousFunctionaf1e5c4a2000	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a20000	plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunctionaf1e5c4a20100	plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunctionaf1e5c4a20200	plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunctionaf1e5c4a20300	plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunctionaf1e5c4a1fa00.p
AnonymousFunctionaf1e5c4a20400	plugged/coc.nvim/build/index.js	/^`),this.length&&this.forEach(function(y,S){if(!i.length&&S==0)d();else if(!t.compact||S<!!i.leng/;"	f
AnonymousFunctionaf1e5c4a20500	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionaf1e5c4a20600	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunctionaf1e5c4a20700	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunctionaf1e5c4a20800	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunctionaf1e5c4a20900	plugged/coc.nvim/build/index.js	/^`+d0+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	f
AnonymousFunctionaf1e5c4a20a00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a20b00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a20c00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a20d00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a20e00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a20f00	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a2100	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a21000	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21100	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21200	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21300	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21400	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21500	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionaf1e5c4a21600	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunctionaf1e5c4a21500.i
AnonymousFunctionaf1e5c4a21700	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21800	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:dB
AnonymousFunctionaf1e5c4a21900	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21a00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21b00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21c00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21d00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21e00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a21f00	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a2200	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a22000	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22100	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22200	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22300	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22400	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunctionaf1e5c4a22500	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunctionaf1e5c4a22600	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunctionaf1e5c4a22700	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22800	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunctionaf1e5c4a22900	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunctionaf1e5c4a22a00	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f	function:Xae
AnonymousFunctionaf1e5c4a22b00	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunctionaf1e5c4a22c00	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunctionaf1e5c4a22d00	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f	function:AnonymousFunctionaf1e5c4a22c00
AnonymousFunctionaf1e5c4a22e00	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	c
AnonymousFunctionaf1e5c4a22f00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a2300	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a23000	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23100	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23200	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23300	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23400	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23500	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23600	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23700	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a23800	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23900	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23a00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23b00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23c00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23d00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23e00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a23f00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a2400	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a24000	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24100	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24200	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24300	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24400	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24500	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24600	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a24700	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a24800	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a24900	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a24a00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a24b00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24c00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24d00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24e00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a24f00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a2500	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a25000	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25100	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25200	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25300	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25400	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25500	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25600	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25700	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a25800	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:t
AnonymousFunctionaf1e5c4a25900	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25a00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25b00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25c00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25d00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25e00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a25f00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a2600	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a26000	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26100	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26200	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26300	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26400	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26500	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunctionaf1e5c4a26400
AnonymousFunctionaf1e5c4a26600	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26700	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26800	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunctionaf1e5c4a26900	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a26a00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunctionaf1e5c4a26900
AnonymousFunctionaf1e5c4a26b00	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunctionaf1e5c4a26c00	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
AnonymousFunctionaf1e5c4a26d00	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
AnonymousFunctionaf1e5c4a26e00	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
AnonymousFunctionaf1e5c4a26f00	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
AnonymousFunctionaf1e5c4a2700	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a27000	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
AnonymousFunctionaf1e5c4a27100	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27200	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f	function:Ue
AnonymousFunctionaf1e5c4a27300	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27400	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27500	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27600	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27700	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27800	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27900	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27a00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27b00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27c00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27d00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27e00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a27f00	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a2800	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a28000	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28100	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28200	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28300	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28400	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28500	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28600	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28700	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28800	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunctionaf1e5c4a28900	plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunctionaf1e5c4a28a00	plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunctionaf1e5c4a28b00	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a28c00	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a28d00	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a28e00	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a28f00	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a2900	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a29000	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a29100	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunctionaf1e5c4a29200	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29300	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29400	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29300
AnonymousFunctionaf1e5c4a29500	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29600	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29700	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29800	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29900	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29a00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29b00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29c00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29b00
AnonymousFunctionaf1e5c4a29d00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29e00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a29f00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a2a000	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a100	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2a000
AnonymousFunctionaf1e5c4a2a200	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a300	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a400	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a500	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a600	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a700	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2a600
AnonymousFunctionaf1e5c4a2a800	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2a900	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2aa00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2ab00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2ac00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2ad00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2ae00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2af00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
AnonymousFunctionaf1e5c4a2b000	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b100	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b200	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b300	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b400	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunctionaf1e5c4a2b500	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b600	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2b500
AnonymousFunctionaf1e5c4a2b700	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunctionaf1e5c4a2b800	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2b900	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2ba00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2bb00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2bc00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2bd00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2be00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2bf00	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunctionaf1e5c4a2c00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a2c000	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunctionaf1e5c4a2c100	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunctionaf1e5c4a2c200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2c600
AnonymousFunctionaf1e5c4a2c800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2c900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionaf1e5c4a2c800
AnonymousFunctionaf1e5c4a2ca00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2c800.AnonymousFunctionaf1e5c4a2c900
AnonymousFunctionaf1e5c4a2cb00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2cc00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2cb00
AnonymousFunctionaf1e5c4a2cd00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ce00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2cd00
AnonymousFunctionaf1e5c4a2cf00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a2d000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain
AnonymousFunctionaf1e5c4a2d700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain.AnonymousFunctionaf1e5c4a2d600
AnonymousFunctionaf1e5c4a2d800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2d900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2da00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2db00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2dc00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2dd00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2de00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2df00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a2e000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2e000
AnonymousFunctionaf1e5c4a2e200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:zi
AnonymousFunctionaf1e5c4a2e400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2e900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ea00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2eb00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ec00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ed00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ee00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ef00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f00	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionaf1e5c4a2f000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400.s
AnonymousFunctionaf1e5c4a2f600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400.s.AnonymousFunctionaf1e5c4a2f500
AnonymousFunctionaf1e5c4a2f700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400.s.AnonymousFunctionaf1e5c4a2f500.AnonymousFunctionaf1e5c4a2f600
AnonymousFunctionaf1e5c4a2f800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2f900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2fa00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:p
AnonymousFunctionaf1e5c4a2fb00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:p
AnonymousFunctionaf1e5c4a2fc00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.buffer
AnonymousFunctionaf1e5c4a2fd00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.skip
AnonymousFunctionaf1e5c4a2fe00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a2ff00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a3000	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a30000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a30100
AnonymousFunctionaf1e5c4a30300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a30100.AnonymousFunctionaf1e5c4a30200
AnonymousFunctionaf1e5c4a30400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a30500
AnonymousFunctionaf1e5c4a30700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30a00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30b00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30c00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30d00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30e00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a30f00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a3100	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a31000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a31100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a31100
AnonymousFunctionaf1e5c4a31300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a31500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a31400
AnonymousFunctionaf1e5c4a31600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a31900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31a00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31b00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31c00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31d00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31e00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a31f00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a3200	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a32000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a32200
AnonymousFunctionaf1e5c4a32400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a32700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a32800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunctionaf1e5c4a32900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32a00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32b00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32c00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32d00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32e00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a32f00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a32e00
AnonymousFunctionaf1e5c4a3300	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a33000	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33100	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunctionaf1e5c4a33200	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a33300	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33400	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33500	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33600	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a33700	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33800	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33900	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33600
AnonymousFunctionaf1e5c4a33a00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionaf1e5c4a33b00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33c00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Spe
AnonymousFunctionaf1e5c4a33d00	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionaf1e5c4a33e00	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunctionaf1e5c4a33f00	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunctionaf1e5c4a3400	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw.F
AnonymousFunctionaf1e5c4a34000	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunctionaf1e5c4a33f00.n
AnonymousFunctionaf1e5c4a34100	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunctionaf1e5c4a34200	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	g
AnonymousFunctionaf1e5c4a34300	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionaf1e5c4a34400	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionaf1e5c4a34500	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionaf1e5c4a34600	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f
AnonymousFunctionaf1e5c4a34700	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunctionaf1e5c4a34600.n
AnonymousFunctionaf1e5c4a34800	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f
AnonymousFunctionaf1e5c4a34900	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	g
AnonymousFunctionaf1e5c4a34a00	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
AnonymousFunctionaf1e5c4a34b00	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
AnonymousFunctionaf1e5c4a34c00	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a34d00	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a34e00	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a34f00	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a3500	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunctionaf1e5c4a35000	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a35100	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a35200	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunctionaf1e5c4a35300	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35400	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35500	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35600	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35700	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35800	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunctionaf1e5c4a35900	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
AnonymousFunctionaf1e5c4a35a00	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
AnonymousFunctionaf1e5c4a35b00	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f	function:$me
AnonymousFunctionaf1e5c4a35c00	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
AnonymousFunctionaf1e5c4a35d00	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
AnonymousFunctionaf1e5c4a35e00	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
AnonymousFunctionaf1e5c4a3600	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunctionaf1e5c4a3700	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:l
AnonymousFunctionaf1e5c4a3800	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3900	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3a00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3b00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3c00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3d00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3e00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a3f00	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a4000	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:S
AnonymousFunctionaf1e5c4a4100	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:_
AnonymousFunctionaf1e5c4a4200	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunctionaf1e5c4a4300	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a4400	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a4500	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a4600	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunctionaf1e5c4a4700	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a4800	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a4900	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:jJ
AnonymousFunctionaf1e5c4a4a00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:jJ
AnonymousFunctionaf1e5c4a4b00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a4c00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a4d00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a4e00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a4f00	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a5000	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionaf1e5c4a5100	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5200	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5300	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5400	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5500	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5600	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5700	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5800	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5900	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionaf1e5c4a5a00	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a5b00	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a5c00	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a5d00	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a5e00	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunctionaf1e5c4a5f00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a6000	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6100	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6200	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6300	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6400	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:RQ
AnonymousFunctionaf1e5c4a6500	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Hf
AnonymousFunctionaf1e5c4a6600	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Da
AnonymousFunctionaf1e5c4a6700	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Ra
AnonymousFunctionaf1e5c4a6800	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Xe
AnonymousFunctionaf1e5c4a6900	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6a00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6b00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a6c00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a6d00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Pa
AnonymousFunctionaf1e5c4a6e00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:$i
AnonymousFunctionaf1e5c4a6f00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Em
AnonymousFunctionaf1e5c4a7000	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Gf
AnonymousFunctionaf1e5c4a7100	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:xr
AnonymousFunctionaf1e5c4a7200	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ws
AnonymousFunctionaf1e5c4a7300	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7400	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7500	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7600	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7700	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7800	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7900	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7a00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7b00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7c00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7d00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a7e00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionaf1e5c4a7f00	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a8000	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionaf1e5c4a8100	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8200	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8300	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8400	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8500	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8600	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8700	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8800	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionaf1e5c4a8900	plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	f
AnonymousFunctionaf1e5c4a8a00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a8b00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a8c00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a8d00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a8e00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a8f00	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9000	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9100	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9200	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9300	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9400	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9500	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9600	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionaf1e5c4a9700	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9800	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9900	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9a00	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9b00	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9c00	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9d00	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9e00	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunctionaf1e5c4a9f00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa000	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa100	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa200	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa300	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa400	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa500	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa600	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa700	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa800	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aa900	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aaa00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aab00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aac00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aad00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aae00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4aaf00	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4ab000	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4ab100	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunctionaf1e5c4ab200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ab900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aba00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4abb00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4abc00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4abd00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4abe00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4abf00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ac900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aca00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4acb00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4acc00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4acd00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ace00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4acf00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ad900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ada00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4adb00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4adc00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4add00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ade00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4adf00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4ae900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aea00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aeb00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aec00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aed00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aee00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aef00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af000	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af100	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af200	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af300	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af400	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af500	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af600	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af700	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af800	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4af900	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4afa00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4afb00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4afc00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4afd00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4afe00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionaf1e5c4aff00	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunctionc5b93c5c0100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(i){$/;"	f
AnonymousFunctionc5b93c5c0200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each( text || this, function(){$/;"	f
AnonymousFunctionc5b93c5c0300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( this.childNodes, function(){$/;"	f
AnonymousFunctionc5b93c5c0400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				.map(function(){$/;"	f
AnonymousFunctionc5b93c5c0500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c0600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c0700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, true, false, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, true, true, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, false, false, function(elem){$/;"	c
AnonymousFunctionc5b93c5c0a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, false, true, function(elem){$/;"	c
AnonymousFunctionc5b93c5c0b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var elems = jQuery.map(this, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = this.map(function(){$/;"	f
AnonymousFunctionc5b93c5c0d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = ret.find("*").andSelf().each(function(){$/;"	f
AnonymousFunctionc5b93c5c0e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.find("*").andSelf().each(function(i){$/;"	f
AnonymousFunctionc5b93c5c0f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.grep(this, function(elem, i){$/;"	f
AnonymousFunctionc5b93c5c1000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.filter(function() {$/;"	f
AnonymousFunctionc5b93c5c1100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery( "option", this ).each(function(){$/;"	c
AnonymousFunctionc5b93c5c1300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.pushStack( jQuery.map(this, function(elem, i){$/;"	f
AnonymousFunctionc5b93c5c1400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			return this.trigger("setData" + parts[1] + "!", [parts[0], value]).each(function(){$/;"	f
AnonymousFunctionc5b93c5c1500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each(elems, function(){$/;"	f
AnonymousFunctionc5b93c5c1800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	noConflict: function( deep ) {$/;"	f
AnonymousFunctionc5b93c5c1900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isFunction: function( fn ) {$/;"	f
AnonymousFunctionc5b93c5c1a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isXMLDoc: function( elem ) {$/;"	f
AnonymousFunctionc5b93c5c1b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	globalEval: function( data ) {$/;"	f
AnonymousFunctionc5b93c5c1c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nodeName: function( elem, name ) {$/;"	f
AnonymousFunctionc5b93c5c1d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	data: function( elem, name, data ) {$/;"	f
AnonymousFunctionc5b93c5c1e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeData: function( elem, name ) {$/;"	f
AnonymousFunctionc5b93c5c1f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	each: function( object, callback, args ) {$/;"	f
AnonymousFunctionc5b93c5c2000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prop: function( elem, value, type, i, name ) {$/;"	f
AnonymousFunctionc5b93c5c2100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		add: function( elem, classNames ) {$/;"	f
AnonymousFunctionc5b93c5c2200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each((classNames || "").split(\/\\s+\/), function(i, className){$/;"	f
AnonymousFunctionc5b93c5c2300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		remove: function( elem, classNames ) {$/;"	f
AnonymousFunctionc5b93c5c2400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.grep(elem.className.split(\/\\s+\/), function(className){$/;"	f	function:AnonymousFunctionc5b93c5c2300
AnonymousFunctionc5b93c5c2500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		has: function( elem, className ) {$/;"	f
AnonymousFunctionc5b93c5c2600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	swap: function( elem, options, callback ) {$/;"	f
AnonymousFunctionc5b93c5c2700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	css: function( elem, name, force ) {$/;"	f
AnonymousFunctionc5b93c5c2800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each( which, function() {$/;"	f
AnonymousFunctionc5b93c5c2900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	curCSS: function( elem, name, force ) {$/;"	f
AnonymousFunctionc5b93c5c2a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var camelCase = name.replace(\/\\-(\\w)\/g, function(all, letter){$/;"	f	function:AnonymousFunctionc5b93c5c2900
AnonymousFunctionc5b93c5c2b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	clean: function( elems, context ) {$/;"	f
AnonymousFunctionc5b93c5c2c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each(elems, function(i, elem){$/;"	f
AnonymousFunctionc5b93c5c2d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				elem = elem.replace(\/(<(\\w+)[^>]*?)\\\/>\/g, function(all, front, tag){$/;"	f	function:AnonymousFunctionc5b93c5c2c00
AnonymousFunctionc5b93c5c2e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	attr: function( elem, name, value ) {$/;"	f
AnonymousFunctionc5b93c5c2f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		name = name.replace(\/-([a-z])\/ig, function(all, letter){$/;"	f	function:AnonymousFunctionc5b93c5c2e00
AnonymousFunctionc5b93c5c3000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trim: function( text ) {$/;"	f
AnonymousFunctionc5b93c5c3100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	makeArray: function( array ) {$/;"	f
AnonymousFunctionc5b93c5c3200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	inArray: function( elem, array ) {$/;"	f
AnonymousFunctionc5b93c5c3300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	merge: function( first, second ) {$/;"	f
AnonymousFunctionc5b93c5c3400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unique: function( array ) {$/;"	f
AnonymousFunctionc5b93c5c3500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	grep: function( elems, callback, inv ) {$/;"	f
AnonymousFunctionc5b93c5c3600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	map: function( elems, callback ) {$/;"	f
AnonymousFunctionc5b93c5c3700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parent: function(elem){return elem.parentNode;},$/;"	f
AnonymousFunctionc5b93c5c3800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parents: function(elem){return jQuery.dir(elem,"parentNode");},$/;"	f
AnonymousFunctionc5b93c5c3900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	next: function(elem){return jQuery.nth(elem,2,"nextSibling");},$/;"	f
AnonymousFunctionc5b93c5c3a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prev: function(elem){return jQuery.nth(elem,2,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c3b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nextAll: function(elem){return jQuery.dir(elem,"nextSibling");},$/;"	f
AnonymousFunctionc5b93c5c3c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prevAll: function(elem){return jQuery.dir(elem,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c3d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	siblings: function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},$/;"	f
AnonymousFunctionc5b93c5c3e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	children: function(elem){return jQuery.sibling(elem.firstChild);},$/;"	f
AnonymousFunctionc5b93c5c3f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	contents: function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.conte/;"	f
AnonymousFunctionc5b93c5c4000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, fn){$/;"	f
AnonymousFunctionc5b93c5c4100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, original){$/;"	f
AnonymousFunctionc5b93c5c4200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:jQuery.fn
AnonymousFunctionc5b93c5c4300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeAttr: function( name ) {$/;"	f
AnonymousFunctionc5b93c5c4400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	addClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggleClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function( selector ) {$/;"	f
AnonymousFunctionc5b93c5c4800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery( "*", this ).add(this).each(function(){$/;"	f
AnonymousFunctionc5b93c5c4900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	empty: function() {$/;"	f
AnonymousFunctionc5b93c5c4a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, fn){$/;"	f
AnonymousFunctionc5b93c5c4b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each([ "Height", "Width" ], function(i, name){$/;"	f
AnonymousFunctionc5b93c5c4c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		"": function(a,i,m){return m[2]=="*"||jQuery.nodeName(a,m[2]);},$/;"	f
AnonymousFunctionc5b93c5c4d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		"#": function(a,i,m){return a.getAttribute("id")==m[2];},$/;"	f
AnonymousFunctionc5b93c5c4e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			lt: function(a,i,m){return i<m[3]-0;},$/;"	f
AnonymousFunctionc5b93c5c4f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			gt: function(a,i,m){return i>m[3]-0;},$/;"	f
AnonymousFunctionc5b93c5c5000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			nth: function(a,i,m){return m[3]-0==i;},$/;"	f
AnonymousFunctionc5b93c5c5100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			eq: function(a,i,m){return m[3]-0==i;},$/;"	f
AnonymousFunctionc5b93c5c5200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			first: function(a,i){return i==0;},$/;"	f
AnonymousFunctionc5b93c5c5300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			last: function(a,i,m,r){return i==r.length-1;},$/;"	f
AnonymousFunctionc5b93c5c5400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			even: function(a,i){return i%2==0;},$/;"	f
AnonymousFunctionc5b93c5c5500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			odd: function(a,i){return i%2;},$/;"	f
AnonymousFunctionc5b93c5c5600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"first-child": function(a){return a.parentNode.getElementsByTagName("*")[0]==a;},$/;"	f
AnonymousFunctionc5b93c5c5700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"last-child": function(a){return jQuery.nth(a.parentNode.lastChild,1,"previousSibling")==a;},$/;"	f
AnonymousFunctionc5b93c5c5800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"only-child": function(a){return !jQuery.nth(a.parentNode.lastChild,2,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c5900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			parent: function(a){return a.firstChild;},$/;"	f
AnonymousFunctionc5b93c5c5a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			empty: function(a){return !a.firstChild;},$/;"	f
AnonymousFunctionc5b93c5c5b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			contains: function(a,i,m){return (a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m/;"	f
AnonymousFunctionc5b93c5c5c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			visible: function(a){return "hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"/;"	f
AnonymousFunctionc5b93c5c5d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			hidden: function(a){return "hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"v/;"	f
AnonymousFunctionc5b93c5c5e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			enabled: function(a){return !a.disabled;},$/;"	f
AnonymousFunctionc5b93c5c5f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			disabled: function(a){return a.disabled;},$/;"	f
AnonymousFunctionc5b93c5c6000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checked: function(a){return a.checked;},$/;"	f
AnonymousFunctionc5b93c5c6100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			selected: function(a){return a.selected||jQuery.attr(a,"selected");},$/;"	f
AnonymousFunctionc5b93c5c6200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			text: function(a){return "text"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			radio: function(a){return "radio"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checkbox: function(a){return "checkbox"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			file: function(a){return "file"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			password: function(a){return "password"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			submit: function(a){return "submit"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			image: function(a){return "image"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			reset: function(a){return "reset"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			button: function(a){return "button"==a.type||jQuery.nodeName(a,"button");},$/;"	f
AnonymousFunctionc5b93c5c6b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			input: function(a){return \/input|select|textarea|button\/i.test(a.nodeName);},$/;"	f
AnonymousFunctionc5b93c5c6c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			has: function(a,i,m){return jQuery.find(m[3],a).length;},$/;"	f
AnonymousFunctionc5b93c5c6d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			header: function(a){return \/h\\d\/i.test(a.nodeName);},$/;"	f
AnonymousFunctionc5b93c5c6e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	f
AnonymousFunctionc5b93c5c6f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	f
AnonymousFunctionc5b93c5c7000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	multiFilter: function( expr, elems, not ) {$/;"	f
AnonymousFunctionc5b93c5c7100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	find: function( t, context ) {$/;"	f
AnonymousFunctionc5b93c5c7200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	classFilter: function(r,m,not){$/;"	f
AnonymousFunctionc5b93c5c7300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	filter: function(t,r,not) {$/;"	f
AnonymousFunctionc5b93c5c7400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				r = jQuery.grep( r, function(elem, i){$/;"	f	function:AnonymousFunctionc5b93c5c7300
AnonymousFunctionc5b93c5c7500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	dir: function( elem, dir ){$/;"	f
AnonymousFunctionc5b93c5c7600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nth: function(cur,result,dir,elem){$/;"	f
AnonymousFunctionc5b93c5c7700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	sibling: function( n, elem ) {$/;"	f
AnonymousFunctionc5b93c5c7800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			handler = this.proxy( fn, function() {$/;"	f	function:jQuery.event.add
AnonymousFunctionc5b93c5c7900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			handle = jQuery.data(elem, "handle") || jQuery.data(elem, "handle", function(){$/;"	f	function:jQuery.event.add
AnonymousFunctionc5b93c5c7a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each(types.split(\/\\s+\/), function(index, type) {$/;"	f
AnonymousFunctionc5b93c5c7b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each(types.split(\/\\s+\/), function(index, type){$/;"	f
AnonymousFunctionc5b93c5c7c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					preventDefault: function(){},$/;"	f
AnonymousFunctionc5b93c5c7d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					stopPropagation: function(){},$/;"	f
AnonymousFunctionc5b93c5c7e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	bind: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c7f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return type == "unload" ? this.one(type, data, fn) : this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c7e00
AnonymousFunctionc5b93c5c8000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	one: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var one = jQuery.event.proxy( fn || data, function(event) {$/;"	f	function:AnonymousFunctionc5b93c5c8000
AnonymousFunctionc5b93c5c8200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8000
AnonymousFunctionc5b93c5c8300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unbind: function( type, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8300
AnonymousFunctionc5b93c5c8500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trigger: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8500
AnonymousFunctionc5b93c5c8700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	triggerHandler: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn ) {$/;"	f
AnonymousFunctionc5b93c5c8900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.click( jQuery.event.proxy( fn, function(event) {$/;"	c	class:AnonymousFunctionc5b93c5c8800
AnonymousFunctionc5b93c5c8a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hover: function(fnOver, fnOut) {$/;"	f
AnonymousFunctionc5b93c5c8b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function(fn) {$/;"	f
AnonymousFunctionc5b93c5c8c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.readyList.push( function() { return fn.call(this, jQuery); } );$/;"	f	function:AnonymousFunctionc5b93c5c8b00
AnonymousFunctionc5b93c5c8d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function() {$/;"	f
AnonymousFunctionc5b93c5c8e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each( jQuery.readyList, function(){$/;"	c
AnonymousFunctionc5b93c5c8f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	if ( jQuery.browser.msie && window == top ) (function(){$/;"	f	function:bindReady
AnonymousFunctionc5b93c5c9000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		document.addEventListener( "DOMContentLoaded", function () {$/;"	f	function:bindReady
AnonymousFunctionc5b93c5c9100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	"submit,keydown,keypress,keyup,error").split(","), function(i, name){$/;"	f
AnonymousFunctionc5b93c5c9200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery(window).bind("unload", function() {$/;"	f
AnonymousFunctionc5b93c5c9300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	load: function( url, params, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			complete: function(res, status){$/;"	f
AnonymousFunctionc5b93c5c9500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serialize: function() {$/;"	f
AnonymousFunctionc5b93c5c9600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serializeArray: function() {$/;"	f
AnonymousFunctionc5b93c5c9700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.map(function(){$/;"	f	function:AnonymousFunctionc5b93c5c9600
AnonymousFunctionc5b93c5c9800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		.filter(function(){$/;"	f
AnonymousFunctionc5b93c5c9900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		.map(function(i, elem){$/;"	f
AnonymousFunctionc5b93c5c9a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.map( val, function(val, i){$/;"	f	function:AnonymousFunctionc5b93c5c9900
AnonymousFunctionc5b93c5c9b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each( "ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","), functi/;"	f
AnonymousFunctionc5b93c5c9c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	get: function( url, data, callback, type ) {$/;"	f
AnonymousFunctionc5b93c5c9d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getScript: function( url, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getJSON: function( url, data, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	post: function( url, data, callback, type ) {$/;"	f
AnonymousFunctionc5b93c5ca000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajaxSetup: function( settings ) {$/;"	f
AnonymousFunctionc5b93c5ca100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajax: function( s ) {$/;"	f
AnonymousFunctionc5b93c5ca200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				setTimeout(function(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
AnonymousFunctionc5b93c5ca300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	handleError: function( s, xhr, status, e ) {$/;"	f
AnonymousFunctionc5b93c5ca400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpSuccess: function( xhr ) {$/;"	f
AnonymousFunctionc5b93c5ca500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpNotModified: function( xhr, url ) {$/;"	f
AnonymousFunctionc5b93c5ca600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpData: function( xhr, type, filter ) {$/;"	f
AnonymousFunctionc5b93c5ca700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	param: function( a ) {$/;"	f
AnonymousFunctionc5b93c5ca800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( a, function(){$/;"	f	function:AnonymousFunctionc5b93c5ca700
AnonymousFunctionc5b93c5ca900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.each( a[j], function(){$/;"	f	function:AnonymousFunctionc5b93c5ca700
AnonymousFunctionc5b93c5caa00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cab00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.filter(":hidden").each(function(){$/;"	c
AnonymousFunctionc5b93c5cac00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cad00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.filter(":visible").each(function(){$/;"	c
AnonymousFunctionc5b93c5cae00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn, fn2 ){$/;"	f
AnonymousFunctionc5b93c5caf00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.each(function(){$/;"	f
AnonymousFunctionc5b93c5cb000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideDown: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cb100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideUp: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cb200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideToggle: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeIn: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeOut: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeTo: function(speed,to,callback){$/;"	f
AnonymousFunctionc5b93c5cb600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	animate: function( prop, speed, easing, callback ) {$/;"	f
AnonymousFunctionc5b93c5cb700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this[ optall.queue === false ? "each" : "queue" ](function(){$/;"	f
AnonymousFunctionc5b93c5cb800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( prop, function(name, val){$/;"	f
AnonymousFunctionc5b93c5cb900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	queue: function(type, fn){$/;"	f
AnonymousFunctionc5b93c5cba00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5cb900
AnonymousFunctionc5b93c5cbb00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	stop: function(clearQueue, gotoEnd){$/;"	c
AnonymousFunctionc5b93c5cbc00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5cbb00
AnonymousFunctionc5b93c5cbd00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	return this.each(function(){$/;"	f	function:jQuery.fn.dequeue
AnonymousFunctionc5b93c5cbe00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	speed: function(speed, easing, fn) {$/;"	f
AnonymousFunctionc5b93c5cbf00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		linear: function( p, n, firstNum, diff ) {$/;"	f
AnonymousFunctionc5b93c5cc000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		swing: function( p, n, firstNum, diff ) {$/;"	f
AnonymousFunctionc5b93c5cc100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fx: function( elem, options, prop ){$/;"	c
AnonymousFunctionc5b93c5cc200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.timerId = setInterval(function(){$/;"	f
AnonymousFunctionc5b93c5cc300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollLeft: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollTop: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		opacity: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		_default: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	position: function() {$/;"	f
AnonymousFunctionc5b93c5cc800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	offsetParent: function() {$/;"	f
AnonymousFunctionc5b93c5cc900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each( ['Left', 'Top'], function(i, name) {$/;"	f
AnonymousFunctionc5b93c5cca00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.each(function() {$/;"	c	class:jQuery.fn
AnonymousFunctionc5b93c5ccb00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each([ "Height", "Width" ], function(i, name){$/;"	f
Ansi	plugged/fzf/src/options.go	/^	Ansi        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Any background context you can provide?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Any background context you can provide?$/;"	t
Any contributions you make will be under the MIT Software License	plugged/github-nvim-theme/CONTRIBUTING.md	/^## Any contributions you make will be under the MIT Software License$/;"	s	chapter:Contributing to github-nvim-theme
Ao	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Aoe	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Aq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Aqe	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Aquarium-Dark	plugged/aquarium-vim/README.md	/^#### Aquarium-Dark$/;"	t	subsection:Features and Stuff""Theme on PikaVim
Aquarium-Light	plugged/aquarium-vim/README.md	/^#### Aquarium-Light$/;"	t	subsection:Features and Stuff""Theme on PikaVim
Array	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Array	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	c
Articles	plugged/coc.nvim/Readme.md	/^## Articles$/;"	s
As	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
As Vim plugin	plugged/fzf/README.md	/^### As Vim plugin$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
AsEvent	plugged/fzf/src/tui/tui.go	/^func (t EventType) AsEvent() Event {$/;"	f	type:tui.EventType	typeref:typename:Event
AsString	plugged/fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f	struct:fzf.Item	typeref:typename:string
AsString	plugged/fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
AsUint16	plugged/fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f	package:util	typeref:typename:uint16
Ase	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ask	plugged/plenary.nvim/scratch/memory_profiler.lua	/^    Ask = function (question)$/;"	f
At	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
AtomicBool	plugged/fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	s	package:util
Attr	plugged/fzf/src/tui/dummy.go	/^type Attr int32$/;"	t	package:tui	typeref:typename:int32
Attr	plugged/fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t	package:tui	typeref:typename:tcell.Style
Attr	plugged/fzf/src/tui/tui.go	/^	Attr  Attr$/;"	m	struct:tui.ColorAttr	typeref:typename:Attr
Attr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Attr() Attr {$/;"	f	struct:tui.ColorPair	typeref:typename:Attr
AttrClear	plugged/fzf/src/tui/dummy.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrClear	plugged/fzf/src/tui/tcell.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrRegular	plugged/fzf/src/tui/dummy.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrRegular	plugged/fzf/src/tui/tcell.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrUndefined	plugged/fzf/src/tui/dummy.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
AttrUndefined	plugged/fzf/src/tui/tcell.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
Attribution	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Attribution	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Attribution	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Author	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Author<\/h2>$/;"	i
Author and Feedback	plugged/vim-startify/README.md	/^## Author and Feedback$/;"	s
Auto Pairs	plugged/auto-pairs/README.md	/^Auto Pairs$/;"	c
Auto-updates from CI	plugged/telescope.nvim/CONTRIBUTING.md	/^## Auto-updates from CI$/;"	s	chapter:Contributing
AutoPairsBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
Autocmds	plugged/telescope.nvim/README.md	/^## Autocmds$/;"	s	chapter:telescope.nvim
Automatic README Generation	plugged/nvim-treesitter-textobjects/CONTRIBUTING.md	/^### Automatic README Generation$/;"	S
Autosave on leave	plugged/vim-tmux-navigator/README.md	/^##### Autosave on leave$/;"	T	subsubsection:Vim Tmux Navigator""Configuration""Custom Key Bindings""Vim
Available modules	plugged/nvim-treesitter/README.md	/^# Available modules$/;"	c
Available options	plugged/lualine.nvim/README.md	/^#### Available options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
Available themes	plugged/lualine.nvim/THEMES.md	/^# Available themes$/;"	c
Aw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ax	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Ay	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
B	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
B	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    B,$/;"	e	enum:foo	file:
B	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> B             :call startify#set_batchmode('B')<cr>$/;"	m
B$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
B0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
B1	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
B3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
B5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
B6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
B8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
BASE	plugged/fzf/test/test_go.rb	/^BASE = File.expand_path('..', __dir__)$/;"	C
BD	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
BG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
BI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY	plugged/fzf/Makefile	/^	BINARY := $(BINARYRISCV64)$/;"	m
BINARY32	plugged/fzf/Makefile	/^BINARY32       := fzf-$(GOOS)_386$/;"	m
BINARY64	plugged/fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	plugged/fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	plugged/fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	plugged/fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	plugged/fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	plugged/fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BINARYRISCV64	plugged/fzf/Makefile	/^BINARYRISCV64  := fzf-$(GOOS)_riscv64$/;"	m
BJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
BL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
BN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
BO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
BSpace	plugged/fzf/src/tui/tui.go	/^	BSpace$/;"	c	package:tui
BT	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
BTab	plugged/fzf/src/tui/tui.go	/^	BTab$/;"	c	package:tui
BU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
BUILD_FLAGS	plugged/fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-s -w -X main.version=$(VERSION) -X main.revision=$(REVISION)" -t/;"	m
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
BV	plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
BVe	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
BW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
BX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
BZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ba	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Backers	plugged/coc.nvim/Readme.md	/^## Backers$/;"	s
Background	plugged/vim-cool/README.md	/^## Background$/;"	s	chapter:Experimental features
BackwardEOF	plugged/fzf/src/tui/tui.go	/^	BackwardEOF$/;"	c	package:tui
Bae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Bar	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    class Bar {$/;"	c	class:Foo	file:
Bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^trait Bar {$/;"	i
Bb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Bbye (Buffer Bye) for Vim	plugged/vim-bbye/README.md	/^Bbye (Buffer Bye) for Vim$/;"	c
Bc	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Bd	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Bdelete	plugged/vim-bbye/plugin/bbye.vim	/^command! -bang -complete=buffer -nargs=? Bdelete$/;"	c
Be	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Bee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Before submitting	plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Before submitting$/;"	c
BenchmarkExtractColor	plugged/fzf/src/ansi_test.go	/^func BenchmarkExtractColor(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence	plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence_Regex	plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence_Regex(b *testing.B) {$/;"	f	package:fzf
Bg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Bg	plugged/fzf/src/tui/tui.go	/^	Bg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Bg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Bie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Bj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Bk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Bl	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
Black	plugged/fzf/src/options.go	/^	Black       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Blink	plugged/fzf/src/tui/dummy.go	/^	Blink     = Attr(1 << 4)$/;"	c	package:tui
Blink	plugged/fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c	package:tui
Blink2	plugged/fzf/src/tui/dummy.go	/^	Blink2    = Attr(1 << 5)$/;"	c	package:tui
Bme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Bn	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
Bold	plugged/fzf/src/options.go	/^	Bold        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Bold	plugged/fzf/src/tui/dummy.go	/^	Bold      = Attr(1)$/;"	c	package:tui
Bold	plugged/fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c	package:tui	typeref:type:Attr
Border	plugged/fzf/src/tui/tui.go	/^	Border       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
BorderBottom	plugged/fzf/src/tui/tui.go	/^	BorderBottom$/;"	c	package:tui
BorderCharacter	plugged/fzf/src/tui/tui.go	/^type BorderCharacter int$/;"	t	package:tui	typeref:typename:int
BorderHorizontal	plugged/fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c	package:tui
BorderLeft	plugged/fzf/src/tui/tui.go	/^	BorderLeft$/;"	c	package:tui
BorderNone	plugged/fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c	package:tui	typeref:type:BorderShape
BorderRight	plugged/fzf/src/tui/tui.go	/^	BorderRight$/;"	c	package:tui
BorderRounded	plugged/fzf/src/tui/tui.go	/^	BorderRounded$/;"	c	package:tui
BorderShape	plugged/fzf/src/options.go	/^	BorderShape tui.BorderShape$/;"	m	struct:fzf.Options	typeref:typename:tui.BorderShape
BorderShape	plugged/fzf/src/tui/tui.go	/^type BorderShape int$/;"	t	package:tui	typeref:typename:int
BorderSharp	plugged/fzf/src/tui/tui.go	/^	BorderSharp$/;"	c	package:tui
BorderStyle	plugged/fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	s	package:tui
BorderTop	plugged/fzf/src/tui/tui.go	/^	BorderTop$/;"	c	package:tui
BorderVertical	plugged/fzf/src/tui/tui.go	/^	BorderVertical$/;"	c	package:tui
Bq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Br	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Branches	plugged/fzf/ADVANCED.md	/^### Branches$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Bse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Bt	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Bu	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Buffer Groups	plugged/bufferline.nvim/README.md	/^#### Buffer Groups$/;"	t	section:Table of Contents""Features
Buffer Level Pairs Setting	plugged/auto-pairs/README.md	/^Buffer Level Pairs Setting$/;"	s	chapter:Auto Pairs
Buffer delete vs wipeout	plugged/vim-bbye/README.md	/^### Buffer delete vs wipeout$/;"	S	section:Bbye (Buffer Bye) for Vim""Using
Buffer numbers	plugged/bufferline.nvim/README.md	/^#### Buffer numbers$/;"	t	section:Table of Contents""Features
Buffer pick	plugged/bufferline.nvim/README.md	/^#### Buffer pick$/;"	t	section:Table of Contents""Features
Buffer pick functionality	plugged/bufferline.nvim/README.md	/^### Buffer pick functionality$/;"	S	section:Table of Contents""Feature overview
Buffer re-ordering	plugged/bufferline.nvim/README.md	/^#### Buffer re-ordering$/;"	t	section:Table of Contents""Features
BufferGatorAuto	plugged/vim-buffergator/autoload/buffergator.vim	/^augroup BufferGatorAuto$/;"	a
BuffergatorBuffersStatusLine	plugged/vim-buffergator/autoload/buffergator.vim	/^function! BuffergatorBuffersStatusLine()$/;"	f
BuffergatorCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^        augroup BuffergatorCatalogViewer$/;"	a
BuffergatorClose	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorClose       :call buffergator#CloseBuffergator()$/;"	c
BuffergatorMRU	plugged/vim-buffergator/plugin/buffergator.vim	/^augroup BuffergatorMRU$/;"	a
BuffergatorMruCycleNext	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=* BuffergatorMruCycleNext :call buffergator#BuffergatorCycleMru(1, "<args>")$/;"	c
BuffergatorMruCyclePrev	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=* BuffergatorMruCyclePrev :call buffergator#BuffergatorCycleMru(-1, "<args>")$/;"	c
BuffergatorMruList	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=? -bang BuffergatorMruList     :call buffergator#BuffergatorEchoMruList('<bang>'/;"	c
BuffergatorOpen	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorOpen        :call buffergator#OpenBuffergator()$/;"	c
BuffergatorTabsClose	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsClose   :call buffergator#CloseBuffergatorTabs()$/;"	c
BuffergatorTabsOpen	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsOpen    :call buffergator#OpenBuffergatorTabs()$/;"	c
BuffergatorTabsStatusLine	plugged/vim-buffergator/autoload/buffergator.vim	/^function! BuffergatorTabsStatusLine()$/;"	f
BuffergatorTabsToggle	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsToggle  :call buffergator#ToggleBuffergatorTabs()$/;"	c
BuffergatorToggle	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorToggle      :call buffergator#ToggleBuffergator()$/;"	c
BuffergatorUpdate	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorUpdate      :call buffergator#UpdateBuffergator('',-1)$/;"	c
BuffergatorUpdateMRU	plugged/vim-buffergator/plugin/buffergator.vim	/^function! BuffergatorUpdateMRU(acmd_bufnr)$/;"	f
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.1.1
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.1.2
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.13.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.16.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.3.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.5.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.6.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.7.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.8.0
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s	chapter:0.9.0
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.11
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.12
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.13
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.5
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.6
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.7
Bug fixes	plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.8
Build instructions	plugged/fzf/BUILD.md	/^Build instructions$/;"	s	chapter:Building fzf
BuildPattern	plugged/fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool,/;"	f	package:fzf	typeref:typename:*Pattern
Building fzf	plugged/fzf/BUILD.md	/^Building fzf$/;"	c
Building fzf	plugged/fzf/README.md	/^Building fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Built-in Textobjects	plugged/nvim-treesitter-textobjects/README.md	/^## Built-in Textobjects$/;"	s	chapter:nvim-treesitter-textobjects
Bw	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
Bwipeout	plugged/vim-bbye/plugin/bbye.vim	/^command! -bang -complete=buffer -nargs=? Bwipeout$/;"	c
Bx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
By	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
ByOrder	plugged/fzf/src/result.go	/^type ByOrder []Offset$/;"	t	package:fzf	typeref:typename:[]Offset
ByRelevance	plugged/fzf/src/result.go	/^type ByRelevance []Result$/;"	t	package:fzf	typeref:typename:[]Result
ByRelevanceTac	plugged/fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t	package:fzf	typeref:typename:[]Result
Byte	plugged/fzf/src/tui/tui.go	/^func (t EventType) Byte() byte {$/;"	f	type:tui.EventType	typeref:typename:byte
Bytes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f	struct:util.Chars	typeref:typename:[]byte
Bz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
C	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
C	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    C,$/;"	e	enum:foo	file:
C$	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
C0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
C4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
C5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
C6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
C8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
CA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
CC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
CD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
CFill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
CFill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
CFill	plugged/fzf/src/tui/tui.go	/^	CFill(fg Color, bg Color, attr Attr, text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
CG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
CHANGELOG	plugged/fzf/CHANGELOG.md	/^CHANGELOG$/;"	c
CHANGELOG	plugged/vim-devicons/CHANGELOG.md	/^CHANGELOG$/;"	c
CI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
CK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
CL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
CN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
COMPREPLY=	plugged/fzf/shell/completion.bash	/^    COMPREPLY=()$/;"	f
COMPREPLY=	plugged/fzf/shell/completion.bash	/^  COMPREPLY=()$/;"	f
CONTRIBUTING	plugged/vim-startify/CONTRIBUTING.md	/^CONTRIBUTING$/;"	c
CP	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
CPrint	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.LightWindow
CPrint	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.TcellWindow
CPrint	plugged/fzf/src/tui/tui.go	/^	CPrint(color ColorPair, text string)$/;"	n	interface:tui.Window
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CV	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
CX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
CZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
C_	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
CacheKey	plugged/fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
Cae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
CanDoTopWin	plugged/plenary.nvim/scratch/window_test.lua	/^function CanDoTopWin()$/;"	f
CanMakeBorders	plugged/plenary.nvim/scratch/window_test.lua	/^function CanMakeBorders()$/;"	f
CanWinBeHidden	plugged/plenary.nvim/scratch/window_test.lua	/^function CanWinBeHidden()$/;"	f
CanWinBeReordered	plugged/plenary.nvim/scratch/window_test.lua	/^function CanWinBeReordered()$/;"	f
Case	plugged/fzf/src/options.go	/^	Case        Case$/;"	m	struct:fzf.Options	typeref:typename:Case
Case	plugged/fzf/src/options.go	/^type Case int$/;"	t	package:fzf	typeref:typename:int
CaseIgnore	plugged/fzf/src/options.go	/^	CaseIgnore$/;"	c	package:fzf
CaseRespect	plugged/fzf/src/options.go	/^	CaseRespect$/;"	c	package:fzf
CaseSmart	plugged/fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c	package:fzf	typeref:type:Case
Caveats	plugged/bufferline.nvim/README.md	/^## Caveats$/;"	s	chapter:Table of Contents
Caveats	plugged/toggleterm.nvim/README.md	/^#### Caveats$/;"	t	subsection:Roadmap""`ToggleTerm`
Cb	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
Cc	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Ce	plugged/coc.nvim/build/index.js	/^${JSON.stringify(P,null,4)}`);let z=P;if(ti.string(z.id)||ti.number(z.id)){let K=String(z.id),ce/;"	f
Cee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Cg	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Change	plugged/fzf/src/tui/tui.go	/^	Change$/;"	c	package:tui
Changed behavior on `--no-sort`	plugged/fzf/CHANGELOG.md	/^#### Changed behavior on `--no-sort`$/;"	t	subsection:CHANGELOG""0.9.4""*Backward incompatible changes*
Changelog	plugged/github-nvim-theme/CHANGELOG.md	/^# Changelog$/;"	c
Changing components in lualine sections	plugged/lualine.nvim/README.md	/^### Changing components in lualine sections$/;"	S	section:lualine.nvim""Usage and customization
Char	plugged/fzf/src/tui/tui.go	/^	Char       rune$/;"	m	struct:tui.Event	typeref:typename:rune
Chars	plugged/fzf/src/util/chars.go	/^type Chars struct {$/;"	s	package:util
Chunk	plugged/fzf/src/chunklist.go	/^type Chunk struct {$/;"	s	package:fzf
ChunkCache	plugged/fzf/src/cache.go	/^type ChunkCache struct {$/;"	s	package:fzf
ChunkList	plugged/fzf/src/chunklist.go	/^type ChunkList struct {$/;"	s	package:fzf
Ci	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Cl	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Cle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
CleanUp	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
Clear	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Clear() {$/;"	f	struct:fzf.ChunkList
Clear	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()            {}$/;"	f	unknown:tui.FullscreenRenderer
Clear	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f	struct:tui.LightRenderer
Clear	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f	unknown:tui.FullscreenRenderer
Clear	plugged/fzf/src/tui/tui.go	/^	Clear()$/;"	n	interface:tui.Renderer
Clear	plugged/fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f	type:util.Events
ClearOnExit	plugged/fzf/src/options.go	/^	ClearOnExit bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Close	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()            {}$/;"	f	unknown:tui.FullscreenRenderer
Close	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f	struct:tui.LightRenderer
Close	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f	struct:tui.LightWindow
Close	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f	unknown:tui.FullscreenRenderer
Close	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f	struct:tui.TcellWindow
Close	plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Renderer
Close	plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Window
Close icons	plugged/bufferline.nvim/README.md	/^#### Close icons$/;"	t	section:Table of Contents""Features
CloseTagDisableBuffer	plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagDisableBuffer let b:closetag_disabled = 1$/;"	c
CloseTagEnableBuffer	plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagEnableBuffer let b:closetag_disabled = 0$/;"	c
CloseTagToggleBuffer	plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagToggleBuffer let b:closetag_disabled = exists('b:closet/;"	c
Closing all open buffers and files	plugged/vim-bbye/README.md	/^### Closing all open buffers and files$/;"	S	section:Bbye (Buffer Bye) for Vim""Using
Closing buffers	plugged/bufferline.nvim/README.md	/^### Closing buffers$/;"	S	section:Table of Contents""Feature overview
Cm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Cme	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Cn	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
CocAction	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocAction :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, <f/;"	c
CocAction	plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(name, ...) abort$/;"	f
CocActionAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(name, ...) abort$/;"	f
CocCommand	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runComm/;"	c
CocConfig	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDiagnostics	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? CocDiagnostics  :call s:OpenDiagnostics(<f-args>)$/;"	c
CocDisable	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable(0)$/;"	c
CocFirst	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocFirst        :call coc#rpc#notify('listFirs/;"	c
CocFix	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocFix    :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, 'q/;"	c
CocHasProvider	plugged/coc.nvim/plugin/coc.vim	/^function! CocHasProvider(name) abort$/;"	f
CocInfo	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -bar -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_ext/;"	c
CocLast	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocLast         :call coc#rpc#notify('listLast/;"	c
CocList	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList'/;"	c
CocListCancel	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListCancel   :call coc#rpc#notify('listCanc/;"	c
CocListResume	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListResume   :call coc#rpc#notify('listResu/;"	c
CocLocalConfig	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocLocalConfig  :call coc#rpc#notify('openLocalConfig', [])$/;"	c
CocLocations	plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocNext         :call coc#rpc#notify('listNext/;"	c
CocNotify	plugged/coc.nvim/plugin/coc.vim	/^function! CocNotify(...) abort$/;"	f
CocOpenLog	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocOutline	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOutline      :call coc#rpc#notify('showOutline', [])$/;"	c
CocPopupCallback	plugged/coc.nvim/plugin/coc.vim	/^function! CocPopupCallback(bufnr, arglist) abort$/;"	f
CocPrev	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocPrev         :call coc#rpc#notify('listPrev/;"	c
CocRebuild	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRegistNotification	plugged/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRequest	plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocSearch	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:SearchOptions  CocSearch    :call coc#rpc#notify('search', /;"	c
CocStart	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocTagFunc	plugged/coc.nvim/plugin/coc.vim	/^function! CocTagFunc(pattern, flags, info) abort$/;"	f
CocUninstall	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call CocActionAsync('uninstall/;"	c
CocUpdate	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -bar CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CocWatch	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=1 -complete=custom,s:LoadedExtensions  CocWatch    :call coc#rpc#notify('watchEx/;"	c
ColBorder	plugged/fzf/src/tui/tui.go	/^	ColBorder               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrent	plugged/fzf/src/tui/tui.go	/^	ColCurrent              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursor	plugged/fzf/src/tui/tui.go	/^	ColCurrentCursor        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursorEmpty	plugged/fzf/src/tui/tui.go	/^	ColCurrentCursorEmpty   ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentMatch	plugged/fzf/src/tui/tui.go	/^	ColCurrentMatch         ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelected	plugged/fzf/src/tui/tui.go	/^	ColCurrentSelected      ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelectedEmpty	plugged/fzf/src/tui/tui.go	/^	ColCurrentSelectedEmpty ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursor	plugged/fzf/src/tui/tui.go	/^	ColCursor               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursorEmpty	plugged/fzf/src/tui/tui.go	/^	ColCursorEmpty          ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColDisabled	plugged/fzf/src/tui/tui.go	/^	ColDisabled             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColHeader	plugged/fzf/src/tui/tui.go	/^	ColHeader               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInfo	plugged/fzf/src/tui/tui.go	/^	ColInfo                 ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInput	plugged/fzf/src/tui/tui.go	/^	ColInput                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColMatch	plugged/fzf/src/tui/tui.go	/^	ColMatch                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColNormal	plugged/fzf/src/tui/tui.go	/^	ColNormal               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreview	plugged/fzf/src/tui/tui.go	/^	ColPreview              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreviewBorder	plugged/fzf/src/tui/tui.go	/^	ColPreviewBorder        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPrompt	plugged/fzf/src/tui/tui.go	/^	ColPrompt               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSelected	plugged/fzf/src/tui/tui.go	/^	ColSelected             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSpinner	plugged/fzf/src/tui/tui.go	/^	ColSpinner              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
CollectObjectReferenceInMemory	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function CollectObjectReferenceInMemory(strName, cObject, cDumpInfoContainer)$/;"	f
CollectSingleObjectReferenceInMemory	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function CollectSingleObjectReferenceInMemory(strName, cObject, cDumpInfoContainer)$/;"	f
Color	plugged/fzf/src/tui/tui.go	/^	Color Color$/;"	m	struct:tui.ColorAttr	typeref:typename:Color
Color	plugged/fzf/src/tui/tui.go	/^type Color int32$/;"	t	package:tui	typeref:typename:int32
Color coding	plugged/JABS.nvim/README.md	/^### Color coding$/;"	S	section:JABS.nvim""Configuration
Color guide	plugged/onedarkpro.nvim/README.md	/^### Color guide$/;"	S	section:OneDarkPro.nvim"":camera: Screenshots
Color option unification	plugged/lualine.nvim/BREAKING_CHANGES.md	/^### Color option unification$/;"	S
Color themes	plugged/fzf/ADVANCED.md	/^Color themes$/;"	s	chapter:Advanced fzf examples
ColorAttr	plugged/fzf/src/tui/tui.go	/^type ColorAttr struct {$/;"	s	package:tui
ColorPair	plugged/fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	s	package:tui
ColorTheme	plugged/fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	s	package:tui
Colored	plugged/fzf/src/tui/tui.go	/^	Colored      bool$/;"	m	struct:tui.ColorTheme	typeref:typename:bool
Colors	plugged/fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f	struct:fzf.Item	typeref:typename:[]ansiOffset
Colors	plugged/plenary.nvim/README.md	/^#### Colors$/;"	t	subsection:plenary.nvim""Modules""plenary.test_harness
Command-local options	plugged/fzf.vim/README.md	/^### Command-local options$/;"	S	section:fzf :heart: vim""Customization
Commands	plugged/fzf.vim/README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Commands	plugged/vim-closetag/README.md	/^#### Commands$/;"	t	chapter:closetag.vim
Commentary	plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar -bang Commentary call s:go(<line1>,<line2>,<bang>0)$/;"	c
Commit hashes	plugged/fzf/ADVANCED.md	/^### Commit hashes$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Comparable	plugged/fzf/src/tui/tui.go	/^func (e Event) Comparable() Event {$/;"	f	unknown:tui.Event	typeref:typename:Event
Comparison to VS Code's One Dark Pro	plugged/onedarkpro.nvim/README.md	/^### Comparison to VS Code's One Dark Pro$/;"	S	section:OneDarkPro.nvim"":camera: Screenshots
Comparison with [vim-gitgutter](https://github.com/airblade/vim-gitgutter)	plugged/gitsigns.nvim/README.md	/^## Comparison with [vim-gitgutter](https:\/\/github.com\/airblade\/vim-gitgutter)$/;"	s	chapter:gitsigns.nvim
Completion functions	plugged/fzf.vim/README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
CompletionTest	plugged/fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Component class refactor	plugged/lualine.nvim/BREAKING_CHANGES.md	/^### Component class refactor$/;"	S
Component options	plugged/lualine.nvim/README.md	/^### Component options$/;"	S	section:lualine.nvim""Usage and customization
Conditional buffer based LSP indicators	plugged/bufferline.nvim/README.md	/^### Conditional buffer based LSP indicators$/;"	S	section:Table of Contents""Feature overview
Configuration	plugged/JABS.nvim/README.md	/^## Configuration$/;"	s	chapter:JABS.nvim
Configuration	plugged/bufferline.nvim/README.md	/^## Configuration$/;"	s	chapter:Table of Contents
Configuration	plugged/fzf/README-VIM.md	/^### Configuration$/;"	S	section:FZF Vim integration""`:FZF[!]`
Configuration	plugged/github-nvim-theme/README.md	/^## Configuration$/;"	s
Configuration	plugged/onedark.nvim/README.md	/^## Configuration$/;"	s
Configuration	plugged/vim-blade/README.md	/^Configuration$/;"	s	chapter:vim-blade
Configuration	plugged/vim-tmux-navigator/README.md	/^Configuration$/;"	s	chapter:Vim Tmux Navigator
Configuration Docs	plugged/nord-vim/CHANGELOG.md	/^###### Configuration Docs$/;"	u	section:0.12.0""Features
Configurations	plugged/nord-vim/CHANGELOG.md	/^### Configurations$/;"	S	section:0.4.0""Features
Configure onedark.nvim using lua:	plugged/onedark.nvim/README.md	/^### Configure onedark.nvim using lua:$/;"	S	section:Configuration
Configure onedark.nvim using vimscript:	plugged/onedark.nvim/README.md	/^### Configure onedark.nvim using vimscript:$/;"	S	section:Configuration
Configuring	plugged/nvcode-color-schemes.vim/README.md	/^## Configuring$/;"	s	chapter:NVCode Colorscheme
Configuring colors	plugged/onedarkpro.nvim/README.md	/^### Configuring colors$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Configuring highlight groups	plugged/onedarkpro.nvim/README.md	/^### Configuring highlight groups$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Configuring options	plugged/onedarkpro.nvim/README.md	/^### Configuring options$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Configuring styles	plugged/onedarkpro.nvim/README.md	/^### Configuring styles$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Configuring the theme	plugged/onedarkpro.nvim/README.md	/^### Configuring the theme$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Constants	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Constants$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Constrain	plugged/fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f	package:util	typeref:typename:int
Constrain32	plugged/fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f	package:util	typeref:typename:int32
Contributing	plugged/aquarium-vim/README.md	/^## Contributing$/;"	s
Contributing	plugged/github-nvim-theme/README.md	/^## Contributing$/;"	s
Contributing	plugged/lualine.nvim/README.md	/^## Contributing$/;"	s	chapter:lualine.nvim
Contributing	plugged/nord-vim/README.md	/^## Contributing$/;"	s
Contributing	plugged/nvcode-color-schemes.vim/README.md	/^## Contributing$/;"	s	chapter:NVCode Colorscheme
Contributing	plugged/onedark.nvim/README.md	/^## Contributing$/;"	s
Contributing	plugged/telescope.nvim/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	plugged/telescope.nvim/README.md	/^## Contributing$/;"	s	chapter:telescope.nvim
Contributing	plugged/uwu.vim/README.md	/^## Contributing$/;"	s	chapter:PackerNvim
Contributing	plugged/vim-blade/README.md	/^Contributing$/;"	s	chapter:vim-blade
Contributing	plugged/vim-devicons/README.md	/^Contributing$/;"	s
Contributing	plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	plugged/vim-surround/README.markdown	/^## Contributing$/;"	s	chapter:surround.vim
Contributing Guide	plugged/vim-devicons/CONTRIBUTING.md	/^# Contributing Guide$/;"	c
Contributing to `nvim-treesitter`	plugged/nvim-treesitter/CONTRIBUTING.md	/^# Contributing to `nvim-treesitter`$/;"	c
Contributing to github-nvim-theme	plugged/github-nvim-theme/CONTRIBUTING.md	/^# Contributing to github-nvim-theme$/;"	c
Contributing to lualine.nvim	plugged/lualine.nvim/CONTRIBUTING.md	/^# Contributing to lualine.nvim$/;"	c
Contributor Covenant Code of Conduct	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributor Covenant Code of Conduct	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributor Covenant Code of Conduct	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributors	plugged/auto-pairs/README.md	/^Contributors$/;"	s	chapter:Auto Pairs
Contributors	plugged/lualine.nvim/README.md	/^### Contributors$/;"	S	section:lualine.nvim""Usage and customization
Contributors	plugged/onedarkpro.nvim/README.md	/^### Contributors$/;"	S	section:OneDarkPro.nvim"":clap: Credits
Contributors	plugged/tagbar/README.md	/^## Contributors$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Cool	plugged/onedark.nvim/README.md	/^### Cool$/;"	S	section:Styles
Cool	plugged/vim-cool/plugin/cool.vim	/^augroup Cool$/;"	a
CopyRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f	struct:util.Chars
CountItems	plugged/fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f	package:fzf	typeref:typename:int
Cp	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
Cr	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
CreateObjectReferenceInfoContainer	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function CreateObjectReferenceInfoContainer()$/;"	f
CreateObjectReferenceInfoContainerFromFile	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function CreateObjectReferenceInfoContainerFromFile(strFilePath)$/;"	f
CreateSingleObjectReferenceInfoContainer	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function CreateSingleObjectReferenceInfoContainer(strObjectName, cObject)$/;"	f
Credit	plugged/nvcode-color-schemes.vim/README.md	/^### Credit$/;"	S	chapter:NVCode Colorscheme
Criteria	plugged/fzf/src/options.go	/^	Criteria    []criterion$/;"	m	struct:fzf.Options	typeref:typename:[]criterion
Cs	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Cse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
CtrlA	plugged/fzf/src/tui/tui.go	/^	CtrlA$/;"	c	package:tui
CtrlAlt	plugged/fzf/src/tui/tui.go	/^	CtrlAlt$/;"	c	package:tui
CtrlAltKey	plugged/fzf/src/tui/tui.go	/^func CtrlAltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
CtrlB	plugged/fzf/src/tui/tui.go	/^	CtrlB$/;"	c	package:tui
CtrlBackSlash	plugged/fzf/src/tui/tui.go	/^	CtrlBackSlash$/;"	c	package:tui
CtrlC	plugged/fzf/src/tui/tui.go	/^	CtrlC$/;"	c	package:tui
CtrlCaret	plugged/fzf/src/tui/tui.go	/^	CtrlCaret$/;"	c	package:tui
CtrlD	plugged/fzf/src/tui/tui.go	/^	CtrlD$/;"	c	package:tui
CtrlE	plugged/fzf/src/tui/tui.go	/^	CtrlE$/;"	c	package:tui
CtrlF	plugged/fzf/src/tui/tui.go	/^	CtrlF$/;"	c	package:tui
CtrlG	plugged/fzf/src/tui/tui.go	/^	CtrlG$/;"	c	package:tui
CtrlH	plugged/fzf/src/tui/tui.go	/^	CtrlH$/;"	c	package:tui
CtrlJ	plugged/fzf/src/tui/tui.go	/^	CtrlJ$/;"	c	package:tui
CtrlK	plugged/fzf/src/tui/tui.go	/^	CtrlK$/;"	c	package:tui
CtrlL	plugged/fzf/src/tui/tui.go	/^	CtrlL$/;"	c	package:tui
CtrlM	plugged/fzf/src/tui/tui.go	/^	CtrlM$/;"	c	package:tui
CtrlN	plugged/fzf/src/tui/tui.go	/^	CtrlN$/;"	c	package:tui
CtrlO	plugged/fzf/src/tui/tui.go	/^	CtrlO$/;"	c	package:tui
CtrlP	plugged/fzf/src/tui/tui.go	/^	CtrlP$/;"	c	package:tui
CtrlQ	plugged/fzf/src/tui/tui.go	/^	CtrlQ$/;"	c	package:tui
CtrlR	plugged/fzf/src/tui/tui.go	/^	CtrlR$/;"	c	package:tui
CtrlRightBracket	plugged/fzf/src/tui/tui.go	/^	CtrlRightBracket$/;"	c	package:tui
CtrlS	plugged/fzf/src/tui/tui.go	/^	CtrlS$/;"	c	package:tui
CtrlSlash	plugged/fzf/src/tui/tui.go	/^	CtrlSlash$/;"	c	package:tui
CtrlSpace	plugged/fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c	package:tui
CtrlT	plugged/fzf/src/tui/tui.go	/^	CtrlT$/;"	c	package:tui
CtrlU	plugged/fzf/src/tui/tui.go	/^	CtrlU$/;"	c	package:tui
CtrlV	plugged/fzf/src/tui/tui.go	/^	CtrlV$/;"	c	package:tui
CtrlW	plugged/fzf/src/tui/tui.go	/^	CtrlW$/;"	c	package:tui
CtrlX	plugged/fzf/src/tui/tui.go	/^	CtrlX$/;"	c	package:tui
CtrlY	plugged/fzf/src/tui/tui.go	/^	CtrlY$/;"	c	package:tui
CtrlZ	plugged/fzf/src/tui/tui.go	/^	CtrlZ$/;"	c	package:tui
Current	plugged/fzf/src/tui/tui.go	/^	Current      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
CurrentMatch	plugged/fzf/src/tui/tui.go	/^	CurrentMatch ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Cursor	plugged/fzf/src/tui/tui.go	/^	Cursor       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Cursorline	plugged/onedarkpro.nvim/README.md	/^#### Cursorline$/;"	t	subsection:OneDarkPro.nvim"":wrench: Configuration""Configuring options
Custom Key Bindings	plugged/vim-tmux-navigator/README.md	/^### Custom Key Bindings$/;"	S	section:Vim Tmux Navigator""Configuration
Custom Terminals	plugged/toggleterm.nvim/README.md	/^### Custom Terminals$/;"	S	section:Roadmap
Custom area	plugged/bufferline.nvim/README.md	/^### Custom area$/;"	S	section:Table of Contents""Feature overview
Custom commands	plugged/toggleterm.nvim/README.md	/^### Custom commands$/;"	S	section:Roadmap
Custom completion	plugged/fzf.vim/README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom components	plugged/lualine.nvim/README.md	/^#### Custom components$/;"	t	subsection:lualine.nvim""Usage and customization""Changing components in lualine sections
Custom function	plugged/nvim-spectre/README.md	/^### Custom function$/;"	S	section:nvim-spectre""Customize
Custom functions	plugged/bufferline.nvim/README.md	/^### Custom functions$/;"	S	section:Table of Contents""Feature overview
Custom fuzzy completion	plugged/fzf/README.md	/^#### Custom fuzzy completion$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Custom statusline	plugged/fzf.vim/README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Customization	plugged/fzf.vim/README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Customization	plugged/telescope.nvim/README.md	/^## Customization$/;"	s	chapter:telescope.nvim
Customization Docs	plugged/nord-vim/CHANGELOG.md	/^###### Customization Docs$/;"	u	section:0.12.0""Features
Customize	plugged/nvim-spectre/README.md	/^## Customize$/;"	s	chapter:nvim-spectre
Customize options	plugged/vim-easy-replace/README.md	/^## Customize options$/;"	s	chapter:vim-easy-replace
Cw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Cx	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Cy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Cycle	plugged/fzf/src/options.go	/^	Cycle       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
D	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
D	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> D           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
D	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> D           :call b:buffergator_catalog_viewer.delete_targ/;"	m
D$	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
D0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
D5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
D6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
D7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
D8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
D9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
DA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
DB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
DD	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
DEBUG	plugged/fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v	package:algo	typeref:typename:bool
DEFAULT	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:r
DEFAULT_TIMEOUT	plugged/fzf/test/test_go.rb	/^DEFAULT_TIMEOUT = 10$/;"	C
DESCRIPTION	plugged/fzf/man/man1/fzf-tmux.1	/^.SH DESCRIPTION$/;"	s	title:fzf-tmux
DESCRIPTION	plugged/fzf/man/man1/fzf.1	/^.SH DESCRIPTION$/;"	s	title:fzf
DG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
DK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
DO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
DR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
DS	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
DT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
DV	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
DW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
DX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
DZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
D_	plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Da	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Dae	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Dark	plugged/github-nvim-theme/README.md	/^#### Dark$/;"	t	subsection:📺 Screenshot""Theme Styles
Dark	plugged/onedark.nvim/README.md	/^### Dark$/;"	S	section:Styles
Dark	plugged/onedarkpro.nvim/README.md	/^### Dark$/;"	S	section:OneDarkPro.nvim"":camera: Screenshots
Dark	plugged/onedarkpro.nvim/README.md	/^#### Dark$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Color guide
Dark Default	plugged/github-nvim-theme/README.md	/^#### Dark Default$/;"	t	subsection:📺 Screenshot""Theme Styles
Dark256	plugged/fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
DarkBg	plugged/fzf/src/tui/tui.go	/^	DarkBg       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Darker	plugged/onedark.nvim/README.md	/^### Darker$/;"	S	section:Styles
Day	plugged/tokyonight.nvim/README.md	/^## Day$/;"	s	chapter:🏙 Tokyo Night
Db	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Dc	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Dd	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
De	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Dee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Deep	plugged/onedark.nvim/README.md	/^### Deep$/;"	S	section:Styles
Default	plugged/github-nvim-theme/README.md	/^#### Default$/;"	t	subsection:📺 Screenshot""Syntax Styles
Default Keymaps	plugged/JABS.nvim/README.md	/^### Default Keymaps$/;"	S	section:JABS.nvim""Configuration
Default Mappings	plugged/telescope.nvim/README.md	/^## Default Mappings$/;"	s	chapter:telescope.nvim
Default actions	plugged/nvim-tree.lua/README.md	/^### Default actions$/;"	S	section:A File Explorer For Neovim Written In Lua""KeyBindings
Default configuration	plugged/onedarkpro.nvim/README.md	/^### Default configuration$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Default values	plugged/nvim-ts-autotag/README.md	/^## Default values$/;"	s	chapter:nvim-ts-autotag
Default16	plugged/fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
Definition Scope	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Definition Scope$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Locals
Del	plugged/fzf/src/tui/tui.go	/^	Del$/;"	c	package:tui
Delimiter	plugged/fzf/src/options.go	/^	Delimiter   Delimiter$/;"	m	struct:fzf.Options	typeref:typename:Delimiter
Delimiter	plugged/fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	s	package:fzf
Demo	plugged/fzf/README.md	/^#### Demo$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Demo	plugged/vim-easy-replace/README.md	/^## Demo$/;"	s	chapter:vim-easy-replace
Dependencies	plugged/fzf.vim/README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Dependencies	plugged/tagbar/README.md	/^## Dependencies$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Describe the bug	plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Describe the bug$/;"	s
Details	plugged/vim-buffergator/README.md	/^Details$/;"	c
Developers	plugged/telescope.nvim/developers.md	/^# Developers$/;"	c
Developers	plugged/vim-devicons/README.md	/^Developers$/;"	s
Dg	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Di	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Dim	plugged/fzf/src/tui/dummy.go	/^	Dim       = Attr(1 << 1)$/;"	c	package:tui
Dim	plugged/fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c	package:tui
Dimmed	plugged/github-nvim-theme/README.md	/^#### Dimmed$/;"	t	subsection:📺 Screenshot""Theme Styles
Disable While Zoomed	plugged/vim-tmux-navigator/README.md	/^##### Disable While Zoomed$/;"	T	subsubsection:Vim Tmux Navigator""Configuration""Custom Key Bindings""Vim
Disabled	plugged/fzf/src/tui/tui.go	/^	Disabled     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Disabling lualine	plugged/lualine.nvim/README.md	/^### Disabling lualine$/;"	S	section:lualine.nvim""Usage and customization
Dj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Dl	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Dle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Dm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Dme	plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
Dn	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Do	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.13.0""Bug Fixes
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.3.0""Bug Fixes
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.4.0""Improvements
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.5.0""Bug Fixes
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.7.0""Tasks
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S	section:0.8.0""Improvements
Documentation with treesitter	plugged/telescope.nvim/CONTRIBUTING.md	/^## Documentation with treesitter$/;"	s	chapter:Contributing
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Double	plugged/fzf/src/tui/tui.go	/^	Double bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
DoubleClick	plugged/fzf/src/tui/tui.go	/^	DoubleClick$/;"	c	package:tui
Down	plugged/fzf/src/tui/tui.go	/^	Down   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Down	plugged/fzf/src/tui/tui.go	/^	Down$/;"	c	package:tui
Ds	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Dse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Dt	plugged/coc.nvim/build/index.js	/^`),_.log(`Sending notification '${P.method}'.`,z)}else to("send-notification",P)}function Dt(P,z/;"	f
DumpMemorySnapshot	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function DumpMemorySnapshot(strSavePath, strExtraFileName, nMaxRescords, strRootObjectName/;"	f
DumpMemorySnapshotCompared	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function DumpMemorySnapshotCompared(strSavePath, strExtraFileName, nMaxRescords, cResultBe/;"	f
DumpMemorySnapshotComparedFile	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function DumpMemorySnapshotComparedFile(strSavePath, strExtraFileName, nMaxRescords, strRe/;"	f
DumpMemorySnapshotSingleObject	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function DumpMemorySnapshotSingleObject(strSavePath, strExtraFileName, nMaxRescords, strOb/;"	f
DurWithin	plugged/fzf/src/util/util.go	/^func DurWithin($/;"	f	package:util	typeref:typename:time.Duration
Dv	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2b000
Dw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Dy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Dynamic reloading of the list	plugged/fzf/ADVANCED.md	/^Dynamic reloading of the list$/;"	s	chapter:Advanced fzf examples
E	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
E	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> E           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
E$	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
E0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
E1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
E5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
E6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
E7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
E8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
EB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
EBe	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
EC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ED	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
EG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
EJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
EK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
EL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
EMPTY_ITER	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local EMPTY_ITER = function() end$/;"	f
END	plugged/lualine.nvim/scripts/nvim_isolated_conf.sh	/^lua << END$/;"	h
ENVIRONMENT	plugged/fzf/man/man1/fzf.1	/^.SH ENVIRONMENT VARIABLES$/;"	s	title:fzf
EOF	plugged/fzf/install	/^  cat << EOF$/;"	h
EOF	plugged/fzf/install	/^  cat > "$src" << EOF$/;"	h
EOF	plugged/fzf/install	/^  fish << EOF$/;"	h
EOF	plugged/fzf/uninstall	/^  cat << EOF$/;"	h
ES	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
ESC	plugged/fzf/src/tui/tui.go	/^	ESC$/;"	c	package:tui
EV	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
EX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
EXIT	plugged/fzf/man/man1/fzf.1	/^.SH EXIT STATUS$/;"	s	title:fzf
EXTENDED	plugged/fzf/man/man1/fzf.1	/^.SH EXTENDED SEARCH MODE$/;"	s	title:fzf
E_	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Eae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
EasyReplaceCword	plugged/vim-easy-replace/plugin/easy_replace.vim	/^com! EasyReplaceCword call s:replaceWord(s:get_current_word(), {})$/;"	c
EasyReplaceCwordInVisual	plugged/vim-easy-replace/plugin/easy_replace.vim	/^com! EasyReplaceCwordInVisual call s:replaceWord(s:get_current_word(), s:get_line())$/;"	c
EasyReplaceWord	plugged/vim-easy-replace/plugin/easy_replace.vim	/^com! EasyReplaceWord call s:replaceWord('', {})$/;"	c
EasyReplaceWordInVisual	plugged/vim-easy-replace/plugin/easy_replace.vim	/^com! EasyReplaceWordInVisual call s:replaceWord('', s:get_line())$/;"	c
Eb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ed	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ee	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Eee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ef	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Eg	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ei	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Ej	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
El	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Ele	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Em	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Eme	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Emmet	plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	plugged/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:d/;"	c
EmptyMerger	plugged/fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v	package:fzf
EmptyTheme	plugged/fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
En	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Enable update on insert	plugged/nvim-ts-autotag/README.md	/^### Enable update on insert$/;"	S	section:nvim-ts-autotag""Setup
Enclose	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
Enclose	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.TcellWindow	typeref:typename:bool
Enclose	plugged/fzf/src/tui/tui.go	/^	Enclose(y int, x int) bool$/;"	n	interface:tui.Window	typeref:typename:bool
End	plugged/fzf/src/algo/algo.go	/^	End   int$/;"	m	struct:algo.Result	typeref:typename:int
End	plugged/fzf/src/tui/tui.go	/^	End$/;"	c	package:tui
Enforcement	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Guidelines	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Enforcement Guidelines$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Guidelines	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Enforcement Guidelines$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Responsibilities	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Enforcement Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Responsibilities	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Enforcement Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Entry Maker	plugged/telescope.nvim/developers.md	/^### Entry Maker$/;"	S	section:Developers""Guide to your first Picker
Environment variables	plugged/fzf/README.md	/^#### Environment variables$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Environment variables / Aliases	plugged/fzf/README.md	/^#### Environment variables \/ Aliases$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
EqualMatch	plugged/fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []ru/;"	f	package:algo	typeref:typename:(Result, *[]int)
Er	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Erase	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f	struct:tui.LightWindow
Erase	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f	struct:tui.TcellWindow
Erase	plugged/fzf/src/tui/tui.go	/^	Erase()$/;"	n	interface:tui.Window
Ese	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Et	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ev	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Event	plugged/fzf/src/tui/tui.go	/^type Event struct {$/;"	s	package:tui
EventBox	plugged/fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	s	package:util
EventType	plugged/fzf/src/tui/tui.go	/^type EventType int$/;"	t	package:tui	typeref:typename:int
EventType	plugged/fzf/src/util/eventbox.go	/^type EventType int$/;"	t	package:util	typeref:typename:int
Events	plugged/fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t	package:util	typeref:typename:map[EventType]interface{}
EvtClose	plugged/fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c	package:util
EvtHeader	plugged/fzf/src/constants.go	/^	EvtHeader$/;"	c	package:fzf
EvtQuit	plugged/fzf/src/constants.go	/^	EvtQuit$/;"	c	package:fzf
EvtReadFin	plugged/fzf/src/constants.go	/^	EvtReadFin$/;"	c	package:fzf
EvtReadFin	plugged/fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c	package:util
EvtReadNew	plugged/fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
EvtReadNew	plugged/fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c	package:util	typeref:typename:EventType
EvtReady	plugged/fzf/src/constants.go	/^	EvtReady$/;"	c	package:fzf
EvtSearchFin	plugged/fzf/src/constants.go	/^	EvtSearchFin$/;"	c	package:fzf
EvtSearchFin	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c	package:util
EvtSearchNew	plugged/fzf/src/constants.go	/^	EvtSearchNew$/;"	c	package:fzf
EvtSearchNew	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c	package:util
EvtSearchProgress	plugged/fzf/src/constants.go	/^	EvtSearchProgress$/;"	c	package:fzf
EvtSearchProgress	plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c	package:util
Ew	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ex	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
ExactMatchNaive	plugged/fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern/;"	f	package:algo	typeref:typename:(Result, *[]int)
Example vim configuration	plugged/coc.nvim/Readme.md	/^## Example vim configuration$/;"	s
Example with Packer	plugged/indent-blankline.nvim/README.md	/^#### Example with Packer$/;"	t	section:Indent Blankline""Install
Example with Plug	plugged/indent-blankline.nvim/README.md	/^#### Example with Plug$/;"	t	section:Indent Blankline""Install
Example: Advanced ripgrep integration	plugged/fzf.vim/README.md	/^#### Example: Advanced ripgrep integration$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Customizing `Files` command	plugged/fzf.vim/README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `Rg` command with preview window	plugged/fzf.vim/README.md	/^#### Example: `Rg` command with preview window$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	plugged/fzf.vim/README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Examples	plugged/fzf/README-VIM.md	/^#### Examples$/;"	t	subsection:FZF Vim integration""`:FZF[!]`""Configuration
Examples	plugged/fzf/README.md	/^Examples$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Examples	plugged/vim-startify/CONTRIBUTING.md	/^Examples$/;"	s	chapter:CONTRIBUTING
ExecCommand	plugged/fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommand	plugged/fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	plugged/fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	plugged/fzf/src/util/util_windows.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
Executing external programs	plugged/fzf/README.md	/^### Executing external programs$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Exit0	plugged/fzf/src/options.go	/^	Exit0       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Expect	plugged/fzf/src/options.go	/^	Expect      map[tui.Event]string$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event]string
Expected behaviour	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### Expected behaviour$/;"	S
Experimental features	plugged/vim-cool/README.md	/^# Experimental features$/;"	c
Explanation of `g:fzf_colors`	plugged/fzf/README-VIM.md	/^##### Explanation of `g:fzf_colors`$/;"	T	subsubsection:FZF Vim integration""`:FZF[!]`""Configuration""Examples
Extended	plugged/fzf/src/options.go	/^	Extended    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Extensions	plugged/lualine.nvim/README.md	/^### Extensions$/;"	S	section:lualine.nvim""Usage and customization
Extensions	plugged/telescope.nvim/README.md	/^## Extensions$/;"	s	chapter:telescope.nvim
Extra features	plugged/nvim-treesitter/README.md	/^# Extra features$/;"	c
Ey	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
F	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw
F	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
F	plugged/plenary.nvim/lua/plenary/curl.lua	/^local F = require "plenary.functional"$/;"	f
F	plugged/plenary.nvim/lua/plenary/job.lua	/^local F = require "plenary.functional"$/;"	f
F	plugged/plenary.nvim/lua/plenary/path.lua	/^local F = require "plenary.functional"$/;"	f
F	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local F = require "plenary.functional"$/;"	f
F$	plugged/coc.nvim/build/index.js	/^`),a=s.line-n.line-o.length+1,l=o[o.length-1],c=r.line-a;if(r.line!=s.line)return{line:c,charact/;"	f
F0	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
F1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
F1	plugged/fzf/src/tui/tui.go	/^	F1$/;"	c	package:tui
F10	plugged/fzf/src/tui/tui.go	/^	F10$/;"	c	package:tui
F11	plugged/fzf/src/tui/tui.go	/^	F11$/;"	c	package:tui
F12	plugged/fzf/src/tui/tui.go	/^	F12$/;"	c	package:tui
F2	plugged/fzf/src/tui/tui.go	/^	F2$/;"	c	package:tui
F3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
F3	plugged/fzf/src/tui/tui.go	/^	F3$/;"	c	package:tui
F4	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	v
F4	plugged/fzf/src/tui/tui.go	/^	F4$/;"	c	package:tui
F5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
F5	plugged/fzf/src/tui/tui.go	/^	F5$/;"	c	package:tui
F6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
F6	plugged/fzf/src/tui/tui.go	/^	F6$/;"	c	package:tui
F7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
F7	plugged/fzf/src/tui/tui.go	/^	F7$/;"	c	package:tui
F8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
F8	plugged/fzf/src/tui/tui.go	/^	F8$/;"	c	package:tui
F9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
F9	plugged/fzf/src/tui/tui.go	/^	F9$/;"	c	package:tui
FAQ	plugged/bufferline.nvim/README.md	/^## FAQ$/;"	s	chapter:Table of Contents
FAQ	plugged/nvim-spectre/README.md	/^## FAQ$/;"	s	chapter:nvim-spectre
FAQ	plugged/vim-commentary/README.markdown	/^## FAQ$/;"	s	chapter:commentary.vim
FB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
FC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
FD	plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
FG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
FH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
FIELD	plugged/fzf/man/man1/fzf.1	/^.SH FIELD INDEX EXPRESSION$/;"	s	title:fzf
FILE	plugged/fzf/test/test_go.rb	/^FILE = File.expand_path(__FILE__)$/;"	C
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FILTER	plugged/gitsigns.nvim/Makefile	/^FILTER=.*$/;"	m
FK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
FM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
FNe	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
FOO	plugged/nvim-treesitter/tests/indent/c/preproc_func.c	/^#define FOO(/;"	d	file:
FP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
FQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
FT	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
FV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
FW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
FX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
FZF	plugged/fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
FZF	plugged/fzf/test/test_go.rb	/^FZF = "FZF_DEFAULT_OPTS= FZF_DEFAULT_COMMAND= #{BASE}\/bin\/fzf"$/;"	C
FZF Vim integration	plugged/fzf/README-VIM.md	/^FZF Vim integration$/;"	c
F_	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Fb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Fc	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Fd	plugged/coc.nvim/build/index.js	/^`)}function nae(r,e,t){return r=r.trim(),r=e?rae(r,t):tae(r,t),r}function Fd(r){return r+`$/;"	f
Fe	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Feature `X` does not work for `{language}`...	plugged/nvim-treesitter/README.md	/^#### Feature `X` does not work for `{language}`...$/;"	t	chapter:Troubleshooting
Feature overview	plugged/bufferline.nvim/README.md	/^## Feature overview$/;"	s	chapter:Table of Contents
Features	plugged/auto-pairs/README.md	/^Features$/;"	s	chapter:Auto Pairs
Features	plugged/bufferline.nvim/README.md	/^## Features$/;"	s	chapter:Table of Contents
Features	plugged/github-nvim-theme/README.md	/^## Features$/;"	s
Features	plugged/gitsigns.nvim/README.md	/^## Features$/;"	s	chapter:gitsigns.nvim
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.1.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.10.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.11.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.12.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.13.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.14.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.15.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.16.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.17.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.18.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.4.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.6.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.7.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.8.0
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s	chapter:0.9.0
Features	plugged/nord-vim/README.md	/^## Features$/;"	s
Features	plugged/nvim-tree.lua/README.md	/^## Features$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Features	plugged/onedark.nvim/README.md	/^## Features$/;"	s
Features	plugged/vim-devicons/README.md	/^Features$/;"	s
Features	plugged/vim-easy-replace/README.md	/^## Features$/;"	s	chapter:vim-easy-replace
Features and Stuff	plugged/aquarium-vim/README.md	/^## Features and Stuff$/;"	s
Fee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Feedback	plugged/coc.nvim/Readme.md	/^## Feedback$/;"	s
Fg	plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
Fg	plugged/fzf/src/tui/tui.go	/^	Fg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Fg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Fi	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
File Pickers	plugged/telescope.nvim/README.md	/^### File Pickers$/;"	S	section:telescope.nvim""Pickers
FileWord	plugged/fzf/src/options.go	/^	FileWord    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Files and directories	plugged/fzf/README.md	/^#### Files and directories$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Files listed in `git status`	plugged/fzf/ADVANCED.md	/^### Files listed in `git status`$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Fill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
Fill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
Fill	plugged/fzf/src/tui/tui.go	/^	Fill(text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
FillContinue	plugged/fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c	package:tui	typeref:type:FillReturn
FillNextLine	plugged/fzf/src/tui/tui.go	/^	FillNextLine$/;"	c	package:tui
FillReturn	plugged/fzf/src/tui/tui.go	/^type FillReturn int$/;"	t	package:tui	typeref:typename:int
FillSuspend	plugged/fzf/src/tui/tui.go	/^	FillSuspend$/;"	c	package:tui
Filter	plugged/fzf/src/options.go	/^	Filter      *string$/;"	m	struct:fzf.Options	typeref:typename:*string
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Finders	plugged/telescope.nvim/developers.md	/^### Finders$/;"	S	section:Developers""Technical
FinishFill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f	struct:tui.LightWindow
FinishFill	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f	struct:tui.TcellWindow
FinishFill	plugged/fzf/src/tui/tui.go	/^	FinishFill()$/;"	n	interface:tui.Window
First Picker	plugged/telescope.nvim/developers.md	/^### First Picker$/;"	S	section:Developers""Guide to your first Picker
Fish shell	plugged/fzf/README.md	/^#### Fish shell$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Fixes	plugged/github-nvim-theme/CHANGELOG.md	/^### Fixes$/;"	S	section:Changelog""[unreleased]
Fixes	plugged/github-nvim-theme/CHANGELOG.md	/^### Fixes$/;"	S	section:Changelog""[v0.0.2] - 15 Sep 2021
Fixes and improvements	plugged/fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	S	section:CHANGELOG""0.10.2
Fj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Fly Mode	plugged/auto-pairs/README.md	/^Fly Mode$/;"	s	chapter:Auto Pairs
Fme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Fo	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Foe	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Folding	plugged/nvim-treesitter/README.md	/^#### Folding$/;"	t	chapter:Available modules
Folds	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Folds$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Foo	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^class Foo {$/;"	c	file:
Foo	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^class Foo {$/;"	c	file:
Foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^class Foo:$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^enum Foo {$/;"	g
Foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^impl Foo {$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^struct Foo;$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^struct Foo {$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^impl Bar for Foo {$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^struct Foo;$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^impl<T> Write for Foo<T>$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^struct Foo<T>(T);$/;"	s
For a specific range	plugged/vim-easy-replace/README.md	/^#### For a specific range$/;"	t	subsection:vim-easy-replace""Installation""Usage
FormatDateTimeNow	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function FormatDateTimeNow()$/;"	f
Formatting	plugged/onedarkpro.nvim/README.md	/^#### Formatting$/;"	t	subsection:OneDarkPro.nvim"":wrench: Configuration""Configuring options
Fs	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Fse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ft	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Fu	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
FullscreenRenderer	plugged/fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	s	package:tui
Function	plugged/github-nvim-theme/lua/github-theme/theme.lua	/^    Function = {fg = c.syntax.func, style = config.function_style}, -- function name (also: meth/;"	f
Function	plugged/material.nvim/lua/material/theme.lua	/^		syntax.Function =		{ fg = material.blue } -- normal function names$/;"	f	unknown:syntax
Function	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^		Function = { fg = c.yellow, style = config.styles.functions }, -- function name (also: methods/;"	f
Function	plugged/tokyonight.nvim/lua/tokyonight/theme.lua	/^    Function = { fg = c.blue, style = config.functionStyle }, -- function name (also: methods fo/;"	f
Functions	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Functions$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Future work	plugged/JABS.nvim/README.md	/^## Future work$/;"	s	chapter:JABS.nvim
Fuzzy	plugged/fzf/src/options.go	/^	Fuzzy       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Fuzzy completion for bash and zsh	plugged/fzf/README.md	/^Fuzzy completion for bash and zsh$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
FuzzyAlgo	plugged/fzf/src/options.go	/^	FuzzyAlgo   algo.Algo$/;"	m	struct:fzf.Options	typeref:typename:algo.Algo
FuzzyMatchV1	plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []/;"	f	package:algo	typeref:typename:(Result, *[]int)
FuzzyMatchV2	plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern [/;"	f	package:algo	typeref:typename:(Result, *[]int)
Fw	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Fx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
Fy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
G	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
G	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
G$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
G1	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
G4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
G5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
G6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
G7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
G8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
G9	plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
GA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
GB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
GC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
GD	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
GG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
GI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
GM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
GN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
GO	plugged/fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	plugged/fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
GP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
GQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
GR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
GT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
GV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
GX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
GZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ga	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Gae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Gb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Gc	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Gd	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Gee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
General	plugged/vim-easy-replace/README.md	/^#### General$/;"	t	subsection:vim-easy-replace""Installation""Usage
Generate on your local machine	plugged/telescope.nvim/CONTRIBUTING.md	/^## Generate on your local machine$/;"	s	chapter:Contributing
Generating docs	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## Generating docs$/;"	s
Generating fzf color theme from Vim color schemes	plugged/fzf/ADVANCED.md	/^### Generating fzf color theme from Vim color schemes$/;"	S	section:Advanced fzf examples""Color themes
Get	plugged/fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
Get	plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Get	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f	struct:util.Chars	typeref:typename:rune
Get Icon	plugged/nvim-web-devicons/README.md	/^### Get Icon$/;"	S	section:Nvim-web-devicons""Usage
Get all icons	plugged/nvim-web-devicons/README.md	/^### Get all icons$/;"	S	section:Nvim-web-devicons""Usage
Get icon and color code	plugged/nvim-web-devicons/README.md	/^### Get icon and color code$/;"	S	section:Nvim-web-devicons""Usage
GetBladeIndent	plugged/vim-blade/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetChar	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event { return Event{} }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	plugged/fzf/src/tui/tui.go	/^	GetChar() Event$/;"	n	interface:tui.Renderer	typeref:typename:Event
GetGitBranch	init.vim	/^augroup GetGitBranch$/;"	a
GetOriginalToStringResult	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function GetOriginalToStringResult(cObject)$/;"	f
Getting Started	plugged/aquarium-vim/README.md	/^## Getting Started$/;"	s
Getting Started	plugged/nord-vim/README.md	/^## Getting Started$/;"	s
Getting Started	plugged/telescope.nvim/README.md	/^## Getting Started$/;"	s	chapter:telescope.nvim
Getting started	plugged/plenary.nvim/README.md	/^#### Getting started$/;"	t	subsection:plenary.nvim""Modules""plenary.async
Gf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Gg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Gie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Git Pickers	plugged/telescope.nvim/README.md	/^### Git Pickers$/;"	S	section:telescope.nvim""Pickers
Gj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Global options	plugged/fzf.vim/README.md	/^### Global options$/;"	S	section:fzf :heart: vim""Customization
Global options supported by `fzf#wrap`	plugged/fzf/README-VIM.md	/^### Global options supported by `fzf#wrap`$/;"	S	section:FZF Vim integration""`fzf#wrap`
Gme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Goals	plugged/plenary.nvim/POPUP.md	/^## Goals$/;"	s	chapter:Popup tracking
Goe	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Gpe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Gq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Gr	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Group commands	plugged/bufferline.nvim/README.md	/^#### Group commands$/;"	t	subsection:Table of Contents""Feature overview""Groups (Experimental)
Groups (Experimental)	plugged/bufferline.nvim/README.md	/^### Groups (Experimental)$/;"	S	section:Table of Contents""Feature overview
Gs	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Gt	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Gu	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Guide to your first Picker	plugged/telescope.nvim/developers.md	/^## Guide to your first Picker$/;"	s	chapter:Developers
Gutentags	plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
Gutter	plugged/fzf/src/tui/tui.go	/^	Gutter       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Gx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Gy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Gz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
H	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
H$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
H$e	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
H0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
H4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
H5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
H6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
H8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
H9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
HC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
HD	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
HG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
HH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
HI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
HJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
HL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
HN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
HO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
HP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
HT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
HV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
HX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
HasBg	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) HasBg() bool {$/;"	f	struct:tui.ColorPair	typeref:typename:bool
HasFullscreenRenderer	plugged/fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HasFullscreenRenderer	plugged/fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
Hb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Hc	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Hd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Header	plugged/fzf/src/options.go	/^	Header      []string$/;"	m	struct:fzf.Options	typeref:typename:[]string
Header	plugged/fzf/src/tui/tui.go	/^	Header       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
HeaderFirst	plugged/fzf/src/options.go	/^	HeaderFirst bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HeaderLines	plugged/fzf/src/options.go	/^	HeaderLines int$/;"	m	struct:fzf.Options	typeref:typename:int
Height	plugged/fzf/src/options.go	/^	Height      sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:sizeSpec
Height	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Height	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Height	plugged/fzf/src/tui/tui.go	/^	Height() int$/;"	n	interface:tui.Window	typeref:typename:int
Helper functions	plugged/onedarkpro.nvim/README.md	/^### Helper functions$/;"	S	section:OneDarkPro.nvim"":gift: Extras
Hex Colors Codes	plugged/uwu.vim/README.md	/^## Hex Colors Codes $/;"	s	chapter:PackerNvim
HexToColor	plugged/fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f	package:tui	typeref:typename:Color
Hf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Hg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Hide statusline	plugged/fzf.vim/README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Hide statusline	plugged/fzf/README-VIM.md	/^### Hide statusline$/;"	S	section:FZF Vim integration""Tips
Hie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Highlight	plugged/nvcode-color-schemes.vim/generate	/^class Highlight$/;"	c
Highlight	plugged/nvim-treesitter/README.md	/^#### Highlight$/;"	t	chapter:Available modules
Highlights	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Highlights$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
History	plugged/fzf/src/history.go	/^type History struct {$/;"	s	package:fzf
History	plugged/fzf/src/options.go	/^	History     *History$/;"	m	struct:fzf.Options	typeref:typename:*History
Hj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Hm	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Hme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Hoe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Home	plugged/fzf/src/tui/tui.go	/^	Home$/;"	c	package:tui
Host names	plugged/fzf/README.md	/^#### Host names$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
How This Work	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">How This Work<\/h2>$/;"	i
How minimal? One command and one window minimal!	plugged/JABS.nvim/README.md	/^## How minimal? One command and one window minimal!$/;"	s	chapter:JABS.nvim
How should this be manually tested?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### How should this be manually tested?$/;"	t
How to contribute	plugged/vim-devicons/CONTRIBUTING.md	/^## How to contribute$/;"	s	chapter:Contributing Guide
How to make a PR to Aquarium Theme	plugged/aquarium-vim/CONTRIBUTING.md	/^### How to make a PR to Aquarium Theme$/;"	S	chapter:The Aquarium Contributing Guide <!-- omit in toc -->
How to reproduce the problem	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### How to reproduce the problem$/;"	S
How?	plugged/vim-gutentags/README.md	/^## How?$/;"	s	chapter:Gutentags
Hscroll	plugged/fzf/src/options.go	/^	Hscroll     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HscrollOff	plugged/fzf/src/options.go	/^	HscrollOff  int$/;"	m	struct:fzf.Options	typeref:typename:int
Hse	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Hu	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
Hue	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Hw	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Hy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Hz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Hze	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
I	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
I	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
I	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
I	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> I           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https://github.com/nvim-treesitter/nvim-treesitter/issues/194)	plugged/nvim-treesitter/README.md	/^#### I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https:\/\/git/;"	t	chapter:Troubleshooting
I experience weird highlighting issues similar to [#78](https://github.com/nvim-treesitter/nvim-treesitter/issues/78)	plugged/nvim-treesitter/README.md	/^#### I experience weird highlighting issues similar to [#78](https:\/\/github.com\/nvim-treesitt/;"	t	chapter:Troubleshooting
I get `Error detected while processing .../plugin/nvim-treesitter.vim` every time I open Neovim	plugged/nvim-treesitter/README.md	/^#### I get `Error detected while processing ...\/plugin\/nvim-treesitter.vim` every time I open /;"	t	chapter:Troubleshooting
I get `module 'vim.treesitter.query' not found`	plugged/nvim-treesitter/README.md	/^#### I get `module 'vim.treesitter.query' not found`$/;"	t	chapter:Troubleshooting
I run into errors like `module 'nvim-treesitter.configs' not found` at startup	plugged/nvim-treesitter/README.md	/^#### I run into errors like `module 'nvim-treesitter.configs' not found` at startup$/;"	t	chapter:Troubleshooting
I want to use Git instead of curl for downloading the parsers	plugged/nvim-treesitter/README.md	/^#### I want to use Git instead of curl for downloading the parsers$/;"	t	chapter:Troubleshooting
I want to use a HTTP proxy for downloading the parsers	plugged/nvim-treesitter/README.md	/^#### I want to use a HTTP proxy for downloading the parsers$/;"	t	chapter:Troubleshooting
I$	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
I0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
I16	plugged/fzf/src/util/slab.go	/^	I16 []int16$/;"	m	struct:util.Slab	typeref:typename:[]int16
I32	plugged/fzf/src/util/slab.go	/^	I32 []int32$/;"	m	struct:util.Slab	typeref:typename:[]int32
I3e	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
I4	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	v
I5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
I6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
I7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
I8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
I9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
IC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ID	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
ID	plugged/vim-bbye/Makefile	/^ID := 4664$/;"	m
IF	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
IG	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
IN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
INIT_LUAROCKS	plugged/gitsigns.nvim/Makefile	/^INIT_LUAROCKS := eval $$(luarocks --lua-version=5.1 path) &&$/;"	m
IO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
IP	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
IR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
IV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
IZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
I_	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Iae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Ib	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ic	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Ie	plugged/coc.nvim/build/index.js	/^${JSON.stringify(P.error,void 0,4)}`):n.error("Received response message without id. No further /;"	f
Iee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
If	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Ig	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Iie	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
Ik	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Il	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ile	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Ime	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Implement every feature in [vim-fugitive](https://github.com/tpope/vim-fugitive)	plugged/gitsigns.nvim/README.md	/^### Implement every feature in [vim-fugitive](https:\/\/github.com\/tpope\/vim-fugitive)$/;"	S	section:gitsigns.nvim""Non-Goals
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.10
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.3
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.4
Improvements	plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.5
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.10.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.11.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.12.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.13.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.14.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.16.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.18.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.2.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.3.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.4.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.5.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.6.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.7.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.8.0
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s	chapter:0.9.0
In	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Incremental selection	plugged/nvim-treesitter/README.md	/^#### Incremental selection$/;"	t	chapter:Available modules
Indent Blankline	plugged/indent-blankline.nvim/README.md	/^# Indent Blankline$/;"	c
Indent line	plugged/ayu-vim/README.md	/^# Indent line$/;"	c
IndentBlanklineAutogroup	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^augroup IndentBlanklineAutogroup$/;"	a
IndentBlanklineDisable	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^command! -bang IndentBlanklineDisable call s:try('lua require("indent_blankline.commands").disab/;"	c
IndentBlanklineEnable	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^command! -bang IndentBlanklineEnable call s:try('lua require("indent_blankline.commands").enable/;"	c
IndentBlanklineRefresh	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^command! -bang IndentBlanklineRefresh call s:try('lua require("indent_blankline.commands").refre/;"	c
IndentBlanklineRefreshScroll	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^command! -bang IndentBlanklineRefreshScroll call s:try('lua require("indent_blankline.commands")/;"	c
IndentBlanklineToggle	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^command! -bang IndentBlanklineToggle call s:try('lua require("indent_blankline.commands").toggle/;"	c
Indentation	plugged/nvim-treesitter/README.md	/^#### Indentation$/;"	t	chapter:Available modules
Indents	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Indents$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Index	plugged/fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f	struct:fzf.Item	typeref:typename:int32
Index	plugged/fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f	struct:fzf.Result	typeref:typename:int32
Index	plugged/fzf/src/util/chars.go	/^	Index int32$/;"	m	struct:util.Chars	typeref:typename:int32
Info	plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Info$/;"	s
Info	plugged/fzf/src/tui/tui.go	/^	Info         ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
InfoStyle	plugged/fzf/src/options.go	/^	InfoStyle   infoStyle$/;"	m	struct:fzf.Options	typeref:typename:infoStyle
Init	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()             {}$/;"	f	unknown:tui.FullscreenRenderer
Init	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f	struct:tui.LightRenderer
Init	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f	unknown:tui.FullscreenRenderer
Init	plugged/fzf/src/tui/tui.go	/^	Init()$/;"	n	interface:tui.Renderer
Injections	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Injections$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Input	plugged/fzf/src/terminal.go	/^func (t *Terminal) Input() (bool, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []rune)
Input	plugged/fzf/src/tui/tui.go	/^	Input        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Insert	plugged/fzf/src/tui/tui.go	/^	Insert$/;"	c	package:tui
Inspiration	plugged/onedarkpro.nvim/README.md	/^### Inspiration$/;"	S	section:OneDarkPro.nvim"":clap: Credits
Install	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Install<\/h2>$/;"	i
Install	plugged/indent-blankline.nvim/README.md	/^## Install$/;"	s	chapter:Indent Blankline
Install	plugged/nvim-tree.lua/README.md	/^## Install$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Installation	plugged/JABS.nvim/README.md	/^## Installation$/;"	s	chapter:JABS.nvim
Installation	plugged/auto-pairs/README.md	/^Installation$/;"	s	chapter:Auto Pairs
Installation	plugged/ayu-vim/README.md	/^# Installation$/;"	c
Installation	plugged/bufferline.nvim/README.md	/^## Installation$/;"	s	chapter:Table of Contents
Installation	plugged/fzf.vim/README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
Installation	plugged/fzf/README-VIM.md	/^Installation$/;"	s	chapter:FZF Vim integration
Installation	plugged/fzf/README.md	/^Installation$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Installation	plugged/github-nvim-theme/README.md	/^## Installation$/;"	s
Installation	plugged/gitsigns.nvim/README.md	/^## Installation$/;"	s	chapter:gitsigns.nvim
Installation	plugged/lualine.nvim/README.md	/^## Installation$/;"	s	chapter:lualine.nvim
Installation	plugged/nvim-spectre/README.md	/^## Installation$/;"	s	chapter:nvim-spectre
Installation	plugged/nvim-treesitter-textobjects/README.md	/^## Installation$/;"	s	chapter:nvim-treesitter-textobjects
Installation	plugged/nvim-treesitter/README.md	/^## Installation$/;"	s	chapter:Quickstart
Installation	plugged/nvim-web-devicons/README.md	/^## Installation$/;"	s	chapter:Nvim-web-devicons
Installation	plugged/onedark.nvim/README.md	/^## Installation$/;"	s
Installation	plugged/plenary.nvim/README.md	/^## Installation$/;"	s	chapter:plenary.nvim
Installation	plugged/tagbar/README.md	/^## Installation$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Installation	plugged/telescope.nvim/README.md	/^### Installation$/;"	S	section:telescope.nvim""Getting Started
Installation	plugged/toggleterm.nvim/README.md	/^## Installation$/;"	s
Installation	plugged/uwu.vim/README.md	/^## Installation $/;"	s
Installation	plugged/vim-blade/README.md	/^Installation$/;"	s	chapter:vim-blade
Installation	plugged/vim-closetag/README.md	/^#### Installation$/;"	t	chapter:closetag.vim
Installation	plugged/vim-commentary/README.markdown	/^## Installation$/;"	s	chapter:commentary.vim
Installation	plugged/vim-cool/README.md	/^## Installation$/;"	s	chapter:Experimental features
Installation	plugged/vim-devicons/README.md	/^Installation$/;"	s
Installation	plugged/vim-easy-replace/README.md	/^## Installation$/;"	s	chapter:vim-easy-replace
Installation	plugged/vim-surround/README.markdown	/^## Installation$/;"	s	chapter:surround.vim
Installation	plugged/vim-tmux-navigator/README.md	/^Installation$/;"	s	chapter:Vim Tmux Navigator
Installation & Activation Docs	plugged/nord-vim/CHANGELOG.md	/^###### Installation & Activation Docs$/;"	u	section:0.12.0""Features
Installation and Documentation	plugged/vim-startify/README.md	/^## Installation and Documentation$/;"	s
Installing	plugged/nvcode-color-schemes.vim/README.md	/^## Installing$/;"	s	chapter:NVCode Colorscheme
Installing	plugged/vim-bbye/README.md	/^Installing$/;"	s	chapter:Bbye (Buffer Bye) for Vim
Int	plugged/fzf/src/tui/tui.go	/^func (t EventType) Int() int {$/;"	f	type:tui.EventType	typeref:typename:int
Integration with other plugins	plugged/vim-devicons/DEVELOPER.md	/^#### Integration with other plugins$/;"	t	subsection:API
Integrations	plugged/gitsigns.nvim/README.md	/^## Integrations$/;"	s	chapter:gitsigns.nvim
Introduction	plugged/fzf/ADVANCED.md	/^Introduction$/;"	s	chapter:Advanced fzf examples
Introduction	plugged/telescope.nvim/developers.md	/^## Introduction$/;"	s	chapter:Developers
Invalid	plugged/fzf/src/tui/tui.go	/^	Invalid$/;"	c	package:tui
Io	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Ip	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Ir	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Is	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
IsBytes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f	struct:util.Chars	typeref:typename:bool
IsDefault	plugged/fzf/src/tui/tui.go	/^func (c Color) IsDefault() bool {$/;"	f	type:tui.Color	typeref:typename:bool
IsEmpty	plugged/fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f	struct:fzf.Pattern	typeref:typename:bool
IsFull	plugged/fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
IsLightRendererSupported	plugged/fzf/src/tui/light_unix.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsLightRendererSupported	plugged/fzf/src/tui/light_windows.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsTty	plugged/fzf/src/util/util.go	/^func IsTty() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	plugged/fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	plugged/fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
It Doesn't Work in tmate	plugged/vim-tmux-navigator/README.md	/^### It Doesn't Work in tmate$/;"	S	section:Vim Tmux Navigator""Troubleshooting
It Still Doesn't Work!!!	plugged/vim-tmux-navigator/README.md	/^### It Still Doesn't Work!!!$/;"	S	section:Vim Tmux Navigator""Troubleshooting
It doesn't work in Vim's `terminal` mode	plugged/vim-tmux-navigator/README.md	/^### It doesn't work in Vim's `terminal` mode$/;"	S	section:Vim Tmux Navigator""Troubleshooting
Italic	plugged/fzf/src/tui/dummy.go	/^	Italic    = Attr(1 << 2)$/;"	c	package:tui
Italic	plugged/fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrItalic)$/;"	c	package:tui
Italic	plugged/github-nvim-theme/README.md	/^#### Italic$/;"	t	subsection:📺 Screenshot""Syntax Styles
Item	plugged/fzf/src/item.go	/^type Item struct {$/;"	s	package:fzf
ItemBuilder	plugged/fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t	package:fzf	typeref:typename:func(*Item, []byte) bool
Iw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ix	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Iy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
J	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
J$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
J0	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
J1	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
J3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
J4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
J5	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
J6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
J7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
J8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
J9	plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
JA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
JABS.nvim	plugged/JABS.nvim/README.md	/^# JABS.nvim$/;"	c
JABSOpen	plugged/JABS.nvim/plugin/jabs.vim	/^command JABSOpen execute "lua require'jabs'.open()"$/;"	c
JB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
JC	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
JD	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
JG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
JL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
JM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
JN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
JO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
JP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
JPe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
JQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
JR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
JT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
JV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
JWe	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
JZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ja	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Jae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Jb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Jc	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Jd	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Jf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Jg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Jie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Jj	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Jk	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Jm	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Jme	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Jn	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Joe	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Jp	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	c
Jp	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Jq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Jqe	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Jr	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Js	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Jse	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Ju	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
JumpLabels	plugged/fzf/src/options.go	/^	JumpLabels  string$/;"	m	struct:fzf.Options	typeref:typename:string
Jy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Jz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
K	init.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
K	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:to
K	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
K	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
K$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
K4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
K5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
K6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
K7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
K8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
K9	plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
KB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
KC	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
KD	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
KEY/EVENT	plugged/fzf/man/man1/fzf.1	/^.SH KEY\/EVENT BINDINGS$/;"	s	title:fzf
KG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
KH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
KI	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
KN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
KP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
KQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
KT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
KV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
KZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ka	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Kae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Kb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Kc	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Kd	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Kee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
KeepRight	plugged/fzf/src/options.go	/^	KeepRight   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Key	plugged/fzf/src/tui/tui.go	/^func Key(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
Key bindings for command-line	plugged/fzf/README.md	/^Key bindings for command-line$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Key bindings for git objects	plugged/fzf/ADVANCED.md	/^Key bindings for git objects$/;"	s	chapter:Advanced fzf examples
KeyBindings	plugged/nvim-tree.lua/README.md	/^## KeyBindings$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Keymap	plugged/fzf/src/options.go	/^	Keymap      map[tui.Event][]action$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event][]action
Keywords	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Keywords$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Kf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Kg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Ki	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
Kie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
KillCommand	plugged/fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
KillCommand	plugged/fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
Kj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Kme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Kn	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Known Issues	plugged/auto-pairs/README.md	/^Known Issues$/;"	s	chapter:Auto Pairs
Koe	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Kq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Kr	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ks	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Kt	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Ku	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Kx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Ky	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
L	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
L	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
L	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
L	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
L$	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line)-1,o=0;if(t.end.line==r.line){let a=b0(t)&&s==0,l=a?t.end/;"	f
L0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
L3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
L5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
L6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
L7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
L8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
L9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
LA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
LAYOUT	plugged/fzf/man/man1/fzf-tmux.1	/^.SH LAYOUT OPTIONS$/;"	s	title:fzf-tmux
LC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
LD	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
LG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
LICENSE	plugged/fzf/man/man1/fzf.1	/^.SH LICENSE$/;"	s	title:fzf
LJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
LK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
LL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
LO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LSP error indicators	plugged/bufferline.nvim/README.md	/^#### LSP error indicators$/;"	t	section:Table of Contents""Features
LSP indicators	plugged/bufferline.nvim/README.md	/^### LSP indicators$/;"	S	section:Table of Contents""Feature overview
LV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
LW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
LX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Lae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Landing Page	plugged/nord-vim/CHANGELOG.md	/^###### Landing Page$/;"	u	section:0.12.0""Features
Landing Page Docs	plugged/nord-vim/CHANGELOG.md	/^###### Landing Page Docs$/;"	u	section:0.12.0""Features
Language Support	plugged/nord-vim/CHANGELOG.md	/^### Language Support$/;"	S	section:0.4.0""Improvements
Language Support	plugged/nord-vim/CHANGELOG.md	/^### Language Support$/;"	S	section:0.5.0""Improvements
Language parsers	plugged/nvim-treesitter/README.md	/^## Language parsers$/;"	s	chapter:Quickstart
Layout	plugged/fzf/README.md	/^#### Layout$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Layout	plugged/fzf/src/options.go	/^	Layout      layoutType$/;"	m	struct:fzf.Options	typeref:typename:layoutType
Layout (display)	plugged/telescope.nvim/README.md	/^## Layout (display)$/;"	s	chapter:telescope.nvim
Lb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Lc	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Le	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
LeadingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) LeadingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Lee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Left	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Left	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Left	plugged/fzf/src/tui/tui.go	/^	Left   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Left	plugged/fzf/src/tui/tui.go	/^	Left$/;"	c	package:tui
Left	plugged/fzf/src/tui/tui.go	/^	Left() int$/;"	n	interface:tui.Window	typeref:typename:int
LeftClick	plugged/fzf/src/tui/tui.go	/^	LeftClick$/;"	c	package:tui
Len	plugged/fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f	type:fzf.ByOrder	typeref:typename:int
Len	plugged/fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f	type:fzf.ByRelevance	typeref:typename:int
Len	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:int
Len	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f	type:fzf.byTimeOrder	typeref:typename:int
Length	plugged/fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f	struct:fzf.Merger	typeref:typename:int
Length	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f	struct:util.Chars	typeref:typename:int
Less	plugged/fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f	type:fzf.ByOrder	typeref:typename:bool
Less	plugged/fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevance	typeref:typename:bool
Less	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:bool
Less	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f	type:fzf.byTimeOrder	typeref:typename:bool
Lg	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Li	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
License	plugged/auto-pairs/README.md	/^License$/;"	s	chapter:Auto Pairs
License	plugged/coc.nvim/Readme.md	/^## License$/;"	s
License	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">License<\/h2>$/;"	i
License	plugged/fzf.vim/README.md	/^License$/;"	s	chapter:fzf :heart: vim
License	plugged/fzf/BUILD.md	/^License$/;"	s	chapter:Building fzf
License	plugged/github-nvim-theme/CONTRIBUTING.md	/^## License$/;"	s	chapter:Contributing to github-nvim-theme
License	plugged/onedark.nvim/README.md	/^## License$/;"	s
License	plugged/tagbar/README.md	/^## License$/;"	s	chapter:Tagbar: a class outline viewer for Vim
License	plugged/vim-bbye/README.md	/^License$/;"	s	chapter:Bbye (Buffer Bye) for Vim
License	plugged/vim-commentary/README.markdown	/^## License$/;"	s	chapter:commentary.vim
License	plugged/vim-devicons/README.md	/^License$/;"	s
License	plugged/vim-easy-replace/README.md	/^## License$/;"	s	chapter:vim-easy-replace
License	plugged/vim-surround/README.markdown	/^## License$/;"	s	chapter:surround.vim
Light	plugged/github-nvim-theme/README.md	/^#### Light$/;"	t	subsection:📺 Screenshot""Theme Styles
Light	plugged/onedarkpro.nvim/README.md	/^### Light$/;"	S	section:OneDarkPro.nvim"":camera: Screenshots
Light	plugged/onedarkpro.nvim/README.md	/^#### Light$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Color guide
Light Default	plugged/github-nvim-theme/README.md	/^#### Light Default$/;"	t	subsection:📺 Screenshot""Theme Styles
Light256	plugged/fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
LightRenderer	plugged/fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	s	package:tui
LightWindow	plugged/fzf/src/tui/light.go	/^type LightWindow struct {$/;"	s	package:tui
List of Neovim Features Required:	plugged/plenary.nvim/POPUP.md	/^## List of Neovim Features Required:$/;"	s	chapter:Popup tracking
Lists Picker	plugged/telescope.nvim/README.md	/^### Lists Picker$/;"	S	section:telescope.nvim""Pickers
Lle	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Lm	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Lme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Ln	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Loading extensions	plugged/telescope.nvim/README.md	/^### Loading extensions$/;"	S	section:telescope.nvim""Extensions
Locals	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Locals$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Log tailing	plugged/fzf/ADVANCED.md	/^Log tailing$/;"	s	chapter:Advanced fzf examples
Lookup	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Loop	plugged/fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f	struct:fzf.Matcher
Loop	plugged/fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f	struct:fzf.Terminal
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
Lpe	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
Ls	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Lse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Lt	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Lu	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Lua expressions as lualine component	plugged/lualine.nvim/README.md	/^##### Lua expressions as lualine component$/;"	T	subsubsection:lualine.nvim""Usage and customization""Changing components in lualine sections""Vim's statusline items as lualine component
Lua functions as lualine component	plugged/lualine.nvim/README.md	/^##### Lua functions as lualine component$/;"	T	subsubsection:lualine.nvim""Usage and customization""Changing components in lualine sections""Custom components
Lualine Support	plugged/github-nvim-theme/README.md	/^### Lualine Support$/;"	S	section:Configuration
Lv	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
Lw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Lx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Ly	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
M	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
M	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
M$	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
M0	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
M2e	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
M5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
M6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
M7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
M8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
M9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
MA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
MAKEFILE	plugged/fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
MD	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
MG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
MM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
MP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
MR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
MS	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
MU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
MV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
MX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
MY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
MacOs	plugged/nvim-spectre/README.md	/^### MacOs$/;"	S	section:nvim-spectre""Installation
Mae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
MakeBorderStyle	plugged/fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakeSlab	plugged/fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f	package:util	typeref:typename:*Slab
MakeTransparentBorder	plugged/fzf/src/tui/tui.go	/^func MakeTransparentBorder() BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
Making `undercurls` work properly in **Tmux**	plugged/github-nvim-theme/README.md	/^### Making `undercurls` work properly in **Tmux**$/;"	S	section:Configuration
Making `undercurls` work properly in **Tmux**	plugged/tokyonight.nvim/README.md	/^### Making `undercurls` work properly in **Tmux**$/;"	S	section:🏙 Tokyo Night""⚙️ Configuration
Manual (with vim's built-in packages function)	plugged/vim-easy-replace/README.md	/^### Manual (with vim's built-in packages function)$/;"	S	section:vim-easy-replace""Installation
Mappings	plugged/fzf.vim/README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Margin	plugged/fzf/src/options.go	/^	Margin      [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Marker	plugged/fzf/src/options.go	/^	Marker      string$/;"	m	struct:fzf.Options	typeref:typename:string
Marks	plugged/which-key.nvim/README.md	/^### Marks$/;"	S	section:💥 Which Key""🔥 Plugins
Match	plugged/fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
Match	plugged/fzf/src/tui/tui.go	/^	Match        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
MatchItem	plugged/fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:(*Result, []Offset, *[]int)
MatchRequest	plugged/fzf/src/matcher.go	/^type MatchRequest struct {$/;"	s	package:fzf
Matcher	plugged/fzf/src/matcher.go	/^type Matcher struct {$/;"	s	package:fzf
Max	plugged/fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Max16	plugged/fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f	package:util	typeref:typename:int16
Max32	plugged/fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MaxX	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	plugged/fzf/src/tui/tui.go	/^	MaxX() int$/;"	n	interface:tui.Renderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	plugged/fzf/src/tui/tui.go	/^	MaxY() int$/;"	n	interface:tui.Renderer	typeref:typename:int
Mb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Mc	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Md	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Me	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Media	plugged/telescope.nvim/README.md	/^## Media$/;"	s	chapter:telescope.nvim
Mee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Merge	plugged/fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	plugged/fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Merge(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeAttr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeAttr(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeNonDefault	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeNonDefault(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
Merger	plugged/fzf/src/merger.go	/^type Merger struct {$/;"	s	package:fzf
Mg	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
Min	plugged/fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Min32	plugged/fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MinHeight	plugged/fzf/src/options.go	/^	MinHeight   int$/;"	m	struct:fzf.Options	typeref:typename:int
Minimal config	plugged/github-nvim-theme/README.md	/^### Minimal config$/;"	S	section:📺 Screenshot
Minimal config to reproduce the issue	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### Minimal config to reproduce the issue$/;"	S
Minor improvements/fixes	plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.0
Minor improvements/fixes	plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.1
Misc	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Misc$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Mj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Mme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Mn	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Mod	plugged/fzf/src/tui/tui.go	/^	Mod    bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Modes	plugged/aquarium-vim/README.md	/^### Modes$/;"	S	section:Features and Stuff
Modules	plugged/nvim-treesitter/README.md	/^## Modules$/;"	s	chapter:Quickstart
Modules	plugged/plenary.nvim/README.md	/^## Modules$/;"	s	chapter:plenary.nvim
More examples	plugged/telescope.nvim/developers.md	/^### More examples$/;"	S	section:Developers""Guide to your first Picker
Motivation	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/feature_request.md	/^### Motivation$/;"	S
Mouse	plugged/fzf/src/options.go	/^	Mouse       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Mouse	plugged/fzf/src/tui/tui.go	/^	Mouse$/;"	c	package:tui
Mouse actions	plugged/bufferline.nvim/README.md	/^### Mouse actions$/;"	S	section:Table of Contents""Feature overview
MouseEvent	plugged/fzf/src/tui/tui.go	/^	MouseEvent *MouseEvent$/;"	m	struct:tui.Event	typeref:typename:*MouseEvent
MouseEvent	plugged/fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	s	package:tui
Move	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f	struct:tui.LightWindow
Move	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f	struct:tui.TcellWindow
Move	plugged/fzf/src/tui/tui.go	/^	Move(y int, x int)$/;"	n	interface:tui.Window
MoveAndClear	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.LightWindow
MoveAndClear	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.TcellWindow
MoveAndClear	plugged/fzf/src/tui/tui.go	/^	MoveAndClear(y int, x int)$/;"	n	interface:tui.Window
Mp	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Mq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Ms	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Mse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Mt	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Mu	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Multi	plugged/fzf/src/options.go	/^	Multi       int$/;"	m	struct:fzf.Options	typeref:typename:int
Multibyte Pairs	plugged/auto-pairs/README.md	/^Multibyte Pairs$/;"	s	chapter:Auto Pairs
Multiple orientations	plugged/toggleterm.nvim/README.md	/^### Multiple orientations$/;"	S
Mv	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
Mw	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Mx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
My	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Mze	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
N	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> N 'j '[v:searchforward].'N'$/;"	m
N$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
N0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
N4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
N6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
N9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
NAME	plugged/fzf/man/man1/fzf-tmux.1	/^.SH NAME$/;"	s	title:fzf-tmux
NAME	plugged/fzf/man/man1/fzf.1	/^.SH NAME$/;"	s	title:fzf
NAME	plugged/vim-bbye/Makefile	/^NAME := bbye$/;"	m
NB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
ND	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
NEOVIM_BRANCH	plugged/gitsigns.nvim/Makefile	/^NEOVIM_BRANCH := master$/;"	m
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
NH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
NI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
NM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
NO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
NONE	plugged/vim-buffergator/autoload/buffergator.vim	/^augroup NONE$/;"	a
NONE	plugged/vim-buffergator/plugin/buffergator.vim	/^augroup NONE$/;"	a
NP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
NPe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
NR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
NV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
NVCode Colorscheme	plugged/nvcode-color-schemes.vim/README.md	/^# NVCode Colorscheme$/;"	c
NW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
NX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
NY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
N_	plugged/telescope.nvim/data/options/options.lua	/^N_=function(s) -- luacheck: ignore 211 (currently unused)$/;"	f
Na	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Nae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Nb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Nc	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
Nd	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Ne	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Nee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Neovim	plugged/nord-vim/CHANGELOG.md	/^#### Neovim$/;"	t	subsection:0.6.0""Improvements""UI
Neovim LSP Pickers	plugged/telescope.nvim/README.md	/^### Neovim LSP Pickers$/;"	S	section:telescope.nvim""Pickers
Nesting	plugged/vim-tmux-navigator/README.md	/^#### Nesting$/;"	t	subsection:Vim Tmux Navigator""Configuration""Additional Customization
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.0
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.1
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.10
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.11
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.12
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.13
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.3
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.4
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.5
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.6
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.7
New features	plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.9
NewAtomicBool	plugged/fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f	package:util	typeref:typename:*AtomicBool
NewChunkCache	plugged/fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f	package:fzf	typeref:typename:ChunkCache
NewChunkList	plugged/fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f	package:fzf	typeref:typename:*ChunkList
NewColorAttr	plugged/fzf/src/tui/tui.go	/^func NewColorAttr() ColorAttr {$/;"	f	package:tui	typeref:typename:ColorAttr
NewColorPair	plugged/fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color, attr Attr) ColorPair {$/;"	f	package:tui	typeref:typename:ColorPair
NewEventBox	plugged/fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f	package:util	typeref:typename:*EventBox
NewFullscreenRenderer	plugged/fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f	package:tui	typeref:typename:Renderer
NewHistory	plugged/fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f	package:fzf	typeref:typename:(*History, error)
NewLightRenderer	plugged/fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit b/;"	f	package:tui	typeref:typename:Renderer
NewMatcher	plugged/fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f	package:fzf	typeref:typename:*Matcher
NewMerger	plugged/fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
NewReader	plugged/fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool, wait bool) *Rea/;"	f	package:fzf	typeref:typename:*Reader
NewTerminal	plugged/fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f	package:fzf	typeref:typename:*Terminal
NewWindow	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, preview bool, border/;"	f	struct:tui.LightRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	plugged/fzf/src/tui/tui.go	/^	NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Wind/;"	n	interface:tui.Renderer	typeref:typename:Window
Ng	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
Night	plugged/tokyonight.nvim/README.md	/^## Night$/;"	s	chapter:🏙 Tokyo Night
Nj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Nje	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Nme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Nn	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
NoColorTheme	plugged/fzf/src/tui/tui.go	/^func NoColorTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
Non-Goals	plugged/gitsigns.nvim/README.md	/^## Non-Goals$/;"	s	chapter:gitsigns.nvim
None	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:r
NordPalette	plugged/nord-vim/colors/nord.vim	/^function! NordPalette() abort$/;"	f
Normal	plugged/github-nvim-theme/README.md	/^#### Normal$/;"	t	subsection:📺 Screenshot""Syntax Styles
Normalize	plugged/fzf/src/options.go	/^	Normalize   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
NormalizeRunes	plugged/fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f	package:algo	typeref:typename:[]rune
Note: If the file structure display is wrong	plugged/tagbar/README.md	/^## Note: If the file structure display is wrong$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Notice	plugged/nvim-tree.lua/README.md	/^## Notice$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Notices	plugged/plenary.nvim/POPUP.md	/^## Notices$/;"	s	chapter:Popup tracking
Notices	plugged/toggleterm.nvim/README.md	/^## Notices$/;"	s
Np	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Npe	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
Ns	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Nse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Nt	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Nth	plugged/fzf/src/options.go	/^	Nth         []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Nu	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Numbers	plugged/bufferline.nvim/README.md	/^### Numbers$/;"	S	section:Table of Contents""Feature overview
Nv	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Nvim-web-devicons	plugged/nvim-web-devicons/README.md	/^# Nvim-web-devicons$/;"	c
NvimTreesitter	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^augroup NvimTreesitter$/;"	a
Nw	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
Ny	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
O	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
O	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> O           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
O	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> O           :call b:buffergator_catalog_viewer.visit_targe/;"	m
O$	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
O0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
O1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
O5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
O6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
O7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
O8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
O9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
OBe	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
OC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
OCe	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
OD	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
OFPHP	funcs.vim	/^function! OFPHP()$/;"	f
OG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
OH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
OI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
OJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
OK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
OPTIONS	plugged/fzf/man/man1/fzf.1	/^.SH OPTIONS$/;"	s	title:fzf
OR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
OS	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
OT	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
OV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
O_	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Oae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ob	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Oc	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
OceanicNext	plugged/lualine.nvim/THEMES.md	/^### OceanicNext$/;"	S	chapter:Available themes
Oe	plugged/coc.nvim/build/index.js	/^`),_.log(`Sending request '${P.method} - (${P.id})'.`,z)}else to("send-request",P)}function Oe(P/;"	f
Oee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Of	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Offset	plugged/fzf/src/result.go	/^type Offset [2]int32$/;"	t	package:fzf	typeref:typename:[2]int32
Og	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Oi	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
Oi	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2d200
Oj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Ol	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ole	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Ome	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Once	plugged/fzf/src/util/util.go	/^func Once(nextResponse bool) func() bool {$/;"	f	package:util	typeref:typename:func() bool
OneDarkPro.nvim	plugged/onedarkpro.nvim/README.md	/^# OneDarkPro.nvim$/;"	c
Onedark options	plugged/onedark.nvim/README.md	/^### Onedark options$/;"	S	section:Configuration
Oneshot Job	plugged/telescope.nvim/developers.md	/^### Oneshot Job$/;"	S	section:Developers""Guide to your first Picker
Oo	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Open multiple terminals side-by-side	plugged/toggleterm.nvim/README.md	/^### Open multiple terminals side-by-side$/;"	S	section:Roadmap
Optional Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Optional Info$/;"	t
Optional dependencies	plugged/telescope.nvim/README.md	/^### Optional dependencies$/;"	S	section:telescope.nvim""Getting Started
Options	plugged/auto-pairs/README.md	/^Options$/;"	s	chapter:Auto Pairs
Options	plugged/fzf/README.md	/^#### Options$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Options	plugged/fzf/src/options.go	/^type Options struct {$/;"	s	package:fzf
Options	plugged/vim-closetag/README.md	/^#### Options$/;"	t	chapter:closetag.vim
Options simplification	plugged/lualine.nvim/BREAKING_CHANGES.md	/^### Options simplification$/;"	S
Oq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Ordering groups	plugged/bufferline.nvim/README.md	/^#### Ordering groups$/;"	t	subsection:Table of Contents""Feature overview""Groups (Experimental)
Os	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
OsName	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    name as OsName$/;"	x	nameref:unknown:name
Ose	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ot	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Other	plugged/aquarium-vim/README.md	/^## Other$/;"	s
Ou	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Our Pledge	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Pledge	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Responsibilities	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
OutputFilteredResult	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function OutputFilteredResult(strFilePath, strFilter, bIncludeFilter, bOutputFile)$/;"	f
OutputMemorySnapshot	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function OutputMemorySnapshot(strSavePath, strExtraFileName, nMaxRescords, strRootObjectNa/;"	f
OutputMemorySnapshotSingleObject	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^local function OutputMemorySnapshotSingleObject(strSavePath, strExtraFileName, nMaxRescords, cDu/;"	f
Override default values	plugged/nvim-ts-autotag/README.md	/^### Override default values$/;"	S	section:nvim-ts-autotag""Default values
Overriding actions/action_set	plugged/telescope.nvim/developers.md	/^#### Overriding actions\/action_set$/;"	t	subsection:Developers""Technical""Actions
Ow	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ox	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Oy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
P	plugged/lualine.nvim/lua/tests/helpers.lua	/^M.P = function(t)$/;"	f	unknown:M
P$	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
P0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
P5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
P6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
P7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
P8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
PC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
PD	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
PF	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
PG	plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
PHPCbf	funcs.vim	/^command PHPCbf call PHPCbf()$/;"	c
PHPCbf	funcs.vim	/^function! PHPCbf()$/;"	f
PJ_ROOT	plugged/gitsigns.nvim/Makefile	/^export PJ_ROOT=$(PWD)$/;"	m
PK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
PL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
PM	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
PN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
PO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PS	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
PS1	plugged/fzf/test/test_go.rb	/^PS1= PROMPT_COMMAND= HISTFILE= HISTSIZE=100$/;"	C
PT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
PV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
PW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
PWe	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
PX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
P_	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Pa	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
PackerNvim	plugged/uwu.vim/README.md	/^# PackerNvim $/;"	c
Padding	plugged/fzf/src/options.go	/^	Padding     [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Pae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Pallete	plugged/aquarium-vim/README.md	/^### Pallete$/;"	S	section:Features and Stuff
PaperColor	plugged/lualine.nvim/THEMES.md	/^### PaperColor$/;"	S	chapter:Available themes
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseOptions	plugged/fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
ParseRange	plugged/fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f	package:fzf	typeref:typename:(Range, bool)
Parser configurations	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Parser configurations$/;"	s	chapter:Contributing to `nvim-treesitter`
PassMerger	plugged/fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
Pattern	plugged/fzf/src/pattern.go	/^type Pattern struct {$/;"	s	package:fzf
Pause	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)        {}$/;"	f	unknown:tui.FullscreenRenderer
Pause	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f	struct:tui.LightRenderer
Pause	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f	unknown:tui.FullscreenRenderer
Pause	plugged/fzf/src/tui/tui.go	/^	Pause(clear bool)$/;"	n	interface:tui.Renderer
Pb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Pc	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Pe	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Pee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Peek	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f	struct:util.EventBox	typeref:typename:bool
Performance	plugged/fzf/README.md	/^### Performance$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Performance compared to other plugins	plugged/lualine.nvim/README.md	/^## Performance compared to other plugins$/;"	s	chapter:lualine.nvim
Pg	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
PgDn	plugged/fzf/src/tui/tui.go	/^	PgDn$/;"	c	package:tui
PgUp	plugged/fzf/src/tui/tui.go	/^	PgUp$/;"	c	package:tui
Phony	plugged/fzf/src/options.go	/^	Phony       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Picker	plugged/telescope.nvim/developers.md	/^### Picker$/;"	S	section:Developers""Technical
Pickers	plugged/telescope.nvim/README.md	/^## Pickers$/;"	s	chapter:telescope.nvim
Pje	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Pl	plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
Ple	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Pledge	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
PlenaryBustedDirectory	plugged/plenary.nvim/plugin/plenary.vim	/^command! -nargs=+ -complete=file PlenaryBustedDirectory$/;"	c
PlenaryBustedFile	plugged/plenary.nvim/plugin/plenary.vim	/^command! -nargs=1 -complete=file PlenaryBustedFile$/;"	c
Plugin Support	plugged/github-nvim-theme/README.md	/^## Plugin Support$/;"	s
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S	section:0.3.0""Improvements
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S	section:0.4.0""Improvements
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S	section:0.6.0""Features
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S	section:0.7.0""Features
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S	section:0.8.0""Features
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t	subsection:0.11.0""Features""Syntax
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t	subsection:0.11.0""Features""UI
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t	subsection:0.11.0""Improvements""UI
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t	subsection:0.9.0""Features""Syntax
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t	subsection:0.9.0""Features""UI
Plugin Support	plugged/tokyonight.nvim/README.md	/^### Plugin Support$/;"	S	section:🏙 Tokyo Night""✨ Features
Plugins Supported	plugged/onedark.nvim/README.md	/^### Plugins Supported$/;"	S	section:Features
Plugins using this	plugged/plenary.nvim/README.md	/^#### Plugins using this$/;"	t	subsection:plenary.nvim""Modules""plenary.async
Pme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Pn	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Po	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Pointer	plugged/fzf/src/options.go	/^	Pointer     string$/;"	m	struct:fzf.Options	typeref:typename:string
Popup tracking	plugged/plenary.nvim/POPUP.md	/^# Popup tracking$/;"	c
Popup window support	plugged/fzf/ADVANCED.md	/^#### Popup window support$/;"	t	subsection:Advanced fzf examples""Screen Layout""`fzf-tmux`
Pp	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
Pragma	plugged/nord-vim/CHANGELOG.md	/^#### Pragma$/;"	t	subsection:0.11.0""Features""Syntax
Pre-Alpha	plugged/plenary.nvim/CHANGELOG.md	/^## Pre-Alpha$/;"	s
Pre-Processor	plugged/nord-vim/CHANGELOG.md	/^#### Pre-Processor$/;"	t	subsection:0.11.0""Features""Syntax
PrefixMatch	plugged/fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Prepend	plugged/fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f	struct:util.Chars
Prerequisites	plugged/fzf/BUILD.md	/^### Prerequisites$/;"	S	section:Building fzf""Build instructions
Preserve Zoom	plugged/vim-tmux-navigator/README.md	/^##### Preserve Zoom$/;"	T	subsubsection:Vim Tmux Navigator""Configuration""Custom Key Bindings""Vim
Presets	plugged/which-key.nvim/README.md	/^### Presets$/;"	S	section:💥 Which Key""🔥 Plugins
Preview	plugged/fzf/src/options.go	/^	Preview     previewOpts$/;"	m	struct:fzf.Options	typeref:typename:previewOpts
Preview	plugged/gitsigns.nvim/README.md	/^## Preview$/;"	s	chapter:gitsigns.nvim
Preview window	plugged/fzf.vim/README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Global options
Preview window	plugged/fzf/README.md	/^### Preview window$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
PreviewBg	plugged/fzf/src/tui/tui.go	/^	PreviewBg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
PreviewFg	plugged/fzf/src/tui/tui.go	/^	PreviewFg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Previewer	plugged/telescope.nvim/developers.md	/^### Previewer$/;"	S	section:Developers""Guide to your first Picker
Previewers	plugged/telescope.nvim/README.md	/^## Previewers$/;"	s	chapter:telescope.nvim
Previewers	plugged/telescope.nvim/developers.md	/^### Previewers$/;"	S	section:Developers""Technical
Print	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f	struct:tui.LightWindow
Print	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f	struct:tui.TcellWindow
Print	plugged/fzf/src/tui/tui.go	/^	Print(text string)$/;"	n	interface:tui.Window
PrintQuery	plugged/fzf/src/options.go	/^	PrintQuery  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
PrintSep	plugged/fzf/src/options.go	/^	PrintSep    string$/;"	m	struct:fzf.Options	typeref:typename:string
Printer	plugged/fzf/src/options.go	/^	Printer     func(string)$/;"	m	struct:fzf.Options	typeref:typename:func(string)
Problem / Steps to reproduce	plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Problem \/ Steps to reproduce$/;"	s
Process IDs	plugged/fzf/README.md	/^#### Process IDs$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Progress	plugged/plenary.nvim/POPUP.md	/^## Progress$/;"	s	chapter:Popup tracking
Project Initialization	plugged/nord-vim/CHANGELOG.md	/^# Project Initialization$/;"	c
Promotion	plugged/vim-devicons/README.md	/^### Promotion$/;"	S	section:Contributing
Prompt	plugged/fzf/src/options.go	/^	Prompt      string$/;"	m	struct:fzf.Options	typeref:typename:string
Prompt	plugged/fzf/src/tui/tui.go	/^	Prompt       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Pros	plugged/fzf/README.md	/^Pros$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Protect	plugged/fzf/src/protector/protector.go	/^func Protect() {$/;"	f	package:protector
Protect	plugged/fzf/src/protector/protector_openbsd.go	/^func Protect() {$/;"	f	package:protector
Ps	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Pse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Public Methods	plugged/vim-devicons/DEVELOPER.md	/^#### Public Methods$/;"	t	subsection:API
Push	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f	struct:fzf.ChunkList	typeref:typename:bool
Pushing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s	chapter:Contributing
Pw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Px	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Py	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Python	plugged/onedarkpro.nvim/README.md	/^#### Python$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Comparison to VS Code's One Dark Pro
Python	plugged/onedarkpro.nvim/README.md	/^#### Python$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Dark
Python	plugged/onedarkpro.nvim/README.md	/^#### Python$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Light
Q$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Q0	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Q4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Q5	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Q6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Q8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
QB	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
QC	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
QG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
QK	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
QL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
QM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
QN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
QO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
QR	plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
QT	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
QV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
QWe	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
QY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Qa	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Qae	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Qb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Qc	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Qe	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Qf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Qg	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Qh	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Qie	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Qj	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Qk	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Qm	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Qme	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
Qoe	plugged/coc.nvim/build/index.js	/^`+r)}function Qoe(r,e){let t=new RegExp("(\\\\S(?: |  )?)((?:"+e+")+)("+h$+"(?:.*)+)$","gm");ret/;"	f
Qp	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Qpe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Qr	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Qs	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Qu	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
Query	plugged/fzf/src/options.go	/^	Query       string$/;"	m	struct:fzf.Options	typeref:typename:string
Quick Start	plugged/aquarium-vim/README.md	/^### Quick Start$/;"	S	section:Getting Started
Quick Start	plugged/coc.nvim/Readme.md	/^## Quick Start$/;"	s
Quick Start	plugged/nord-vim/README.md	/^### Quick Start$/;"	S	section:Getting Started
Quickstart	plugged/nvim-treesitter/README.md	/^# Quickstart$/;"	c
Quickstart	plugged/tagbar/README.md	/^## Quickstart$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Qx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Qy	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Qz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
R	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
R0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
R4	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	v
R5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
R6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
R7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
R8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
RC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
RCe	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
RD	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
REVISION	plugged/fzf/Makefile	/^REVISION       := $(FZF_REVISION)$/;"	m
REVISION	plugged/fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES) 2> \/dev\/null)$/;"	m
RG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
RH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
RIe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
RK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
RL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
RM	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
RN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
ROOT_DIR	plugged/fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
RQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
RR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
RU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
RV	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
RZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
R_	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Ra	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Rae	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Range	plugged/fzf/src/tokenizer.go	/^type Range struct {$/;"	s	package:fzf
Rationale	plugged/fzf.vim/README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Rb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Rd	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Re	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
React	plugged/onedarkpro.nvim/README.md	/^#### React$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Comparison to VS Code's One Dark Pro
React	plugged/onedarkpro.nvim/README.md	/^#### React$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Dark
React	plugged/onedarkpro.nvim/README.md	/^#### React$/;"	t	subsection:OneDarkPro.nvim"":camera: Screenshots""Light
Read	plugged/fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
Read	plugged/fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
ReadSource	plugged/fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f	struct:fzf.Reader
ReadZero	plugged/fzf/src/options.go	/^	ReadZero    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Reader	plugged/fzf/src/reader.go	/^type Reader struct {$/;"	s	package:fzf
Reduced initial memory footprint (#151)	plugged/fzf/CHANGELOG.md	/^#### Reduced initial memory footprint (#151)$/;"	t	subsection:CHANGELOG""0.9.5""Improvements
Reducer example	plugged/fzf.vim/README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
Ree	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Reference	plugged/github-nvim-theme/README.md	/^## Reference$/;"	s
Reference	plugged/onedark.nvim/README.md	/^## Reference$/;"	s
References	plugged/github-nvim-theme/CONTRIBUTING.md	/^## References$/;"	s	chapter:Contributing to github-nvim-theme
Refresh	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()          {}$/;"	f	unknown:tui.FullscreenRenderer
Refresh	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f	struct:tui.LightRenderer
Refresh	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f	struct:tui.LightWindow
Refresh	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f	unknown:tui.FullscreenRenderer
Refresh	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f	struct:tui.TcellWindow
Refresh	plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Renderer
Refresh	plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Window
RefreshWindows	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f	struct:tui.LightRenderer
RefreshWindows	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	plugged/fzf/src/tui/tui.go	/^	RefreshWindows(windows []Window)$/;"	n	interface:tui.Renderer
Regex Issue	plugged/nvim-spectre/README.md	/^## Regex Issue$/;"	s	chapter:nvim-spectre
Registers	plugged/which-key.nvim/README.md	/^### Registers$/;"	S	section:💥 Which Key""🔥 Plugins
Regular tab sizes	plugged/bufferline.nvim/README.md	/^### Regular tab sizes$/;"	S	section:Table of Contents""Feature overview
Related Projects	plugged/telescope.nvim/README.md	/^## Related Projects$/;"	s	chapter:telescope.nvim
Related Projects	plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related projects	plugged/fzf/README.md	/^Related projects$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Relevant Files	plugged/telescope.nvim/developers.md	/^##### Relevant Files$/;"	T	subsubsection:Developers""Technical""Actions""Overriding actions/action_set
Reloading the candidate list	plugged/fzf/README.md	/^### Reloading the candidate list$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Renderer	plugged/fzf/src/tui/tui.go	/^type Renderer interface {$/;"	i	package:tui
Replace	plugged/nvim-spectre/README.md	/^## Replace$/;"	s	chapter:nvim-spectre
Replacing Actions	plugged/telescope.nvim/developers.md	/^### Replacing Actions$/;"	S	section:Developers""Guide to your first Picker
Report bugs using Github's [issues](https://github.com/projekt0n/github-nvim-theme/issues)	plugged/github-nvim-theme/CONTRIBUTING.md	/^## Report bugs using Github's [issues](https:\/\/github.com\/projekt0n\/github-nvim-theme\/issue/;"	s	chapter:Contributing to github-nvim-theme
Repository	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Repository<\/h2>$/;"	i
Reproduce the bug	plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Reproduce the bug$/;"	s
Requested feature	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/feature_request.md	/^### Requested feature$/;"	S
Required Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Required Info$/;"	t
Requirements	plugged/JABS.nvim/README.md	/^## Requirements$/;"	s	chapter:JABS.nvim
Requirements	plugged/bufferline.nvim/README.md	/^## Requirements$/;"	s	chapter:Table of Contents
Requirements	plugged/github-nvim-theme/README.md	/^## Requirements$/;"	s
Requirements	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## Requirements$/;"	s
Requirements	plugged/gitsigns.nvim/README.md	/^## Requirements$/;"	s	chapter:gitsigns.nvim
Requirements	plugged/nvcode-color-schemes.vim/README.md	/^### Requirements $/;"	S	chapter:NVCode Colorscheme
Requirements	plugged/nvim-treesitter/README.md	/^## Requirements$/;"	s	chapter:Quickstart
Requirements	plugged/nvim-web-devicons/README.md	/^## Requirements$/;"	s	chapter:Nvim-web-devicons
Requirements	plugged/onedark.nvim/README.md	/^### Requirements$/;"	S	section:Installation
Requirements	plugged/toggleterm.nvim/README.md	/^## Requirements$/;"	s
Requirements	plugged/vim-cool/README.md	/^## Requirements$/;"	s	chapter:Experimental features
Requirements	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Requirements$/;"	t
Requirements (please check off with 'x')	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Requirements (please check off with 'x')$/;"	t
Requires	plugged/telescope.nvim/developers.md	/^### Requires$/;"	S	section:Developers""Guide to your first Picker
Reset	plugged/fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool/;"	f	struct:fzf.Matcher
Resize	plugged/fzf/src/tui/tui.go	/^	Resize$/;"	c	package:tui
Respecting `.gitignore`	plugged/fzf/README.md	/^#### Respecting `.gitignore`$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Restoring Clear Screen (C-l)	plugged/vim-tmux-navigator/README.md	/^#### Restoring Clear Screen (C-l)$/;"	t	subsection:Vim Tmux Navigator""Configuration""Additional Customization
Result	plugged/fzf/src/algo/algo.go	/^type Result struct {$/;"	s	package:algo
Result	plugged/fzf/src/result.go	/^type Result struct {$/;"	s	package:fzf
Result from CocInfo	plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Result from CocInfo$/;"	s
Resume	plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool, bool) {}$/;"	f	unknown:tui.FullscreenRenderer
Resume	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool, sigcont bool) {$/;"	f	struct:tui.LightRenderer
Resume	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool, sigcont bool) {$/;"	f	unknown:tui.FullscreenRenderer
Resume	plugged/fzf/src/tui/tui.go	/^	Resume(clear bool, sigcont bool)$/;"	n	interface:tui.Renderer
Reverse	plugged/fzf/src/tui/dummy.go	/^	Reverse   = Attr(1 << 6)$/;"	c	package:tui
Reverse	plugged/fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c	package:tui
Rg	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Right	plugged/fzf/src/tui/tui.go	/^	Right$/;"	c	package:tui
RightClick	plugged/fzf/src/tui/tui.go	/^	RightClick$/;"	c	package:tui
Ripgrep integration	plugged/fzf/ADVANCED.md	/^Ripgrep integration$/;"	s	chapter:Advanced fzf examples
Rk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Rl	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Rle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
RltvNmbr	RltvNmbrPlugin.vim	/^com! -bang				RltvNmbr	call RltvNmbr#RltvNmbrCtrl(<bang>1)$/;"	c
RltvNmbr#RltvNmbrCtrl	RltvNmbr.vim	/^fun! RltvNmbr#RltvNmbrCtrl(start)$/;"	f
RltvNmbr#RltvNmbrToggle	RltvNmbr.vim	/^fun! RltvNmbr#RltvNmbrToggle()$/;"	f
RltvNmbrAutoCmd	RltvNmbr.vim	/^   augroup RltvNmbrAutoCmd$/;"	a
Rme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Rn	plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
Ro	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Roadmap	plugged/toggleterm.nvim/README.md	/^## Roadmap$/;"	s
Rq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Rs	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Rse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Run	plugged/fzf/src/core.go	/^func Run(opts *Options, version string, revision string) {$/;"	f	package:fzf
Rune	plugged/fzf/src/tui/tui.go	/^	Rune EventType = iota$/;"	c	package:tui	typeref:type:EventType
RunesToChars	plugged/fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f	package:util	typeref:typename:Chars
RunesWidth	plugged/fzf/src/util/util.go	/^func RunesWidth(runes []rune, prefixWidth int, tabstop int, limit int) (int, int) {$/;"	f	package:util	typeref:typename:(int, int)
Rv	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Rw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ry	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Rze	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
S	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
S	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
S	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read.f
S	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:dB
S	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
S	plugged/fzf/src/tui/tui.go	/^	S      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
S	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> S           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
S	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> S             :call startify#set_batchmode('S')<cr>$/;"	m
S	plugged/vim-surround/plugin/surround.vim	/^  xmap S   <Plug>VSurround$/;"	m
S$	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
S$e	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
S0	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
S1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
S5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
S6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
S8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
SB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
SC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
SClose	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
SDelete	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#se/;"	c
SDown	plugged/fzf/src/tui/tui.go	/^	SDown$/;"	c	package:tui
SEE	plugged/fzf/man/man1/fzf.1	/^.SH SEE ALSO$/;"	s	title:fzf
SF	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
SG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
SHELL	plugged/fzf/Makefile	/^SHELL          := bash$/;"	m
SI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
SK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
SL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
SLeft	plugged/fzf/src/tui/tui.go	/^	SLeft$/;"	c	package:tui
SLoad	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SLoad   call startify#se/;"	c
SO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
SOURCES	plugged/fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
SR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
SRight	plugged/fzf/src/tui/tui.go	/^	SRight$/;"	c	package:tui
SSave	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#se/;"	c
SUp	plugged/fzf/src/tui/tui.go	/^	SUp$/;"	c	package:tui
SV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
SW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
SX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
SYNOPSIS	plugged/fzf/man/man1/fzf-tmux.1	/^.SH SYNOPSIS$/;"	s	title:fzf-tmux
SYNOPSIS	plugged/fzf/man/man1/fzf.1	/^.SH SYNOPSIS$/;"	s	title:fzf
S_	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Sae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Sb	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Sc	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Scope	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Scope	plugged/github-nvim-theme/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Scope	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Score	plugged/fzf/src/algo/algo.go	/^	Score int$/;"	m	struct:algo.Result	typeref:typename:int
Screen	plugged/gitsigns.nvim/test/gitsigns_spec.lua	/^local Screen = require('test.functional.ui.screen')$/;"	f
Screen	plugged/gitsigns.nvim/test/highlights_spec.lua	/^local Screen = require('test.functional.ui.screen')$/;"	f
Screen Layout	plugged/fzf/ADVANCED.md	/^Screen Layout$/;"	s	chapter:Advanced fzf examples
Screenshot	plugged/uwu.vim/README.md	/^## Screenshot $/;"	s	chapter:PackerNvim
Screenshot	plugged/vim-startify/README.md	/^## Screenshot$/;"	s
Screenshots	plugged/aquarium-vim/README.md	/^### Screenshots$/;"	S	section:Features and Stuff
Screenshots	plugged/github-nvim-theme/LUALINE.md	/^### Screenshots$/;"	S
Screenshots	plugged/indent-blankline.nvim/README.md	/^## Screenshots$/;"	s	chapter:Indent Blankline
Screenshots	plugged/lualine.nvim/README.md	/^## Screenshots$/;"	s	chapter:lualine.nvim
Screenshots	plugged/nvim-tree.lua/README.md	/^## Screenshots$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Screenshots	plugged/tagbar/README.md	/^## Screenshots$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Screenshots (if appropriate or helpful)	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Screenshots (if appropriate or helpful)$/;"	t
Screenshots (optional)	plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Screenshots (optional)$/;"	s
ScrollOff	plugged/fzf/src/options.go	/^	ScrollOff   int$/;"	m	struct:fzf.Options	typeref:typename:int
Se	plugged/coc.nvim/build/index.js	/^${JSON.stringify(P.error,void 0,4)}`):n.error("Received response message without id. No further /;"	f
Search	plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Search syntax	plugged/fzf/README.md	/^#### Search syntax$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
See	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Select1	plugged/fzf/src/options.go	/^	Select1     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Selected	plugged/fzf/src/tui/tui.go	/^	Selected     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Self Checks	plugged/lualine.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^### Self Checks$/;"	S
Self-Promotion	plugged/vim-commentary/README.markdown	/^## Self-Promotion$/;"	s	chapter:commentary.vim
Self-Promotion	plugged/vim-surround/README.markdown	/^## Self-Promotion$/;"	s	chapter:surround.vim
Send commands to different terminals	plugged/toggleterm.nvim/README.md	/^### Send commands to different terminals$/;"	S
Separators	plugged/lualine.nvim/README.md	/^### Separators$/;"	S	section:lualine.nvim""Usage and customization
Set	plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Set	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f	struct:util.EventBox
Set an icon	plugged/nvim-web-devicons/README.md	/^### Set an icon$/;"	S	section:Nvim-web-devicons""Usage
Set persistent size	plugged/toggleterm.nvim/README.md	/^### Set persistent size$/;"	S	section:Roadmap
Set terminal shading	plugged/toggleterm.nvim/README.md	/^### Set terminal shading$/;"	S	section:Roadmap
SetNonblock	plugged/fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetNonblock	plugged/fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
Setting a theme	plugged/lualine.nvim/README.md	/^### Setting a theme$/;"	S	section:lualine.nvim""Usage and customization
Settings	plugged/fzf/README.md	/^#### Settings$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Settings	plugged/nvim-tree.lua/README.md	/^### Settings$/;"	S	section:A File Explorer For Neovim Written In Lua""KeyBindings
Setup	plugged/indent-blankline.nvim/README.md	/^## Setup$/;"	s	chapter:Indent Blankline
Setup	plugged/nvim-tree.lua/README.md	/^## Setup$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Setup	plugged/nvim-ts-autotag/README.md	/^## Setup$/;"	s	chapter:nvim-ts-autotag
Setup	plugged/nvim-web-devicons/README.md	/^### Setup$/;"	S	section:Nvim-web-devicons""Usage
Setup	plugged/onedarkpro.nvim/README.md	/^### Setup$/;"	S	section:OneDarkPro.nvim"":wrench: Configuration
Setup	plugged/toggleterm.nvim/README.md	/^### Setup$/;"	S	section:Roadmap
Sge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Shell	plugged/fzf/test/test_go.rb	/^class Shell$/;"	c
Shortcuts	plugged/auto-pairs/README.md	/^Shortcuts$/;"	s	chapter:Auto Pairs
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Sidebar offset	plugged/bufferline.nvim/README.md	/^### Sidebar offset$/;"	S	section:Table of Contents""Feature overview
Sidebar offset	plugged/bufferline.nvim/README.md	/^#### Sidebar offset$/;"	t	section:Table of Contents""Features
Similar plugins	plugged/gitsigns.nvim/README.md	/^## Similar plugins$/;"	s	chapter:gitsigns.nvim
Simple	plugged/indent-blankline.nvim/README.md	/^### Simple$/;"	S	section:Indent Blankline""Screenshots
Simple function call	plugged/vim-devicons/DEVELOPER.md	/^##### Simple function call$/;"	T	subsubsection:API""API Examples
Sl	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
Slab	plugged/fzf/src/util/slab.go	/^type Slab struct {$/;"	s	package:util
Sle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Sm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Sme	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Sn	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
Snapshot	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f	struct:fzf.ChunkList	typeref:typename:([]*Chunk, int)
Sort	plugged/fzf/src/options.go	/^	Sort        int$/;"	m	struct:fzf.Options	typeref:typename:int
Sorters	plugged/telescope.nvim/README.md	/^## Sorters$/;"	s	chapter:telescope.nvim
Sorting	plugged/bufferline.nvim/README.md	/^### Sorting$/;"	S	section:Table of Contents""Feature overview
Sp	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Sp	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Spe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Specifying colors by theme	plugged/onedarkpro.nvim/README.md	/^#### Specifying colors by theme$/;"	t	subsection:OneDarkPro.nvim"":wrench: Configuration""Configuring colors
Specifying new colors	plugged/onedarkpro.nvim/README.md	/^#### Specifying new colors$/;"	t	subsection:OneDarkPro.nvim"":wrench: Configuration""Configuring colors
Spelling	plugged/which-key.nvim/README.md	/^### Spelling$/;"	S	section:💥 Which Key""🔥 Plugins
Spinner	plugged/fzf/src/tui/tui.go	/^	Spinner      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Sq	plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	v
Sr	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Sse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
St	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Standards	plugged/aquarium-vim/CODE_OF_CONDUCT.md	/^## Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
Start	plugged/fzf/src/algo/algo.go	/^	Start int$/;"	m	struct:algo.Result	typeref:typename:int
Start Vim with a minimal configuration	plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Start Vim with a minimal configuration$/;"	c
Startify	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane(0)$/;"	c
StartifyDebug	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
Starting fzf in a popup window	plugged/fzf/README-VIM.md	/^### Starting fzf in a popup window$/;"	S	section:FZF Vim integration""Tips
Starting lualine	plugged/lualine.nvim/README.md	/^### Starting lualine$/;"	S	section:lualine.nvim""Usage and customization
Status	plugged/github-nvim-theme/README.md	/^### Status$/;"	S
Status Line	plugged/gitsigns.nvim/README.md	/^## Status Line$/;"	s	chapter:gitsigns.nvim
Status line	plugged/vim-devicons/DEVELOPER.md	/^##### Status line$/;"	T	subsubsection:API""API Examples
Status line of terminal buffer	plugged/fzf.vim/README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
Statusline	plugged/toggleterm.nvim/README.md	/^### Statusline$/;"	S	section:Roadmap
Statusline indicator	plugged/nvim-treesitter/README.md	/^### Statusline indicator$/;"	S	chapter:Extra features
StatuslineGitBranch	init.vim	/^function! StatuslineGitBranch()$/;"	f
StatuslineMode	init.vim	/^function! StatuslineMode()$/;"	f
Storm	plugged/tokyonight.nvim/README.md	/^## Storm$/;"	s	chapter:🏙 Tokyo Night
String	plugged/fzf/src/pattern.go	/^func (t term) String() string {$/;"	f	struct:fzf.term	typeref:typename:string
String	plugged/fzf/src/terminal_test.go	/^func (item *Item) String() string {$/;"	f	unknown:fzf.Item	typeref:typename:string
String	plugged/fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f	struct:fzf.Delimiter	typeref:typename:string
String	plugged/fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f	struct:fzf.Token	typeref:typename:string
String	plugged/fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f	struct:util.Chars	typeref:typename:string
Style	plugged/fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f	unknown:tui.Color	typeref:typename:tcell.Color
Style Checks and Tests	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Style Checks and Tests$/;"	s	chapter:Contributing to `nvim-treesitter`
Styles	plugged/onedark.nvim/README.md	/^## Styles$/;"	s
Submitting a new feature	plugged/telescope.nvim/CONTRIBUTING.md	/^## Submitting a new feature$/;"	s	chapter:Contributing
SuffixMatch	plugged/fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Suggested dependencies	plugged/telescope.nvim/README.md	/^### Suggested dependencies$/;"	S	section:telescope.nvim""Getting Started
Summary	plugged/fzf/README-VIM.md	/^Summary$/;"	s	chapter:FZF Vim integration
Summary	plugged/vim-buffergator/README.md	/^Summary$/;"	c
Support for additional filetypes	plugged/tagbar/README.md	/^## Support for additional filetypes$/;"	s	chapter:Tagbar: a class outline viewer for Vim
Support the project	plugged/coc.nvim/Readme.md	/^## Support the project$/;"	s
Supported commands	plugged/fzf/README.md	/^#### Supported commands$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Supported languages	plugged/nvim-treesitter/README.md	/^# Supported languages$/;"	c
Sv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Sw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Swap	plugged/fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f	type:fzf.ByOrder
Swap	plugged/fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f	type:fzf.ByRelevance
Swap	plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f	type:fzf.ByRelevanceTac
Swap	plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f	type:fzf.byTimeOrder
Switching out of Vim Is Slow	plugged/vim-tmux-navigator/README.md	/^### Switching out of Vim Is Slow$/;"	S	section:Vim Tmux Navigator""Troubleshooting
Switching to fzf-only search mode	plugged/fzf/ADVANCED.md	/^### Switching to fzf-only search mode$/;"	S	section:Advanced fzf examples""Ripgrep integration
Sx	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
Sxe	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
Sy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Symbols	plugged/JABS.nvim/README.md	/^### Symbols$/;"	S	section:JABS.nvim""Configuration
Sync	plugged/fzf/src/options.go	/^	Sync        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.11.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.11.0""Improvements
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.15.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.16.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.17.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.18.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.18.0""Improvements
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.7.0""Improvements
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.9.0""Features
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S	section:0.9.0""Improvements
Syntax	plugged/nord-vim/CHANGELOG.md	/^#### Syntax$/;"	t	subsection:0.7.0""Features""Plugin Support
Syntax Styles	plugged/github-nvim-theme/README.md	/^### Syntax Styles$/;"	S	section:📺 Screenshot
T	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> T           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
T	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> T           :call b:buffergator_catalog_viewer.visit_targe/;"	m
T	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> T             :call startify#set_batchmode('T')<cr>$/;"	m
T0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
T5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
T6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
T7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
T8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
TA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
TC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
TD	plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
TEMPLATE	plugged/fzf/test/test_go.rb	/^TEMPLATE = DATA.read$/;"	C
TEMPNAME	plugged/fzf/test/test_go.rb	/^  TEMPNAME = '\/tmp\/output'$/;"	C	class:TestBase
TEST_COLORS	plugged/gitsigns.nvim/Makefile	/^export TEST_COLORS=1$/;"	m
TG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
TI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
TJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
TK	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
TL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
TN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
TO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
TO-DO	plugged/uwu.vim/README.md	/^## TO-DO $/;"	s	chapter:PackerNvim
TPM	plugged/vim-tmux-navigator/README.md	/^#### TPM$/;"	t	subsection:Vim Tmux Navigator""Installation""tmux
TR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
TSFuncBuiltin	plugged/material.nvim/lua/material/theme.lua	/^	    treesitter.TSFuncBuiltin =             { fg = material.cyan } -- For builtin functions: `ta/;"	f	unknown:treesitter
TSFuncBuiltin	plugged/material.nvim/lua/material/theme.lua	/^	    treesitter.TSFuncBuiltin =             { fg = material.cyan, style = 'italic' } -- For buil/;"	f	unknown:treesitter
TSFuncBuiltin	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^		TSFuncBuiltin = { fg = c.yellow }, -- For builtin functions: `table.insert` in Lua.$/;"	f
TSFunction	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^		TSFunction = { fg = c.blue, style = config.styles.functions }, -- For function (calls and defi/;"	f
TSKeywordFunction	plugged/github-nvim-theme/lua/github-theme/theme.lua	/^    TSKeywordFunction = {fg = c.syntax.keyword, style = config.function_style}, -- For keywords /;"	f
TSKeywordFunction	plugged/tokyonight.nvim/lua/tokyonight/theme.lua	/^    TSKeywordFunction = { fg = c.magenta, style = config.functionStyle }, -- For keywords used t/;"	f
TSParameter	plugged/github-nvim-theme/lua/github-theme/theme.lua	/^    TSParameter = {fg = c.syntax.func_param}, -- For parameters of a function.$/;"	f
TSParameter	plugged/material.nvim/lua/material/theme.lua	/^		TSParameter =               { fg = material.paleblue }, -- For parameters of a function.$/;"	f
TSParameter	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^		TSParameter = { fg = c.red, style = theme.italic }, -- For parameters of a function.$/;"	f
TSParameter	plugged/tokyonight.nvim/lua/tokyonight/theme.lua	/^    TSParameter = { fg = c.yellow }, -- For parameters of a function.$/;"	f
TSParameterReference	plugged/material.nvim/lua/material/theme.lua	/^		TSParameterReference =      { fg = material.paleblue }, -- For references to parameters of a f/;"	f
TSParameterReference	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^		TSParameterReference = { fg = c.fg }, -- For references to parameters of a function.$/;"	f
TU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
TUe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
TV	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
TW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
TX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
T_	plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Ta	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Tab	plugged/fzf/src/tui/tui.go	/^	Tab$/;"	c	package:tui
Table of Contents	plugged/bufferline.nvim/README.md	/^# Table of Contents$/;"	c
Table of Contents	plugged/fzf/README.md	/^Table of Contents$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Table of contents	plugged/nvim-treesitter/README.md	/^### Table of contents$/;"	S
Tabline	plugged/lualine.nvim/README.md	/^### Tabline$/;"	S	section:lualine.nvim""Usage and customization
Tabstop	plugged/fzf/src/options.go	/^	Tabstop     int$/;"	m	struct:fzf.Options	typeref:typename:int
Tac	plugged/fzf/src/options.go	/^	Tac         bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Tae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Tagbar	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
Tagbar: a class outline viewer for Vim	plugged/tagbar/README.md	/^# Tagbar: a class outline viewer for Vim$/;"	c
TagbarAutoCmds	plugged/tagbar/autoload/tagbar.vim	/^    augroup TagbarAutoCmds$/;"	a
TagbarBalloonExpr	plugged/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarCleanupAutoCmds	plugged/tagbar/autoload/tagbar.vim	/^    augroup TagbarCleanupAutoCmds$/;"	a
TagbarClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarForceUpdate	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarForceUpdate   call tagbar#ForceUpdate()$/;"	c
TagbarGetTypeConfig	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarJump	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarJump   call tagbar#jump()$/;"	c
TagbarJumpNext	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarJumpNext      call tagbar#jumpToNearbyTag(1)$/;"	c
TagbarJumpPrev	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarJumpPrev      call tagbar#jumpToNearbyTag(-1)$/;"	c
TagbarOpen	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugged/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
Tags	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Tags$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Tasks	plugged/nord-vim/CHANGELOG.md	/^## Tasks$/;"	s	chapter:0.7.0
Tb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
TcellWindow	plugged/fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	s	package:tui
Td	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Te	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Technical	plugged/telescope.nvim/developers.md	/^## Technical$/;"	s	chapter:Developers
Tee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Telescope	plugged/github-nvim-theme/README.md	/^### Telescope$/;"	S	section:📺 Screenshot
Telescope	plugged/telescope.nvim/plugin/telescope.vim	/^command! -nargs=* -range -complete=custom,s:telescope_complete Telescope    lua require('telesco/;"	c
Telescope Table of Contents	plugged/telescope.nvim/README.md	/^## Telescope Table of Contents$/;"	s	chapter:telescope.nvim
Telescope setup structure	plugged/telescope.nvim/README.md	/^### Telescope setup structure$/;"	S	section:telescope.nvim""Customization
Term colors	plugged/ayu-vim/README.md	/^# Term colors$/;"	c
TermExec	plugged/toggleterm.nvim/plugin/toggleterm.vim	/^command! -count -complete=shellcmd -nargs=* TermExec lua require'toggleterm'.exec_command(<q-arg/;"	c
Terminal	plugged/fzf/src/terminal.go	/^type Terminal struct {$/;"	s	package:fzf
Terminal Config	plugged/uwu.vim/README.md	/^## Terminal Config$/;"	s	chapter:PackerNvim
Terminal Themes (Extras)	plugged/github-nvim-theme/README.md	/^## Terminal Themes (Extras)$/;"	s
Terminal View	plugged/aquarium-vim/README.md	/^#### Terminal View$/;"	t	subsection:Features and Stuff""Theme on PikaVim
Terminal themes	plugged/onedarkpro.nvim/README.md	/^### Terminal themes$/;"	S	section:OneDarkPro.nvim"":gift: Extras
Terminal window mappings	plugged/toggleterm.nvim/README.md	/^### Terminal window mappings$/;"	S	section:Roadmap
Test	plugged/nvim-ts-autotag/tests/closetag_spec.lua	/^local function Test(test_data)$/;"	f
Test	plugged/nvim-ts-autotag/tests/renametag_spec.lua	/^local function Test(test_data)$/;"	f
TestAdditiveExpect	plugged/fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f	package:fzf
TestAnsiCodeStringConversion	plugged/fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f	package:fzf
TestAtomicBool	plugged/fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f	package:util
TestBase	plugged/fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	plugged/fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
TestBind	plugged/fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f	package:fzf
TestCacheKey	plugged/fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f	package:fzf
TestCacheable	plugged/fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f	package:fzf
TestCaseSensitivity	plugged/fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f	package:fzf
TestCharsLength	plugged/fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f	package:util
TestCharsToString	plugged/fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f	package:util
TestChunkCache	plugged/fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f	package:fzf
TestChunkList	plugged/fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f	package:fzf
TestColorOffset	plugged/fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f	package:fzf
TestColorSpec	plugged/fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f	package:fzf
TestContrain	plugged/fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f	package:util
TestDefaultCtrlNP	plugged/fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegex	plugged/fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexRegex	plugged/fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexString	plugged/fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f	package:fzf
TestEmptyMerger	plugged/fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f	package:fzf
TestEmptyPattern	plugged/fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f	package:algo
TestEqual	plugged/fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f	package:fzf
TestEventBox	plugged/fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f	package:util
TestExact	plugged/fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f	package:fzf
TestExactMatchNaive	plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f	package:algo
TestExactMatchNaiveBackward	plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f	package:algo
TestExtractColor	plugged/fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f	package:fzf
TestFish	plugged/fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c	mixin:include:TestShell
TestFuzzyMatch	plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f	package:algo
TestFuzzyMatchBackward	plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f	package:algo
TestGetCharEventKey	plugged/fzf/src/tui/tcell_test.go	/^func TestGetCharEventKey(t *testing.T) {$/;"	f	package:tui
TestGoFZF	plugged/fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestHexToColor	plugged/fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f	package:tui
TestHistory	plugged/fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f	package:fzf
TestIrrelevantNth	plugged/fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f	package:fzf
TestLongString	plugged/fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f	package:algo
TestMax	plugged/fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f	package:util
TestMergerSorted	plugged/fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f	package:fzf
TestMergerUnsorted	plugged/fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Modified	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Modified(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Random	plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Random(t *testing.T) {$/;"	f	package:fzf
TestNormalize	plugged/fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f	package:algo
TestOffsetSort	plugged/fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f	package:fzf
TestOnce	plugged/fzf/src/util/util_test.go	/^func TestOnce(t *testing.T) {$/;"	f	package:util
TestOrigTextAndTransformed	plugged/fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f	package:fzf
TestParseAnsiCode	plugged/fzf/src/ansi_test.go	/^func TestParseAnsiCode(t *testing.T) {$/;"	f	package:fzf
TestParseKeys	plugged/fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f	package:fzf
TestParseKeysWithComma	plugged/fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f	package:fzf
TestParsePlaceholder	plugged/fzf/src/terminal_test.go	/^func TestParsePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestParseRange	plugged/fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f	package:fzf
TestParseTermsEmpty	plugged/fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtended	plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtendedExact	plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f	package:fzf
TestPowershellCommands	plugged/fzf/src/terminal_test.go	/^func TestPowershellCommands(t *testing.T) {$/;"	f	package:fzf
TestPrefixMatch	plugged/fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f	package:algo
TestPreviewOpts	plugged/fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f	package:fzf
TestQuoteEntry	plugged/fzf/src/terminal_test.go	/^func TestQuoteEntry(t *testing.T) {$/;"	f	package:fzf
TestRankComparison	plugged/fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f	package:fzf
TestReadFromCommand	plugged/fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f	package:fzf
TestReplacePlaceholder	plugged/fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestResultRank	plugged/fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f	package:fzf
TestShell	plugged/fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplitNth	plugged/fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f	package:fzf
TestStringPtr	plugged/fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f	package:fzf
TestSuffixMatch	plugged/fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f	package:algo
TestToCharsAscii	plugged/fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f	package:util
TestToggle	plugged/fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f	package:fzf
TestTokenize	plugged/fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f	package:fzf
TestTransform	plugged/fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f	package:fzf
TestTransformIndexOutOfBounds	plugged/fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f	package:fzf
TestTrimLength	plugged/fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f	package:util
TestUnixCommands	plugged/fzf/src/terminal_test.go	/^func TestUnixCommands(t *testing.T) {$/;"	f	package:fzf
TestValidateSign	plugged/fzf/src/options_test.go	/^func TestValidateSign(t *testing.T) {$/;"	f	package:fzf
TestWindowsCommands	plugged/fzf/src/terminal_test.go	/^func TestWindowsCommands(t *testing.T) {$/;"	f	package:fzf
TestZsh	plugged/fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
Testing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing
Testing Guide	plugged/plenary.nvim/TESTS_README.md	/^# Testing Guide$/;"	c
Testsuite	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## Testsuite$/;"	s
Text	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Text$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Text objects	plugged/nvim-treesitter-textobjects/CONTRIBUTING.md	/^### Text objects$/;"	S
Text objects: move	plugged/nvim-treesitter-textobjects/README.md	/^## Text objects: move$/;"	s	chapter:nvim-treesitter-textobjects
Text objects: select	plugged/nvim-treesitter-textobjects/README.md	/^## Text objects: select$/;"	s	chapter:nvim-treesitter-textobjects
Text objects: swap	plugged/nvim-treesitter-textobjects/README.md	/^## Text objects: swap$/;"	s	chapter:nvim-treesitter-textobjects
Textobjects: LSP interop	plugged/nvim-treesitter-textobjects/README.md	/^## Textobjects: LSP interop$/;"	s	chapter:nvim-treesitter-textobjects
Tg	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Thanks	plugged/indent-blankline.nvim/README.md	/^## Thanks$/;"	s	chapter:Indent Blankline
The Aquarium Contributing Guide <!-- omit in toc -->	plugged/aquarium-vim/CONTRIBUTING.md	/^# The Aquarium Contributing Guide <!-- omit in toc -->$/;"	c
Theme	plugged/fzf/src/options.go	/^	Theme       *tui.ColorTheme$/;"	m	struct:fzf.Options	typeref:typename:*tui.ColorTheme
Theme Styles	plugged/github-nvim-theme/README.md	/^### Theme Styles$/;"	S	section:📺 Screenshot
Theme color tables	plugged/onedarkpro.nvim/README.md	/^#### Theme color tables$/;"	t	subsection:OneDarkPro.nvim"":gift: Extras""Helper functions
Theme on PikaVim	plugged/aquarium-vim/README.md	/^### Theme on PikaVim$/;"	S	section:Features and Stuff
Theme rename	plugged/lualine.nvim/BREAKING_CHANGES.md	/^### Theme rename$/;"	S
Themes	plugged/telescope.nvim/README.md	/^## Themes$/;"	s	chapter:telescope.nvim
Things to keep in mind	plugged/vim-devicons/CONTRIBUTING.md	/^## Things to keep in mind$/;"	s	chapter:Contributing Guide
Third-party libraries used	plugged/fzf/BUILD.md	/^Third-party libraries used$/;"	s	chapter:Building fzf
Ti	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Tips	plugged/fzf/README-VIM.md	/^Tips$/;"	s	chapter:FZF Vim integration
Tips	plugged/fzf/README.md	/^Tips$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Tips & reminders	plugged/nvim-tree.lua/README.md	/^## Tips & reminders$/;"	s	chapter:A File Explorer For Neovim Written In Lua
Tj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Tk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Tl	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
Tle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Tm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Tme	plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
Tmux	plugged/fzf/test/test_go.rb	/^class Tmux$/;"	c
Tmux	plugged/vim-tmux-navigator/README.md	/^#### Tmux$/;"	t	subsection:Vim Tmux Navigator""Configuration""Custom Key Bindings
Tmux Can't Tell if Vim Is Active	plugged/vim-tmux-navigator/README.md	/^### Tmux Can't Tell if Vim Is Active$/;"	S	section:Vim Tmux Navigator""Troubleshooting
TmuxNavigateDown	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateDown call s:VimNavigate('j')$/;"	c
TmuxNavigateDown	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateDown call s:TmuxAwareNavigate('j')$/;"	c
TmuxNavigateLeft	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateLeft call s:VimNavigate('h')$/;"	c
TmuxNavigateLeft	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateLeft call s:TmuxAwareNavigate('h')$/;"	c
TmuxNavigatePrevious	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigatePrevious call s:VimNavigate('p')$/;"	c
TmuxNavigatePrevious	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigatePrevious call s:TmuxAwareNavigate('p')$/;"	c
TmuxNavigateRight	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateRight call s:VimNavigate('l')$/;"	c
TmuxNavigateRight	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateRight call s:TmuxAwareNavigate('l')$/;"	c
TmuxNavigateUp	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateUp call s:VimNavigate('k')$/;"	c
TmuxNavigateUp	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateUp call s:TmuxAwareNavigate('k')$/;"	c
TmuxNavigatorProcessList	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigatorProcessList call s:TmuxNavigatorProcessList()$/;"	c
To-do list	plugged/aquarium-vim/README.md	/^### To-do list$/;"	S	section:Contributing
ToChars	plugged/fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f	package:util	typeref:typename:Chars
ToRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
ToString	plugged/fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f	struct:fzf.ansiState	typeref:typename:string
ToString	plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f	struct:util.Chars	typeref:typename:string
ToTty	plugged/fzf/src/util/util.go	/^func ToTty() bool {$/;"	f	package:util	typeref:typename:bool
Todo	plugged/which-key.nvim/TODO.md	/^# Todo$/;"	c
Toggle style	plugged/onedark.nvim/README.md	/^## Toggle style $/;"	s
ToggleSort	plugged/fzf/src/options.go	/^	ToggleSort  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
ToggleTerm	plugged/toggleterm.nvim/plugin/toggleterm.vim	/^command! -count -nargs=* ToggleTerm lua require'toggleterm'.toggle_command(<q-args>, <count>)$/;"	c
ToggleTermToggleAll	plugged/toggleterm.nvim/plugin/toggleterm.vim	/^command! -bang ToggleTermToggleAll lua require'toggleterm'.toggle_all(<q-bang>)$/;"	c
Toggling between Onedark and Onelight	plugged/onedarkpro.nvim/README.md	/^#### Toggling between Onedark and Onelight$/;"	t	subsection:OneDarkPro.nvim"":gift: Extras""Helper functions
Toggling between data sources	plugged/fzf/ADVANCED.md	/^### Toggling between data sources$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Token	plugged/fzf/src/tokenizer.go	/^type Token struct {$/;"	s	package:fzf
Tokenize	plugged/fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Tomorrow	plugged/lualine.nvim/THEMES.md	/^### Tomorrow$/;"	S	chapter:Available themes
Top	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Top	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Top	plugged/fzf/src/tui/tui.go	/^	Top() int$/;"	n	interface:tui.Window	typeref:typename:int
Tpe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Tq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Tr	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
Tr	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
TrailingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Transform	plugged/fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Transparency	plugged/onedarkpro.nvim/README.md	/^#### Transparency$/;"	t	subsection:OneDarkPro.nvim"":wrench: Configuration""Configuring options
Treesitter Picker	plugged/telescope.nvim/README.md	/^### Treesitter Picker$/;"	S	section:telescope.nvim""Pickers
TrimLength	plugged/fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f	struct:fzf.Item	typeref:typename:uint16
TrimLength	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f	struct:util.Chars	typeref:typename:uint16
TrimTrailingWhitespaces	plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimTrailingWhitespaces() {$/;"	f	struct:util.Chars
Trouble shooting	plugged/coc.nvim/Readme.md	/^## Trouble shooting$/;"	s
TroubleShooting	plugged/auto-pairs/README.md	/^TroubleShooting$/;"	s	chapter:Auto Pairs
Troubleshooting	plugged/nvim-treesitter/README.md	/^# Troubleshooting$/;"	c
Troubleshooting	plugged/plenary.nvim/README.md	/^### Troubleshooting$/;"	S	section:plenary.nvim""Modules
Troubleshooting	plugged/vim-devicons/README.md	/^Troubleshooting$/;"	s
Troubleshooting	plugged/vim-tmux-navigator/README.md	/^Troubleshooting$/;"	s	chapter:Vim Tmux Navigator
Tse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Tt	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
TtyIn	plugged/fzf/src/tui/ttyname_unix.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
TtyIn	plugged/fzf/src/tui/ttyname_windows.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
Tu	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Tw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Txe	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Ty	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Type	plugged/fzf/src/tui/tui.go	/^	Type       EventType$/;"	m	struct:tui.Event	typeref:typename:EventType
Types/Classes	plugged/nord-vim/CHANGELOG.md	/^#### Types\/Classes$/;"	t	subsection:0.11.0""Features""Syntax
U	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
U$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
U0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
U1	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
U4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
U5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
U6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
U7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
U8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
UA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
UB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
UC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
UD	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
UG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.11.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.11.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.13.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.13.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.14.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.14.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.15.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.16.0""Bug Fixes
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.16.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.16.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.18.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.6.0""Bug Fixes
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.6.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.8.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.9.0""Bug Fixes
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.9.0""Features
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S	section:0.9.0""Improvements
UI	plugged/nord-vim/CHANGELOG.md	/^#### UI$/;"	t	subsection:0.6.0""Features""Plugin Support
UI	plugged/nord-vim/CHANGELOG.md	/^#### UI$/;"	t	subsection:0.7.0""Features""Plugin Support
UI	plugged/nord-vim/CHANGELOG.md	/^#### UI$/;"	t	subsection:0.8.0""Features""Plugin Support
UJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
UK	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
UM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
UN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
UNAME_M	plugged/fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNSETS	plugged/fzf/test/test_go.rb	/^UNSETS = %w[$/;"	C
UO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UT	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
UU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
UV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
UX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Ua	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Uae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ub	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Uc	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Ud	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Ue	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Ug	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Uh	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Ui	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Uie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Uj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Uk	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
Um	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Ume	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Un	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Underline	plugged/fzf/src/tui/dummy.go	/^	Underline = Attr(1 << 3)$/;"	c	package:tui
Underline	plugged/fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c	package:tui
Unicode	plugged/fzf/src/options.go	/^	Unicode     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Unique buffer names	plugged/bufferline.nvim/README.md	/^#### Unique buffer names$/;"	t	section:Table of Contents""Features
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Unreleased	plugged/vim-bbye/CHANGELOG.md	/^## Unreleased$/;"	s
Unwatch	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f	struct:util.EventBox
Uoe	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Up	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Up	plugged/fzf/src/tui/tui.go	/^	Up$/;"	c	package:tui
Update parsers used_by	plugged/nvim-treesitter/README.md	/^## Update parsers used_by$/;"	s	chapter:Advanced setup
UpdateCount	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, failedCommand *string) {$/;"	f	struct:fzf.Terminal
UpdateHeader	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f	struct:fzf.Terminal
UpdateList	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger, reset bool) {$/;"	f	struct:fzf.Terminal
UpdateProgress	plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f	struct:fzf.Terminal
Updating the list of processes by pressing CTRL-R	plugged/fzf/ADVANCED.md	/^### Updating the list of processes by pressing CTRL-R$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Upgrading fzf	plugged/fzf/README.md	/^Upgrading fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Uq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Usage	plugged/JABS.nvim/README.md	/^## Usage$/;"	s	chapter:JABS.nvim
Usage	plugged/bufferline.nvim/README.md	/^## Usage$/;"	s	chapter:Table of Contents
Usage	plugged/fzf/README.md	/^Usage$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Usage	plugged/github-nvim-theme/README.md	/^## Usage$/;"	s
Usage	plugged/gitsigns.nvim/README.md	/^## Usage$/;"	s	chapter:gitsigns.nvim
Usage	plugged/nvim-spectre/README.md	/^## Usage$/;"	s	chapter:nvim-spectre
Usage	plugged/nvim-ts-autotag/README.md	/^## Usage$/;"	s	chapter:nvim-ts-autotag
Usage	plugged/nvim-web-devicons/README.md	/^## Usage$/;"	s	chapter:Nvim-web-devicons
Usage	plugged/onedark.nvim/README.md	/^## Usage$/;"	s
Usage	plugged/telescope.nvim/README.md	/^## Usage$/;"	s	chapter:telescope.nvim
Usage	plugged/toggleterm.nvim/README.md	/^### Usage$/;"	S	section:Roadmap
Usage	plugged/toggleterm.nvim/README.md	/^#### Usage$/;"	t	subsection:Roadmap""Custom Terminals
Usage	plugged/vim-closetag/README.md	/^#### Usage$/;"	t	chapter:closetag.vim
Usage	plugged/vim-easy-replace/README.md	/^### Usage$/;"	S	section:vim-easy-replace""Installation
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	plugged/vim-tmux-navigator/README.md	/^Usage$/;"	s	chapter:Vim Tmux Navigator
Usage and customization	plugged/lualine.nvim/README.md	/^## Usage and customization$/;"	s	chapter:lualine.nvim
Use	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Using	plugged/vim-bbye/README.md	/^Using$/;"	s	chapter:Bbye (Buffer Bye) for Vim
Using Homebrew	plugged/fzf/README.md	/^### Using Homebrew$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Linux package managers	plugged/fzf/README.md	/^### Using Linux package managers$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Makefile	plugged/fzf/BUILD.md	/^### Using Makefile$/;"	S	section:Building fzf""Build instructions
Using [vim-plug](https://github.com/junegunn/vim-plug)	plugged/fzf.vim/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Using a package manager	plugged/nvim-treesitter-textobjects/README.md	/^### Using a package manager$/;"	S	section:nvim-treesitter-textobjects""Installation
Using fzf as the secondary filter	plugged/fzf/ADVANCED.md	/^### Using fzf as the secondary filter$/;"	S	section:Advanced fzf examples""Ripgrep integration
Using git	plugged/fzf/README.md	/^### Using git$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using the finder	plugged/fzf/README.md	/^#### Using the finder$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Utilities	plugged/nvim-treesitter/README.md	/^### Utilities$/;"	S	chapter:Extra features
Uu	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Uxe	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Uy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Uz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
V	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> V             :call startify#set_batchmode('V')<cr>$/;"	m
V$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
V4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
V5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
V6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
V8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
V9	plugged/coc.nvim/build/index.js	/^`+s),r.push(n+"m+"+Tp.exports.humanize(this.diff)+"[0m")}else r[0]=z9()+e+" "+r[0]}function z9(/;"	f
VA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
VB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
VC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
VD	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
VERSION	plugged/fzf/Makefile	/^VERSION        := $(FZF_VERSION)$/;"	m
VERSION	plugged/fzf/Makefile	/^VERSION        := $(shell git describe --abbrev=0 2> \/dev\/null)$/;"	m
VERSION	plugged/vim-bbye/Makefile	/^VERSION := 1.0.1$/;"	m
VERSION_REGEX	plugged/fzf/Makefile	/^VERSION_REGEX  := $(subst .,\\.,$(VERSION_TRIM))$/;"	m
VERSION_TRIM	plugged/fzf/Makefile	/^VERSION_TRIM   := $(shell sed "s\/-.*\/\/" <<< $(VERSION))$/;"	m
VG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
VIMRUNTIME	plugged/gitsigns.nvim/Makefile	/^export VIMRUNTIME=$(PWD)\/deps\/neovim\/runtime$/;"	m
VM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
VN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
VP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
VT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
VU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
VV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
VX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Va	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
Vae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Variables	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Variables$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Variables n Stuff	plugged/aquarium-vim/README.md	/^### Variables n Stuff$/;"	S	section:Features and Stuff
Vb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Vc	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Vce	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Vee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Version	plugged/fzf/src/options.go	/^	Version     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Vf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Vg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Vi	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Vie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Vim	plugged/vim-tmux-navigator/README.md	/^### Vim$/;"	S	section:Vim Tmux Navigator""Installation
Vim	plugged/vim-tmux-navigator/README.md	/^#### Vim$/;"	t	subsection:Vim Tmux Navigator""Configuration""Custom Key Bindings
Vim -> Tmux doesn't work!	plugged/vim-tmux-navigator/README.md	/^### Vim -> Tmux doesn't work!$/;"	S	section:Vim Tmux Navigator""Troubleshooting
Vim Commands	plugged/telescope.nvim/README.md	/^## Vim Commands$/;"	s	chapter:telescope.nvim
Vim Pickers	plugged/telescope.nvim/README.md	/^### Vim Pickers$/;"	S	section:telescope.nvim""Pickers
Vim Tmux Navigator	plugged/vim-tmux-navigator/README.md	/^Vim Tmux Navigator$/;"	c
Vim functions	plugged/fzf.vim/README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Vim functions as lualine component	plugged/lualine.nvim/README.md	/^##### Vim functions as lualine component$/;"	T	subsubsection:lualine.nvim""Usage and customization""Changing components in lualine sections""Custom components
Vim plugin	plugged/fzf/README.md	/^Vim plugin$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Vim variables as lualine component	plugged/lualine.nvim/README.md	/^##### Vim variables as lualine component$/;"	T	subsubsection:lualine.nvim""Usage and customization""Changing components in lualine sections""Vim's statusline items as lualine component
Vim's statusline items as lualine component	plugged/lualine.nvim/README.md	/^#### Vim's statusline items as lualine component$/;"	t	subsection:lualine.nvim""Usage and customization""Changing components in lualine sections
Vim-Plug	plugged/uwu.vim/README.md	/^# Vim-Plug$/;"	c
Vj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Vm	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Vme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Vn	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Voe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Vp	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Vpe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Vr	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Vt	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
Vu	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Vx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Vy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
W	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
W	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
W	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
W$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
W1e	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
W6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
W8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
W9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
WA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
WB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
WC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
WD	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
WG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
WM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
WN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
WP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
WQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
WR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
WT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
WU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
WV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
WX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Wait	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f	struct:util.EventBox
WaitFor	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f	struct:util.EventBox
Want to buy me a coffee?	plugged/vim-blade/README.md	/^Want to buy me a coffee?$/;"	s	chapter:vim-blade
Warm	plugged/onedark.nvim/README.md	/^### Warm$/;"	S	section:Styles
Warmer	plugged/onedark.nvim/README.md	/^### Warmer$/;"	S	section:Styles
Warning	plugged/ayu-vim/README.md	/^# Warning$/;"	c
Watch	plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f	struct:util.EventBox
Wb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Wc	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Wce	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Wd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
We	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
We Develop with Github	plugged/github-nvim-theme/CONTRIBUTING.md	/^## We Develop with Github$/;"	s	chapter:Contributing to github-nvim-theme
We Use [Github Flow](https://guides.github.com/introduction/flow/index.html), So All Code Changes Happen Through Pull Requests	plugged/github-nvim-theme/CONTRIBUTING.md	/^## We Use [Github Flow](https:\/\/guides.github.com\/introduction\/flow\/index.html), So All Cod/;"	s	chapter:Contributing to github-nvim-theme
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...) abort$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapActivateNodeSingleMode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNodeSingleMode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
What Is Telescope?	plugged/telescope.nvim/README.md	/^## What Is Telescope?$/;"	s	chapter:telescope.nvim
What Tagbar is	plugged/tagbar/README.md	/^## What Tagbar is$/;"	s	chapter:Tagbar: a class outline viewer for Vim
What Tagbar is not	plugged/tagbar/README.md	/^## What Tagbar is not$/;"	s	chapter:Tagbar: a class outline viewer for Vim
What about Tabs?	plugged/bufferline.nvim/README.md	/^## What about Tabs?$/;"	s	chapter:Table of Contents
What are the relevant tickets (if any)?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What are the relevant tickets (if any)?$/;"	t
What does this Pull Request (PR) do?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What does this Pull Request (PR) do?$/;"	t
What is missing?	plugged/telescope.nvim/CONTRIBUTING.md	/^## What is missing?$/;"	s	chapter:Contributing
What?	plugged/vim-gutentags/README.md	/^## What?$/;"	s	chapter:Gutentags
Whats	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Whats<\/h2>$/;"	i
WhichKey	plugged/which-key.nvim/plugin/which-key.vim	/^command! -nargs=* WhichKey lua require('which-key').show_command(<f-args>)$/;"	c
Why Spectre?	plugged/nvim-spectre/README.md	/^## Why Spectre?$/;"	s	chapter:nvim-spectre
Why you should use fzf on Vim	plugged/fzf.vim/README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
Why?	plugged/coc.nvim/Readme.md	/^## Why?$/;"	s
Why?	plugged/toggleterm.nvim/README.md	/^## Why?$/;"	s
Why?	plugged/vim-gutentags/README.md	/^## Why?$/;"	s	chapter:Gutentags
Width	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Width	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Width	plugged/fzf/src/tui/tui.go	/^	Width() int$/;"	n	interface:tui.Window	typeref:typename:int
Wie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Wiki	plugged/lualine.nvim/README.md	/^### Wiki$/;"	S	section:lualine.nvim""Usage and customization
Window	plugged/fzf/src/tui/tui.go	/^type Window interface {$/;"	i	package:tui
Windows	plugged/fzf/README.md	/^### Windows$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
With context indent highlighted by treesitter	plugged/indent-blankline.nvim/README.md	/^#### With context indent highlighted by treesitter$/;"	t	subsection:Indent Blankline""Screenshots""Simple
With custom `g:indent_blankline_char_highlight_list`	plugged/indent-blankline.nvim/README.md	/^#### With custom `g:indent_blankline_char_highlight_list`$/;"	t	subsection:Indent Blankline""Screenshots""Simple
With custom `listchars` and `g:indent_blankline_space_char_blankline`	plugged/indent-blankline.nvim/README.md	/^#### With custom `listchars` and `g:indent_blankline_space_char_blankline`$/;"	t	subsection:Indent Blankline""Screenshots""Simple
With custom background highlight	plugged/indent-blankline.nvim/README.md	/^#### With custom background highlight$/;"	t	subsection:Indent Blankline""Screenshots""Simple
With plugin manager	plugged/vim-easy-replace/README.md	/^### With plugin manager$/;"	S	section:vim-easy-replace""Installation
WithAttr	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) WithAttr(attr Attr) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
WithNth	plugged/fzf/src/options.go	/^	WithNth     []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Wj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Wk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Wm	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Wme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Woe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Wpe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Wq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Wr	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Write bug reports with detail, background, and sample code	plugged/github-nvim-theme/CONTRIBUTING.md	/^## Write bug reports with detail, background, and sample code$/;"	s	chapter:Contributing to github-nvim-theme
Writing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s	chapter:Contributing
Writing Teal	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## Writing Teal$/;"	s
Wt	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Wu	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Wue	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Ww	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Wy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
X	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
X	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
X	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
X	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
X	plugged/fzf/src/tui/tui.go	/^	X      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
X	plugged/fzf/src/tui/tui.go	/^	X() int$/;"	n	interface:tui.Window	typeref:typename:int
X	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    X,$/;"	e	enum:Foo
X	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> X           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
X	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> X           :call b:buffergator_catalog_viewer.delete_targ/;"	m
X$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
X0	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
X1	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
X4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
X5	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
X6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
X6e	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
X8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
X9	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
XB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
XC	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
XCe	plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
XD	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
XG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
XI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
XK	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
XL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
XM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
XN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
XO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
XP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
XR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
XS	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
XT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
XV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
XX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
XY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
XZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
X_	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunctionaf1e5c4a2b100
Xa	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Xae	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
Xb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Xc	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Xd	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Xe	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Xf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Xg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Xh	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Xhe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Xie	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Xj	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Xk	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Xm	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Xme	plugged/coc.nvim/build/index.js	/^`)==-1}var oG=R(()=>{});function Xme(r,e,t){let i=r.split(\/\\r?\\n\/),n=t.insertSpaces?" ".repe/;"	f
Xo	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Xoe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Xr	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Xs	plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
Xu	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Xx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Xy	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Xz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Y	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Y	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Y	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Y	plugged/fzf/src/tui/tui.go	/^	Y      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
Y	plugged/fzf/src/tui/tui.go	/^	Y() int$/;"	n	interface:tui.Window	typeref:typename:int
Y	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    Y($/;"	e	enum:Foo
Y$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Y0	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Y3e	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Y4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Y5	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
Y6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Y7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Y8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Y9	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
YB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
YC	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
YD	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
YG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
YH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
YHe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YK	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
YL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
YM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
YN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
YO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
YQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
YT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
YU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
YUe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Ya	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Yae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Yb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Yc	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Yd	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ye	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Yf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Yg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Yie	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Yj	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Yme	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Yn	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Yoe	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Yq	plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	v
Yr	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ys	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Yt	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.K
Yt	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.ce
Yt	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.z
Yu	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Yue	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Yv	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Yw	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
Yx	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Yy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Z	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    Z {$/;"	e	enum:Foo
Z$	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Z0	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Z4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Z4e	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
Z5	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
Z6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Z8	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
ZB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
ZG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
ZK	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
ZL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ZM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ZO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
ZT	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
ZU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
ZV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
ZX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
ZY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Z_	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Za	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Zae	plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
Zathura	plugged/aquarium-vim/README.md	/^### Zathura$/;"	S	section:Other
Zb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Zc	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Zd	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Zee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Zf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Zg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Zh	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Zie	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Zj	plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Zm	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Zme	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
Zo	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
Zoe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Zp	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Zs	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
Zse	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Zu	plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
Zw	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
Zwe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Zy	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
[	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
["<CR>"]	plugged/telescope.nvim/lua/telescope/mappings.lua	/^    ["<CR>"] = function(picker, prompt_bufnr)$/;"	f
["boolean"]	plugged/telescope.nvim/lua/telescope/command.lua	/^    ["boolean"] = function(key, val)$/;"	f
["number"]	plugged/telescope.nvim/lua/telescope/command.lua	/^    ["number"] = function(key, val)$/;"	f
["string"]	plugged/telescope.nvim/lua/telescope/command.lua	/^    ["string"] = function(key, val)$/;"	f
["table"]	plugged/plenary.nvim/lua/luassert/mock.lua	/^        ["table"] = function()$/;"	f
["table"]	plugged/telescope.nvim/lua/telescope/command.lua	/^    ["table"] = function(key, val)$/;"	f
['_']	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^  ['_'] = function(component)$/;"	f
[Code of Conduct](CODE_OF_CONDUCT.md)	plugged/vim-devicons/README.md	/^### [Code of Conduct](CODE_OF_CONDUCT.md)$/;"	S	section:Contributing
[Contributing Guide](CONTRIBUTING.md)	plugged/vim-devicons/README.md	/^### [Contributing Guide](CONTRIBUTING.md)$/;"	S	section:Contributing
[Diagnostic-ls](https://github.com/iamcco/diagnostic-languageserver) config for teal	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## [Diagnostic-ls](https:\/\/github.com\/iamcco\/diagnostic-languageserver) config for teal$/;"	s
[License](LICENSE)	plugged/fzf/README-VIM.md	/^[License](LICENSE)$/;"	s	chapter:FZF Vim integration
[License](LICENSE)	plugged/fzf/README.md	/^[License](LICENSE)$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
[b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> [b :BuffergatorMruCyclePrev<CR>$/;"	m
[b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> [b :bp<CR>$/;"	m
[g	init.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
[null-ls.nvim](https://github.com/jose-elias-alvarez/null-ls.nvim) config for teal	plugged/gitsigns.nvim/CONTRIBUTING.md	/^## [null-ls.nvim](https:\/\/github.com\/jose-elias-alvarez\/null-ls.nvim) config for teal$/;"	s
[null-ls](https://github.com/jose-elias-alvarez/null-ls.nvim)	plugged/gitsigns.nvim/README.md	/^### [null-ls](https:\/\/github.com\/jose-elias-alvarez\/null-ls.nvim)$/;"	S	section:gitsigns.nvim""Integrations
[packer.nvim](https://github.com/wbthomason/packer.nvim)	plugged/lualine.nvim/README.md	/^### [packer.nvim](https:\/\/github.com\/wbthomason\/packer.nvim)$/;"	S	section:lualine.nvim""Installation
[packer](https://github.com/wbthomason/packer.nvim)	plugged/which-key.nvim/README.md	/^### [packer](https:\/\/github.com\/wbthomason\/packer.nvim)$/;"	S	section:💥 Which Key""📦 Installation
[trouble.nvim](https://github.com/folke/trouble.nvim)	plugged/gitsigns.nvim/README.md	/^### [trouble.nvim](https:\/\/github.com\/folke\/trouble.nvim)$/;"	S	section:gitsigns.nvim""Integrations
[unreleased]	plugged/github-nvim-theme/CHANGELOG.md	/^## [unreleased]$/;"	s	chapter:Changelog
[v0.0.1] - 9 Jul 2021	plugged/github-nvim-theme/CHANGELOG.md	/^## [v0.0.1] - 9 Jul 2021$/;"	s	chapter:Changelog
[v0.0.2] - 15 Sep 2021	plugged/github-nvim-theme/CHANGELOG.md	/^## [v0.0.2] - 15 Sep 2021$/;"	s	chapter:Changelog
[vim-fugitive](https://github.com/tpope/vim-fugitive)	plugged/gitsigns.nvim/README.md	/^### [vim-fugitive](https:\/\/github.com\/tpope\/vim-fugitive)$/;"	S	section:gitsigns.nvim""Integrations
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/lualine.nvim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:lualine.nvim""Installation
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/which-key.nvim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:💥 Which Key""📦 Installation
[vim-repeat](https://github.com/tpope/vim-repeat)	plugged/gitsigns.nvim/README.md	/^### [vim-repeat](https:\/\/github.com\/tpope\/vim-repeat)$/;"	S	section:gitsigns.nvim""Integrations
]	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
]	plugged/plenary.nvim/lua/plenary/log.lua	/^    obj[("file_%s"):format(x.name)] = function(vals, override)$/;"	f
]	plugged/plenary.nvim/lua/plenary/log.lua	/^    obj[("fmt_%s"):format(x.name)] = function(...)$/;"	f
]	plugged/plenary.nvim/lua/plenary/log.lua	/^    obj[("lazy_%s"):format(x.name)] = function()$/;"	f
]]	plugged/fzf/shell/completion.bash	/^  if [[ "$(type -t _fzf_comprun 2>&1)" = function ]]; then$/;"	f
]]	plugged/fzf/shell/completion.zsh	/^  if [[ "$(type _fzf_comprun 2>&1)" =~ function ]]; then$/;"	f
]b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> ]b :BuffergatorMruCycleNext<CR>$/;"	m
]b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> ]b :bn<CR>$/;"	m
]g	init.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
^.+\\\\.tsx?$	plugged/coc.nvim/package.json	/^      "^.+\\\\.tsx?$": "ts-jest"$/;"	s	object:jest.transform
^[_a-zA-Z]+$	plugged/coc.nvim/data/schema.json	/^        "^[_a-zA-Z]+$": {$/;"	o	object:properties.languageserver.patternProperties
_	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
_	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
_	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunctionaf1e5c4a29d00.s
_	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
_	plugged/plenary.nvim/lua/luassert/match.lua	/^  _ = setmetatable({mod=true, callback=function() return true end}, matcher_mt),$/;"	f
_	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^    local ok, _ = pcall(function()$/;"	f
_$	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
_$	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	_$ = window.$;$/;"	v
_0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
_5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
_6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
_8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
_A	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_B	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
_C	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
_D	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
_F	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
_G	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
_J	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
_K	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
_N	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
_T	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
_U	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
_V	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
_X	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
_Y	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
__	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
__TEST__	plugged/coc.nvim/package.json	/^      "__TEST__": true$/;"	b	object:jest.globals
___emmet_setup___	plugged/emmet-vim/plugin/emmet.vim	/^augroup ___emmet_setup___$/;"	a
__add	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Section.__add(a, b)$/;"	f	unknown:Section
__add	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^    __add = function(lhs, rhs)$/;"	f
__add	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:__add()$/;"	f	unknown:Terminal
__align_calc_config	plugged/plenary.nvim/lua/plenary/window/border.lua	/^function Border:__align_calc_config(content_win_options, border_win_options)$/;"	f	unknown:Border
__apply_colors	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.__apply_colors()$/;"	f	unknown:M
__apply_colors	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.__apply_colors()$/;"	f	unknown:M
__call	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^    __call = function(memo, func)$/;"	f
__call	plugged/lualine.nvim/lua/lualine/utils/class.lua	/^function Object:__call(...)$/;"	f	unknown:Object
__call	plugged/lualine.nvim/lua/lualine/utils/job.lua	/^  __call = function(self, args)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/assert.lua	/^  __call = function(self, ...)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/assert.lua	/^  __call = function(self, bool, message, level, ...)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/match.lua	/^  __call = function(self, ...)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/match.lua	/^  __call = function(self, value)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/mock.lua	/^  __call = function(self, ...)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/spy.lua	/^  __call = function(self, ...)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/state.lua	/^  __call = function(self)$/;"	f
__call	plugged/plenary.nvim/lua/luassert/stub.lua	/^  __call = function(self, ...)$/;"	f
__call	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:__call(...)$/;"	f	unknown:Object
__call	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^  __call = function(_, tbl)$/;"	f
__call	plugged/plenary.nvim/lua/plenary/enum.lua	/^  __call = function(_, tbl)$/;"	f
__call	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:__call(param, state)$/;"	f	unknown:Iterator
__call	plugged/plenary.nvim/lua/say.lua	/^  __call = function(self, key, vars)$/;"	f
__call	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^    __call = function(t, ...)$/;"	f
__call	plugged/telescope.nvim/lua/telescope/finders.lua	/^  obj.__call = function(t, ...)$/;"	f	unknown:obj
__call	plugged/telescope.nvim/lua/telescope/finders/async_oneshot_finder.lua	/^    __call = function(_, prompt, process_result, process_complete)$/;"	f
__call	plugged/telescope.nvim/lua/telescope/finders/async_static_finder.lua	/^    __call = function(_, _, process_result, process_complete)$/;"	f
__call	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    __call = function()$/;"	f
__call	plugged/telescope.nvim/lua/telescope/utils.lua	/^    __call = function()$/;"	f
__concat	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__concat(other)$/;"	f	unknown:List
__concat	plugged/plenary.nvim/lua/plenary/path.lua	/^Path.__concat = function(self, other)$/;"	f	unknown:Path
__div	plugged/plenary.nvim/lua/plenary/path.lua	/^Path.__div = function(self, other)$/;"	f	unknown:Path
__eq	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__eq(other)$/;"	f	unknown:List
__format_setup_keys	plugged/telescope.nvim/lua/telescope/init.lua	/^telescope.__format_setup_keys = function()$/;"	f	unknown:telescope
__fsel	plugged/fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	plugged/fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_comprun	plugged/fzf/shell/completion.bash	/^__fzf_comprun() {$/;"	f
__fzf_comprun	plugged/fzf/shell/completion.zsh	/^__fzf_comprun() {$/;"	f
__fzf_defc	plugged/fzf/shell/completion.bash	/^__fzf_defc() {$/;"	f
__fzf_extract_command	plugged/fzf/shell/completion.zsh	/^__fzf_extract_command() {$/;"	f
__fzf_generic_path_completion	plugged/fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	plugged/fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	plugged/fzf/shell/key-bindings.bash	/^__fzf_history__() {$/;"	f
__fzf_orig_completion	plugged/fzf/shell/completion.bash	/^__fzf_orig_completion() {$/;"	f
__fzf_select__	plugged/fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzfcmd	plugged/fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	plugged/fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__gt	plugged/plenary.nvim/lua/plenary/enum.lua	/^  function Variant:__gt(o)$/;"	f	unknown:Variant
__handle_exit	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function __handle_exit(term)$/;"	f
__index	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^  __index = function()$/;"	f
__index	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^  __index = function(_, _)$/;"	f
__index	plugged/gitsigns.nvim/lua/gitsigns.lua	/^   __index = function(_, f)$/;"	f
__index	plugged/lualine.nvim/lua/lualine_require.lua	/^    __index = function(self, key)$/;"	f
__index	plugged/lualine.nvim/lua/tests/helpers.lua	/^  __index = function(_, key)$/;"	f
__index	plugged/nvim-spectre/lua/spectre/replace/init.lua	/^    __index = function(self, key)$/;"	f
__index	plugged/nvim-spectre/lua/spectre/search/init.lua	/^    __index = function(self, key)$/;"	f
__index	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^    __index = function(tbl, key)$/;"	f
__index	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^    __index = function(tbl, key)$/;"	f
__index	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  mt.__index = function(tbl, key)$/;"	f	unknown:mt
__index	plugged/plenary.nvim/lua/luassert/assert.lua	/^  __index = function(self, key)$/;"	f
__index	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^},{ __index = function(self, key)$/;"	f
__index	plugged/plenary.nvim/lua/luassert/match.lua	/^  __index = function(self, key)$/;"	f
__index	plugged/plenary.nvim/lua/plenary/async/api.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/plenary.nvim/lua/plenary/async/init.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/plenary.nvim/lua/plenary/async_lib/api.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/plenary.nvim/lua/plenary/bit.lua	/^  function mt:__index(k)$/;"	f	unknown:mt
__index	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__index(key)$/;"	f	unknown:List
__index	plugged/plenary.nvim/lua/plenary/enum.lua	/^Enum.__index = function(_, key)$/;"	f	unknown:Enum
__index	plugged/plenary.nvim/lua/plenary/init.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/plenary.nvim/lua/say.lua	/^  __index = function(self, key)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/_extensions/init.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  __index = function(_, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^  __index = function(_, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^        mt.__index = function(t, k)$/;"	f	unknown:mt
__index	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^      __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^    __index = function(_, picker)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/command.lua	/^    __index = function(_, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      __index = function()$/;"	f
__index	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^    __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^    mt_file_entry.__index = function(t, k)$/;"	f	unknown:mt_file_entry
__index	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  mt.__index = function(t, k)$/;"	f	unknown:mt
__index	plugged/telescope.nvim/lua/telescope/mappings.lua	/^    __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/sorters.lua	/^    __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/telescope/utils.lua	/^  __index = function(t, k)$/;"	f
__index	plugged/telescope.nvim/lua/tests/automated/entry_manager_spec.lua	/^        __index = function(t, k)$/;"	f
__init__	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    def __init__(self):$/;"	m	class:Foo
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__len	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__len()$/;"	f	unknown:List
__load	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.__load()$/;"	f	unknown:M
__lt	plugged/plenary.nvim/lua/plenary/enum.lua	/^  function Variant:__lt(o)$/;"	f	unknown:Variant
__mul	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__mul(other)$/;"	f	unknown:List
__newindex	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^        __newindex = function(parserconfigtable, key, value)$/;"	f
__newindex	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^  __newindex = function(table, parsername, parserconfig)$/;"	f
__newindex	plugged/plenary.nvim/lua/plenary/tbl.lua	/^    __newindex = function()$/;"	f
__reset	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function M.__reset()$/;"	f	unknown:M
__reset	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^  function M.__reset()$/;"	f	unknown:M
__resurrect	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:__resurrect()$/;"	f	unknown:Terminal
__set_ids	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^  function M.__set_ids(tbl)$/;"	f	unknown:M
__spawn	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:__spawn()$/;"	f	unknown:Terminal
__tostring	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:__tostring()$/;"	f	unknown:M
__tostring	plugged/lualine.nvim/lua/lualine/utils/class.lua	/^function Object:__tostring()$/;"	f	unknown:Object
__tostring	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:__tostring()$/;"	f	unknown:Object
__tostring	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:__tostring()$/;"	f	unknown:List
__tostring	plugged/plenary.nvim/lua/plenary/enum.lua	/^  function Variant:__tostring()$/;"	f	unknown:Variant
__tostring	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:__tostring()$/;"	f	unknown:Iterator
__tostring	plugged/plenary.nvim/lua/plenary/path.lua	/^Path.__tostring = function(self)$/;"	f	unknown:Path
_ae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
_append_container	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:_append_container(picker, new_container, should_update)$/;"	f	unknown:EntryManager
_attach_disable	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M._attach_disable = function()$/;"	f	unknown:M
_attach_enable	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M._attach_enable = function()$/;"	f	unknown:M
_b	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
_c	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
_cache	plugged/fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v	package:fzf	typeref:typename:ChunkCache
_callable_obj	plugged/telescope.nvim/lua/telescope/finders.lua	/^local _callable_obj = function()$/;"	f
_callbacks[bufnr]	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^    popup._callbacks[bufnr] = function()$/;"	f	unknown:popup
_close	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions._close = function(prompt_bufnr, keepinsert)$/;"	f	unknown:actions
_colorToAttribute	plugged/fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v	package:tui
_compile	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	m	class:fs
_complete	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M._complete = function(arglead, line)$/;"	f	unknown:M
_create_lines	plugged/plenary.nvim/lua/plenary/window/border.lua	/^function Border._create_lines(content_win_options, border_win_options)$/;"	f	unknown:Border
_create_uv_options	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_create_uv_options()$/;"	f	unknown:Job
_create_window	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_create_window(bufnr, popup_opts, nowrap)$/;"	f	unknown:Picker
_d	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
_decrement	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_decrement(key)$/;"	f	unknown:Picker
_destroy	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_destroy()$/;"	f	unknown:Sorter
_detach	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_detach()$/;"	f	unknown:Picker
_dispatch_file_created	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_file_created(fname)$/;"	f	unknown:M
_dispatch_file_removed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_file_removed(fname)$/;"	f	unknown:M
_dispatch_folder_created	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_folder_created(folder_name)$/;"	f	unknown:M
_dispatch_folder_removed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_folder_removed(folder_name)$/;"	f	unknown:M
_dispatch_node_renamed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_node_renamed(old_name, new_name)$/;"	f	unknown:M
_dispatch_ready	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M._dispatch_ready()$/;"	f	unknown:M
_do_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_do_selection(prompt)$/;"	f	unknown:Picker
_dyn_title_fn	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^    _dyn_title_fn = force_function_wrap(opts.dyn_title),$/;"	f
_e	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
_ee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_execute	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_execute()$/;"	f	unknown:Job
_execute	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester._execute = function(filename)$/;"	f	unknown:tester
_fe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
_find	plugged/telescope.nvim/lua/telescope/finders.lua	/^function DynamicFinder:_find(prompt, process_result, process_complete)$/;"	f	unknown:DynamicFinder
_find	plugged/telescope.nvim/lua/telescope/finders.lua	/^function JobFinder:_find(prompt, process_result, process_complete)$/;"	f	unknown:JobFinder
_find_files_to_run	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^function harness._find_files_to_run(directory)$/;"	f	unknown:harness
_finish	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_finish(prompt)$/;"	f	unknown:Sorter
_for_each_pipe	plugged/telescope.nvim/lua/telescope/_.lua	/^function AsyncJob:_for_each_pipe(f, ...)$/;"	f	unknown:AsyncJob
_format	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^layout_strategies._format = function(name)$/;"	f	unknown:layout_strategies
_fs_filename	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_fs_filename()$/;"	f	unknown:Path
_fzf_alias_completion	plugged/fzf/shell/completion.bash	/^_fzf_alias_completion() {$/;"	f
_fzf_compgen_dir	plugged/fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	plugged/fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	plugged/fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	plugged/fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	plugged/fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	plugged/fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill	plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill_post	plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill_post() {$/;"	f
_fzf_complete_ssh	plugged/fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	plugged/fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	plugged/fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	plugged/fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_dir_completion	plugged/fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	plugged/fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	plugged/fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	plugged/fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	plugged/fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_host_completion	plugged/fzf/shell/completion.bash	/^_fzf_host_completion() {$/;"	f
_fzf_opts_completion	plugged/fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	plugged/fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	plugged/fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_proc_completion	plugged/fzf/shell/completion.bash	/^_fzf_proc_completion() {$/;"	f
_fzf_proc_completion_post	plugged/fzf/shell/completion.bash	/^_fzf_proc_completion_post() {$/;"	f
_fzf_setup_completion	plugged/fzf/shell/completion.bash	/^_fzf_setup_completion() {$/;"	f
_fzf_statusline	plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_var_completion	plugged/fzf/shell/completion.bash	/^_fzf_var_completion() {$/;"	f
_g	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
_get_dir	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function _get_dir(dir)$/;"	f
_get_extension_parts	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype._get_extension_parts = function(filename)$/;"	f	unknown:filetype
_get_next_filtered_prompt	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_get_next_filtered_prompt()$/;"	f	unknown:Picker
_get_parent	plugged/plenary.nvim/lua/plenary/path.lua	/^local _get_parent = (function()$/;"	f
_get_prompt	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_get_prompt()$/;"	f	unknown:Picker
_i	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_if	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M._if = function(bool, a, b)$/;"	f	unknown:M
_increment	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:_increment()$/;"	f	unknown:LinkedList
_increment	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_increment(key)$/;"	f	unknown:Picker
_init	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_init()$/;"	f	unknown:Sorter
_insert_container_after	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:_insert_container_after(picker, index, linked_node, new_container)$/;"	f	unknown:EntryManager
_insert_container_before	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:_insert_container_before(picker, index, linked_node, new_container)$/;"	f	unknown:EntryManager
_jQuery	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var _jQuery = window.jQuery,$/;"	v
_l	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
_le	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
_mark_discarded	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_mark_discarded(prompt, ordinal)$/;"	f	unknown:Sorter
_me	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
_n	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_new	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders._new = function(opts)$/;"	f	unknown:finders
_next_find_id	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_next_find_id()$/;"	f	unknown:Picker
_normalize_path	plugged/plenary.nvim/lua/plenary/path.lua	/^local function _normalize_path(filename, cwd)$/;"	f
_o	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
_on_complete	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_on_complete()$/;"	f	unknown:Picker
_on_input_filter_cb	plugged/telescope.nvim/lua/telescope/pickers.lua	/^    _on_input_filter_cb = opts.on_input_filter_cb or function() end,$/;"	f
_parse_modeline	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype._parse_modeline = function(tail)$/;"	f	unknown:filetype
_parse_shebang	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype._parse_shebang = function(head)$/;"	f	unknown:filetype
_patternCache	plugged/fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v	package:fzf	typeref:typename:map[string]*Pattern
_pipes_are_closed	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_pipes_are_closed(options)$/;"	f	unknown:Job
_prepare_pipes	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_prepare_pipes()$/;"	f	unknown:Job
_prevMouseButton	plugged/fzf/src/tui/tcell.go	/^	_prevMouseButton tcell.ButtonMask$/;"	v	package:tui	typeref:typename:tcell.ButtonMask
_prevent_buffer_override	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M._prevent_buffer_override()$/;"	f	unknown:M
_r	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
_read	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_read()$/;"	f	unknown:Path
_read_async	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_read_async(callback)$/;"	f	unknown:Path
_reset	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_reset()$/;"	f	unknown:Job
_reset_highlights	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_reset_highlights()$/;"	f	unknown:Picker
_reset_prefix_color	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_reset_prefix_color(hl_group)$/;"	f	unknown:Picker
_reset_track	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_reset_track()$/;"	f	unknown:Picker
_resolve_size	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M._resolve_size(size, term)$/;"	f	unknown:M
_resume_picker	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:_resume_picker()$/;"	f	unknown:Picker
_run_func	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M._run_func = function(range, func, ...)$/;"	f	unknown:M
_run_path	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^function harness._run_path(test_type, directory)$/;"	f	unknown:harness
_screen	plugged/fzf/src/tui/tcell.go	/^	_screen          tcell.Screen$/;"	v	package:tui	typeref:typename:tcell.Screen
_se	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
_setup	plugged/which-key.nvim/lua/which-key/plugins/init.lua	/^function M._setup(plugin, opts)$/;"	f	unknown:M
_shutdown	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_shutdown(code, signal)$/;"	f	unknown:Job
_split	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_split()$/;"	f	unknown:Path
_splitRegex	plugged/fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
_split_by_separator	plugged/plenary.nvim/lua/plenary/path.lua	/^local _split_by_separator = (function()$/;"	f
_st_mode	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_st_mode()$/;"	f	unknown:Path
_start	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_start(prompt)$/;"	f	unknown:Sorter
_stat	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:_stat()$/;"	f	unknown:Path
_stop	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:_stop()$/;"	f	unknown:Job
_t	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
_title_fn	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^    _title_fn = force_function_wrap(opts.title),$/;"	f
_update_cwd_head	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local _update_cwd_head = function()$/;"	f
_update_highlights	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M._update_highlights = function()$/;"	f	unknown:M
_update_score_from_tracked	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:_update_score_from_tracked()$/;"	f	unknown:EntryManager
_user_on_exit	plugged/plenary.nvim/lua/plenary/job.lua	/^  jobs[#jobs]._user_on_exit = function(self, err, data)$/;"	f	unknown:jobs[#jobs]
_v	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
_w	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
_was_discarded	plugged/telescope.nvim/lua/telescope/sorters.lua	/^  sorter._was_discarded = function()$/;"	f	unknown:sorter
_was_discarded	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:_was_discarded(prompt, ordinal)$/;"	f	unknown:Sorter
_y	plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
`--filter` will not block when sort is disabled	plugged/fzf/CHANGELOG.md	/^#### `--filter` will not block when sort is disabled$/;"	t	subsection:CHANGELOG""0.9.4""Improvements
`--height`	plugged/fzf/ADVANCED.md	/^### `--height`$/;"	S	section:Advanced fzf examples""Screen Layout
`:FZF[!]`	plugged/fzf/README-VIM.md	/^`:FZF[!]`$/;"	s	chapter:FZF Vim integration
`:replace(function)`	plugged/telescope.nvim/developers.md	/^##### `:replace(function)`$/;"	T	subsubsection:Developers""Technical""Actions""Overriding actions/action_set
`:replace_if(conditional, function)`	plugged/telescope.nvim/developers.md	/^##### `:replace_if(conditional, function)`$/;"	T	subsubsection:Developers""Technical""Actions""Overriding actions/action_set
`:replace_map(configuration)`	plugged/telescope.nvim/developers.md	/^##### `:replace_map(configuration)`$/;"	T	subsubsection:Developers""Technical""Actions""Overriding actions/action_set
`BufferLineGoToBuffer`	plugged/bufferline.nvim/README.md	/^### `BufferLineGoToBuffer`$/;"	S	section:Table of Contents""Feature overview
`TermExec`	plugged/toggleterm.nvim/README.md	/^### `TermExec`$/;"	S	section:Roadmap
`ToggleTermToggleAll`	plugged/toggleterm.nvim/README.md	/^### `ToggleTermToggleAll`$/;"	S	section:Roadmap
`ToggleTerm`	plugged/toggleterm.nvim/README.md	/^### `ToggleTerm`$/;"	S	section:Roadmap
`fzf#run`	plugged/fzf/README-VIM.md	/^`fzf#run`$/;"	s	chapter:FZF Vim integration
`fzf#wrap`	plugged/fzf/README-VIM.md	/^`fzf#wrap`$/;"	s	chapter:FZF Vim integration
`fzf-tmux`	plugged/fzf/ADVANCED.md	/^### `fzf-tmux`$/;"	S	section:Advanced fzf examples""Screen Layout
`fzf-tmux` script	plugged/fzf/README.md	/^`fzf-tmux` script$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
`wal --theme -l github`	plugged/lualine.nvim/THEMES.md	/^#### `wal --theme -l github`$/;"	t	subsection:Available themes""pywal
`wal --theme ashes`	plugged/lualine.nvim/THEMES.md	/^#### `wal --theme ashes`$/;"	t	subsection:Available themes""pywal
`wal --theme vscode`	plugged/lualine.nvim/THEMES.md	/^#### `wal --theme vscode`$/;"	t	subsection:Available themes""pywal
`wal --theme zenburn`	plugged/lualine.nvim/THEMES.md	/^#### `wal --theme zenburn`$/;"	t	subsection:Available themes""pywal
a	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e100
a	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
a	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
a	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
a	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunctionaf1e5c4a34600
a	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12000.e
a	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4af800.e
a	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4aff00.e
a	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
a	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00
a	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
a	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunctionaf1e5c4a33f00
a	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29d00
a	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2ab00
a	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2c100
a	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:Lae
a	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:fB
a	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
a	plugged/emmet-vim/docs/static/css/style-sites.css	/^a{$/;"	s
a	plugged/fzf/src/terminal.go	/^	a string$/;"	m	struct:fzf.action	typeref:typename:string
a	plugged/nvim-treesitter/tests/indent/c/string.c	/^const char *a = "hello \\$/;"	v	typeref:typename:const char *
a	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    int a;$/;"	m	struct:foo	typeref:typename:int	file:
a	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/branches.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^a = 2 \\$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/strings.py	/^a = """$/;"	v
a$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
a0e	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
a5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
a6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
a8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
a9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:hover {$/;"	s
a:link	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:link {$/;"	s
a:visited	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:visited {$/;"	s
aA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
aC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
aD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
aG	plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
aI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
aJ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
aK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
aLe	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
aM	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
aO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
aP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
aQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
aU	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
aV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
aW	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
aY	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
a_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
aa	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
abab	plugged/coc.nvim/package-lock.json	/^        "abab": "^2.0.3",$/;"	s	object:dependencies.data-urls.requires
abab	plugged/coc.nvim/package-lock.json	/^        "abab": "^2.0.5",$/;"	s	object:dependencies.jsdom.requires
abab	plugged/coc.nvim/package-lock.json	/^    "abab": {$/;"	o	object:dependencies
absolute	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:absolute()$/;"	f	unknown:Path
ac	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
accept_header	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.accept_header = function(s)$/;"	f	unknown:parse
accumulate_results	plugged/plenary.nvim/scratch/job_graveyard.lua	/^function Job.accumulate_results(results)$/;"	f	unknown:Job
acorn	plugged/coc.nvim/package-lock.json	/^        "acorn": "^7.1.1",$/;"	s	object:dependencies.acorn-globals.requires
acorn	plugged/coc.nvim/package-lock.json	/^        "acorn": "^7.4.0",$/;"	s	object:dependencies.espree.requires
acorn	plugged/coc.nvim/package-lock.json	/^        "acorn": "^8.2.4",$/;"	s	object:dependencies.jsdom.requires
acorn	plugged/coc.nvim/package-lock.json	/^        "acorn": {$/;"	o	object:dependencies.jsdom.dependencies
acorn	plugged/coc.nvim/package-lock.json	/^    "acorn": {$/;"	o	object:dependencies
acorn-globals	plugged/coc.nvim/package-lock.json	/^        "acorn-globals": "^6.0.0",$/;"	s	object:dependencies.jsdom.requires
acorn-globals	plugged/coc.nvim/package-lock.json	/^    "acorn-globals": {$/;"	o	object:dependencies
acorn-jsx	plugged/coc.nvim/package-lock.json	/^        "acorn-jsx": "^5.3.1",$/;"	s	object:dependencies.espree.requires
acorn-jsx	plugged/coc.nvim/package-lock.json	/^    "acorn-jsx": {$/;"	o	object:dependencies
acorn-walk	plugged/coc.nvim/package-lock.json	/^        "acorn-walk": "^7.1.1"$/;"	s	object:dependencies.acorn-globals.requires
acorn-walk	plugged/coc.nvim/package-lock.json	/^    "acorn-walk": {$/;"	o	object:dependencies
acquire	plugged/plenary.nvim/lua/plenary/async/control.lua	/^Semaphore.acquire = a.wrap(function(self, callback)$/;"	f	unknown:Semaphore
acquire	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^Semaphore.acquire = a.wrap(function(self, callback)$/;"	f	unknown:Semaphore
actAbort	plugged/fzf/src/terminal.go	/^	actAbort$/;"	c	package:fzf
actAccept	plugged/fzf/src/terminal.go	/^	actAccept$/;"	c	package:fzf
actAcceptNonEmpty	plugged/fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c	package:fzf
actBackwardChar	plugged/fzf/src/terminal.go	/^	actBackwardChar$/;"	c	package:fzf
actBackwardDeleteChar	plugged/fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c	package:fzf
actBackwardDeleteCharEOF	plugged/fzf/src/terminal.go	/^	actBackwardDeleteCharEOF$/;"	c	package:fzf
actBackwardKillWord	plugged/fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c	package:fzf
actBackwardWord	plugged/fzf/src/terminal.go	/^	actBackwardWord$/;"	c	package:fzf
actBeginningOfLine	plugged/fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c	package:fzf
actCancel	plugged/fzf/src/terminal.go	/^	actCancel$/;"	c	package:fzf
actChangePrompt	plugged/fzf/src/terminal.go	/^	actChangePrompt$/;"	c	package:fzf
actClearQuery	plugged/fzf/src/terminal.go	/^	actClearQuery$/;"	c	package:fzf
actClearScreen	plugged/fzf/src/terminal.go	/^	actClearScreen$/;"	c	package:fzf
actClearSelection	plugged/fzf/src/terminal.go	/^	actClearSelection$/;"	c	package:fzf
actClose	plugged/fzf/src/terminal.go	/^	actClose$/;"	c	package:fzf
actDeleteChar	plugged/fzf/src/terminal.go	/^	actDeleteChar$/;"	c	package:fzf
actDeleteCharEOF	plugged/fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c	package:fzf
actDeselect	plugged/fzf/src/terminal.go	/^	actDeselect$/;"	c	package:fzf
actDeselectAll	plugged/fzf/src/terminal.go	/^	actDeselectAll$/;"	c	package:fzf
actDisableSearch	plugged/fzf/src/terminal.go	/^	actDisableSearch$/;"	c	package:fzf
actDown	plugged/fzf/src/terminal.go	/^	actDown$/;"	c	package:fzf
actEnableSearch	plugged/fzf/src/terminal.go	/^	actEnableSearch$/;"	c	package:fzf
actEndOfLine	plugged/fzf/src/terminal.go	/^	actEndOfLine$/;"	c	package:fzf
actExecute	plugged/fzf/src/terminal.go	/^	actExecute$/;"	c	package:fzf
actExecuteMulti	plugged/fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c	package:fzf
actExecuteSilent	plugged/fzf/src/terminal.go	/^	actExecuteSilent$/;"	c	package:fzf
actFirst	plugged/fzf/src/terminal.go	/^	actFirst$/;"	c	package:fzf
actForwardChar	plugged/fzf/src/terminal.go	/^	actForwardChar$/;"	c	package:fzf
actForwardWord	plugged/fzf/src/terminal.go	/^	actForwardWord$/;"	c	package:fzf
actHalfPageDown	plugged/fzf/src/terminal.go	/^	actHalfPageDown$/;"	c	package:fzf
actHalfPageUp	plugged/fzf/src/terminal.go	/^	actHalfPageUp$/;"	c	package:fzf
actIgnore	plugged/fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c	package:fzf	typeref:type:actionType
actInvalid	plugged/fzf/src/terminal.go	/^	actInvalid$/;"	c	package:fzf
actJump	plugged/fzf/src/terminal.go	/^	actJump$/;"	c	package:fzf
actJumpAccept	plugged/fzf/src/terminal.go	/^	actJumpAccept$/;"	c	package:fzf
actKillLine	plugged/fzf/src/terminal.go	/^	actKillLine$/;"	c	package:fzf
actKillWord	plugged/fzf/src/terminal.go	/^	actKillWord$/;"	c	package:fzf
actLast	plugged/fzf/src/terminal.go	/^	actLast$/;"	c	package:fzf
actMouse	plugged/fzf/src/terminal.go	/^	actMouse$/;"	c	package:fzf
actNextHistory	plugged/fzf/src/terminal.go	/^	actNextHistory$/;"	c	package:fzf
actPageDown	plugged/fzf/src/terminal.go	/^	actPageDown$/;"	c	package:fzf
actPageUp	plugged/fzf/src/terminal.go	/^	actPageUp$/;"	c	package:fzf
actPreview	plugged/fzf/src/terminal.go	/^	actPreview$/;"	c	package:fzf
actPreviewBottom	plugged/fzf/src/terminal.go	/^	actPreviewBottom$/;"	c	package:fzf
actPreviewDown	plugged/fzf/src/terminal.go	/^	actPreviewDown$/;"	c	package:fzf
actPreviewHalfPageDown	plugged/fzf/src/terminal.go	/^	actPreviewHalfPageDown$/;"	c	package:fzf
actPreviewHalfPageUp	plugged/fzf/src/terminal.go	/^	actPreviewHalfPageUp$/;"	c	package:fzf
actPreviewPageDown	plugged/fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c	package:fzf
actPreviewPageUp	plugged/fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c	package:fzf
actPreviewTop	plugged/fzf/src/terminal.go	/^	actPreviewTop$/;"	c	package:fzf
actPreviewUp	plugged/fzf/src/terminal.go	/^	actPreviewUp$/;"	c	package:fzf
actPreviousHistory	plugged/fzf/src/terminal.go	/^	actPreviousHistory$/;"	c	package:fzf
actPrintQuery	plugged/fzf/src/terminal.go	/^	actPrintQuery$/;"	c	package:fzf
actRefreshPreview	plugged/fzf/src/terminal.go	/^	actRefreshPreview$/;"	c	package:fzf
actReload	plugged/fzf/src/terminal.go	/^	actReload$/;"	c	package:fzf
actReplaceQuery	plugged/fzf/src/terminal.go	/^	actReplaceQuery$/;"	c	package:fzf
actRune	plugged/fzf/src/terminal.go	/^	actRune$/;"	c	package:fzf
actSelect	plugged/fzf/src/terminal.go	/^	actSelect$/;"	c	package:fzf
actSelectAll	plugged/fzf/src/terminal.go	/^	actSelectAll$/;"	c	package:fzf
actSigStop	plugged/fzf/src/terminal.go	/^	actSigStop$/;"	c	package:fzf
actToggle	plugged/fzf/src/terminal.go	/^	actToggle$/;"	c	package:fzf
actToggleAll	plugged/fzf/src/terminal.go	/^	actToggleAll$/;"	c	package:fzf
actToggleDown	plugged/fzf/src/terminal.go	/^	actToggleDown$/;"	c	package:fzf
actToggleIn	plugged/fzf/src/terminal.go	/^	actToggleIn$/;"	c	package:fzf
actToggleOut	plugged/fzf/src/terminal.go	/^	actToggleOut$/;"	c	package:fzf
actTogglePreview	plugged/fzf/src/terminal.go	/^	actTogglePreview$/;"	c	package:fzf
actTogglePreviewWrap	plugged/fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c	package:fzf
actToggleSearch	plugged/fzf/src/terminal.go	/^	actToggleSearch$/;"	c	package:fzf
actToggleSort	plugged/fzf/src/terminal.go	/^	actToggleSort$/;"	c	package:fzf
actToggleUp	plugged/fzf/src/terminal.go	/^	actToggleUp$/;"	c	package:fzf
actUnbind	plugged/fzf/src/terminal.go	/^	actUnbind$/;"	c	package:fzf
actUnixLineDiscard	plugged/fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c	package:fzf
actUnixWordRubout	plugged/fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c	package:fzf
actUp	plugged/fzf/src/terminal.go	/^	actUp$/;"	c	package:fzf
actYank	plugged/fzf/src/terminal.go	/^	actYank$/;"	c	package:fzf
action	plugged/fzf/src/terminal.go	/^type action struct {$/;"	s	package:fzf
action	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  action = function(prompt_bufnr)$/;"	f
actionType	plugged/fzf/src/terminal.go	/^type actionType int$/;"	t	package:fzf	typeref:typename:int
activeTempFiles	plugged/fzf/src/terminal.go	/^var activeTempFiles []string$/;"	v	package:fzf	typeref:typename:[]string
add	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Section:add(item)$/;"	f	unknown:Section
add	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
add	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	add: function(elem, types, handler, data) {$/;"	m	class:jQuery.event
add	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	function add(l, t) {$/;"	f
add	plugged/gitsigns.nvim/lua/gitsigns/signs.lua	/^function M.add(cfg, bufnr, signs)$/;"	f	unknown:M
add	plugged/plenary.nvim/lua/plenary/async/uv_async.lua	/^local function add(name, argc)$/;"	f
add	plugged/plenary.nvim/lua/plenary/async_lib/uv_async.lua	/^local function add(name, argc)$/;"	f
add	plugged/plenary.nvim/lua/plenary/operators.lua	/^  add = function(a, b)$/;"	f
add	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:add(entry)$/;"	f	unknown:MultiSelect
add	plugged/which-key.nvim/lua/which-key/keys.lua	/^  local function add(node)$/;"	f
add	plugged/which-key.nvim/lua/which-key/tree.lua	/^function Tree:add(mapping)$/;"	f	unknown:Tree
addRequest	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunctionaf1e5c4a33e00.e
add_action	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^   local function add_action(action)$/;"	f
add_click_action	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_click_action(context)$/;"	f
add_debug_functions	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.add_debug_functions(cache)$/;"	f	unknown:M
add_description	plugged/plenary.nvim/lua/plenary/busted.lua	/^local add_description = function(desc)$/;"	f
add_entry	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:add_entry(picker, score, entry)$/;"	f	unknown:EntryManager
add_extension	plugged/plenary.nvim/scripts/update_filetypes_from_github.lua	/^  local add_extension = function(ext, filetype, priority)$/;"	f
add_file	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.add_file = function(filename)$/;"	f	unknown:filetype
add_filename	plugged/plenary.nvim/scripts/update_filetypes_from_github.lua	/^  local add_filename = function(filename, filetype)$/;"	f
add_formatter	plugged/plenary.nvim/lua/luassert/assert.lua	/^  add_formatter = function(self, callback)$/;"	f
add_formatter	plugged/plenary.nvim/lua/luassert/state.lua	/^state.add_formatter = function(callback)$/;"	f	unknown:state
add_globals	plugged/plenary.nvim/lua/plenary/async/init.lua	/^exports.tests.add_globals = function()$/;"	f	unknown:exports.tests
add_globals	plugged/plenary.nvim/lua/plenary/async_lib/init.lua	/^exports.tests.add_globals = function()$/;"	f	unknown:exports.tests
add_group	plugged/bufferline.nvim/lua/bufferline/highlights.lua	/^function M.add_group(name, highlight)$/;"	f	unknown:M
add_highlight	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^   local function add_highlight(hlgroup, start, length)$/;"	f
add_highlight_groups	plugged/bufferline.nvim/lua/bufferline/config.lua	/^local function add_highlight_groups(highlights)$/;"	f
add_hooks	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.add_hooks(mode, buf, node, secret_only)$/;"	f	unknown:M
add_indicator	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_indicator(context)$/;"	f
add_new_each	plugged/plenary.nvim/lua/plenary/busted.lua	/^local add_new_each = function()$/;"	f
add_notice	plugged/lualine.nvim/lua/lualine/utils/notices.lua	/^function M.add_notice(notice)$/;"	f	unknown:M
add_on_exit_callback	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:add_on_exit_callback(cb)$/;"	f	unknown:Job
add_padding	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_padding(sides)$/;"	f
add_persistent_notice	plugged/lualine.nvim/lua/lualine/utils/notices.lua	/^function M.add_persistent_notice(notice)$/;"	f	unknown:M
add_position_config	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^local function add_position_config(win_opts, vim_options, default_opts)$/;"	f
add_prefix	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_prefix(context)$/;"	f
add_selected_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.add_selected_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
add_selected_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.add_selected_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
add_selection	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.add_selection(prompt_bufnr)$/;"	f	unknown:actions
add_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:add_selection(row)$/;"	f	unknown:Picker
add_separators	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_separators(context)$/;"	f
add_sign	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^local function add_sign(linenr, severity)$/;"	f
add_spacing	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_spacing(context)$/;"	f
add_spy	plugged/plenary.nvim/lua/luassert/assert.lua	/^  add_spy = function(self, spy)$/;"	f
add_spy	plugged/plenary.nvim/lua/luassert/state.lua	/^state.add_spy = function(spy)$/;"	f	unknown:state
add_suffix	plugged/bufferline.nvim/lua/bufferline.lua	/^local function add_suffix(context)$/;"	f
add_table	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.add_table = function(new_filetypes)$/;"	f	unknown:filetype
add_tag_file	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^  local function add_tag_file(lang, file)$/;"	f
add_to_clipboard	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function add_to_clipboard(node, clip)$/;"	f
add_to_env	plugged/plenary.nvim/lua/plenary/async/init.lua	/^exports.tests.add_to_env = function()$/;"	f	unknown:exports.tests
add_to_env	plugged/plenary.nvim/lua/plenary/async_lib/init.lua	/^exports.tests.add_to_env = function()$/;"	f	unknown:exports.tests
add_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.add_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
add_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.add_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
add_value	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^  local add_value = function(k, val)$/;"	f
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false$/;"	b	object:properties.suggest.completionItemKindLabels
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerCommand
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerModule
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerSocket
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.diagnostic.floatConfig
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.hover.floatConfig
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.signature.floatConfig
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.suggest.floatConfig
additionalProperties	plugged/coc.nvim/data/schema.json	/^  "additionalProperties": false,$/;"	b
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {$/;"	o	object:definitions.languageServerBase.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerCommand.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerModule.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerSocket.properties
ae	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
aee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
af	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
after	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
after	plugged/nvim-treesitter/tests/indent/common.lua	/^  local before, after = M.run_indent_test(file, function()$/;"	f
after	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:after(fn)$/;"	f	unknown:Job
after_each	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.after_each = function(fn)$/;"	f	unknown:mod
after_failure	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:after_failure(fn)$/;"	f	unknown:Job
after_success	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:after_success(fn)$/;"	f	unknown:Job
age	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
agent	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
agent-base	plugged/coc.nvim/package-lock.json	/^        "agent-base": "6",$/;"	s	object:dependencies.http-proxy-agent.requires
agent-base	plugged/coc.nvim/package-lock.json	/^        "agent-base": "6",$/;"	s	object:dependencies.https-proxy-agent.requires
agent-base	plugged/coc.nvim/package-lock.json	/^    "agent-base": {$/;"	o	object:dependencies
ah	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers) abort$/;"	f
aj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ajv	plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.10.0",$/;"	s	object:dependencies.eslint.requires
ajv	plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.10.2",$/;"	s	object:dependencies.table.requires
ajv	plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.12.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ajv	plugged/coc.nvim/package-lock.json	/^    "ajv": {$/;"	o	object:dependencies
ak	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
alacritty	plugged/github-nvim-theme/lua/github-theme/extra/alacritty.lua	/^function M.alacritty(config)$/;"	f	unknown:M
ale	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^  ale = function()$/;"	f
algo	plugged/fzf/src/algo/algo.go	/^package algo$/;"	p
algo	plugged/fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	plugged/fzf/src/algo/normalize.go	/^package algo$/;"	p
align_str	plugged/plenary.nvim/lua/plenary/strings.lua	/^M.align_str = function(string, width, right_justify)$/;"	f	unknown:M
aligned_indent	plugged/nvim-treesitter/tests/indent/python/aligned_indent.py	/^def aligned_indent(arg1,$/;"	f
all	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
all	plugged/emmet-vim/Makefile	/^all : emmet-vim.zip$/;"	t
all	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
all	plugged/fzf/Makefile	/^all: target\/$(BINARY)$/;"	t
all	plugged/plenary.nvim/lua/luassert/matchers/composite.lua	/^local function all(state, arguments, level)$/;"	f
all	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.all(fun, iterable)$/;"	f	unknown:f
all	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:all(fun)$/;"	f	unknown:Iterator
allItems	plugged/fzf/src/terminal_test.go	/^	allItems []*Item$/;"	m	struct:fzf.give	typeref:typename:[]*Item
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.diagnostic.floatConfig
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.hover.floatConfig
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.signature.floatConfig
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.suggest.floatConfig
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerCommand
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerModule
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerSocket
alloc16	plugged/fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f	package:algo	typeref:typename:(int, []int16)
alloc32	plugged/fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f	package:algo	typeref:typename:(int, []int32)
allowTrailingComma	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:r.DEFAULT
alter	plugged/bufferline.nvim/lua/bufferline/colors.lua	/^local function alter(attr, percent)$/;"	f
ame	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
an	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
ancestor	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Buffer:ancestor(depth, formatter)$/;"	f	unknown:Buffer
and_then	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then(next_job)$/;"	f	unknown:Job
and_then_on_failure	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then_on_failure(next_job)$/;"	f	unknown:Job
and_then_on_failure_wrap	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then_on_failure_wrap(next_job)$/;"	f	unknown:Job
and_then_on_success	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then_on_success(next_job)$/;"	f	unknown:Job
and_then_on_success_wrap	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then_on_success_wrap(next_job)$/;"	f	unknown:Job
and_then_wrap	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:and_then_wrap(next_job)$/;"	f	unknown:Job
ansi	plugged/fzf/src/terminal.go	/^	ansi         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
ansi-colors	plugged/coc.nvim/package-lock.json	/^        "ansi-colors": "^4.1.1"$/;"	s	object:dependencies.enquirer.requires
ansi-colors	plugged/coc.nvim/package-lock.json	/^    "ansi-colors": {$/;"	o	object:dependencies
ansi-escapes	plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.@jest/core.requires
ansi-escapes	plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.jest-watcher.requires
ansi-escapes	plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.terminal-link.requires
ansi-escapes	plugged/coc.nvim/package-lock.json	/^    "ansi-escapes": {$/;"	o	object:dependencies
ansi-regex	plugged/coc.nvim/package-lock.json	/^            "ansi-regex": "^4.1.0"$/;"	s	object:dependencies.table.dependencies.strip-ansi.requires
ansi-regex	plugged/coc.nvim/package-lock.json	/^        "ansi-regex": "^5.0.0"$/;"	s	object:dependencies.strip-ansi.requires
ansi-regex	plugged/coc.nvim/package-lock.json	/^        "ansi-regex": "^5.0.0",$/;"	s	object:dependencies.pretty-format.requires
ansi-regex	plugged/coc.nvim/package-lock.json	/^        "ansi-regex": {$/;"	o	object:dependencies.table.dependencies
ansi-regex	plugged/coc.nvim/package-lock.json	/^    "ansi-regex": {$/;"	o	object:dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^            "ansi-styles": "^3.2.1",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^            "ansi-styles": "^3.2.1",$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^3.2.0",$/;"	s	object:dependencies.slice-ansi.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.expect.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.pretty-format.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.wrap-ansi.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.1.0",$/;"	s	object:dependencies.chalk.requires
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.@babel/highlight.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.chalk.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.cli-table.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.expect.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.pretty-format.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.slice-ansi.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.wrap-ansi.dependencies
ansi-styles	plugged/coc.nvim/package-lock.json	/^    "ansi-styles": {$/;"	o	object:dependencies
ansiBenchmarkString	plugged/fzf/src/ansi_test.go	/^const ansiBenchmarkString = "\\x1b[38;5;81m\\x1b[01;31m\\x1b[Kkernel\/\\x1b[0m\\x1b[38;5;81mbpf\//;"	c	package:fzf
ansiOffset	plugged/fzf/src/ansi.go	/^type ansiOffset struct {$/;"	s	package:fzf
ansiRegexReference	plugged/fzf/src/ansi_test.go	/^var ansiRegexReference = regexp.MustCompile("(?:\\x1b[\\\\[()][0-9;]*[a-zA-Z@]|\\x1b][0-9];[[:pr/;"	v	package:fzf
ansiState	plugged/fzf/src/ansi.go	/^type ansiState struct {$/;"	s	package:fzf
any	plugged/plenary.nvim/lua/luassert/matchers/composite.lua	/^local function any(state, arguments, level)$/;"	f
any	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.any(fun, iterable)$/;"	f	unknown:f
any	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:any(fun)$/;"	f	unknown:Iterator
anyOf	plugged/coc.nvim/data/schema.json	/^      "anyOf": [$/;"	a	object:properties.coc.preferences.jumpCommand
any_include?	plugged/fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	method:Tmux.until
anymatch	plugged/coc.nvim/package-lock.json	/^        "anymatch": "^2.0.0",$/;"	s	object:dependencies.sane.requires
anymatch	plugged/coc.nvim/package-lock.json	/^        "anymatch": "^3.0.3",$/;"	s	object:dependencies.jest-haste-map.requires
anymatch	plugged/coc.nvim/package-lock.json	/^        "anymatch": "~3.1.1",$/;"	s	object:dependencies.chokidar.requires
anymatch	plugged/coc.nvim/package-lock.json	/^        "anymatch": {$/;"	o	object:dependencies.sane.dependencies
anymatch	plugged/coc.nvim/package-lock.json	/^    "anymatch": {$/;"	o	object:dependencies
ao	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
aoe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
ap	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
apcall	plugged/plenary.nvim/lua/plenary/async/util.lua	/^function M.apcall(async_fn, ...)$/;"	f	unknown:M
append	plugged/fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f	struct:fzf.History	typeref:typename:error
append	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^    append = function(self, line, _, no_reset)$/;"	f
append	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.History:append(line, picker, no_reset)$/;"	f	unknown:histories.History
append	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:append(item)$/;"	f	unknown:LinkedList
append	plugged/telescope.nvim/lua/telescope/config.lua	/^local append = function(name, val, doc)$/;"	f
append_async	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^local append_async = function(path, txt)$/;"	f
append_line	plugged/fzf/install	/^append_line() {$/;"	f
append_mode	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.append_mode(highlight_group, is_focused)$/;"	f	unknown:M
append_module_table	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function append_module_table(curbuf, parserlist, namespace, modulelist)$/;"	f
apply	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function M.apply()$/;"	f	unknown:M
apply	plugged/onedarkpro.nvim/lua/onedarkpro/theme.lua	/^function M.apply(colors, config)$/;"	f	unknown:M
apply_buffer_filter	plugged/bufferline.nvim/lua/bufferline.lua	/^local function apply_buffer_filter(buf_nums, callback)$/;"	f
apply_checks	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^local function apply_checks(mod)$/;"	f
apply_checks	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^local function apply_checks(mod)$/;"	f
apply_checks	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^local function apply_checks(mod)$/;"	f
apply_checks	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^local function apply_checks(mod)$/;"	f
apply_config	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^local apply_config = function(mod)$/;"	f
apply_configuration	plugged/github-nvim-theme/lua/github-theme/config.lua	/^local function apply_configuration(user_config)$/;"	f
apply_configuration	plugged/lualine.nvim/lua/lualine/config.lua	/^local function apply_configuration(config_table)$/;"	f
apply_contrast	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function apply_contrast(highlight)$/;"	f
apply_cwd_only_aliases	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^local function apply_cwd_only_aliases(opts)$/;"	f
apply_defaults	plugged/plenary.nvim/lua/plenary/popup/utils.lua	/^utils.apply_defaults = function(original, defaults)$/;"	f	unknown:utils
apply_defaults	plugged/plenary.nvim/lua/plenary/tbl.lua	/^function tbl.apply_defaults(original, defaults)$/;"	f	unknown:tbl
apply_highlights	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:apply_highlights(default_highlight)$/;"	f	unknown:M
apply_icon	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:apply_icon()$/;"	f	unknown:M
apply_icon	plugged/lualine.nvim/lua/lualine/components/filetype.lua	/^function M:apply_icon()$/;"	f	unknown:M
apply_keymap	plugged/telescope.nvim/lua/telescope/mappings.lua	/^mappings.apply_keymap = function(prompt_bufnr, attach_mappings, buffer_keymap)$/;"	f	unknown:mappings
apply_mappings	plugged/gitsigns.nvim/lua/gitsigns/mappings.lua	/^local function apply_mappings(mappings, bufnr)$/;"	f
apply_padding	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:apply_padding()$/;"	f	unknown:M
apply_section_separators	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:apply_section_separators()$/;"	f	unknown:M
apply_separator	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:apply_separator()$/;"	f	unknown:M
apply_transitional_separators	plugged/lualine.nvim/lua/lualine.lua	/^local function apply_transitional_separators(status)$/;"	f
apply_win_signs	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^function M.apply_win_signs(bufnr, pending, top, bot)$/;"	f	unknown:M
apply_word_diff	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^M.apply_word_diff = function(bufnr, row)$/;"	f	unknown:M
aquarium_bg	plugged/aquarium-vim/extras/alacritty_aquarium.yml	/^      background:        &aquarium_bg '#20202a'$/;"	a
aquarium_bg	plugged/aquarium-vim/extras/alacritty_aquarium.yml	/^      background:        &aquarium_bg '#E6E6F1'$/;"	a
argparse	plugged/coc.nvim/package-lock.json	/^        "argparse": "^1.0.7",$/;"	s	object:dependencies.js-yaml.requires
argparse	plugged/coc.nvim/package-lock.json	/^    "argparse": {$/;"	o	object:dependencies
args	coc-settings.json	/^            "args": [$/;"	a	object:languageserver.racket
args	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
args	plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerCommand.properties
args	plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerModule.properties
args=	plugged/fzf/bin/fzf-tmux	/^      args=()$/;"	f
args=	plugged/fzf/bin/fzf-tmux	/^args=()$/;"	f
args=	plugged/fzf/shell/completion.bash	/^    args=()$/;"	f
args=	plugged/fzf/shell/completion.zsh	/^    args=()$/;"	f
args[name]	plugged/lualine.nvim/lua/lualine/utils/job.lua	/^      self.args[name] = function(...)$/;"	f	unknown:self
arify	plugged/plenary.nvim/lua/plenary/fun.lua	/^function M.arify(fn, argc)$/;"	f	unknown:M
arr-diff	plugged/coc.nvim/package-lock.json	/^            "arr-diff": "^4.0.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
arr-diff	plugged/coc.nvim/package-lock.json	/^        "arr-diff": "^4.0.0",$/;"	s	object:dependencies.nanomatch.requires
arr-diff	plugged/coc.nvim/package-lock.json	/^    "arr-diff": {$/;"	o	object:dependencies
arr-flatten	plugged/coc.nvim/package-lock.json	/^            "arr-flatten": "^1.1.0",$/;"	s	object:dependencies.sane.dependencies.braces.requires
arr-flatten	plugged/coc.nvim/package-lock.json	/^    "arr-flatten": {$/;"	o	object:dependencies
arr-union	plugged/coc.nvim/package-lock.json	/^        "arr-union": "^3.1.0",$/;"	s	object:dependencies.class-utils.requires
arr-union	plugged/coc.nvim/package-lock.json	/^        "arr-union": "^3.1.0",$/;"	s	object:dependencies.union-value.requires
arr-union	plugged/coc.nvim/package-lock.json	/^    "arr-union": {$/;"	o	object:dependencies
array	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
array	plugged/plenary.nvim/lua/luassert/array.lua	/^local function array(state, args, level)$/;"	f
array-union	plugged/coc.nvim/package-lock.json	/^        "array-union": "^2.1.0",$/;"	s	object:dependencies.globby.requires
array-union	plugged/coc.nvim/package-lock.json	/^    "array-union": {$/;"	o	object:dependencies
array-unique	plugged/coc.nvim/package-lock.json	/^            "array-unique": "^0.3.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
array-unique	plugged/coc.nvim/package-lock.json	/^            "array-unique": "^0.3.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
array-unique	plugged/coc.nvim/package-lock.json	/^        "array-unique": "^0.3.2",$/;"	s	object:dependencies.extglob.requires
array-unique	plugged/coc.nvim/package-lock.json	/^        "array-unique": "^0.3.2",$/;"	s	object:dependencies.nanomatch.requires
array-unique	plugged/coc.nvim/package-lock.json	/^    "array-unique": {$/;"	o	object:dependencies
array_concat	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.array_concat(...)$/;"	f	unknown:M
arshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.arshift(x, disp) -- Lua5.2 inspired$/;"	f	unknown:M
arshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.arshift(x, n)$/;"	f	unknown:M.bit
article	plugged/emmet-vim/docs/static/css/style-sites.css	/^article {$/;"	s
as	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
as_buffer	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Component:as_buffer()$/;"	f	unknown:Component
as_buffer	plugged/bufferline.nvim/tests/utils.lua	/^function MockBuffer:as_buffer()$/;"	f	unknown:MockBuffer
ascending	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^  ascending = function(max_results, num_results)$/;"	f
asciiFuzzyIndex	plugged/fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f	package:algo	typeref:typename:int
asciicast-4568	plugged/emmet-vim/docs/index.html	/^				<script type="text\/javascript" src="https:\/\/asciinema.org\/a\/4568.js" id="asciicast-4568/;"	I
ask	plugged/fzf/install	/^ask() {$/;"	f
ask	plugged/fzf/uninstall	/^ask() {$/;"	f
assert	plugged/fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f	package:fzf
assert	plugged/fzf/src/tui/tcell_test.go	/^func assert(t *testing.T, context string, got interface{}, want interface{}) bool {$/;"	f	package:tui	typeref:typename:bool
assertChangeAnnotations	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
assertMatch	plugged/fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sid/;"	f	package:algo
assertMatch2	plugged/fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern/;"	f	package:algo
assert_component	plugged/lualine.nvim/lua/tests/helpers.lua	/^M.assert_component = function(component, opts, result)$/;"	f	unknown:M
assign-symbols	plugged/coc.nvim/package-lock.json	/^        "assign-symbols": "^1.0.0",$/;"	s	object:dependencies.extend-shallow.requires
assign-symbols	plugged/coc.nvim/package-lock.json	/^    "assign-symbols": {$/;"	o	object:dependencies
astral-regex	plugged/coc.nvim/package-lock.json	/^        "astral-regex": "^1.0.0",$/;"	s	object:dependencies.slice-ansi.requires
astral-regex	plugged/coc.nvim/package-lock.json	/^    "astral-regex": {$/;"	o	object:dependencies
async	plugged/indent-blankline.nvim/lua/indent_blankline/init.lua	/^            async = vim.loop.new_async(function()$/;"	f
async	plugged/material.nvim/lua/material/util.lua	/^    async = vim.loop.new_async(vim.schedule_wrap(function ()$/;"	f
async	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.async = function(func)$/;"	f	unknown:M
async_replace	plugged/nvim-spectre/lua/spectre/init.lua	/^M.async_replace = function(query)$/;"	f	unknown:M
async_void	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.async_void = function(func)$/;"	f	unknown:M
asynckit	plugged/coc.nvim/package-lock.json	/^        "asynckit": "^0.4.0",$/;"	s	object:dependencies.form-data.requires
asynckit	plugged/coc.nvim/package-lock.json	/^    "asynckit": {$/;"	o	object:dependencies
at	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
at	plugged/fzf/src/terminal.go	/^	at   time.Time$/;"	m	struct:fzf.selectedItem	typeref:typename:time.Time
at-least-node	plugged/coc.nvim/package-lock.json	/^        "at-least-node": "^1.0.0",$/;"	s	object:dependencies.fs-extra.requires
at-least-node	plugged/coc.nvim/package-lock.json	/^    "at-least-node": {$/;"	o	object:dependencies
atob	plugged/coc.nvim/package-lock.json	/^        "atob": "^2.1.2",$/;"	s	object:dependencies.source-map-resolve.requires
atob	plugged/coc.nvim/package-lock.json	/^    "atob": {$/;"	o	object:dependencies
atof	plugged/fzf/src/options.go	/^func atof(str string) float64 {$/;"	f	package:fzf	typeref:typename:float64
atoi	plugged/fzf/src/options.go	/^func atoi(str string) int {$/;"	f	package:fzf	typeref:typename:int
atoi	plugged/fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
attach	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local attach = function(cbuf, trigger)$/;"	f
attach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^M.attach = attach.make_attach(normal_mode_functions, "lsp_interop")$/;"	f	unknown:M
attach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.attach = attach.make_attach(normal_mode_functions, "move")$/;"	f	unknown:M
attach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/select.lua	/^function M.attach(bufnr, lang)$/;"	f	unknown:M
attach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/swap.lua	/^M.attach = attach.make_attach(normal_mode_functions, "swap")$/;"	f	unknown:M
attach	plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.attach(bufnr, lang)$/;"	f	unknown:M
attach	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.attach(bufnr)$/;"	f	unknown:M
attach	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.attach(bufnr)$/;"	f	unknown:M
attach	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.attach = function (bufnr,lang)$/;"	f	unknown:M
attach0	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local attach0 = function(cbuf, aucmd)$/;"	f
attachPrintFunction	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^function module.attachPrintFunction(fn, verbose)$/;"	f	unknown:module
attach_mappings	plugged/telescope.nvim/lua/telescope/WIP.lua	/^    attach_mappings = function(prompt_bufnr, map)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^    attach_mappings = function()$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^    attach_mappings = function(prompt_bufnr, map)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^    attach_mappings = function()$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^    attach_mappings = function(_, map)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^    attach_mappings = function(prompt_bufnr, map)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^        defaults.attach_mappings = function(_, map)$/;"	f	unknown:defaults
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^        opts.attach_mappings = function(prompt_bufnr, map)$/;"	f	unknown:opts
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    attach_mappings = function()$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    attach_mappings = function(_)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    attach_mappings = function(_, map)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    attach_mappings = function(prompt_bufnr)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^    attach_mappings = function(prompt_bufnr)$/;"	f
attach_mappings	plugged/telescope.nvim/lua/tests/automated/telescope_spec.lua	/^          attach_mappings = function()$/;"	f
attach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.attach_module(mod_name, bufnr, lang)$/;"	f	unknown:M
attr	plugged/fzf/src/ansi.go	/^	attr tui.Attr$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Attr
attr	plugged/fzf/src/tui/tui.go	/^	attr Attr$/;"	m	struct:tui.ColorPair	typeref:typename:Attr
attrCodes	plugged/fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f	package:tui	typeref:typename:[]string
augroup	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.augroup(definitions)$/;"	f	unknown:M
auth	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
auth	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.auth = function(xs)$/;"	f	unknown:parse
author	plugged/coc.nvim/package.json	/^  "author": "Qiming Zhao <chemzqm@gmail.com>",$/;"	s
author	plugged/emmet-vim/docs/index.html	/^			<article id="author">$/;"	I
author	plugged/vim-easy-replace/addon-info.json	/^  "author": "kqito"$/;"	s
auto	plugged/lualine.nvim/THEMES.md	/^### auto$/;"	S	chapter:Available themes
auto_find_files	plugged/telescope.nvim/lua/tests/helpers.lua	/^helpers.auto_find_files = function(opts)$/;"	f	unknown:helpers
autocmd_is_defined	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^local function autocmd_is_defined(event, patern, command_str)$/;"	f
autocmds	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.autocmds(config)$/;"	f	unknown:util
autocmds	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.autocmds(config)$/;"	f	unknown:util
autocommands	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.autocommands = function(opts)$/;"	f	unknown:internal
autocommands	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.autocommands = defaulter(function(_)$/;"	f	unknown:previewers
av	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
available_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.available_modules(root)$/;"	f	unknown:M
available_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.available_parsers()$/;"	f	unknown:M
available_query_groups	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.available_query_groups()$/;"	f	unknown:M
available_textobjects	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^function M.available_textobjects(lang)$/;"	f	unknown:M
aw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
await	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.await = function(future)$/;"	f	unknown:M
await_all	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.await_all = function(futures)$/;"	f	unknown:M
awkBlack	plugged/fzf/src/tokenizer.go	/^	awkBlack$/;"	c	package:fzf
awkNil	plugged/fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c	package:fzf
awkTokenizer	plugged/fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f	package:fzf	typeref:typename:([]string, int)
awkWhite	plugged/fzf/src/tokenizer.go	/^	awkWhite$/;"	c	package:fzf
ax	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
ay	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
ayu	plugged/lualine.nvim/THEMES.md	/^### ayu$/;"	S	chapter:Available themes
ayu_dark	plugged/lualine.nvim/THEMES.md	/^### ayu_dark$/;"	S	chapter:Available themes
ayu_light	plugged/lualine.nvim/THEMES.md	/^### ayu_light$/;"	S	chapter:Available themes
ayu_mirage	plugged/lualine.nvim/THEMES.md	/^### ayu_mirage$/;"	S	chapter:Available themes
b	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
b	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
b	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
b	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionaf1e5c4a1800.AnonymousFunctionaf1e5c4a1900
b	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
b	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
b	plugged/nvim-treesitter/tests/indent/c/string.c	/^const char *b = "hello "$/;"	v	typeref:typename:const char *
b	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    } b;$/;"	m	struct:foo	typeref:struct:foo::bar	file:
b	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^b = {$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/branches.py	/^b = [$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^b = {$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^b = 'hello' \\$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^b = [$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/strings.py	/^b = """$/;"	v
b	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> b             :call startify#set_mark('B')<cr>$/;"	m
b$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
b0	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
b5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
b6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
b7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
b8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
b9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
b:current_syntax	plugged/tagbar/syntax/tagbar.vim	/^let b:current_syntax = 'tagbar'$/;"	v
b:current_syntax	plugged/vim-blade/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-startify/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
b:did_ftplugin	plugged/vim-blade/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugged/vim-blade/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:match_ignorecase	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_skip	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_words	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:rltvnmbrmode	RltvNmbrPlugin.vim	/^ let b:rltvnmbrmode= 0$/;"	v
bA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
bB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
bC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
bD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
bG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
bI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
bK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
bL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
bN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
bOe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
bP	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
bV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
bX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
bZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
b_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ba	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
babel-jest	plugged/coc.nvim/package-lock.json	/^        "babel-jest": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
babel-jest	plugged/coc.nvim/package-lock.json	/^    "babel-jest": {$/;"	o	object:dependencies
babel-plugin-istanbul	plugged/coc.nvim/package-lock.json	/^        "babel-plugin-istanbul": "^6.0.0",$/;"	s	object:dependencies.@jest/transform.requires
babel-plugin-istanbul	plugged/coc.nvim/package-lock.json	/^        "babel-plugin-istanbul": "^6.0.0",$/;"	s	object:dependencies.babel-jest.requires
babel-plugin-istanbul	plugged/coc.nvim/package-lock.json	/^    "babel-plugin-istanbul": {$/;"	o	object:dependencies
babel-plugin-jest-hoist	plugged/coc.nvim/package-lock.json	/^        "babel-plugin-jest-hoist": "^26.6.2",$/;"	s	object:dependencies.babel-preset-jest.requires
babel-plugin-jest-hoist	plugged/coc.nvim/package-lock.json	/^    "babel-plugin-jest-hoist": {$/;"	o	object:dependencies
babel-preset-current-node-syntax	plugged/coc.nvim/package-lock.json	/^        "babel-preset-current-node-syntax": "^1.0.0"$/;"	s	object:dependencies.babel-preset-jest.requires
babel-preset-current-node-syntax	plugged/coc.nvim/package-lock.json	/^    "babel-preset-current-node-syntax": {$/;"	o	object:dependencies
babel-preset-jest	plugged/coc.nvim/package-lock.json	/^        "babel-preset-jest": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
babel-preset-jest	plugged/coc.nvim/package-lock.json	/^    "babel-preset-jest": {$/;"	o	object:dependencies
back	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.back()$/;"	f	unknown:M
backward_list_gen	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^local function backward_list_gen(param, state)$/;"	f
balanced-match	plugged/coc.nvim/package-lock.json	/^        "balanced-match": "^1.0.0",$/;"	s	object:dependencies.brace-expansion.requires
balanced-match	plugged/coc.nvim/package-lock.json	/^    "balanced-match": {$/;"	o	object:dependencies
band	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.band(a,b) return ((a+b) - bxor(a,b))\/2 end$/;"	f	unknown:M
band	plugged/plenary.nvim/lua/plenary/path.lua	/^local band = function(reg, value)$/;"	f
bar	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^struct foo bar(int x, int y) {$/;"	f	typeref:struct:foo
bar	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    struct bar {$/;"	s	struct:foo	file:
bar	plugged/nvim-treesitter/tests/indent/lua/func.lua	/^  local bar = function(a, b, c)$/;"	f
bar	plugged/nvim-treesitter/tests/indent/rust/mod.rs	/^    mod bar {$/;"	n	module:foo
bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^    fn bar() {$/;"	P	implementation:Foo
bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^    fn bar();$/;"	P	interface:Bar
base	plugged/coc.nvim/package-lock.json	/^        "base": "^0.11.1",$/;"	s	object:dependencies.snapdragon.requires
base	plugged/coc.nvim/package-lock.json	/^    "base": {$/;"	o	object:dependencies
bash	plugged/fzf/test/test_go.rb	/^    def bash$/;"	S	class:Shell
bash	plugged/nvim-treesitter/lockfile.json	/^  "bash": {$/;"	o
basicMatch	plugged/fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
bat_maker	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^local bat_maker = function(filename, lnum, start, finish)$/;"	f
baz	plugged/nvim-treesitter/tests/indent/c/struct.c	/^union baz {$/;"	u	file:
bcommits	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.bcommits = function(opts)$/;"	f	unknown:git
be	plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
beancount	plugged/nvim-treesitter/lockfile.json	/^  "beancount": {$/;"	o
before	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
before_each	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.before_each = function(fn)$/;"	f	unknown:mod
begin	plugged/fzf/src/tokenizer.go	/^	begin int$/;"	m	struct:fzf.Range	typeref:typename:int
bench	plugged/fzf/Makefile	/^bench:$/;"	t
bench	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^local bench = function(name, opts)$/;"	f
benchmark	plugged/plenary.nvim/lua/plenary/profile.lua	/^function profile.benchmark(iterations, f, ...)$/;"	f	unknown:profile
better	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.better = function(sorting_strategy)$/;"	f	unknown:scroller
bf	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
bg	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
bg	plugged/fzf/src/ansi.go	/^	bg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
bg	plugged/fzf/src/tui/light.go	/^	bg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
bg	plugged/fzf/src/tui/tui.go	/^	bg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
bgBlack	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlackBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlue	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlueBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgColor	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
bgCyan	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgCyanBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgGreen	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgGreenBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgMagenta	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgMagentaBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgRed	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgRedBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgWhite	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgWhiteBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgYellow	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgYellowBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
bi	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
bi	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
bibtex	plugged/nvim-treesitter/lockfile.json	/^  "bibtex": {$/;"	o
bie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
bin	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
bin/fzf	plugged/fzf/Makefile	/^bin\/fzf: target\/$(BINARY) | bin$/;"	t
binary	plugged/coc.nvim/package-lock.json	/^        "binary": "^0.3.0",$/;"	s	object:dependencies.unzip-stream.requires
binary	plugged/coc.nvim/package-lock.json	/^    "binary": {$/;"	o	object:dependencies
binary-extensions	plugged/coc.nvim/package-lock.json	/^        "binary-extensions": "^2.0.0"$/;"	s	object:dependencies.is-binary-path.requires
binary-extensions	plugged/coc.nvim/package-lock.json	/^    "binary-extensions": {$/;"	o	object:dependencies
binary_search_ranges	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.binary_search_ranges = function(ranges, target_range)$/;"	f	unknown:M
bind	plugged/plenary.nvim/lua/plenary/fun.lua	/^function M.bind(fn, ...)$/;"	f	unknown:M
bindReady	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function bindReady(){$/;"	f
bit_band	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function bit_band(a, b, c, ...)$/;"	f
bit_bor	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function bit_bor(a, b, c, ...)$/;"	f
bit_bxor	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function bit_bxor(a, b, c, ...)$/;"	f
bitop	plugged/plenary.nvim/lua/plenary/bit.lua	/^  local function bitop(a, b)$/;"	f
bj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
bl	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
black	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blackBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blade	coc-settings.json	/^        "blade": "html",$/;"	s	object:emmet.includeLanguages
blade.bladeFormatter.toolPath	coc-settings.json	/^    "blade.bladeFormatter.toolPath":"\/home\/eb\/.config\/coc\/extensions\/node_modules\/coc-bla/;"	s
blame_line	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.blame_line = void(function(full)$/;"	f	unknown:M
ble	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
blend	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.blend(fg, bg, alpha)$/;"	f	unknown:util
blend	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.blend(fg, bg, alpha)$/;"	f	unknown:utils
blend	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.blend(fg, bg, alpha)$/;"	f	unknown:util
blendChannel	plugged/github-nvim-theme/lua/github-theme/util.lua	/^  local blendChannel = function(i)$/;"	f
blendChannel	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^	local blendChannel = function(i)$/;"	f
blendChannel	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^  local blendChannel = function(i)$/;"	f
block_on	plugged/plenary.nvim/lua/plenary/async/util.lua	/^M.block_on = function(async_function, timeout)$/;"	f	unknown:M
block_on	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.block_on = function(future, timeout)$/;"	f	unknown:M
blocking	plugged/plenary.nvim/tests/plenary/async/semaphore_spec.lua	/^    local blocking = function()$/;"	f
blue	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blueBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
bme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
bnot	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.bnot(x)$/;"	f	unknown:M.bit
bnot	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bnot(a)   return MODM - a end$/;"	f	unknown:M
bo	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
body	plugged/emmet-vim/docs/static/css/style-sites.css	/^body {$/;"	s
body	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var doc = document.documentElement, body = document.body;$/;"	v
bold	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
bonusAt	plugged/fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusBoundary	plugged/fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c	package:algo
bonusCamel123	plugged/fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtension$/;"	c	package:algo
bonusConsecutive	plugged/fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtension)$/;"	c	package:algo
bonusFirstCharMultiplier	plugged/fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c	package:algo
bonusFor	plugged/fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusNonWord	plugged/fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c	package:algo
boolean	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:WQ.l
bools	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunctionaf1e5c4a29d00.t
bor	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bor(a,b)  return MODM - band(MODM - a, MODM - b) end$/;"	f	unknown:M
border	plugged/coc.nvim/data/schema.json	/^        "border": {$/;"	o	object:definitions.float.properties
border	plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
border	plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.hover.floatConfig.properties
border	plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.signature.floatConfig.properties
border	plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.suggest.floatConfig.properties
border	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	function border(elem) {$/;"	f
border	plugged/fzf/src/options.go	/^	border      tui.BorderShape$/;"	m	struct:fzf.previewOpts	typeref:typename:tui.BorderShape
border	plugged/fzf/src/terminal.go	/^	border       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
border	plugged/fzf/src/tui/light.go	/^	border   BorderStyle$/;"	m	struct:tui.LightWindow	typeref:typename:BorderStyle
borderShape	plugged/fzf/src/terminal.go	/^	borderShape  tui.BorderShape$/;"	m	struct:fzf.Terminal	typeref:typename:tui.BorderShape
borderStyle	plugged/fzf/src/tui/tcell.go	/^	borderStyle BorderStyle$/;"	m	struct:tui.TcellWindow	typeref:typename:BorderStyle
borderhighlight	plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {$/;"	o	object:definitions.float.properties
borderhighlight	plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
borderhighlight	plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.hover.floatConfig.properties
borderhighlight	plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.signature.floatConfig.properties
borderhighlight	plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.suggest.floatConfig.properties
bottom	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.bottom = function(sorting_strategy, max_results, num_results)$/;"	f	unknown:scroller
bottomLeft	plugged/fzf/src/tui/tui.go	/^	bottomLeft  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bottomRight	plugged/fzf/src/tui/tui.go	/^	bottomRight rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bounced	plugged/telescope.nvim/lua/telescope/debounce.lua	/^  local bounced = bouncers[bouncer](function(i)$/;"	f
bounded	plugged/plenary.nvim/lua/plenary/popup/utils.lua	/^utils.bounded = function(value, min, max)$/;"	f	unknown:utils
box	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var box = elem.getBoundingClientRect();$/;"	v
bp	plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	f
brace-expansion	plugged/coc.nvim/package-lock.json	/^        "brace-expansion": "^1.1.7"$/;"	s	object:dependencies.minimatch.requires
brace-expansion	plugged/coc.nvim/package-lock.json	/^    "brace-expansion": {$/;"	o	object:dependencies
braces	plugged/coc.nvim/package-lock.json	/^            "braces": "^2.3.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
braces	plugged/coc.nvim/package-lock.json	/^        "braces": "^3.0.1",$/;"	s	object:dependencies.micromatch.requires
braces	plugged/coc.nvim/package-lock.json	/^        "braces": "~3.0.2",$/;"	s	object:dependencies.chokidar.requires
braces	plugged/coc.nvim/package-lock.json	/^        "braces": {$/;"	o	object:dependencies.sane.dependencies
braces	plugged/coc.nvim/package-lock.json	/^    "braces": {$/;"	o	object:dependencies
branches	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.branches = function(opts)$/;"	f	unknown:git
brighten	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.brighten(color, percentage)$/;"	f	unknown:util
brighten	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.brighten(color, percentage)$/;"	f	unknown:util
brightness_modifier	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function brightness_modifier(rgb_color, parcentage)$/;"	f
browser	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.browser = {$/;"	c	class:jQuery
browser-process-hrtime	plugged/coc.nvim/package-lock.json	/^        "browser-process-hrtime": "^1.0.0"$/;"	s	object:dependencies.w3c-hr-time.requires
browser-process-hrtime	plugged/coc.nvim/package-lock.json	/^    "browser-process-hrtime": {$/;"	o	object:dependencies
browserslist	plugged/coc.nvim/package-lock.json	/^        "browserslist": "^4.16.6",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
browserslist	plugged/coc.nvim/package-lock.json	/^    "browserslist": {$/;"	o	object:dependencies
bs-logger	plugged/coc.nvim/package-lock.json	/^        "bs-logger": "0.x",$/;"	s	object:dependencies.ts-jest.requires
bs-logger	plugged/coc.nvim/package-lock.json	/^    "bs-logger": {$/;"	o	object:dependencies
bse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
bser	plugged/coc.nvim/package-lock.json	/^        "bser": "2.1.1"$/;"	s	object:dependencies.fb-watchman.requires
bser	plugged/coc.nvim/package-lock.json	/^    "bser": {$/;"	o	object:dependencies
bswap	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.bswap(x)$/;"	f	unknown:M.bit
bswap	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bswap(x)  -- BitOp style$/;"	f	unknown:M
bt	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
bte	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
btest	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.btest(x, y) -- Lua5.2 inspired$/;"	f	unknown:M
buf_delete	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.buf_delete(bufnr)$/;"	f	unknown:utils
buf_exec	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.buf_exec(index, func)$/;"	f	unknown:M
buf_names	plugged/bufferline.nvim/tests/sorters_spec.lua	/^    local buf_names = vim.tbl_map(function(buf)$/;"	f
buffer	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
buffer	plugged/fzf/src/tui/light.go	/^	buffer        []byte$/;"	m	struct:tui.LightRenderer	typeref:typename:[]byte
buffer-from	plugged/coc.nvim/package-lock.json	/^        "buffer-from": "1.x",$/;"	s	object:dependencies.ts-jest.requires
buffer-from	plugged/coc.nvim/package-lock.json	/^        "buffer-from": "^1.0.0",$/;"	s	object:dependencies.source-map-support.requires
buffer-from	plugged/coc.nvim/package-lock.json	/^    "buffer-from": {$/;"	o	object:dependencies
buffer_dir	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.buffer_dir()$/;"	f	unknown:utils
buffer_not_empty	plugged/lualine.nvim/examples/evil_lualine.lua	/^  buffer_not_empty = function()$/;"	f
buffergator#BuffergatorCycleMru	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#BuffergatorCycleMru(dir, bufopencmd)$/;"	f
buffergator#BuffergatorEchoMruList	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#BuffergatorEchoMruList(bang)$/;"	f
buffergator#CloseBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#CloseBuffergator()$/;"	f
buffergator#CloseBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#CloseBuffergatorTabs()$/;"	f
buffergator#OpenBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#OpenBuffergator()$/;"	f
buffergator#OpenBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#OpenBuffergatorTabs()$/;"	f
buffergator#ReopenBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ReopenBuffergator()$/;"	f
buffergator#ToggleBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ToggleBuffergator()$/;"	f
buffergator#ToggleBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ToggleBuffergatorTabs()$/;"	f
buffergator#UpdateBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#UpdateBuffergator(event, affected)$/;"	f
bufferline	plugged/bufferline.nvim/lua/bufferline.lua	/^local function bufferline(config)$/;"	f
buffers	plugged/bufferline.nvim/lua/bufferline.lua	/^  buffers = vim.tbl_map(function(buf)$/;"	f
buffers	plugged/coc.nvim/package-lock.json	/^        "buffers": "~0.1.1",$/;"	s	object:dependencies.binary.requires
buffers	plugged/coc.nvim/package-lock.json	/^    "buffers": {$/;"	o	object:dependencies
buffers	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.buffers = function(opts)$/;"	f	unknown:internal
buffers component options	plugged/lualine.nvim/README.md	/^#### buffers component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
bufnr_calc_width	plugged/gitsigns.nvim/lua/gitsigns/popup.lua	/^local function bufnr_calc_width(buf, lines)$/;"	f
bufnrs	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^    local bufnrs = filter(function(b)$/;"	f
bufnrs	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^  local bufnrs = filter(function(b)$/;"	f
bufs	plugged/bufferline.nvim/tests/sorters_spec.lua	/^    local bufs = vim.tbl_map(function(id)$/;"	f
bugs	plugged/coc.nvim/package.json	/^  "bugs": {$/;"	o
build	plugged/fzf/Makefile	/^build:$/;"	t
build	plugged/gitsigns.nvim/Makefile	/^build: tl-build gen_help$/;"	t
build	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^function M.build(user_config)$/;"	f	unknown:M
buildCacheKey	plugged/fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
buildLists	plugged/fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f	package:fzf	typeref:typename:([][]Result, []Result)
buildPlusList	plugged/fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []*Item)
buildResult	plugged/fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f	package:fzf	typeref:typename:Result
build_component_opts	plugged/lualine.nvim/lua/tests/helpers.lua	/^M.build_component_opts = function(opts)$/;"	f	unknown:M
buildqflist	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function buildqflist(target)$/;"	f
builtin	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.builtin = function(opts)$/;"	f	unknown:internal
builtin	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.builtin = defaulter(function(_)$/;"	f	unknown:previewers
builtin_picker	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester.builtin_picker = function(builtin_key, input, test_cases, opts)$/;"	f	unknown:tester
bv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
bw	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
bx	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
bxe	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
by	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
byBegin	plugged/fzf/src/options.go	/^	byBegin$/;"	c	package:fzf
byEnd	plugged/fzf/src/options.go	/^	byEnd$/;"	c	package:fzf
byLength	plugged/fzf/src/options.go	/^	byLength$/;"	c	package:fzf
byScore	plugged/fzf/src/options.go	/^	byScore criterion = iota$/;"	c	package:fzf	typeref:type:criterion
byTimeOrder	plugged/fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t	package:fzf	typeref:typename:[]selectedItem
bytes	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionaf1e5c4a2f400.t.e
bytes	plugged/coc.nvim/package-lock.json	/^    "bytes": {$/;"	o	object:dependencies
c	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
c	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
c	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:jC
c	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunctionaf1e5c4a34600
c	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12100.e
c	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4af700.e
c	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
c	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
c	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	c
c	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
c	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
c	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionaf1e5c4a31400
c	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33b00.e
c	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunctionaf1e5c4a33f00
c	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:$T
c	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
c	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29d00
c	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:WQ
c	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
c	plugged/nvim-treesitter/lockfile.json	/^  "c": {$/;"	o
c	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^c = {$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/branches.py	/^c = [[[$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^c = ($/;"	v
c	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^c = lambda x: \\$/;"	f
c	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^c = [[[$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/strings.py	/^c = """$/;"	v
c$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
c0	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
c1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
c5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
c6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
c7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
c8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
c9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
cB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
cC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
cD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
cG	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
cJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
cK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
cN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
cO	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
cOutputer	plugged/plenary.nvim/lua/plenary/profile/memory_profiler.lua	/^	local cOutputer = function (strContent)$/;"	f
cP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
cQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
cX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
c_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
c_sharp	plugged/nvim-treesitter/lockfile.json	/^  "c_sharp": {$/;"	o
cache	plugged/fzf/src/cache.go	/^	cache map[*Chunk]*queryCache$/;"	m	struct:fzf.ChunkCache	typeref:typename:map[*Chunk]*queryCache
cache-base	plugged/coc.nvim/package-lock.json	/^        "cache-base": "^1.0.1",$/;"	s	object:dependencies.base.requires
cache-base	plugged/coc.nvim/package-lock.json	/^    "cache-base": {$/;"	o	object:dependencies
cacheKey	plugged/fzf/src/pattern.go	/^	cacheKey      string$/;"	m	struct:fzf.Pattern	typeref:typename:string
cacheable	plugged/fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f	struct:fzf.Merger	typeref:typename:bool
cacheable	plugged/fzf/src/pattern.go	/^	cacheable     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
cae	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
calc_base	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function calc_base(base)$/;"	f
calc_left_start	plugged/plenary.nvim/lua/plenary/window/border.lua	/^local calc_left_start = function(title_pos, title_len, total_width)$/;"	f
calc_result_length	plugged/telescope.nvim/lua/telescope/utils.lua	/^local calc_result_length = function(truncate_len)$/;"	f
calc_size_and_spacing	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local calc_size_and_spacing = function(cur_size, max_size, bs, w_num, b_num, s_num)$/;"	f
calc_tabline	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local calc_tabline = function(max_lines)$/;"	f
calculateScore	plugged/fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx i/;"	f	package:algo	typeref:typename:(int, *[]int)
calculateSize	plugged/fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, occupied int, minSize int, pad int) int {$/;"	f	package:fzf	typeref:typename:int
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.object.assign.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.side-channel.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.string.prototype.matchall.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2"$/;"	s	object:dependencies.is-boolean-object.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.es-abstract.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.is-regex.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.regexp.prototype.flags.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.string.prototype.trimend.requires
call-bind	plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.string.prototype.trimstart.requires
call-bind	plugged/coc.nvim/package-lock.json	/^    "call-bind": {$/;"	o	object:dependencies
callHierarchy.enableTooltip	plugged/coc.nvim/data/schema.json	/^    "callHierarchy.enableTooltip": {$/;"	o	object:properties
callHierarchy.openCommand	plugged/coc.nvim/data/schema.json	/^    "callHierarchy.openCommand": {$/;"	o	object:properties
callHierarchy.splitCommand	plugged/coc.nvim/data/schema.json	/^    "callHierarchy.splitCommand": {$/;"	o	object:properties
call_api	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^local call_api = async(function()$/;"	f
call_if_not_empty	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local call_if_not_empty = function(fun, state_x, ...)$/;"	f
call_inner	plugged/plenary.nvim/lua/plenary/busted.lua	/^local call_inner = function(desc, func)$/;"	f
callable	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.callable(object)$/;"	f	unknown:util
callable	plugged/telescope.nvim/lua/telescope/finders/async_job_finder.lua	/^  local callable = function(_, prompt, process_result, process_complete)$/;"	f
callback	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunctionaf1e5c4a33e00.e
callback	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^  local callback = function(err, method, result)$/;"	f
callback	plugged/plenary.nvim/lua/luassert/spy.lua	/^    callback = callback or function() end$/;"	f
callback	plugged/plenary.nvim/lua/plenary/async/util.lua	/^    local callback = function(...)$/;"	f
callback	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^    local callback = function(...)$/;"	f
callback	plugged/plenary.nvim/tests/plenary/curl_spec.lua	/^        callback = function(out)$/;"	f
callback	plugged/plenary.nvim/tests/plenary/popup_spec.lua	/^        callback = function(win_id, sel)$/;"	f
callback	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^          callback = function(bufnr)$/;"	f
callback	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^        callback = function(bufnr)$/;"	f
callback	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^        callback = function(bufnr, content)$/;"	f
callback_or_next	plugged/plenary.nvim/lua/plenary/async/async.lua	/^local function callback_or_next(step, thread, callback, ...)$/;"	f
callback_or_next	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^local function callback_or_next(step, thread, callback, ...)$/;"	f
callbacks[match_args]	plugged/plenary.nvim/lua/luassert/stub.lua	/^        callbacks[match_args] = function()$/;"	f
callbacks[match_args]	plugged/plenary.nvim/lua/luassert/stub.lua	/^        callbacks[match_args] = function(...)$/;"	f
callbacks[method]	plugged/plenary.nvim/lua/plenary/lsp/override.lua	/^  vim.lsp.callbacks[method] = new_function$/;"	f	unknown:vim.lsp
called	plugged/plenary.nvim/lua/luassert/spy.lua	/^      called = function(self, times, compare)$/;"	f
called	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called(state, arguments, level, compare)$/;"	f
called_at_least	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called_at_least(state, arguments, level)$/;"	f
called_at_most	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called_at_most(state, arguments, level)$/;"	f
called_less_than	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called_less_than(state, arguments, level)$/;"	f
called_more_than	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called_more_than(state, arguments, level)$/;"	f
called_with	plugged/plenary.nvim/lua/luassert/spy.lua	/^      called_with = function(self, args)$/;"	f
called_with	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function called_with(state, arguments, level)$/;"	f
callsites	plugged/coc.nvim/package-lock.json	/^        "callsites": "^3.0.0"$/;"	s	object:dependencies.parent-module.requires
callsites	plugged/coc.nvim/package-lock.json	/^        "callsites": "^3.0.0",$/;"	s	object:dependencies.@jest/source-map.requires
callsites	plugged/coc.nvim/package-lock.json	/^    "callsites": {$/;"	o	object:dependencies
camelcase	plugged/coc.nvim/package-lock.json	/^        "camelcase": "^5.0.0",$/;"	s	object:dependencies.yargs-parser.requires
camelcase	plugged/coc.nvim/package-lock.json	/^        "camelcase": "^5.3.1",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
camelcase	plugged/coc.nvim/package-lock.json	/^        "camelcase": "^6.0.0",$/;"	s	object:dependencies.jest-validate.requires
camelcase	plugged/coc.nvim/package-lock.json	/^        "camelcase": {$/;"	o	object:dependencies.jest-validate.dependencies
camelcase	plugged/coc.nvim/package-lock.json	/^    "camelcase": {$/;"	o	object:dependencies
can_edit_line	plugged/nvim-spectre/lua/spectre/init.lua	/^local function can_edit_line ()$/;"	f
can_select_row	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:can_select_row(row)$/;"	f	unknown:Picker
cancel	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^  local cancel = function() end$/;"	f
cancelPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f	struct:fzf.Terminal
caniuse-lite	plugged/coc.nvim/package-lock.json	/^        "caniuse-lite": "^1.0.30001219",$/;"	s	object:dependencies.browserslist.requires
caniuse-lite	plugged/coc.nvim/package-lock.json	/^    "caniuse-lite": {$/;"	o	object:dependencies
capture	plugged/fzf/test/test_go.rb	/^  def capture$/;"	f	class:Tmux
capture	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local function capture(cmd, raw)$/;"	f
capture-exit	plugged/coc.nvim/package-lock.json	/^        "capture-exit": "^2.0.0",$/;"	s	object:dependencies.sane.requires
capture-exit	plugged/coc.nvim/package-lock.json	/^    "capture-exit": {$/;"	o	object:dependencies
caseSensitive	plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
caseSensitive	plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.term	typeref:typename:bool
cat	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.cat = defaulter(function(opts)$/;"	f	unknown:previewers
cat	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^previewers.cat = defaulter(function(opts)$/;"	f	unknown:previewers
cat_maker	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^local cat_maker = function(filename, _, start, _)$/;"	f
catalog_viewer.acquire_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.acquire_viewport(split_cmd)$/;"	f
catalog_viewer.activate_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.activate_viewport() dict$/;"	f
catalog_viewer.append_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.append_line(text, jump_to_bufnum) dict$/;"	f
catalog_viewer.append_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.append_line(text, jump_to_tabnum, jump_to_winnum) dict$/;"	f
catalog_viewer.claim_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.claim_buffer() dict$/;"	f
catalog_viewer.clear_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.clear_buffer() dict$/;"	f
catalog_viewer.close	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.close(restore_prev_window) dict$/;"	f
catalog_viewer.contract_screen	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.contract_screen() dict$/;"	f
catalog_viewer.create_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.create_buffer() dict$/;"	f
catalog_viewer.cycle_autodismiss_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_autodismiss_modes() dict$/;"	f
catalog_viewer.cycle_directory_path_display	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_directory_path_display() dict$/;"	f
catalog_viewer.cycle_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_display_regime() dict$/;"	f
catalog_viewer.cycle_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_sort_regime() dict$/;"	f
catalog_viewer.cycle_viewport_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_viewport_modes() dict$/;"	f
catalog_viewer.delete_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.delete_target(wipe, force) dict range$/;"	f
catalog_viewer.disable_editing_keymaps	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.disable_editing_keymaps() dict$/;"	f
catalog_viewer.expand_screen	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.expand_screen() dict$/;"	f
catalog_viewer.first_usable_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.first_usable_viewport() dict$/;"	f
catalog_viewer.get_target_bufnum	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.get_target_bufnum(cmd_count) dict$/;"	f
catalog_viewer.goto_index_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_index_entry(direction) dict$/;"	f
catalog_viewer.goto_index_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_index_entry(direction, visit_target, refocus_catalog) dict ran/;"	f
catalog_viewer.goto_pattern	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_pattern(pattern, direction) dict range$/;"	f
catalog_viewer.goto_win_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_win_entry(direction) dict$/;"	f
catalog_viewer.highlight_current_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.highlight_current_line()$/;"	f
catalog_viewer.initialize_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.initialize_buffer() dict$/;"	f
catalog_viewer.is_usable_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.is_usable_viewport(winnumber) dict$/;"	f
catalog_viewer.line_symbols	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.line_symbols(bufinfo) dict$/;"	f
catalog_viewer.list_buffers	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.list_buffers() dict$/;"	f
catalog_viewer.num_viewports_on_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.num_viewports_on_buffer(bnum) dict$/;"	f
catalog_viewer.open	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.open(...) dict$/;"	f
catalog_viewer.rebuild_catalog	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.rebuild_catalog() dict$/;"	f
catalog_viewer.render_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.render_buffer() dict$/;"	f
catalog_viewer.setup_buffer_commands	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_commands() dict$/;"	f
catalog_viewer.setup_buffer_folding	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_folding() dict$/;"	f
catalog_viewer.setup_buffer_keymaps	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_keymaps() dict$/;"	f
catalog_viewer.setup_buffer_opts	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_opts() dict$/;"	f
catalog_viewer.setup_buffer_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_statusline() dict$/;"	f
catalog_viewer.setup_buffer_syntax	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_syntax() dict$/;"	f
catalog_viewer.toggle	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.toggle() dict$/;"	f
catalog_viewer.toggle_zoom	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.toggle_zoom() dict$/;"	f
catalog_viewer.unclaim_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.unclaim_buffer() dict$/;"	f
catalog_viewer.update_buffers_info	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.update_buffers_info() dict$/;"	f
catalog_viewer.visit_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_buffer(bufnum, split_cmd) dict$/;"	f
catalog_viewer.visit_open_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_open_target(unconditional, keep_catalog, split_cmd) dict rang/;"	f
catalog_viewer.visit_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_target() dict$/;"	f
catalog_viewer.visit_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_target(keep_catalog, refocus_catalog, split_cmd) dict range$/;"	f
cb	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionaf1e5c4a2f400.t.e
cb	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
cb	plugged/plenary.nvim/lua/plenary/async/util.lua	/^    local cb = function(...)$/;"	f
cb_add	plugged/telescope.nvim/lua/telescope/pickers.lua	/^  local cb_add = function(score, entry)$/;"	f
cb_filter	plugged/telescope.nvim/lua/telescope/pickers.lua	/^  local cb_filter = function(_)$/;"	f
cc	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cc          <NOP>$/;"	m
cd	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
cd	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cd          :call b:buffergator_catalog_viewer.cycle_displ/;"	m
cd	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> cd          :call b:buffergator_catalog_viewer.cycle_display_r/;"	m
ce	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
cee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
center	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.center(_)$/;"	f	unknown:actions
centered	plugged/plenary.nvim/lua/plenary/window/float.lua	/^function win_float.centered(options)$/;"	f	unknown:win_float
centered_with_top_win	plugged/plenary.nvim/lua/plenary/window/float.lua	/^function win_float.centered_with_top_win(top_text, options)$/;"	f	unknown:win_float
cf	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
cfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
cgc	plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
cge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
ch	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
chain	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
chain	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local chain = function(...)$/;"	f
chain	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job.chain(...)$/;"	f	unknown:Job
chain_gen_r1	plugged/plenary.nvim/lua/plenary/iterators.lua	/^chain_gen_r1 = function(param, state)$/;"	f
chain_gen_r2	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local chain_gen_r2 = function(param, state, state_x, ...)$/;"	f
chain_status	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job.chain_status(id)$/;"	f	unknown:Job
chainsaw	plugged/coc.nvim/package-lock.json	/^        "chainsaw": "~0.1.0"$/;"	s	object:dependencies.binary.requires
chainsaw	plugged/coc.nvim/package-lock.json	/^    "chainsaw": {$/;"	o	object:dependencies
chalk	plugged/coc.nvim/package-lock.json	/^            "chalk": "^4.0.0",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^2.0.0",$/;"	s	object:dependencies.@babel/highlight.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^2.4.1",$/;"	s	object:dependencies.cli-table.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0"$/;"	s	object:dependencies.@jest/types.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/console.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/core.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/transform.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.babel-jest.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-config.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-diff.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-each.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-jasmine2.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-matcher-utils.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-message-util.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-resolve.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-runner.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-runtime.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-util.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-validate.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-watcher.requires
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": {$/;"	o	object:dependencies.@babel/highlight.dependencies
chalk	plugged/coc.nvim/package-lock.json	/^        "chalk": {$/;"	o	object:dependencies.cli-table.dependencies
chalk	plugged/coc.nvim/package-lock.json	/^    "chalk": {$/;"	o	object:dependencies
change_base	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.change_base = void(function(base, global)$/;"	f	unknown:M
change_dir	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.change_dir(name)$/;"	f	unknown:M
change_dir	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.change_dir(name)$/;"	f	unknown:M
change_dir	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:change_dir(dir)$/;"	f	unknown:Terminal
change_direction	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:change_direction(direction)$/;"	f	unknown:Terminal
change_options	plugged/nvim-spectre/lua/spectre/init.lua	/^M.change_options = function(key)$/;"	f	unknown:M
change_prompt_prefix	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:change_prompt_prefix(new_prefix, hl_group)$/;"	f	unknown:Picker
change_style	plugged/material.nvim/lua/material/functions.lua	/^ local change_style = function (style)$/;"	f
change_title	plugged/plenary.nvim/lua/plenary/window/border.lua	/^function Border:change_title(new_title)$/;"	f	unknown:Border
change_view	plugged/nvim-spectre/lua/spectre/init.lua	/^M.change_view = function(reset)$/;"	f	unknown:M
char-regex	plugged/coc.nvim/package-lock.json	/^        "char-regex": "^1.0.2",$/;"	s	object:dependencies.string-length.requires
char-regex	plugged/coc.nvim/package-lock.json	/^    "char-regex": {$/;"	o	object:dependencies
charAt	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.charAt(str, pos)$/;"	f	unknown:M
charClass	plugged/fzf/src/algo/algo.go	/^type charClass int$/;"	t	package:algo	typeref:typename:int
charClassOf	plugged/fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfAscii	plugged/fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfNonAscii	plugged/fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charLetter	plugged/fzf/src/algo/algo.go	/^	charLetter$/;"	c	package:algo
charLower	plugged/fzf/src/algo/algo.go	/^	charLower$/;"	c	package:algo
charNonWord	plugged/fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c	package:algo	typeref:type:charClass
charNumber	plugged/fzf/src/algo/algo.go	/^	charNumber$/;"	c	package:algo
charRepetition	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^local function charRepetition(n, character)$/;"	f
charUpper	plugged/fzf/src/algo/algo.go	/^	charUpper$/;"	c	package:algo
character	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	p	class:$c.t
chars	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}var chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?$/;"	v
check	plugged/github-nvim-theme/Makefile	/^check: format lint$/;"	t
check	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.check(attrs, interval)$/;"	f	unknown:M
check	plugged/lualine.nvim/Makefile	/^check: lint test$/;"	t
check	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^function M.check()$/;"	f	unknown:M
check	plugged/plenary.nvim/lua/plenary/async/util.lua	/^  local function check()$/;"	f
check	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  local function check()$/;"	f
check	plugged/telescope.nvim/lua/telescope/health.lua	/^M.check = function()$/;"	f	unknown:M
checkAscii	plugged/fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f	package:util	typeref:typename:(bool, int)
check_binary	plugged/fzf/install	/^check_binary() {$/;"	f
check_binary	plugged/fzf/install.ps1	/^function check_binary () {$/;"	f
check_binary_installed	plugged/telescope.nvim/lua/telescope/health.lua	/^local check_binary_installed = function(package)$/;"	f
check_capabilities	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^local function check_capabilities(feature)$/;"	f
check_close_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function check_close_tag()$/;"	f
check_git_workspace	plugged/lualine.nvim/examples/evil_lualine.lua	/^  check_git_workspace = function()$/;"	f
check_health	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.check_health()$/;"	f	unknown:M
check_keys	plugged/plenary.nvim/tests/plenary/iterators_spec.lua	/^local function check_keys(tbl, keys)$/;"	f
check_link	plugged/plenary.nvim/lua/plenary/scandir.lua	/^  local check_link = function(per, file)$/;"	f
check_logging	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^local function check_logging()$/;"	f
check_mode	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.check_mode(mode, buf)$/;"	f	unknown:M
check_results	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local check_results = function(results)$/;"	f
check_self	plugged/plenary.nvim/lua/plenary/path.lua	/^local check_self = function(self)$/;"	f
check_version	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^local function check_version(version)$/;"	f
checkhealth	plugged/telescope.nvim/README.md	/^### checkhealth$/;"	S	section:telescope.nvim""Getting Started
checkoutfile	plugged/nvim-spectre/tests/helper.lua	/^M.checkoutfile = function(filename)$/;"	f	unknown:M
child	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child(index)$/;"	f	unknown:TSRange
child_count	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child_count()$/;"	f	unknown:TSRange
children	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
chokidar	plugged/coc.nvim/package-lock.json	/^    "chokidar": {$/;"	o	object:dependencies
chownr	plugged/coc.nvim/package-lock.json	/^        "chownr": "^2.0.0",$/;"	s	object:dependencies.tar.requires
chownr	plugged/coc.nvim/package-lock.json	/^    "chownr": {$/;"	o	object:dependencies
chunkSize	plugged/fzf/src/constants.go	/^	chunkSize int = 100$/;"	c	package:fzf	typeref:typename:int
chunks	plugged/fzf/src/chunklist.go	/^	chunks []*Chunk$/;"	m	struct:fzf.ChunkList	typeref:typename:[]*Chunk
chunks	plugged/fzf/src/matcher.go	/^	chunks     []*Chunk$/;"	m	struct:fzf.MatchRequest	typeref:typename:[]*Chunk
chunks	plugged/fzf/src/merger.go	/^	chunks  *[]*Chunk$/;"	m	struct:fzf.Merger	typeref:typename:*[]*Chunk
ci-info	plugged/coc.nvim/package-lock.json	/^        "ci-info": "^2.0.0"$/;"	s	object:dependencies.is-ci.requires
ci-info	plugged/coc.nvim/package-lock.json	/^    "ci-info": {$/;"	o	object:dependencies
circular	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
cj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
cjs-module-lexer	plugged/coc.nvim/package-lock.json	/^        "cjs-module-lexer": "^0.6.0",$/;"	s	object:dependencies.jest-runtime.requires
cjs-module-lexer	plugged/coc.nvim/package-lock.json	/^    "cjs-module-lexer": {$/;"	o	object:dependencies
clamp	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function clamp(val, left, right)$/;"	f
clap_match_color	plugged/nord-vim/colors/nord.vim	/^  let clap_match_color = s:clap_matches[s:nord_clap_match_i % len(s:clap_matches) - 1]$/;"	v
class	plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
class-utils	plugged/coc.nvim/package-lock.json	/^        "class-utils": "^0.3.5",$/;"	s	object:dependencies.base.requires
class-utils	plugged/coc.nvim/package-lock.json	/^    "class-utils": {$/;"	o	object:dependencies
clean	plugged/fzf/Makefile	/^clean:$/;"	t
clean	plugged/plenary.nvim/lua/plenary/path.lua	/^local clean = function(pathname)$/;"	f
cleanExit	plugged/fzf/src/terminal.go	/^	cleanExit    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cleanTemporaryFiles	plugged/fzf/src/terminal.go	/^func cleanTemporaryFiles() {$/;"	f	package:fzf
cleanse	plugged/fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f	package:tui	typeref:typename:string
cleanup	plugged/fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
cleanup	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.cleanup()$/;"	f	unknown:M
clear	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:c
clear	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
clear	plugged/gitsigns.nvim/lua/gitsigns/status.lua	/^function Status:clear(bufnr)$/;"	f	unknown:Status
clear	plugged/plenary.nvim/lua/luassert/mock.lua	/^  clear = function(object)$/;"	f
clear	plugged/plenary.nvim/lua/luassert/spy.lua	/^      clear = function(self)$/;"	f
clear	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:clear()$/;"	f	unknown:Deque
clear	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:clear()$/;"	f	unknown:Deque
clear	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.clear = function()$/;"	f	unknown:mod
clear	plugged/plenary.nvim/lua/plenary/window/float.lua	/^function win_float.clear(bufnr)$/;"	f	unknown:win_float
clear	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^  mt.clear = function()$/;"	f	unknown:mt
clear	plugged/telescope.nvim/lua/telescope/mappings.lua	/^mappings.clear = function(prompt_bufnr)$/;"	f	unknown:mappings
clear	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:clear()$/;"	f	unknown:Terminal
clearCache	plugged/fzf/src/matcher.go	/^	clearCache bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
clearChunkCache	plugged/fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f	package:fzf
clearCode	plugged/fzf/src/terminal.go	/^const clearCode string = "\\x1b[2J"$/;"	c	package:fzf	typeref:typename:string
clearMocks	plugged/coc.nvim/package.json	/^    "clearMocks": true,$/;"	b	object:jest
clearOnExit	plugged/fzf/src/tui/light.go	/^	clearOnExit   bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
clearPatternCache	plugged/fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f	package:fzf
clear_buf_indent	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.clear_buf_indent = function(buf)$/;"	f	unknown:M
clear_buf_on_leave	plugged/plenary.nvim/lua/plenary/window/float.lua	/^local clear_buf_on_leave = function(bufnr)$/;"	f
clear_buffer	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function clear_buffer(absolute_path)$/;"	f
clear_completion_callbacks	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:clear_completion_callbacks()$/;"	f	unknown:Picker
clear_debug	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^   R.clear_debug = function()$/;"	f	unknown:R
clear_defaults	plugged/telescope.nvim/lua/telescope/config.lua	/^function config.clear_defaults()$/;"	f	unknown:config
clear_diff	plugged/gitsigns.nvim/lua/gitsigns/status.lua	/^function Status:clear_diff(bufnr)$/;"	f	unknown:Status
clear_display	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:clear_display()$/;"	f	unknown:Highlighter
clear_extra_rows	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:clear_extra_rows(results_bufnr)$/;"	f	unknown:Picker
clear_highlights	plugged/lualine.nvim/lua/lualine/highlight.lua	/^local function clear_highlights()$/;"	f
clear_last_each	plugged/plenary.nvim/lua/plenary/busted.lua	/^local clear_last_each = function()$/;"	f
clear_line_indent	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.clear_line_indent = function(buf, lnum)$/;"	f	unknown:M
clear_notices	plugged/lualine.nvim/lua/lualine/utils/notices.lua	/^function M.clear_notices()$/;"	f	unknown:M
clear_prompt	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.clear_prompt()$/;"	f	unknown:M
clear_status	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.clear_status(prompt_bufnr)$/;"	f	unknown:state
cli-table	plugged/coc.nvim/package-lock.json	/^    "cli-table": {$/;"	o	object:dependencies
clickY	plugged/fzf/src/tui/light.go	/^	clickY        []int$/;"	m	struct:tui.LightRenderer	typeref:typename:[]int
clickY	plugged/fzf/src/tui/tui.go	/^	clickY       []int$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:[]int
cliui	plugged/coc.nvim/package-lock.json	/^        "cliui": "^6.0.0",$/;"	s	object:dependencies.yargs.requires
cliui	plugged/coc.nvim/package-lock.json	/^    "cliui": {$/;"	o	object:dependencies
clojure	plugged/nvim-treesitter/lockfile.json	/^  "clojure": {$/;"	o
clone	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = ret.find("*").andSelf().each(function(){$/;"	v
close	plugged/JABS.nvim/lua/jabs.lua	/^function M.close()$/;"	f	unknown:M
close	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e
close	plugged/coc.nvim/data/schema.json	/^        "close": {$/;"	o	object:definitions.float.properties
close	plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
close	plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.hover.floatConfig.properties
close	plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.signature.floatConfig.properties
close	plugged/gitsigns.nvim/lua/gitsigns/popup.lua	/^function popup.close(win_id)$/;"	f	unknown:popup
close	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  close = function() M.close() end,$/;"	f
close	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.close()$/;"	f	unknown:M
close	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.close()$/;"	f	unknown:M
close	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:close() end$/;"	f	unknown:Path
close	plugged/telescope.nvim/lua/telescope/_.lua	/^  self.close = function() end$/;"	f	unknown:self
close	plugged/telescope.nvim/lua/telescope/_.lua	/^function AsyncJob:close(force)$/;"	f	unknown:AsyncJob
close	plugged/telescope.nvim/lua/telescope/_.lua	/^function BasePipe:close(force)$/;"	f	unknown:BasePipe
close	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.close(prompt_bufnr)$/;"	f	unknown:actions
close	plugged/telescope.nvim/lua/telescope/finders.lua	/^  obj.close = function() end$/;"	f	unknown:obj
close	plugged/telescope.nvim/lua/telescope/finders/async_job_finder.lua	/^    close = function()$/;"	f
close	plugged/telescope.nvim/lua/telescope/finders/async_oneshot_finder.lua	/^    close = function()$/;"	f
close	plugged/telescope.nvim/lua/telescope/finders/async_static_finder.lua	/^    close = function() end,$/;"	f
close	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:close()$/;"	f	unknown:Terminal
close	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.close(term)$/;"	f	unknown:M
closeBufNum	plugged/JABS.nvim/lua/jabs.lua	/^function M.closeBufNum(win)$/;"	f	unknown:M
closePlatform	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closePlatform	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
close_buffer_with_pick	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.close_buffer_with_pick()$/;"	f	unknown:M
close_command	plugged/bufferline.nvim/tests/bufferline_spec.lua	/^          close_command = function(bufid)$/;"	f
close_existing_pickers	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:close_existing_pickers()$/;"	f	unknown:Picker
close_icon	plugged/bufferline.nvim/lua/bufferline.lua	/^local function close_icon(buf_id, context)$/;"	f
close_in_direction	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.close_in_direction(direction)$/;"	f	unknown:M
close_last_window	plugged/toggleterm.nvim/lua/toggleterm.lua	/^local function close_last_window(term)$/;"	f
close_node	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.close_node(node)$/;"	f	unknown:M
close_pum	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.close_pum(_)$/;"	f	unknown:actions
close_related_win	plugged/plenary.nvim/lua/plenary/window/init.lua	/^window.close_related_win = function(parent_win_id, child_win_id)$/;"	f	unknown:window
close_safely	plugged/plenary.nvim/lua/plenary/job.lua	/^local function close_safely(j, key)$/;"	f
close_split	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^local function close_split(term)$/;"	f
close_tab	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^local function close_tab()$/;"	f
close_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.close_tag = function ()$/;"	f	unknown:M
close_windows	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    picker.close_windows = function(status)$/;"	f	unknown:picker
close_windows	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker.close_windows(status)$/;"	f	unknown:Picker
closetag.vim	plugged/vim-closetag/README.md	/^closetag.vim$/;"	c
cm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
cmake	plugged/nvim-treesitter/lockfile.json	/^  "cmake": {$/;"	o
cmd	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^      cmd = function()$/;"	f
cmd	plugged/which-key.nvim/lua/which-key/keys.lua	/^          mapping.cmd = string.format([[<cmd>lua require("which-key").execute(%d)<cr>]], #M.func/;"	f	unknown:mapping
cmd	plugged/which-key.nvim/lua/which-key/keys.lua	/^          mapping.cmd = string.format([[luaeval('require("which-key").execute(%d)')]], #M.functi/;"	f	unknown:mapping
cme	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
cn	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
co	plugged/coc.nvim/package-lock.json	/^        "co": "^4.6.0",$/;"	s	object:dependencies.jest-jasmine2.requires
co	plugged/coc.nvim/package-lock.json	/^    "co": {$/;"	o	object:dependencies
co	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^  local co = function()$/;"	f
co_wait	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:co_wait(wait_time)$/;"	f	unknown:Job
coc	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^  coc = (function()$/;"	f
coc	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^  coc = function()$/;"	f
coc#_cancel	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items, preselect)$/;"	f
coc#_hide	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_insert_key	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_select	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm() abort$/;"	f
coc#_selected	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#func_names	plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#notify	plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#client#create	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#get_channel	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_channel(client)$/;"	f
coc#client#get_client	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_client(name) abort$/;"	f
coc#client#is_running	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#color#rgb2term	plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#rgb2term(rgb)$/;"	f
coc#compat#buf_add_keymap	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_add_keymap(bufnr, mode, lhs, rhs, opts) abort$/;"	f
coc#compat#buf_del_keymap	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_keymap(bufnr, mode, lhs) abort$/;"	f
coc#compat#buf_del_var	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_var(bufnr, name) abort$/;"	f
coc#compat#buf_set_lines	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_set_lines(bufnr, start, end, replacement) abort$/;"	f
coc#compat#buf_win_id	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_win_id(bufnr) abort$/;"	f
coc#compat#clear_matches	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#clear_matches(winid) abort$/;"	f
coc#compat#execute	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#execute(winid, command, ...) abort$/;"	f
coc#compat#matchaddgroups	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddgroups(winid, groups) abort$/;"	f
coc#compat#matchaddpos	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddpos(group, pos, priority, winid) abort$/;"	f
coc#compat#win_is_valid	plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#win_is_valid(winid) abort$/;"	f
coc#config	plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#cursor#char_offset	plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#char_offset() abort$/;"	f
coc#cursor#move_by_col	plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_by_col(delta)$/;"	f
coc#cursor#move_to	plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_to(line, character) abort$/;"	f
coc#cursor#position	plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#position()$/;"	f
coc#cursor#screen_pos	plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#screen_pos() abort$/;"	f
coc#do_notify	plugged/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#float#check_related	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#check_related() abort$/;"	f
coc#float#close	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close(winid) abort$/;"	f
coc#float#close_all	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_all(...) abort$/;"	f
coc#float#close_auto_hide_wins	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_auto_hide_wins(...) abort$/;"	f
coc#float#close_related	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_related(winid, ...) abort$/;"	f
coc#float#content_height	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#content_height(bufnr, width, wrap) abort$/;"	f
coc#float#create_border_lines	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_border_lines(border, title, width, height, hasbtn) abort$/;"	f
coc#float#create_buf	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_buf(bufnr, ...) abort$/;"	f
coc#float#create_cursor_float	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_cursor_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#create_dialog	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_dialog(lines, config) abort$/;"	f
coc#float#create_float_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_float_win(winid, bufnr, config) abort$/;"	f
coc#float#create_menu	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_menu(lines, config) abort$/;"	f
coc#float#create_notification	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_notification(lines, config) abort$/;"	f
coc#float#create_prompt_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_prompt_win(title, default, opts) abort$/;"	f
coc#float#create_pum_float	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_pum_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#cursor_relative	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#cursor_relative(winid) abort$/;"	f
coc#float#get_config_cursor	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_config_cursor(lines, config) abort$/;"	f
coc#float#get_float_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win() abort$/;"	f
coc#float#get_float_win_list	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win_list(...) abort$/;"	f
coc#float#get_related	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_related(winid, kind) abort$/;"	f
coc#float#has_float	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_float(...) abort$/;"	f
coc#float#has_scroll	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_scroll() abort$/;"	f
coc#float#jump	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#jump() abort$/;"	f
coc#float#nvim_border_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_border_win(config, winid, border, title, hasbtn, hlgroup, winblend, sha/;"	f
coc#float#nvim_buttons	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_buttons(config, winid, buttons, borderbottom, pad, hlgroup, borderhighl/;"	f
coc#float#nvim_close_btn	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_close_btn(config, winid, border, hlgroup, winblend, related) abort$/;"	f
coc#float#nvim_create_related	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_create_related(winid, config, opts) abort$/;"	f
coc#float#nvim_float_click	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_float_click() abort$/;"	f
coc#float#nvim_refresh_scrollbar	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_refresh_scrollbar(winid) abort$/;"	f
coc#float#nvim_right_pad	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_right_pad(config, winid, hlgroup, winblend, related) abort$/;"	f
coc#float#nvim_scroll_adjust	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scroll_adjust(winid) abort$/;"	f
coc#float#nvim_scrollbar	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scrollbar(winid) abort$/;"	f
coc#float#nvim_win_enter	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_win_enter(winid) abort$/;"	f
coc#float#prompt_confirm	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_confirm(title, cb) abort$/;"	f
coc#float#prompt_insert	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_insert(text) abort$/;"	f
coc#float#reflow	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#reflow(top) abort$/;"	f
coc#float#scroll	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll(forward, ...)$/;"	f
coc#float#scroll_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll_win(winid, forward, amount) abort$/;"	f
coc#float#scrollable	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scrollable(winid) abort$/;"	f
coc#float#valid	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#valid(winid) abort$/;"	f
coc#float#vim_buttons	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_buttons(winid, config) abort$/;"	f
coc#float#vim_filter	plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_filter(winid, key, keys) abort$/;"	f
coc#helper#dict_omit	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_omit(dict, keys) abort$/;"	f
coc#helper#dict_pick	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_pick(dict, keys) abort$/;"	f
coc#helper#get_charactor	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#get_charactor(line, col) abort$/;"	f
coc#helper#last_character	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#last_character(line) abort$/;"	f
coc#helper#max	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#max(first, ...) abort$/;"	f
coc#helper#min	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#min(first, ...) abort$/;"	f
coc#helper#obj_equal	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#obj_equal(one, two) abort$/;"	f
coc#helper#str_apply	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_apply(content, diff) abort$/;"	f
coc#helper#str_compose	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_compose(line, position, inserted) abort$/;"	f
coc#helper#str_diff	plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_diff(curr, previous, col) abort$/;"	f
coc#highlight#add_highlight	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlight(bufnr, src_id, hl_group, line, col_start, col_end) abort$/;"	f
coc#highlight#add_highlights	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlights(winid, codes, highlights) abort$/;"	f
coc#highlight#clear_highlight	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_highlight(bufnr, key, start_line, end_line) abort$/;"	f
coc#highlight#clear_match_group	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_match_group(winid, match) abort$/;"	f
coc#highlight#clear_matches	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_matches(winid, ids)$/;"	f
coc#highlight#compose_hlgroup	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#compose_hlgroup(fgGroup, bgGroup) abort$/;"	f
coc#highlight#create_namespace	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#create_namespace(key) abort$/;"	f
coc#highlight#get	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get(bufnr, key, start, end) abort$/;"	f
coc#highlight#get_highlights	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_highlights(bufnr, key) abort$/;"	f
coc#highlight#get_syntax_name	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_syntax_name(lnum, col)$/;"	f
coc#highlight#highlight_lines	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#highlight_lines(winid, blocks) abort$/;"	f
coc#highlight#match_ranges	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#match_ranges(winid, bufnr, ranges, hlGroup, priority) abort$/;"	f
coc#highlight#ranges	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#ranges(bufnr, key, hlGroup, ranges) abort$/;"	f
coc#highlight#update_highlights	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#update_highlights(bufnr, key, highlights, ...) abort$/;"	f
coc#jumpable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#clean_up	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#clean_up() abort$/;"	f
coc#list#create	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name, numberSelect)$/;"	f
coc#list#get_preview	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_preview(...) abort$/;"	f
coc#list#getchar	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#hide	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#hide(original, height, winid) abort$/;"	f
coc#list#names	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#names(...) abort$/;"	f
coc#list#options	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#preview	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#preview(lines, config) abort$/;"	f
coc#list#restore	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore(winid, height)$/;"	f
coc#list#scroll_preview	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#scroll_preview(dir) abort$/;"	f
coc#list#set_height	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#set_height(height) abort$/;"	f
coc#list#setlines	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(bufnr, lines, append)$/;"	f
coc#list#setup	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#status	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#on_enter	plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#prompt#activated	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#activated() abort$/;"	f
coc#prompt#getc	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getc() abort$/;"	f
coc#prompt#getchar	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getchar() abort$/;"	f
coc#prompt#start_prompt	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#start_prompt(session) abort$/;"	f
coc#prompt#stop_prompt	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#stop_prompt(session)$/;"	f
coc#refresh	plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#kill	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#started	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#started() abort$/;"	f
coc#rpc#stop	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	plugged/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#terminal#close	plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#close(bufnr) abort$/;"	f
coc#terminal#send	plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#send(bufnr, text, add_new_line) abort$/;"	f
coc#terminal#start	plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#start(cmd, cwd, env) abort$/;"	f
coc#util#api_version	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#api_version() abort$/;"	f
coc#util#change_lines	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#change_lines(bufnr, list) abort$/;"	f
coc#util#check_refresh	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#check_refresh(bufnr)$/;"	f
coc#util#cursor	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diagnostic_info	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diagnostic_info(bufnr, checkInsert) abort$/;"	f
coc#util#do_autocmd	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_autocmd(name) abort$/;"	f
coc#util#do_complete	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_lines	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#extension_root	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#get_buf_lines	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_buf_lines(bufnr, changedtick)$/;"	f
coc#util#get_bufoptions	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr, maxFileSize) abort$/;"	f
coc#util#get_changeinfo	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config(key) abort$/;"	f
coc#util#get_config_home	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_data_home	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_data_home()$/;"	f
coc#util#get_format_opts	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_format_opts(bufnr) abort$/;"	f
coc#util#get_input	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#getpid	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#getpid()$/;"	f
coc#util#has_preview	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#install	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install() abort$/;"	f
coc#util#install_extension	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#iterm_open	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#jumpTo	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jumpTo(line, character) abort$/;"	f
coc#util#open_file	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_files	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_files(files)$/;"	f
coc#util#open_terminal	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#path_replace_patterns	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#path_replace_patterns() abort$/;"	f
coc#util#pick_color	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#preview_info	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, filetype, ...) abort$/;"	f
coc#util#quickpick	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#quickpick(title, items, cb) abort$/;"	f
coc#util#rebuild	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#refactor_fold_text	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_fold_text(lnum) abort$/;"	f
coc#util#refactor_foldlevel	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_foldlevel(lnum) abort$/;"	f
coc#util#remote_fns	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns() abort$/;"	f
coc#util#run_terminal	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#set_lines	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_lines(bufnr, changedtick, original, replacement, start, end) abort$/;"	f
coc#util#setline	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unmap	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unmap(bufnr, keys) abort$/;"	f
coc#util#update_extensions	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#version	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#with_callback	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
coc#window#close	plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#close(winid) abort$/;"	f
coc#window#find	plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#find(key, val) abort$/;"	f
coc#window#gotoid	plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#gotoid(winid) abort$/;"	f
coc#window#tabnr	plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#tabnr(winid) abort$/;"	f
coc-blade	package.json	/^    "coc-blade": ">=0.3.0",$/;"	s	object:dependencies
coc-css	package.json	/^    "coc-css": ">=1.2.6",$/;"	s	object:dependencies
coc-emmet	package.json	/^    "coc-emmet": ">=1.1.6",$/;"	s	object:dependencies
coc-explorer	package.json	/^    "coc-explorer": ">=0.20.1",$/;"	s	object:dependencies
coc-highlight	package.json	/^    "coc-highlight": ">=1.2.8",$/;"	s	object:dependencies
coc-html	package.json	/^    "coc-html": ">=1.4.1",$/;"	s	object:dependencies
coc-html-css-support	package.json	/^    "coc-html-css-support": ">=0.2.4",$/;"	s	object:dependencies
coc-json	package.json	/^    "coc-json": ">=1.3.6",$/;"	s	object:dependencies
coc-markdownlint	package.json	/^    "coc-markdownlint": ">=1.12.3",$/;"	s	object:dependencies
coc-php-cs-fixer	package.json	/^    "coc-php-cs-fixer": ">=0.3.0",$/;"	s	object:dependencies
coc-phpls	package.json	/^    "coc-phpls": ">=2.2.1",$/;"	s	object:dependencies
coc-pyright	package.json	/^    "coc-pyright": ">=1.1.189",$/;"	s	object:dependencies
coc-snippets	package.json	/^    "coc-snippets": ">=2.4.6",$/;"	s	object:dependencies
coc-tabnine	package.json	/^    "coc-tabnine": ">=1.3.4",$/;"	s	object:dependencies
coc-tsserver	package.json	/^    "coc-tsserver": ">=1.8.6"$/;"	s	object:dependencies
coc.preferences.bracketEnterImprove	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.bracketEnterImprove": {$/;"	o	object:properties
coc.preferences.colorSupport	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.colorSupport": {$/;"	o	object:properties
coc.preferences.currentFunctionSymbolAutoUpdate	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.currentFunctionSymbolAutoUpdate": {$/;"	o	object:properties
coc.preferences.enableFloatHighlight	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableFloatHighlight": {$/;"	o	object:properties
coc.preferences.enableMarkdown	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMarkdown": {$/;"	o	object:properties
coc.preferences.enableMessageDialog	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMessageDialog": {$/;"	o	object:properties
coc.preferences.excludeImageLinksInMarkdownDocument	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.excludeImageLinksInMarkdownDocument": {$/;"	o	object:properties
coc.preferences.extensionUpdateCheck	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.extensionUpdateCheck": {$/;"	o	object:properties
coc.preferences.floatActions	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.floatActions": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnSaveFiletypes": {$/;"	o	object:properties
coc.preferences.formatOnType	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnType": {$/;"	o	object:properties
coc.preferences.formatOnTypeFiletypes	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnTypeFiletypes": {$/;"	o	object:properties
coc.preferences.jumpCommand	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.jumpCommand": {$/;"	o	object:properties
coc.preferences.listOfWorkspaceEdit	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.listOfWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.maxFileSize	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.maxFileSize": {$/;"	o	object:properties
coc.preferences.messageLevel	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.messageLevel": {$/;"	o	object:properties
coc.preferences.promptInput	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptInput": {$/;"	o	object:properties
coc.preferences.promptWorkspaceEdit	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.rootPatterns	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.rootPatterns": {$/;"	o	object:properties
coc.preferences.semanticTokensHighlights	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.semanticTokensHighlights": {$/;"	o	object:properties
coc.preferences.silentAutoupdate	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.silentAutoupdate": {$/;"	o	object:properties
coc.preferences.snippetStatusText	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippetStatusText": {$/;"	o	object:properties
coc.preferences.useQuickfixForLocations	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.useQuickfixForLocations": {$/;"	o	object:properties
coc.preferences.watchmanPath	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.watchmanPath": {$/;"	o	object:properties
coc.preferences.willSaveHandlerTimeout	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.willSaveHandlerTimeout": {$/;"	o	object:properties
coc.source.around.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.disableSyntaxes": {$/;"	o	object:properties
coc.source.around.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.enable": {$/;"	o	object:properties
coc.source.around.firstMatch	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.firstMatch": {$/;"	o	object:properties
coc.source.around.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.priority": {$/;"	o	object:properties
coc.source.around.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.shortcut": {$/;"	o	object:properties
coc.source.buffer.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.disableSyntaxes": {$/;"	o	object:properties
coc.source.buffer.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.enable": {$/;"	o	object:properties
coc.source.buffer.firstMatch	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.firstMatch": {$/;"	o	object:properties
coc.source.buffer.ignoreGitignore	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.ignoreGitignore": {$/;"	o	object:properties
coc.source.buffer.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.priority": {$/;"	o	object:properties
coc.source.buffer.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.shortcut": {$/;"	o	object:properties
coc.source.file.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.disableSyntaxes": {$/;"	o	object:properties
coc.source.file.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.enable": {$/;"	o	object:properties
coc.source.file.ignoreHidden	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignoreHidden": {$/;"	o	object:properties
coc.source.file.ignorePatterns	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignorePatterns": {$/;"	o	object:properties
coc.source.file.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.priority": {$/;"	o	object:properties
coc.source.file.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.shortcut": {$/;"	o	object:properties
coc.source.file.triggerCharacters	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.triggerCharacters": {$/;"	o	object:properties
coc.source.file.trimSameExts	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.trimSameExts": {$/;"	o	object:properties
coc_nvim	plugged/coc.nvim/plugin/coc.vim	/^  augroup coc_nvim$/;"	a
codeLens.enable	plugged/coc.nvim/data/schema.json	/^    "codeLens.enable": {$/;"	o	object:properties
codeLens.separator	plugged/coc.nvim/data/schema.json	/^    "codeLens.separator": {$/;"	o	object:properties
codeLens.subseparator	plugged/coc.nvim/data/schema.json	/^    "codeLens.subseparator": {$/;"	o	object:properties
code_actions	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.code_actions = function(opts)$/;"	f	unknown:lsp
codedark	plugged/lualine.nvim/THEMES.md	/^### codedark$/;"	S	chapter:Available themes
coe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
col	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      col = function(t)$/;"	f
colBlack	plugged/fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c	package:tui	typeref:type:Color
colBlue	plugged/fzf/src/tui/tui.go	/^	colBlue$/;"	c	package:tui
colCyan	plugged/fzf/src/tui/tui.go	/^	colCyan$/;"	c	package:tui
colDefault	plugged/fzf/src/tui/tui.go	/^	colDefault   Color = -1$/;"	c	package:tui	typeref:type:Color
colGreen	plugged/fzf/src/tui/tui.go	/^	colGreen$/;"	c	package:tui
colMagenta	plugged/fzf/src/tui/tui.go	/^	colMagenta$/;"	c	package:tui
colRed	plugged/fzf/src/tui/tui.go	/^	colRed$/;"	c	package:tui
colUndefined	plugged/fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c	package:tui	typeref:type:Color
colWhite	plugged/fzf/src/tui/tui.go	/^	colWhite$/;"	c	package:tui
colYellow	plugged/fzf/src/tui/tui.go	/^	colYellow$/;"	c	package:tui
collapse_all	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.collapse_all()$/;"	f	unknown:M
collect-v8-coverage	plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0"$/;"	s	object:dependencies.@jest/test-result.requires
collect-v8-coverage	plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
collect-v8-coverage	plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0",$/;"	s	object:dependencies.jest-runtime.requires
collect-v8-coverage	plugged/coc.nvim/package-lock.json	/^    "collect-v8-coverage": {$/;"	o	object:dependencies
collect_children	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:collect_children(filter_fun)$/;"	f	unknown:TSRange
collect_group_results	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.collect_group_results(bufnr, query_group, root, lang)$/;"	f	unknown:M
collect_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.collect_locals(bufnr)$/;"	f	unknown:M
collection	plugged/vim-blade/test.blade.php	/^    $collection = collect([$/;"	v
collection-visit	plugged/coc.nvim/package-lock.json	/^        "collection-visit": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
collection-visit	plugged/coc.nvim/package-lock.json	/^    "collection-visit": {$/;"	o	object:dependencies
color	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
color	plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
color	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function color( elem ) {$/;"	f	function:AnonymousFunctionc5b93c5c2900
color	plugged/fzf/src/ansi.go	/^	color  ansiState$/;"	m	struct:fzf.ansiOffset	typeref:typename:ansiState
color	plugged/fzf/src/result.go	/^	color  tui.ColorPair$/;"	m	struct:fzf.colorOffset	typeref:typename:tui.ColorPair
color	plugged/fzf/src/tui/tcell.go	/^	color       bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.chalk.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.expect.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles.requires
color-convert	plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.@babel/highlight.dependencies
color-convert	plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.cli-table.dependencies
color-convert	plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.slice-ansi.dependencies
color-convert	plugged/coc.nvim/package-lock.json	/^    "color-convert": {$/;"	o	object:dependencies
color-name	plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert.requires
color-name	plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.cli-table.dependencies.color-convert.requires
color-name	plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert.requires
color-name	plugged/coc.nvim/package-lock.json	/^        "color-name": "~1.1.4"$/;"	s	object:dependencies.color-convert.requires
color-name	plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.@babel/highlight.dependencies
color-name	plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.cli-table.dependencies
color-name	plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.slice-ansi.dependencies
color-name	plugged/coc.nvim/package-lock.json	/^    "color-name": {$/;"	o	object:dependencies
colorCodes	plugged/fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f	package:tui	typeref:typename:[]string
colorOffset	plugged/fzf/src/result.go	/^type colorOffset struct {$/;"	s	package:fzf
colorOffsets	plugged/fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, colBase tui.Col/;"	f	struct:fzf.Result	typeref:typename:[]colorOffset
color_hash[6]	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^color_hash[6] = function(line)$/;"	f
color_is_bright	plugged/bufferline.nvim/lua/bufferline/colors.lua	/^function M.color_is_bright(hex)$/;"	f	unknown:M
color_is_bright	plugged/toggleterm.nvim/lua/toggleterm/colors.lua	/^function M.color_is_bright(hex)$/;"	f	unknown:M
color_name2rgb	plugged/lualine.nvim/lua/lualine/utils/color_utils.lua	/^function M.color_name2rgb(name)$/;"	f	unknown:M
color_overrides	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.color_overrides(colors, config)$/;"	f	unknown:util
color_overrides	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.color_overrides(colors, config)$/;"	f	unknown:utils
color_overrides	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.color_overrides(colors, config)$/;"	f	unknown:util
color_string	plugged/plenary.nvim/lua/plenary/busted.lua	/^local color_string = function(color, str)$/;"	f
colored	plugged/fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
colored	plugged/fzf/src/tui/light.go	/^	colored  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
colorette	plugged/coc.nvim/package-lock.json	/^        "colorette": "^1.2.2",$/;"	s	object:dependencies.browserslist.requires
colorette	plugged/coc.nvim/package-lock.json	/^    "colorette": {$/;"	o	object:dependencies
colorize_ls	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local colorize_ls = function(bufnr, data, sections)$/;"	f
colors	plugged/coc.nvim/package-lock.json	/^    "colors": {$/;"	o	object:dependencies
colors	plugged/fzf/src/item.go	/^	colors      *[]ansiOffset \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]ansiOffset
colors_name	plugged/aquarium-vim/colors/aquarium.vim	/^let colors_name = "aquarium"$/;"	v
colorscheme	plugged/onedark.nvim/lua/onedark/init.lua	/^local function colorscheme()$/;"	f
colorscheme	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.colorscheme = function(opts)$/;"	f	unknown:internal
colorscheme	plugged/tokyonight.nvim/lua/tokyonight/init.lua	/^function M.colorscheme()$/;"	f	unknown:M
combined-stream	plugged/coc.nvim/package-lock.json	/^        "combined-stream": "^1.0.8",$/;"	s	object:dependencies.form-data.requires
combined-stream	plugged/coc.nvim/package-lock.json	/^    "combined-stream": {$/;"	o	object:dependencies
command	coc-settings.json	/^            "command": "racket",$/;"	s	object:languageserver.racket
command	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.command(group_name, callback)$/;"	f	unknown:M
command	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af800.e.a
command	plugged/coc.nvim/data/schema.json	/^        "command": {$/;"	o	object:definitions.languageServerCommand.properties
command	plugged/fzf/src/options.go	/^	command     string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
command	plugged/fzf/src/reader.go	/^	command  *string$/;"	m	struct:fzf.Reader	typeref:typename:*string
command	plugged/fzf/src/terminal.go	/^	command *string$/;"	m	struct:fzf.searchRequest	typeref:typename:*string
command	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^M.command = wrap(function(args, spec, callback)$/;"	f	unknown:M
command	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.command = function(self, args, spec)$/;"	f	unknown:Obj
command	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Repo.command = function(self, args, spec)$/;"	f	unknown:Repo
command	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  command = function(branch_name)$/;"	f
command_fmt	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.command_fmt(str, ...)$/;"	f	unknown:M
command_history	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.command_history = function(opts)$/;"	f	unknown:internal
commands	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.commands = function(opts)$/;"	f	unknown:internal
comment	plugged/nvim-treesitter/lockfile.json	/^  "comment": {$/;"	o
comment-parser	plugged/coc.nvim/package-lock.json	/^        "comment-parser": "^0.7.6",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
comment-parser	plugged/coc.nvim/package-lock.json	/^    "comment-parser": {$/;"	o	object:dependencies
commentary.vim	plugged/vim-commentary/README.markdown	/^# commentary.vim$/;"	c
commits	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.commits = function(opts)$/;"	f	unknown:git
commonlisp	plugged/nvim-treesitter/lockfile.json	/^  "commonlisp": {$/;"	o
comp	plugged/lualine.nvim/lua/tests/helpers.lua	/^    comp = require 'lualine.components.special.function_component'(opts)$/;"	f
comp	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^      local comp = require 'lualine.components.special.function_component'(opts)$/;"	f
comp	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^    local comp = require 'lualine.components.special.function_component'(opts)$/;"	f
comp1	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^    local comp1 = require 'lualine.components.special.function_component'(opts1)$/;"	f
comp2	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^      local comp2 = require 'lualine.components.special.function_component'(opts2)$/;"	f
comp2	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^    local comp2 = require 'lualine.components.special.function_component'(opts2)$/;"	f
comparator	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^    comparator = function (a, b)$/;"	f
compare	plugged/plenary.nvim/lua/luassert/spy.lua	/^          local compare = compare or function(count, expected) return count == expected end$/;"	f
compareRanks	plugged/fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compareRanks	plugged/fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compare_heads	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.compare_heads(a, b)$/;"	f	unknown:M
compare_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function compare_indent(before, after)$/;"	f
complete	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function complete(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
complete	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		opt.complete = function(){$/;"	f	function:opt
complete_groups	plugged/bufferline.nvim/lua/bufferline.lua	/^function __bufferline.complete_groups(arg_lead, cmd_line, cursor_pos)$/;"	f	unknown:__bufferline
complete_tag	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.complete_tag = function(prompt_bufnr)$/;"	f	unknown:actions
completion	plugged/telescope.nvim/lua/telescope/WIP.lua	/^WIP.completion = function(opts)$/;"	f	unknown:WIP
component	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^function M.component(context)$/;"	f	unknown:M
component	plugged/bufferline.nvim/lua/bufferline/duplicates.lua	/^function M.component(context)$/;"	f	unknown:M
component	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^    component = function()$/;"	f
component	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.component(ctx)$/;"	f	unknown:M
component	plugged/bufferline.nvim/lua/bufferline/models.lua	/^  self.component = t.component or function()$/;"	f	unknown:self
component	plugged/bufferline.nvim/lua/bufferline/numbers.lua	/^function M.component(context)$/;"	f	unknown:M
component	plugged/bufferline.nvim/lua/bufferline/pick.lua	/^function M.component(ctx)$/;"	f	unknown:M
component	plugged/lualine.nvim/lua/tests/helpers.lua	/^    component = 'special.function_component'$/;"	f
component-emitter	plugged/coc.nvim/package-lock.json	/^        "component-emitter": "^1.2.1",$/;"	s	object:dependencies.base.requires
component-emitter	plugged/coc.nvim/package-lock.json	/^        "component-emitter": "^1.2.1",$/;"	s	object:dependencies.cache-base.requires
component-emitter	plugged/coc.nvim/package-lock.json	/^    "component-emitter": {$/;"	o	object:dependencies
component[1]	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^    component[1] = function()$/;"	f
component_format_highlight	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.component_format_highlight(highlight_name)$/;"	f	unknown:M
component_loader	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function component_loader(component)$/;"	f
components	plugged/bufferline.nvim/tests/groups_spec.lua	/^    components = groups.render(components, function(t)$/;"	f
compose	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.compose(...)$/;"	f	unknown:M
compute	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^local function compute(needle, haystack, D, M)$/;"	f
compute_lines	plugged/nvim-tree.lua/lua/nvim-tree/renderer/help.lua	/^function M.compute_lines()$/;"	f	unknown:M
concat	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:concat(...)$/;"	f	unknown:List
concat	plugged/plenary.nvim/lua/plenary/operators.lua	/^  concat = function(a, b)$/;"	f
concat	plugged/plenary.nvim/lua/plenary/strings.lua	/^  local concat = function(a, b, dir)$/;"	f
concat-map	plugged/coc.nvim/package-lock.json	/^        "concat-map": "0.0.1"$/;"	s	object:dependencies.brace-expansion.requires
concat-map	plugged/coc.nvim/package-lock.json	/^    "concat-map": {$/;"	o	object:dependencies
concat_paths	plugged/plenary.nvim/lua/plenary/path.lua	/^local concat_paths = function(...)$/;"	f
cond	plugged/fzf/src/util/eventbox.go	/^	cond   *sync.Cond$/;"	m	struct:util.EventBox	typeref:typename:*sync.Cond
cond	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^        cond = function()$/;"	f
config	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.config = function ()$/;"	f	unknown:M
config_info	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function config_info(process_function)$/;"	f
consoleDevice	plugged/fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c	package:tui	typeref:typename:string
consoleFlagsInput	plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsInput  = uint32(windows.ENABLE_VIRTUAL_TERMINAL_INPUT | windows.ENABLE_PROCESSED_IN/;"	v	package:tui
consoleFlagsOutput	plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsOutput = uint32(windows.ENABLE_VIRTUAL_TERMINAL_PROCESSING | windows.ENABLE_PROCESS/;"	v	package:tui
constant	plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constant	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.constant(a)$/;"	f	unknown:M
constrain	plugged/fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f	struct:fzf.Terminal
construct_number	plugged/bufferline.nvim/lua/bufferline/numbers.lua	/^local function construct_number(map, num)$/;"	f
constructor	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunctionaf1e5c4a33e00.e
constructor	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	m	class:t
constructor	plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
containing_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.containing_scope(node, bufnr, allow_scope)$/;"	f	unknown:M
contains	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:contains(e)$/;"	f	unknown:List
contains	plugged/plenary.nvim/tests/plenary/scandir_spec.lua	/^local contains = function(tbl, str)$/;"	f
contains_match	plugged/plenary.nvim/tests/plenary/scandir_spec.lua	/^local contains_match = function(tbl, str)$/;"	f
content	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
content	plugged/emmet-vim/docs/index.html	/^	<section id="content">$/;"	I
content-disposition	plugged/coc.nvim/package-lock.json	/^    "content-disposition": {$/;"	o	object:dependencies
contrast	plugged/material.nvim/lua/material/util.lua	/^util.contrast = function ()$/;"	f	unknown:util
contrast_modifier	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function contrast_modifier(rgb_color, amount)$/;"	f
conv_to_octal	plugged/plenary.nvim/lua/plenary/scandir.lua	/^  local conv_to_octal = function(nr)$/;"	f
convert-source-map	plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.4.0",$/;"	s	object:dependencies.@jest/transform.requires
convert-source-map	plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.6.0",$/;"	s	object:dependencies.v8-to-istanbul.requires
convert-source-map	plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.7.0",$/;"	s	object:dependencies.@babel/core.requires
convert-source-map	plugged/coc.nvim/package-lock.json	/^    "convert-source-map": {$/;"	o	object:dependencies
convertBoolToInt32	plugged/fzf/src/util/atomicbool.go	/^func convertBoolToInt32(b bool) int32 {$/;"	f	package:util	typeref:typename:int32
convert_diagnostic_type	plugged/telescope.nvim/lua/telescope/utils.lua	/^local convert_diagnostic_type = function(severity)$/;"	f
convert_highlights	plugged/bufferline.nvim/lua/bufferline/config.lua	/^local function convert_highlights(highlights)$/;"	f
convert_opts	plugged/telescope.nvim/lua/telescope/_.lua	/^M.convert_opts = function(o)$/;"	f	unknown:M
convert_user_opts	plugged/telescope.nvim/lua/telescope/command.lua	/^command.convert_user_opts = function(user_opts)$/;"	f	unknown:command
coordinatorDelayMax	plugged/fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
coordinatorDelayStep	plugged/fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
copy	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Vf
copy	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var src = target[ name ], copy = options[ name ];$/;"	v
copy	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.copy(node)$/;"	f	unknown:M
copy	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:copy()$/;"	f	unknown:List
copy	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:copy(opts)$/;"	f	unknown:Path
copy-descriptor	plugged/coc.nvim/package-lock.json	/^        "copy-descriptor": "^0.1.0",$/;"	s	object:dependencies.object-copy.requires
copy-descriptor	plugged/coc.nvim/package-lock.json	/^    "copy-descriptor": {$/;"	o	object:dependencies
copySlice	plugged/fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
copy_absolute_path	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.copy_absolute_path(node)$/;"	f	unknown:M
copy_filename	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.copy_filename(node)$/;"	f	unknown:M
copy_path	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.copy_path(node)$/;"	f	unknown:M
copy_to_clipboard	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function copy_to_clipboard(content)$/;"	f
copyargs	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.copyargs(args)$/;"	f	unknown:util
count	plugged/fzf/src/chunklist.go	/^	count int$/;"	m	struct:fzf.Chunk	typeref:typename:int
count	plugged/fzf/src/merger.go	/^	count   int$/;"	m	struct:fzf.Merger	typeref:typename:int
count	plugged/fzf/src/terminal.go	/^	count        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
count	plugged/lualine.nvim/lua/lualine/components/filename.lua	/^local function count(base, pattern)$/;"	f
count	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:count(e)$/;"	f	unknown:List
count	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.count(tab)$/;"	f	unknown:M
count_inc	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^    local count_inc = function()$/;"	f
counter	plugged/plenary.nvim/lua/plenary/async/control.lua	/^M.channel.counter = function()$/;"	f	unknown:M.channel
counter	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.channel.counter = function()$/;"	f	unknown:M.channel
countreferences	plugged/plenary.nvim/scratch/_reference_count.lua	/^function countreferences(value)$/;"	f
counts	plugged/fzf/test/test_go.rb	/^          def counts$/;"	f	method:Tmux.until
coverageDirectory	plugged/coc.nvim/package.json	/^    "coverageDirectory": ".\/coverage\/"$/;"	s	object:jest
cp	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
cp	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cp          :call b:buffergator_catalog_viewer.cycle_direc/;"	m
cpp	coc-settings.json	/^         "cpp": ["c"],$/;"	a	object:snippets.extends
cpp	plugged/nvim-treesitter/lockfile.json	/^  "cpp": {$/;"	o
cprint	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^local function cprint(obj, lvl)$/;"	f
cprint2	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f	struct:tui.LightWindow
cq	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cq          :call b:buffergator_catalog_viewer.cycle_autod/;"	m
create	plugged/gitsigns.nvim/lua/gitsigns/popup.lua	/^function popup.create(lines, opts)$/;"	f	unknown:popup
create	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.create(node)$/;"	f	unknown:M
create	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^function popup.create(what, vim_options)$/;"	f	unknown:popup
create	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^action_mt.create = function(mod)$/;"	f	unknown:action_mt
create	plugged/telescope.nvim/lua/telescope/pickers/entry_display.lua	/^entry_display.create = function(configuration)$/;"	f	unknown:entry_display
create	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.create = function(scroll_strategy, sorting_strategy)$/;"	f	unknown:scroller
createFile	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
create_augroups	plugged/toggleterm.nvim/lua/toggleterm/utils.lua	/^function M.create_augroups(definitions)$/;"	f	unknown:M
create_buffer	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function create_buffer()$/;"	f
create_buffer_cache	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^function M.create_buffer_cache()$/;"	f	unknown:M
create_component_highlight_group	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.create_component_highlight_group(color, highlight_tag, options)$/;"	f	unknown:M
create_file	plugged/fzf/install	/^create_file() {$/;"	f
create_file	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function create_file(file)$/;"	f
create_highlight_groups	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.create_highlight_groups(theme)$/;"	f	unknown:M
create_highlights	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.create_highlights(group, color)$/;"	f	unknown:utils
create_hl	plugged/bufferline.nvim/lua/bufferline/custom_area.lua	/^local function create_hl(index, side, section, guibg)$/;"	f
create_horizontal_line	plugged/plenary.nvim/lua/plenary/window/border.lua	/^local create_horizontal_line = function(title, pos, width, left_char, mid_char, right_char)$/;"	f
create_hunk	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.create_hunk(start_a, count_a, start_b, count_b)$/;"	f	unknown:M
create_new_file	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^      local create_new_file = function()$/;"	f
create_node	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^local create_node = function(item)$/;"	f
create_option_highlights	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:create_option_highlights()$/;"	f	unknown:M
create_patch	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.create_patch(relpath, hunks, mode_bits, invert)$/;"	f	unknown:M
create_root	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^local function create_root(cwd)$/;"	f
create_tag_set	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local function create_tag_set(tag)$/;"	f
create_term_buf_if_needed	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^local function create_term_buf_if_needed(term)$/;"	f
create_wrapper	plugged/plenary.nvim/lua/plenary/fun.lua	/^function M.create_wrapper(map)$/;"	f	unknown:M
criterion	plugged/fzf/src/options.go	/^type criterion int$/;"	t	package:fzf	typeref:typename:int
cross-spawn	plugged/coc.nvim/package-lock.json	/^            "cross-spawn": "^7.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
cross-spawn	plugged/coc.nvim/package-lock.json	/^        "cross-spawn": "^6.0.0",$/;"	s	object:dependencies.execa.requires
cross-spawn	plugged/coc.nvim/package-lock.json	/^        "cross-spawn": "^7.0.2",$/;"	s	object:dependencies.eslint.requires
cross-spawn	plugged/coc.nvim/package-lock.json	/^        "cross-spawn": {$/;"	o	object:dependencies.execa.dependencies
cross-spawn	plugged/coc.nvim/package-lock.json	/^    "cross-spawn": {$/;"	o	object:dependencies
cs	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
cs	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cs          :call b:buffergator_catalog_viewer.cycle_sort_/;"	m
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csi	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f	unknown:tui.LightRenderer
csi	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f	struct:tui.LightWindow
csiColor	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
css	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    css          = jQuery.curCSS,$/;"	v
css	plugged/nvim-treesitter/lockfile.json	/^  "css": {$/;"	o
cssom	plugged/coc.nvim/package-lock.json	/^        "cssom": "^0.4.4",$/;"	s	object:dependencies.jsdom.requires
cssom	plugged/coc.nvim/package-lock.json	/^        "cssom": "~0.3.6"$/;"	s	object:dependencies.cssstyle.requires
cssom	plugged/coc.nvim/package-lock.json	/^        "cssom": {$/;"	o	object:dependencies.cssstyle.dependencies
cssom	plugged/coc.nvim/package-lock.json	/^    "cssom": {$/;"	o	object:dependencies
cssstyle	plugged/coc.nvim/package-lock.json	/^        "cssstyle": "^2.3.0",$/;"	s	object:dependencies.jsdom.requires
cssstyle	plugged/coc.nvim/package-lock.json	/^    "cssstyle": {$/;"	o	object:dependencies
cstr	plugged/telescope.nvim/data/options/options.lua	/^local cstr = function(s)$/;"	f
ctags	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.ctags = defaulter(function(_)$/;"	f	unknown:previewers
cterm2rgb	plugged/lualine.nvim/lua/lualine/utils/color_utils.lua	/^function M.cterm2rgb(color)$/;"	f	unknown:M
cterm_normal	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let cterm_normal = s:has_attr('fg', 'cterm') ? 'fg' : 'NONE'$/;"	v
cu	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
cuda	plugged/nvim-treesitter/lockfile.json	/^  "cuda": {$/;"	o
cur	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	cur: function(force){$/;"	m	class:jQuery.fx
curl_query	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.curl_query = function(t)$/;"	f	unknown:parse
current	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Buffer:current()$/;"	f	unknown:Buffer
current	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Component:current()$/;"	f	unknown:Component
current	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function GroupView:current()$/;"	f	unknown:GroupView
current	plugged/fzf/src/history.go	/^func (h *History) current() string {$/;"	f	struct:fzf.History	typeref:typename:string
current	plugged/fzf/src/terminal.go	/^	current  bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
currentItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f	struct:fzf.Terminal	typeref:typename:*Item
current_buffer_fuzzy_find	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.current_buffer_fuzzy_find = function(opts)$/;"	f	unknown:files
current_buffer_tags	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.current_buffer_tags = function(opts)$/;"	f	unknown:files
current_score	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^      local current_score = scoring_function(match)$/;"	f
cursor	plugged/fzf/src/history.go	/^	cursor   int$/;"	m	struct:fzf.History	typeref:typename:int
cursor_relative_pos	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^  local cursor_relative_pos = function(pos_str, dim)$/;"	f
cursors	plugged/fzf/src/merger.go	/^	cursors []int$/;"	m	struct:fzf.Merger	typeref:typename:[]int
cursors.cancelKey	plugged/coc.nvim/data/schema.json	/^    "cursors.cancelKey": {$/;"	o	object:properties
cursors.nextKey	plugged/coc.nvim/data/schema.json	/^    "cursors.nextKey": {$/;"	o	object:properties
cursors.previousKey	plugged/coc.nvim/data/schema.json	/^    "cursors.previousKey": {$/;"	o	object:properties
custom	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	custom: function(from, to, unit){$/;"	m	class:jQuery.fx
cut	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function cut(tuple)$/;"	f
cut	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.cut(node)$/;"	f	unknown:M
cv	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
cw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
cw	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cw          :call b:buffergator_catalog_viewer.cycle_viewp/;"	m
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {$/;"	o	object:definitions.languageServerBase.properties
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerCommand.properties
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerModule.properties
cx	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
cx	plugged/fzf/src/terminal.go	/^	cx           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
cy	plugged/fzf/src/terminal.go	/^	cy           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cyan	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
cyanBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
cycle	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.cycle(direction)$/;"	f	unknown:M
cycle	plugged/fzf/src/options.go	/^	cycle       bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
cycle	plugged/fzf/src/terminal.go	/^	cycle        bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cycle	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^  cycle = function(range_fn)$/;"	f
cycle	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.cycle = function(i, n)$/;"	f	unknown:utils
cycle_history_next	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.cycle_history_next = function(prompt_bufnr)$/;"	f	unknown:actions
cycle_history_prev	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.cycle_history_prev = function(prompt_bufnr)$/;"	f	unknown:actions
cycle_previewers	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:cycle_previewers(next)$/;"	f	unknown:Picker
cycle_previewers_next	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.cycle_previewers_next = function(prompt_bufnr)$/;"	f	unknown:actions
cycle_previewers_prev	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.cycle_previewers_prev = function(prompt_bufnr)$/;"	f	unknown:actions
d	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
d	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
d	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
d	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
d	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400.s
d	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
d	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
d	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
d	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionaf1e5c4a7400
d	plugged/nvim-treesitter/lockfile.json	/^  "d": {$/;"	o
d	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^d = ($/;"	v
d	plugged/nvim-treesitter/tests/indent/python/branches.py	/^d = [[[$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^d = {$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^d = {$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/strings.py	/^d = """$/;"	v
d	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> d           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
d	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> d           :call b:buffergator_catalog_viewer.delete_targ/;"	m
d$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
d0	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
d0e	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
d4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
d5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
d6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
d7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
d8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
d9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
dA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
dB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
dC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
dD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dG	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
dI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
dL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dM	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
dO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
dP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
dS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
dV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dWe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
dY	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
da	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
dae	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
dark	plugged/aquarium-vim/extras/alacritty_aquarium.yml	/^  aquarium_dark: &dark$/;"	a
dark	plugged/github-nvim-theme/LUALINE.md	/^#### dark$/;"	t	subsection:Screenshots
dark_default	plugged/github-nvim-theme/LUALINE.md	/^#### dark_default$/;"	t	subsection:Screenshots
darken	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.darken(hex, amount, bg)$/;"	f	unknown:util
darken	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.darken(hex, amount, bg)$/;"	f	unknown:utils
darken	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.darken(hex, amount, bg)$/;"	f	unknown:util
dart	plugged/nvim-treesitter/lockfile.json	/^  "dart": {$/;"	o
data-urls	plugged/coc.nvim/package-lock.json	/^        "data-urls": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
data-urls	plugged/coc.nvim/package-lock.json	/^    "data-urls": {$/;"	o	object:dependencies
data_body	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.data_body = function(t)$/;"	f	unknown:parse
data_directory	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.data_directory()$/;"	f	unknown:utils
data_path	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^  local data_path = (function()$/;"	f
date-format	plugged/coc.nvim/package-lock.json	/^        "date-format": "^2.1.0",$/;"	s	object:dependencies.streamroller.requires
date-format	plugged/coc.nvim/package-lock.json	/^        "date-format": "^3.0.0",$/;"	s	object:dependencies.log4js.requires
date-format	plugged/coc.nvim/package-lock.json	/^        "date-format": {$/;"	o	object:dependencies.streamroller.dependencies
date-format	plugged/coc.nvim/package-lock.json	/^    "date-format": {$/;"	o	object:dependencies
dd	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
de	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
debounce	plugged/coc.nvim/package-lock.json	/^    "debounce": {$/;"	o	object:dependencies
debounce_leading	plugged/telescope.nvim/lua/telescope/debounce.lua	/^function M.debounce_leading(fn, ms)$/;"	f	unknown:M
debounce_trailing	plugged/gitsigns.nvim/lua/gitsigns/debounce.lua	/^function M.debounce_trailing(ms, fn)$/;"	f	unknown:M
debounce_trailing	plugged/telescope.nvim/lua/telescope/debounce.lua	/^function M.debounce_trailing(fn, ms, first)$/;"	f	unknown:M
debug	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.log.debug(msg)$/;"	f	unknown:M.log
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.agent-base.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.http-proxy-agent.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.https-proxy-agent.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^2.2.0",$/;"	s	object:dependencies.snapdragon.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^2.3.3",$/;"	s	object:dependencies.expand-brackets.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.0.1",$/;"	s	object:dependencies.eslint.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.0",$/;"	s	object:dependencies.@babel/core.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.0",$/;"	s	object:dependencies.@babel/traverse.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1"$/;"	s	object:dependencies.@typescript-eslint/parser.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.log4js.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.streamroller.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": "^4.3.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
debug	plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies
debug	plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.expand-brackets.dependencies
debug	plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.snapdragon.dependencies
debug	plugged/coc.nvim/package-lock.json	/^    "debug": {$/;"	o	object:dependencies
debug	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.debug(colors)$/;"	f	unknown:util
debug	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/_log.lua	/^        debug = function(_) end,$/;"	f
debug	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.debug(colors)$/;"	f	unknown:util
debugV2	plugged/fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f	package:algo
debug_messages	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^   R.debug_messages = function(noecho)$/;"	f	unknown:R
debug_messages	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.debug_messages()$/;"	f	unknown:M
decamelize	plugged/coc.nvim/package-lock.json	/^        "decamelize": "^1.2.0"$/;"	s	object:dependencies.yargs-parser.requires
decamelize	plugged/coc.nvim/package-lock.json	/^        "decamelize": "^1.2.0",$/;"	s	object:dependencies.yargs.requires
decamelize	plugged/coc.nvim/package-lock.json	/^    "decamelize": {$/;"	o	object:dependencies
decimal.js	plugged/coc.nvim/package-lock.json	/^        "decimal.js": "^10.2.1",$/;"	s	object:dependencies.jsdom.requires
decimal.js	plugged/coc.nvim/package-lock.json	/^    "decimal.js": {$/;"	o	object:dependencies
decode-uri-component	plugged/coc.nvim/package-lock.json	/^        "decode-uri-component": "^0.2.0",$/;"	s	object:dependencies.source-map-resolve.requires
decode-uri-component	plugged/coc.nvim/package-lock.json	/^    "decode-uri-component": {$/;"	o	object:dependencies
decompress-response	plugged/coc.nvim/package-lock.json	/^    "decompress-response": {$/;"	o	object:dependencies
decrement_id	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function decrement_id(num)$/;"	f
dedent	plugged/plenary.nvim/lua/plenary/strings.lua	/^M.dedent = function(str, leave_indent)$/;"	f	unknown:M
deep	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
deep-extend	plugged/coc.nvim/package-lock.json	/^        "deep-extend": "^0.6.0",$/;"	s	object:dependencies.rc.requires
deep-extend	plugged/coc.nvim/package-lock.json	/^    "deep-extend": {$/;"	o	object:dependencies
deep-is	plugged/coc.nvim/package-lock.json	/^            "deep-is": "~0.1.3",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
deep-is	plugged/coc.nvim/package-lock.json	/^        "deep-is": "^0.1.3",$/;"	s	object:dependencies.optionator.requires
deep-is	plugged/coc.nvim/package-lock.json	/^    "deep-is": {$/;"	o	object:dependencies
deep_copy	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:deep_copy()$/;"	f	unknown:List
deep_equal	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:deep_equal(other)$/;"	f	unknown:List
deepcompare	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.deepcompare(t1,t2,ignore_mt,cycles,thresh1,thresh2)$/;"	f	unknown:util
deepcopy	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.deepcopy(t, deepmt, cache)$/;"	f	unknown:util
deepmerge	plugged/coc.nvim/package-lock.json	/^        "deepmerge": "^4.2.2",$/;"	s	object:dependencies.jest-config.requires
deepmerge	plugged/coc.nvim/package-lock.json	/^    "deepmerge": {$/;"	o	object:dependencies
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.float.properties.title
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerBase.properties.cwd
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerCommand.properties.command
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.module
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.runtime
default	plugged/coc.nvim/data/schema.json	/^          "default": "127.0.0.1",$/;"	s	object:definitions.languageServerSocket.properties.host
default	plugged/coc.nvim/data/schema.json	/^          "default": "CocFloating",$/;"	s	object:definitions.float.properties.borderhighlight
default	plugged/coc.nvim/data/schema.json	/^          "default": "CocFloating",$/;"	s	object:definitions.float.properties.highlight
default	plugged/coc.nvim/data/schema.json	/^          "default": "ipc",$/;"	s	object:definitions.languageServerModule.properties.transport
default	plugged/coc.nvim/data/schema.json	/^          "default": "never",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
default	plugged/coc.nvim/data/schema.json	/^          "default": "off",$/;"	s	object:definitions.languageServerBase.properties.trace.server
default	plugged/coc.nvim/data/schema.json	/^          "default": "utf8",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
default	plugged/coc.nvim/data/schema.json	/^          "default": 0,$/;"	n	object:definitions.float.properties.winblend
default	plugged/coc.nvim/data/schema.json	/^          "default": 0,$/;"	n	object:definitions.languageServerBase.properties.formatterPriority
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.additionalSchemes
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.filetypes
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.ignoredRootPaths
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.rootPatterns
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerCommand.properties.args
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.args
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.execArgv
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.border
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.close
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.shadow
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableCompletion
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDiagnostics
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDynamicRegister
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableSnippetCompletion
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableWorkspaceFolders
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.requireRootPattern
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.detached
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.shell
default	plugged/coc.nvim/data/schema.json	/^          "default": null,$/;"	z	object:definitions.languageServerBase.properties.env
default	plugged/coc.nvim/data/schema.json	/^          "default": true$/;"	b	object:definitions.languageServerBase.properties.enable
default	plugged/coc.nvim/data/schema.json	/^          "default": true,$/;"	b	object:definitions.float.properties.focusable
default	plugged/coc.nvim/data/schema.json	/^          "default": true,$/;"	b	object:definitions.languageServerBase.properties.progressOnInitialization
default	plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.initializationOptions
default	plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.settings
default	plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	o	object:properties.suggest.completionItemKindLabels.properties
default	plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.codeLens.subseparator
default	plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.diagnostic.virtualTextPrefix
default	plugged/coc.nvim/data/schema.json	/^      "default": " \\\\ "$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
default	plugged/coc.nvim/data/schema.json	/^      "default": "",$/;"	s	object:properties.http.proxy
default	plugged/coc.nvim/data/schema.json	/^      "default": "*",$/;"	s	object:properties.list.selectedSignText
default	plugged/coc.nvim/data/schema.json	/^      "default": "+",$/;"	s	object:properties.tree.closedIcon
default	plugged/coc.nvim/data/schema.json	/^      "default": "-",$/;"	s	object:properties.tree.openedIcon
default	plugged/coc.nvim/data/schema.json	/^      "default": "10MB",$/;"	s	object:properties.coc.preferences.maxFileSize
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.list.nextKeymap
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.tree.key.selectNext
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.list.previousKeymap
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.tree.key.selectPrevious
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-n>",$/;"	s	object:properties.cursors.nextKey
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-p>",$/;"	s	object:properties.cursors.previousKey
default	plugged/coc.nvim/data/schema.json	/^      "default": "<cr>",$/;"	s	object:properties.dialog.confirmKey
default	plugged/coc.nvim/data/schema.json	/^      "default": "<cr>",$/;"	s	object:properties.tree.key.invoke
default	plugged/coc.nvim/data/schema.json	/^      "default": "<esc>",$/;"	s	object:properties.cursors.cancelKey
default	plugged/coc.nvim/data/schema.json	/^      "default": "<esc>",$/;"	s	object:properties.tree.key.close
default	plugged/coc.nvim/data/schema.json	/^      "default": "<space>",$/;"	s	object:properties.tree.key.toggleSelection
default	plugged/coc.nvim/data/schema.json	/^      "default": "<tab>",$/;"	s	object:properties.tree.key.actions
default	plugged/coc.nvim/data/schema.json	/^      "default": ">",$/;"	s	object:properties.list.indicator
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.errorSign
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.hintSign
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.infoSign
default	plugged/coc.nvim/data/schema.json	/^      "default": "A"$/;"	s	object:properties.coc.source.around.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "B"$/;"	s	object:properties.coc.source.buffer.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "CocFloating",$/;"	s	object:properties.notification.highlightGroup
default	plugged/coc.nvim/data/schema.json	/^      "default": "F"$/;"	s	object:properties.coc.source.file.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "M",$/;"	s	object:properties.tree.key.collapseAll
default	plugged/coc.nvim/data/schema.json	/^      "default": "SNIP",$/;"	s	object:properties.coc.preferences.snippetStatusText
default	plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.matchHighlightGroup
default	plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.previewHighlightGroup
default	plugged/coc.nvim/data/schema.json	/^      "default": "[%source%code] [%severity] %message"$/;"	s	object:properties.diagnostic.format
default	plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.diagnostic.enableMessage
default	plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.suggest.autoTrigger
default	plugged/coc.nvim/data/schema.json	/^      "default": "botright 30vs",$/;"	s	object:properties.callHierarchy.splitCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "botright 30vs",$/;"	s	object:properties.outline.splitCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "category",$/;"	s	object:properties.outline.sortBy
default	plugged/coc.nvim/data/schema.json	/^      "default": "edit"$/;"	s	object:properties.coc.preferences.jumpCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "edit",$/;"	s	object:properties.callHierarchy.openCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "f",$/;"	s	object:properties.tree.key.activeFilter
default	plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.diagnostic.messageTarget
default	plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.signature.target
default	plugged/coc.nvim/data/schema.json	/^      "default": "full"$/;"	s	object:properties.list.source.diagnostics.pathFormat
default	plugged/coc.nvim/data/schema.json	/^      "default": "hint",$/;"	s	object:properties.diagnostic.level
default	plugged/coc.nvim/data/schema.json	/^      "default": "length",$/;"	s	object:properties.suggest.defaultSortMethod
default	plugged/coc.nvim/data/schema.json	/^      "default": "more",$/;"	s	object:properties.coc.preferences.messageLevel
default	plugged/coc.nvim/data/schema.json	/^      "default": "never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
default	plugged/coc.nvim/data/schema.json	/^      "default": "npm",$/;"	s	object:properties.npm.binPath
default	plugged/coc.nvim/data/schema.json	/^      "default": "preview",$/;"	s	object:properties.suggest.detailField
default	plugged/coc.nvim/data/schema.json	/^      "default": "quickfix",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
default	plugged/coc.nvim/data/schema.json	/^      "default": "t",$/;"	s	object:properties.tree.key.toggle
default	plugged/coc.nvim/data/schema.json	/^      "default": "vsplit"$/;"	s	object:properties.refactor.openCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "~",$/;"	s	object:properties.suggest.snippetIndicator
default	plugged/coc.nvim/data/schema.json	/^      "default": "‣"$/;"	s	object:properties.codeLens.separator
default	plugged/coc.nvim/data/schema.json	/^      "default": "⚠"$/;"	s	object:properties.diagnostic.warningSign
default	plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.around.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.buffer.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginRight
default	plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginTop
default	plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.outline.expandLevel
default	plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.suggest.minTriggerInputLength
default	plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.coc.source.file.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.diagnostic.signPriority
default	plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.list.height
default	plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.notification.maxHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 100$/;"	n	object:properties.suggest.detailMaxLength
default	plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.list.interactiveDebounceTime
default	plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.suggest.triggerCompletionWait
default	plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlighLimit
default	plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlightOffset
default	plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.hover.previewMaxHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.list.maxPreviewHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 20,$/;"	n	object:properties.dialog.maxHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.diagnostic.messageDelay
default	plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.suggest.labelMaxLength
default	plugged/coc.nvim/data/schema.json	/^      "default": 3$/;"	n	object:properties.diagnostic.virtualTextLines
default	plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.afterContext
default	plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.beforeContext
default	plugged/coc.nvim/data/schema.json	/^      "default": 30,$/;"	n	object:properties.notification.minProgressWidth
default	plugged/coc.nvim/data/schema.json	/^      "default": 30000,$/;"	n	object:properties.list.limitLines
default	plugged/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxCompleteItemCount
default	plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
default	plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.signature.triggerSignatureWait
default	plugged/coc.nvim/data/schema.json	/^      "default": 5000,$/;"	n	object:properties.suggest.timeout
default	plugged/coc.nvim/data/schema.json	/^      "default": 60,$/;"	n	object:properties.notification.maxWidth
default	plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.dialog.maxWidth
default	plugged/coc.nvim/data/schema.json	/^      "default": 900,$/;"	n	object:properties.list.signOffset
default	plugged/coc.nvim/data/schema.json	/^      "default": 99,$/;"	n	object:properties.suggest.languageSourcePriority
default	plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	a	object:properties.suggest.invalidInsertCharacters
default	plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	a	object:properties.outline.codeActionKinds
default	plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	a	object:properties.coc.preferences.rootPatterns
default	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	a	object:properties.coc.source.file.trimSameExts
default	plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	a	object:properties.coc.source.file.triggerCharacters
default	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	a	object:properties.workspace.ignoredFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [$/;"	a	object:properties.list.statusLineSegments
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnSaveFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnTypeFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.around.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.buffer.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.ignorePatterns
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.outline.ctagsFilestypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.symbols.excludes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.workspace.bottomUpFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.formatOnType
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.useQuickfixForLocations
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.codeLens.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.checkCurrentLine
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.displayByAle
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshOnInsertMode
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.virtualText
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.signature.hideOnTextChange
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.asciiCharactersOnly
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableKind
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenu
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenuShortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreselect
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreview
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.keepCompleteopt
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.numberSelect
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.preferCompleteThanJumpPlaceholder
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.removeDuplicateItems
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.triggerAfterInsertEnter
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.coc.preferences.enableMessageDialog
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.alignColumns
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.previewSplitRight
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.outline.keepWindow
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.acceptSuggestionOnCommitCharacter
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.echodocSupport
default	plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.coc.preferences.watchmanPath
default	plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyAuthorization
default	plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyCA
default	plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatBorderHighlight
default	plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatHighlight
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.bracketEnterImprove
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.colorSupport
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableFloatHighlight
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableMarkdown
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.floatActions
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptInput
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptWorkspaceEdit
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.semanticTokensHighlights
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.silentAutoupdate
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.firstMatch
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.firstMatch
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.file.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.autoRefresh
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.locationlistUpdate
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.virtualTextCurrentLineOnly
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.http.proxyStrictSSL
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.list.source.diagnostics.includeCode
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.refactor.saveToFile
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.preferShownAbove
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.fixInsertedWord
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.floatEnable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.localityBonus
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.noselect
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.snippetsSupport
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.callHierarchy.enableTooltip
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.buffer.ignoreGitignore
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.file.ignoreHidden
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableHighlightLineNumber
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableSign
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showDeprecated
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showUnused
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtonShortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtons
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.hover.autoHide
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.extendedSearchMode
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.checkBufferSwitch
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.followCursor
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.showLineNumber
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.workspace.workspaceFolderCheckCwd
default	plugged/coc.nvim/data/schema.json	/^      "default": {}$/;"	o	object:properties.diagnostic.filetypeMap
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.languageserver
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.insertMappings
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.normalMappings
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.suggest.completionItemKindLabels
default	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      default = function()$/;"	f
default	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      default = function(name, blame_info, opts)$/;"	f
default	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      default = function(status)$/;"	f
defaultCommand	plugged/fzf/src/constants.go	/^var defaultCommand string$/;"	v	package:fzf	typeref:typename:string
defaultEscDelay	plugged/fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c	package:tui
defaultHeight	plugged/fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c	package:tui
defaultHistoryMax	plugged/fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c	package:fzf	typeref:typename:int
defaultJumpLabels	plugged/fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,/;"	c	package:fzf	typeref:typename:string
defaultKeymap	plugged/fzf/src/terminal.go	/^func defaultKeymap() map[tui.Event][]action {$/;"	f	package:fzf	typeref:typename:map[tui.Event][]action
defaultMargin	plugged/fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
defaultOptions	plugged/fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
defaultPort	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	G	class:AnonymousFunctionaf1e5c4a33e00.e
defaultPort	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	S	class:AnonymousFunctionaf1e5c4a33e00.e
defaultPreviewOpts	plugged/fzf/src/options.go	/^func defaultPreviewOpts(command string) previewOpts {$/;"	f	package:fzf	typeref:typename:previewOpts
defaultTheme	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:*ColorTheme
defaultView	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	defaultView = document.defaultView || {};$/;"	v
defaultWidth	plugged/fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c	package:tui
default_help	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      default_help = [[function(name, blame_info, opts)$/;"	f
default_help	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      default_help = [[function(status)$/;"	f
default_nettype_value	plugged/nvim-treesitter/queries/verilog/highlights.scm	/^ (default_nettype_value) @string)$/;"	f
default_opts	plugged/plenary.nvim/lua/plenary/window/float.lua	/^function win_float.default_opts(options)$/;"	f	unknown:win_float
defaulter	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local function defaulter(f, default_opts)$/;"	f
defaultfunc	plugged/plenary.nvim/lua/luassert/stub.lua	/^    defaultfunc = function()$/;"	f
defaultfunc	plugged/plenary.nvim/lua/luassert/stub.lua	/^    defaultfunc = function(...)$/;"	f
defaultfunc	plugged/plenary.nvim/lua/luassert/stub.lua	/^  local defaultfunc = fn or function()$/;"	f
defaults	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^      local defaults = (function()$/;"	f
defer	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function defer(duration, callback)$/;"	f
defer_get_line	plugged/nvim-spectre/tests/helper.lua	/^M.defer_get_line = function(bufnr, start_col, end_col, time)$/;"	f	unknown:M
defer_swapped	plugged/plenary.nvim/lua/plenary/async/util.lua	/^local defer_swapped = function(timeout, callback)$/;"	f
define	plugged/gitsigns.nvim/lua/gitsigns/signs.lua	/^function M.define(name, opts, redefine)$/;"	f	unknown:M
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.regexp.prototype.flags.requires
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.string.prototype.trimend.requires
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.string.prototype.trimstart.requires
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.object.assign.requires
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.promise.prototype.finally.requires
define-properties	plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.string.prototype.matchall.requires
define-properties	plugged/coc.nvim/package-lock.json	/^    "define-properties": {$/;"	o	object:dependencies
define-property	plugged/coc.nvim/package-lock.json	/^            "define-property": "^2.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.class-utils.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.expand-brackets.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.object-copy.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.snapdragon.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.static-extend.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.base.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.extglob.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^2.0.2",$/;"	s	object:dependencies.nanomatch.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": "^2.0.2",$/;"	s	object:dependencies.to-regex.requires
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.base.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.class-utils.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.expand-brackets.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.extglob.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.object-copy.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.snapdragon-node.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.snapdragon.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.static-extend.dependencies
define-property	plugged/coc.nvim/package-lock.json	/^    "define-property": {$/;"	o	object:dependencies
define_autocmd	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.define_autocmd(event, patern, cmd)$/;"	f	unknown:M
define_modules	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.define_modules(...)$/;"	f	unknown:M
define_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.define_modules(mod_defs)$/;"	f	unknown:M
define_preview	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^        define_preview = function(self, entry)$/;"	f
define_preview	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    define_preview = function(self, entry, _)$/;"	f
define_preview	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    define_preview = function(self, entry, status)$/;"	f
definitions	plugged/coc.nvim/data/schema.json	/^  "definitions": {$/;"	o
definitions	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.definitions = function(opts)$/;"	f	unknown:lsp
del	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function del(key, tuple)$/;"	f
delChar	plugged/fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
del_win	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^      local function del_win(win_id)$/;"	f
del_win	plugged/telescope.nvim/lua/telescope/pickers.lua	/^  local function del_win(name, win_id, force, bdelete)$/;"	f
delayed-stream	plugged/coc.nvim/package-lock.json	/^        "delayed-stream": "~1.0.0"$/;"	s	object:dependencies.combined-stream.requires
delayed-stream	plugged/coc.nvim/package-lock.json	/^    "delayed-stream": {$/;"	o	object:dependencies
delete	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
delete	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
delete	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function delete(_, key)$/;"	f
delete	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.delete(num)$/;"	f	unknown:M
deleteFile	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
delete_buf	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.delete_buf(term)$/;"	f	unknown:M
delete_buffer	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.delete_buffer = function(prompt_bufnr)$/;"	f	unknown:actions
delete_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:delete_selection(delete_cb)$/;"	f	unknown:Picker
delimNil	plugged/fzf/src/reader.go	/^	delimNil bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
delimiter	plugged/fzf/src/pattern.go	/^	delimiter     Delimiter$/;"	m	struct:fzf.Pattern	typeref:typename:Delimiter
delimiter	plugged/fzf/src/terminal.go	/^	delimiter    Delimiter$/;"	m	struct:fzf.Terminal	typeref:typename:Delimiter
delimiterRegexp	plugged/fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f	package:fzf	typeref:typename:Delimiter
dependencies	package.json	/^  "dependencies": {$/;"	o
dependencies	plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.has-values.dependencies.is-number
dependencies	plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.braces
dependencies	plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.fill-range
dependencies	plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.is-number
dependencies	plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.unset-value.dependencies.has-value
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/core
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/generator
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/helper-compilation-targets
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/highlight
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/traverse
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@eslint/eslintrc
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.ansi-escapes
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.base
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.chalk
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.class-utils
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.cli-table
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.cssstyle
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.define-property
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.domexception
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.escodegen
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint-plugin-jsdoc
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint-utils
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.espree
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esquery
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esrecurse
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.execa
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.expand-brackets
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.expect
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.extend-shallow
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.extglob
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.flat-cache
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.has-values
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-accessor-descriptor
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-data-descriptor
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-descriptor
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.istanbul-lib-instrument
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest-changed-files
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest-validate
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jsdom
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jsonfile
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.make-dir
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.mixin-deep
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.node-notifier
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.normalize-package-data
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.npm-run-path
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.object-copy
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.pretty-format
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.rc
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.read-pkg
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.resolve-cwd
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.sane
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.set-value
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.slice-ansi
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon-node
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon-util
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.stack-utils
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.static-extend
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.streamroller
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.string-width
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.table
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.to-object-path
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.tough-cookie
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.ts-jest
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.tsutils
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.unset-value
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.unzip-stream
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.v8-to-istanbul
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.vscode-languageserver
dependencies	plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.wrap-ansi
dependencies	plugged/coc.nvim/package-lock.json	/^  "dependencies": {$/;"	o
dependencies	plugged/coc.nvim/package.json	/^  "dependencies": {}$/;"	o
deps/neovim	plugged/gitsigns.nvim/Makefile	/^deps\/neovim:$/;"	t
deps/plenary.nvim	plugged/gitsigns.nvim/Makefile	/^deps\/plenary.nvim:$/;"	t
dequeue	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.dequeue = function(type){$/;"	f	function:jQuery.fn
derive_colors	plugged/bufferline.nvim/lua/bufferline/config.lua	/^local function derive_colors()$/;"	f
descending	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^  descending = function(max_results, num_results)$/;"	f
describe	plugged/plenary.nvim/lua/plenary/async/tests.lua	/^M.describe = function(s, async_func)$/;"	f	unknown:M
describe	plugged/plenary.nvim/lua/plenary/async_lib/tests.lua	/^M.describe = function(s, func)$/;"	f	unknown:M
describe	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.describe = function(desc, func)$/;"	f	unknown:mod
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of javascript file, should works in IPC mode"$/;"	s	object:definitions.languageServerModule.properties.module
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of node runtime."$/;"	s	object:definitions.languageServerModule.properties.runtime
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute root paths that language server should not use as rootPath, h/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
description	plugged/coc.nvim/data/schema.json	/^          "description": "Additional uri schemes, default schemes including file & untitled.",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
description	plugged/coc.nvim/data/schema.json	/^          "description": "Arguments of command",$/;"	s	object:definitions.languageServerCommand.properties.args
description	plugged/coc.nvim/data/schema.json	/^          "description": "Argv passed to node when using module, normally used for debugging, ex/;"	s	object:definitions.languageServerModule.properties.execArgv
description	plugged/coc.nvim/data/schema.json	/^          "description": "Background highlight group of float window."$/;"	s	object:definitions.float.properties.highlight
description	plugged/coc.nvim/data/schema.json	/^          "description": "Border highlight group of float window."$/;"	s	object:definitions.float.properties.borderhighlight
description	plugged/coc.nvim/data/schema.json	/^          "description": "Configure message level to show the output channel buffer",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
description	plugged/coc.nvim/data/schema.json	/^          "description": "Detach the languageserver process"$/;"	s	object:definitions.languageServerCommand.properties.detached
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion snippet feature for this languageserver, the langua/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable dynamic registerCapability feature for this languageserver to /;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable handle diagnostics for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable workspaceFolders feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
description	plugged/coc.nvim/data/schema.json	/^          "description": "Drop shadow effect by blending with the background, neovim only."$/;"	s	object:definitions.float.properties.shadow
description	plugged/coc.nvim/data/schema.json	/^          "description": "Enable focus by user actions (wincmds, mouse events), neovim only."$/;"	s	object:definitions.float.properties.focusable
description	plugged/coc.nvim/data/schema.json	/^          "description": "Enable progress report on languageserver initialize."$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
description	plugged/coc.nvim/data/schema.json	/^          "description": "Enables pseudo-transparency by set 'winblend' option of window, neovim/;"	s	object:definitions.float.properties.winblend
description	plugged/coc.nvim/data/schema.json	/^          "description": "Encoding used for stdio of child process."$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
description	plugged/coc.nvim/data/schema.json	/^          "description": "Environment variables for child process."$/;"	s	object:definitions.languageServerBase.properties.env
description	plugged/coc.nvim/data/schema.json	/^          "description": "Executable in $PATH to start languageserver, should not used with modu/;"	s	object:definitions.languageServerCommand.properties.command
description	plugged/coc.nvim/data/schema.json	/^          "description": "Extra arguments of module",$/;"	s	object:definitions.languageServerModule.properties.args
description	plugged/coc.nvim/data/schema.json	/^          "description": "Host of server"$/;"	s	object:definitions.languageServerSocket.properties.host
description	plugged/coc.nvim/data/schema.json	/^          "description": "If true, doesn't start server when root pattern not found."$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
description	plugged/coc.nvim/data/schema.json	/^          "description": "Maximum height of float window, include border."$/;"	s	object:definitions.float.properties.maxHeight
description	plugged/coc.nvim/data/schema.json	/^          "description": "Maximum width of float window, include border."$/;"	s	object:definitions.float.properties.maxWidth
description	plugged/coc.nvim/data/schema.json	/^          "description": "Port number of socket server"$/;"	s	object:definitions.languageServerSocket.properties.port
description	plugged/coc.nvim/data/schema.json	/^          "description": "Port number used when transport is 'socket'"$/;"	s	object:definitions.languageServerModule.properties.transportPort
description	plugged/coc.nvim/data/schema.json	/^          "description": "Priority of this languageserver's fomatter."$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
description	plugged/coc.nvim/data/schema.json	/^          "description": "Root patterns used to resolve rootPath from current file, default to w/;"	s	object:definitions.languageServerBase.properties.rootPatterns
description	plugged/coc.nvim/data/schema.json	/^          "description": "Set to true to draw close icon"$/;"	s	object:definitions.float.properties.close
description	plugged/coc.nvim/data/schema.json	/^          "description": "Set to true to use borders."$/;"	s	object:definitions.float.properties.border
description	plugged/coc.nvim/data/schema.json	/^          "description": "Settings of languageserver"$/;"	s	object:definitions.languageServerBase.properties.settings
description	plugged/coc.nvim/data/schema.json	/^          "description": "Supported filetypes, add * in array for all filetypes.",$/;"	s	object:definitions.languageServerBase.properties.filetypes
description	plugged/coc.nvim/data/schema.json	/^          "description": "Title used by float window."$/;"	s	object:definitions.float.properties.title
description	plugged/coc.nvim/data/schema.json	/^          "description": "Trace level of communication between server and client"$/;"	s	object:definitions.languageServerBase.properties.trace.server
description	plugged/coc.nvim/data/schema.json	/^          "description": "Transport kind used by server, could be 'ipc', 'stdio', 'socket' and '/;"	s	object:definitions.languageServerModule.properties.transport
description	plugged/coc.nvim/data/schema.json	/^          "description": "Use shell for process"$/;"	s	object:definitions.languageServerCommand.properties.shell
description	plugged/coc.nvim/data/schema.json	/^          "description": "Working directory of languageserver, absolute path or relative to work/;"	s	object:definitions.languageServerBase.properties.cwd
description	plugged/coc.nvim/data/schema.json	/^          "description": "initializationOptions passed to languageserver"$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
description	plugged/coc.nvim/data/schema.json	/^      "description": "A map between buffer filetype and the filetype assigned to diagnostics. To/;"	s	object:properties.diagnostic.filetypeMap
description	plugged/coc.nvim/data/schema.json	/^      "description": "Add preview option to completeopt, default: false.",$/;"	s	object:properties.suggest.enablePreview
description	plugged/coc.nvim/data/schema.json	/^      "description": "An array of statusline segments that will be used to draw the status line /;"	s	object:properties.list.statusLineSegments
description	plugged/coc.nvim/data/schema.json	/^      "description": "Automatically hide hover float window on CursorMove or InsertEnter."$/;"	s	object:properties.hover.autoHide
description	plugged/coc.nvim/data/schema.json	/^      "description": "Automatically update the value of b:coc_current_function on CursorHold eve/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
description	plugged/coc.nvim/data/schema.json	/^      "description": "Boost suggestions that appear closer to the cursor position.",$/;"	s	object:properties.suggest.localityBonus
description	plugged/coc.nvim/data/schema.json	/^      "description": "CA (file) to use as Certificate Authority",$/;"	s	object:properties.http.proxyCA
description	plugged/coc.nvim/data/schema.json	/^      "description": "Closed icon of tree view."$/;"	s	object:properties.tree.closedIcon
description	plugged/coc.nvim/data/schema.json	/^      "description": "Command or absolute path to npm or yarn."$/;"	s	object:properties.npm.binPath
description	plugged/coc.nvim/data/schema.json	/^      "description": "Command used for location jump, like goto definition, goto references etc./;"	s	object:properties.coc.preferences.jumpCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of diagnostic message.",$/;"	s	object:properties.diagnostic.floatConfig
description	plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of hover documents.",$/;"	s	object:properties.hover.floatConfig
description	plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of signature documents.",$/;"	s	object:properties.signature.floatConfig
description	plugged/coc.nvim/data/schema.json	/^      "description": "Configure style of documentation window for complete item.",$/;"	s	object:properties.suggest.floatConfig
description	plugged/coc.nvim/data/schema.json	/^      "description": "Confirm completion instead of jump to next placeholder when completion is /;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
description	plugged/coc.nvim/data/schema.json	/^      "description": "Confirm key for confirm selection used by menu and picker, you can always /;"	s	object:properties.dialog.confirmKey
description	plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether suggestions should be accepted on commit characters. For /;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
description	plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether the proxy server certificate should be verified against t/;"	s	object:properties.http.proxyStrictSSL
description	plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on insert mode."$/;"	s	object:properties.list.insertMappings
description	plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on normal mode."$/;"	s	object:properties.list.normalMappings
description	plugged/coc.nvim/data/schema.json	/^      "description": "Debouce time for input change on interactive mode."$/;"	s	object:properties.list.interactiveDebounceTime
description	plugged/coc.nvim/data/schema.json	/^      "description": "Decide how the filepath is shown in the list.",$/;"	s	object:properties.list.source.diagnostics.pathFormat
description	plugged/coc.nvim/data/schema.json	/^      "description": "Default sorting behavior for suggested completion items.",$/;"	s	object:properties.suggest.defaultSortMethod
description	plugged/coc.nvim/data/schema.json	/^      "description": "Define the diagnostic format that shown in float window or echoed, availab/;"	s	object:properties.diagnostic.format
description	plugged/coc.nvim/data/schema.json	/^      "description": "Diagnostic message target.",$/;"	s	object:properties.diagnostic.messageTarget
description	plugged/coc.nvim/data/schema.json	/^      "description": "Dictionary of languageservers, key is used as id of languageserver.",$/;"	s	object:properties.languageserver
description	plugged/coc.nvim/data/schema.json	/^      "description": "Disable shortcut of completion source in menu.",$/;"	s	object:properties.suggest.disableMenuShortcut
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable automatically refresh diagnostics, use diagnosticRefresh action whe/;"	s	object:properties.diagnostic.autoRefresh
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable codeLens feature, require neovim with set virtual text feature.",$/;"	s	object:properties.codeLens.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable color highlight if language server support it.",$/;"	s	object:properties.coc.preferences.colorSupport
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable diagnostic refresh on insert mode, default false.",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable extended search mode which allows multiple search patterns delimite/;"	s	object:properties.list.extendedSearchMode
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable floating window for documentation when possible.",$/;"	s	object:properties.suggest.floatEnable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlight for floating window.",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlighting line numbers for diagnostics, only works with neovim a/;"	s	object:properties.diagnostic.enableHighlightLineNumber
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable messages shown in notification dialog."$/;"	s	object:properties.coc.preferences.enableMessageDialog
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable preselect feature of LSP, only works on neovim",$/;"	s	object:properties.suggest.enablePreselect
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable semanticTokens highlight if language server support it.",$/;"	s	object:properties.coc.preferences.semanticTokensHighlights
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable signature help when trigger character typed, require restart servic/;"	s	object:properties.signature.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable signs for diagnostics."$/;"	s	object:properties.diagnostic.enableSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable tooltip to show relative filepath of call hierarchy."$/;"	s	object:properties.callHierarchy.enableTooltip
description	plugged/coc.nvim/data/schema.json	/^      "description": "Exclude image links from markdown text in float window.",$/;"	s	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
description	plugged/coc.nvim/data/schema.json	/^      "description": "Expand level of tree nodes."$/;"	s	object:properties.outline.expandLevel
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should be ignored for resolve workspace folder.",$/;"	s	object:properties.workspace.ignoredFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should have workspace folder should resolved from base dire/;"	s	object:properties.workspace.bottomUpFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on save.",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on typing. Only take effect when `coc.pre/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should use ctags for outline instead of language server.",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filter code actions in actions menu by kinds.",$/;"	s	object:properties.outline.codeActionKinds
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.around.firstMatch
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.buffer.firstMatch
description	plugged/coc.nvim/data/schema.json	/^      "description": "Height of split list window."$/;"	s	object:properties.list.height
description	plugged/coc.nvim/data/schema.json	/^      "description": "Hide signature float window when text changed on insert mode.",$/;"	s	object:properties.signature.hideOnTextChange
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for border of dialog window\/popup, default to 'CocFloatin/;"	s	object:properties.dialog.floatBorderHighlight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for dialog window\/popup, default to 'CocFloating'"$/;"	s	object:properties.dialog.floatHighlight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group of notification dialog."$/;"	s	object:properties.notification.highlightGroup
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for highlight the range in preview window."$/;"	s	object:properties.list.previewHighlightGroup
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for matched texts in list window."$/;"	s	object:properties.list.matchHighlightGroup
description	plugged/coc.nvim/data/schema.json	/^      "description": "How long to wait (in milliseconds) before displaying the diagnostic messag/;"	s	object:properties.diagnostic.messageDelay
description	plugged/coc.nvim/data/schema.json	/^      "description": "How should completion be triggered",$/;"	s	object:properties.suggest.autoTrigger
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore completion for hidden files"$/;"	s	object:properties.coc.source.file.ignoreHidden
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore git ignored files for buffer words"$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore patterns of matcher",$/;"	s	object:properties.coc.source.file.ignorePatterns
description	plugged/coc.nvim/data/schema.json	/^      "description": "Improve enter inside bracket `<> {} [] ()` by add new empty line below and/;"	s	object:properties.coc.preferences.bracketEnterImprove
description	plugged/coc.nvim/data/schema.json	/^      "description": "Input number to select complete item, works on neovim >= 0.4.0 only.",$/;"	s	object:properties.suggest.numberSelect
description	plugged/coc.nvim/data/schema.json	/^      "description": "Interval for check extension update, could be daily, weekly, never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
description	plugged/coc.nvim/data/schema.json	/^      "description": "Invalid character for strip valid word when inserting text of complete ite/;"	s	object:properties.suggest.invalidInsertCharacters
description	plugged/coc.nvim/data/schema.json	/^      "description": "Jump back to original window after outline is shown."$/;"	s	object:properties.outline.keepWindow
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for cancel cursors session."$/;"	s	object:properties.cursors.cancelKey
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to next cursors position. "$/;"	s	object:properties.cursors.nextKey
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to previous cursors position."$/;"	s	object:properties.cursors.previousKey
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select next line on insert mode."$/;"	s	object:properties.list.nextKeymap
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select previous line on insert mode."$/;"	s	object:properties.list.previousKeymap
description	plugged/coc.nvim/data/schema.json	/^      "description": "Limit count for highlighted diagnostics, too many diagnostic highlights co/;"	s	object:properties.diagnostic.highlighLimit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Limit lines for list buffer."$/;"	s	object:properties.list.limitLines
description	plugged/coc.nvim/data/schema.json	/^      "description": "List should contains changed locations after workspace edit, default to vi/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Make inserted word replace word characters after cursor position.",$/;"	s	object:properties.suggest.fixInsertedWord
description	plugged/coc.nvim/data/schema.json	/^      "description": "Margin right for notification dialog."$/;"	s	object:properties.notification.marginRight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Margin top for notification dialog."$/;"	s	object:properties.notification.marginTop
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max height for preview window of list."$/;"	s	object:properties.list.maxPreviewHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max height of preview window for hover."$/;"	s	object:properties.hover.previewMaxHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority bigger than or equal to 90."$/;"	s	object:properties.suggest.highPrioritySourceLimit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority lower than 90."$/;"	s	object:properties.suggest.lowPrioritySourceLimit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max length of abbr that shown as label of complete item.",$/;"	s	object:properties.suggest.labelMaxLength
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max length of detail that should be shown in popup menu.",$/;"	s	object:properties.suggest.detailMaxLength
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content height of notification dialog."$/;"	s	object:properties.notification.maxHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content width of notification dialog."$/;"	s	object:properties.notification.maxWidth
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum file size in bytes that coc.nvim should handle, default '10MB'"$/;"	s	object:properties.coc.preferences.maxFileSize
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum height of dialog window."$/;"	s	object:properties.dialog.maxHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum number of complete items shown in vim"$/;"	s	object:properties.suggest.maxCompleteItemCount
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of dialog window."$/;"	s	object:properties.dialog.maxWidth
description	plugged/coc.nvim/data/schema.json	/^      "description": "Message level for filter echoed messages, could be 'more', 'warning' and '/;"	s	object:properties.coc.preferences.messageLevel
description	plugged/coc.nvim/data/schema.json	/^      "description": "Minimum width of progress notification."$/;"	s	object:properties.notification.minProgressWidth
description	plugged/coc.nvim/data/schema.json	/^      "description": "Mininal input length for trigger completion, default 1"$/;"	s	object:properties.suggest.minTriggerInputLength
description	plugged/coc.nvim/data/schema.json	/^      "description": "Not make vim select first item on completion start",$/;"	s	object:properties.suggest.noselect
description	plugged/coc.nvim/data/schema.json	/^      "description": "Not open split window with update status when performing auto update.",$/;"	s	object:properties.coc.preferences.silentAutoupdate
description	plugged/coc.nvim/data/schema.json	/^      "description": "Offset number of buffer.addHighlight, neovim only.",$/;"	s	object:properties.diagnostic.highlightOffset
description	plugged/coc.nvim/data/schema.json	/^      "description": "Only show virtualText diagnostic on current cursor line",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
description	plugged/coc.nvim/data/schema.json	/^      "description": "Open command for callHierarchy tree view."$/;"	s	object:properties.callHierarchy.openCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "Open command for refactor window.",$/;"	s	object:properties.refactor.openCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "Opend icon of tree view."$/;"	s	object:properties.tree.openedIcon
description	plugged/coc.nvim/data/schema.json	/^      "description": "Patterns of minimatch for filepath to execlude from symbols list.",$/;"	s	object:properties.list.source.symbols.excludes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of leading context before each match."$/;"	s	object:properties.refactor.beforeContext
description	plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of trailing context after each match."$/;"	s	object:properties.refactor.afterContext
description	plugged/coc.nvim/data/schema.json	/^      "description": "Priority of diagnostic signs, default to 10",$/;"	s	object:properties.diagnostic.signPriority
description	plugged/coc.nvim/data/schema.json	/^      "description": "Priority of language sources."$/;"	s	object:properties.suggest.languageSourcePriority
description	plugged/coc.nvim/data/schema.json	/^      "description": "Prompt confirm from user when apply workspace edit for unloaded files.",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Recreate outline view after user changed to another buffer on current tab./;"	s	object:properties.outline.checkBufferSwitch
description	plugged/coc.nvim/data/schema.json	/^      "description": "Remove completion items with duplicated word for all sources, snippet item/;"	s	object:properties.suggest.removeDuplicateItems
description	plugged/coc.nvim/data/schema.json	/^      "description": "Remove kind field from vim complete item.",$/;"	s	object:properties.suggest.disableKind
description	plugged/coc.nvim/data/schema.json	/^      "description": "Remove menu field from vim complete item.",$/;"	s	object:properties.suggest.disableMenu
description	plugged/coc.nvim/data/schema.json	/^      "description": "Reveal item in outline tree on cursor hold."$/;"	s	object:properties.outline.followCursor
description	plugged/coc.nvim/data/schema.json	/^      "description": "Root patterns to resolve workspaceFolder from parent folders of opened fil/;"	s	object:properties.coc.preferences.rootPatterns
description	plugged/coc.nvim/data/schema.json	/^      "description": "Save to file when write refactor buffer with ':noa wa' command, set to fal/;"	s	object:properties.refactor.saveToFile
description	plugged/coc.nvim/data/schema.json	/^      "description": "Separate related information as diagnostics."$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
description	plugged/coc.nvim/data/schema.json	/^      "description": "Separator text for codeLens in virtual text",$/;"	s	object:properties.codeLens.separator
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set custom labels to completion items' kinds.",$/;"	s	object:properties.suggest.completionItemKindLabels
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable diagnostic display",$/;"	s	object:properties.diagnostic.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable float\/popup support for actions menu, won't work /;"	s	object:properties.coc.preferences.floatActions
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable snippets support of completion.",$/;"	s	object:properties.suggest.snippetsSupport
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to true to enable formatting on typing",$/;"	s	object:properties.coc.preferences.formatOnType
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show buttons for picker dialog window\/popup."$/;"	s	object:properties.dialog.pickerButtons
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show diagnostics with deprecated tag."$/;"	s	object:properties.diagnostic.showDeprecated
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show diagnostics with unused tag."$/;"	s	object:properties.diagnostic.showUnused
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show line number of symbols."$/;"	s	object:properties.outline.showLineNumber
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show shortcut in buttons of picker dialog window\/popup, used when dialog./;"	s	object:properties.dialog.pickerButtonShortcut
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show signature help float window above cursor when possible, require resta/;"	s	object:properties.signature.preferShownAbove
description	plugged/coc.nvim/data/schema.json	/^      "description": "Sign offset of list, should be different from other plugins."$/;"	s	object:properties.list.signOffset
description	plugged/coc.nvim/data/schema.json	/^      "description": "Sign text for selected lines."$/;"	s	object:properties.list.selectedSignText
description	plugged/coc.nvim/data/schema.json	/^      "description": "Sort method for symbols.",$/;"	s	object:properties.outline.sortBy
description	plugged/coc.nvim/data/schema.json	/^      "description": "Subseparator between codeLenses in virtual text",$/;"	s	object:properties.codeLens.subseparator
description	plugged/coc.nvim/data/schema.json	/^      "description": "Suggest ASCII characters only",$/;"	s	object:properties.suggest.asciiCharactersOnly
description	plugged/coc.nvim/data/schema.json	/^      "description": "Target of signature help, use float when possible by default.",$/;"	s	object:properties.signature.target
description	plugged/coc.nvim/data/schema.json	/^      "description": "Target to show hover information, default is floating window when possible/;"	s	object:properties.hover.target
description	plugged/coc.nvim/data/schema.json	/^      "description": "Tell the language server that markdown text format is supported, note that/;"	s	object:properties.coc.preferences.enableMarkdown
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of error sign",$/;"	s	object:properties.diagnostic.errorSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of hint sign",$/;"	s	object:properties.diagnostic.hintSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of info sign",$/;"	s	object:properties.diagnostic.infoSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of warning sign",$/;"	s	object:properties.diagnostic.warningSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text shown in statusline to indicate snippet session is activated."$/;"	s	object:properties.coc.preferences.snippetStatusText
description	plugged/coc.nvim/data/schema.json	/^      "description": "The character used as first character in prompt line"$/;"	s	object:properties.list.indicator
description	plugged/coc.nvim/data/schema.json	/^      "description": "The character used in abbr of complete item to indicate the item could be /;"	s	object:properties.suggest.snippetIndicator
description	plugged/coc.nvim/data/schema.json	/^      "description": "The number of non empty lines from a diagnostic to display",$/;"	s	object:properties.diagnostic.virtualTextLines
description	plugged/coc.nvim/data/schema.json	/^      "description": "The prefix added virtual text diagnostics",$/;"	s	object:properties.diagnostic.virtualTextPrefix
description	plugged/coc.nvim/data/schema.json	/^      "description": "The proxy setting to use. If not set, will be inherited from the `http_pro/;"	s	object:properties.http.proxy
description	plugged/coc.nvim/data/schema.json	/^      "description": "The text that will mark a line end from the diagnostic message",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
description	plugged/coc.nvim/data/schema.json	/^      "description": "The value to send as the `Proxy-Authorization` header for every network re/;"	s	object:properties.http.proxyAuthorization
description	plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for completion, in miliseconds."$/;"	s	object:properties.suggest.timeout
description	plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for trigger signature help, in miliseconds."$/;"	s	object:properties.signature.triggerSignatureWait
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger completion after InsertEnter, auto trigger should be 'always' to e/;"	s	object:properties.suggest.triggerAfterInsertEnter
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key active filter."$/;"	s	object:properties.tree.key.activeFilter
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to collapse all tree node."$/;"	s	object:properties.tree.key.collapseAll
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to dispose the tree and close tree window."$/;"	s	object:properties.tree.key.close
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to invoke actions."$/;"	s	object:properties.tree.key.actions
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to invoke default command of current node or selection."$/;"	s	object:properties.tree.key.invoke
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select next item during filter."$/;"	s	object:properties.tree.key.selectNext
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select previous item during filter."$/;"	s	object:properties.tree.key.selectPrevious
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select\/unselect item"$/;"	s	object:properties.tree.key.toggleSelection
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to toggle expand state of tree node, does nothing with leaf no/;"	s	object:properties.tree.key.toggle
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trim same extension on file completion",$/;"	s	object:properties.coc.source.file.trimSameExts
description	plugged/coc.nvim/data/schema.json	/^      "description": "Update locationlist on diagnostics change, only works with locationlist op/;"	s	object:properties.diagnostic.locationlistUpdate
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use Ale for display diagnostics in vim, will disable coc for display diagn/;"	s	object:properties.diagnostic.displayByAle
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use NeoVim virtual text to display diagnostics",$/;"	s	object:properties.diagnostic.virtualText
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use prompt buffer in float window for user input.",$/;"	s	object:properties.coc.preferences.promptInput
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use vim's quickfix list for jump locations,\\n need restart on change.",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use vsplit for preview window."$/;"	s	object:properties.list.previewSplitRight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Used for filter diagnostics by diagnostic severity.",$/;"	s	object:properties.diagnostic.level
description	plugged/coc.nvim/data/schema.json	/^      "description": "Wait time between text change and completion start, cancel completion when/;"	s	object:properties.suggest.triggerCompletionWait
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, add function signature to user_data.signature to support ech/;"	s	object:properties.suggest.echodocSupport
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, completeopt is not overridden, auto completion will be disab/;"	s	object:properties.suggest.keepCompleteopt
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, show all diagnostics of current line if there are none at th/;"	s	object:properties.diagnostic.checkCurrentLine
description	plugged/coc.nvim/data/schema.json	/^      "description": "When to enable show messages of diagnostics.",$/;"	s	object:properties.diagnostic.enableMessage
description	plugged/coc.nvim/data/schema.json	/^      "description": "Where to show the detail text of CompleteItem from LS.",$/;"	s	object:properties.suggest.detailField
description	plugged/coc.nvim/data/schema.json	/^      "description": "Whether the cwd directory should be checked first when resolving workspace/;"	s	object:properties.workspace.workspaceFolderCheckCwd
description	plugged/coc.nvim/data/schema.json	/^      "description": "Whether to align lists in columns, default: `false`"$/;"	s	object:properties.list.alignColumns
description	plugged/coc.nvim/data/schema.json	/^      "description": "Whether to show the diagnostic code in the list.",$/;"	s	object:properties.list.source.diagnostics.includeCode
description	plugged/coc.nvim/data/schema.json	/^      "description": "Will save handler timeout"$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
description	plugged/coc.nvim/data/schema.json	/^      "description": "Window split command used by callHierarchy tree view."$/;"	s	object:properties.callHierarchy.splitCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "Window split command used by outline."$/;"	s	object:properties.outline.splitCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "executable path for https:\/\/facebook.github.io\/watchman\/, detected fro/;"	s	object:properties.coc.preferences.watchmanPath
description	plugged/coc.nvim/data/schema.json	/^  "description": "Configuration file for coc.nvim",$/;"	s
description	plugged/coc.nvim/package.json	/^  "description": "LSP based intellisense engine for neovim & vim8.",$/;"	s
description	plugged/vim-easy-replace/addon-info.json	/^  "description": "Vim plugin for quick and easy replacement",$/;"	s
deselectItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f	struct:fzf.Terminal
deselectItemChanged	plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
destroy	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunctionaf1e5c4a33e00.e
destroy	plugged/gitsigns.nvim/lua/gitsigns/cache.lua	/^CacheEntry.destroy = function(self)$/;"	f	unknown:CacheEntry
destroy	plugged/gitsigns.nvim/lua/gitsigns/cache.lua	/^M.CacheObj.destroy = function(self, bufnr)$/;"	f	unknown:M.CacheObj
detach	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M.detach = function(bufnr, keep_signs)$/;"	f	unknown:M
detach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^M.detach = attach.make_detach(normal_mode_functions, "lsp_interop")$/;"	f	unknown:M
detach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.detach = attach.make_detach(normal_mode_functions, "move")$/;"	f	unknown:M
detach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/select.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/swap.lua	/^M.detach = attach.make_detach(normal_mode_functions, "swap")$/;"	f	unknown:M
detach	plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.detach = function ( )$/;"	f	unknown:M
detach_all	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M.detach_all = function()$/;"	f	unknown:M
detach_handler	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^      local function detach_handler()$/;"	f
detach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.detach_module(mod_name, bufnr)$/;"	f	unknown:M
detached	plugged/coc.nvim/data/schema.json	/^        "detached": {$/;"	o	object:definitions.languageServerCommand.properties
detail	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12100.e.c
detect	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.detect = function(filepath, opts)$/;"	f	unknown:filetype
detect-newline	plugged/coc.nvim/package-lock.json	/^        "detect-newline": "^3.0.0"$/;"	s	object:dependencies.jest-docblock.requires
detect-newline	plugged/coc.nvim/package-lock.json	/^    "detect-newline": {$/;"	o	object:dependencies
detect_from_extension	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.detect_from_extension = function(filepath)$/;"	f	unknown:filetype
detect_from_modeline	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.detect_from_modeline = function(filepath)$/;"	f	unknown:filetype
detect_from_name	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.detect_from_name = function(filepath)$/;"	f	unknown:filetype
detect_from_shebang	plugged/plenary.nvim/lua/plenary/filetype.lua	/^filetype.detect_from_shebang = function(filepath)$/;"	f	unknown:filetype
detect_selection_mode	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/select.lua	/^function M.detect_selection_mode(keymap_mode)$/;"	f	unknown:M
determine_jump	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local determine_jump = function(entry)$/;"	f
dev	plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/core.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/core.dependencies.source-map
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/generator.dependencies.source-map
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/highlight.dependencies.color-name
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/highlight.dependencies.has-flag
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/traverse.dependencies.globals
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@eslint/eslintrc.dependencies.ignore
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.ansi-escapes.dependencies.type-fest
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.cssstyle.dependencies.cssom
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.domexception.dependencies.webidl-conversions
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.escodegen.dependencies.estraverse
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.escodegen.dependencies.prelude-ls
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.eslint.dependencies.ignore
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.espree.dependencies.eslint-visitor-keys
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esquery.dependencies.estraverse
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esrecurse.dependencies.estraverse
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.path-key
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.shebang-regex
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.expand-brackets.dependencies.ms
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.flat-cache.dependencies.flatted
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.is-descriptor.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.istanbul-lib-instrument.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jest-changed-files.dependencies.is-stream
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jest-validate.dependencies.camelcase
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jsdom.dependencies.acorn
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.make-dir.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.normalize-package-data.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.npm-run-path.dependencies.path-key
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.read-pkg.dependencies.type-fest
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.resolve-cwd.dependencies.resolve-from
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.slice-ansi.dependencies.color-name
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.snapdragon.dependencies.ms
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.snapdragon.dependencies.source-map
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.stack-utils.dependencies.escape-string-regexp
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.table.dependencies.ansi-regex
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.table.dependencies.emoji-regex
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.tough-cookie.dependencies.universalify
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.ts-jest.dependencies.yargs-parser
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.tsutils.dependencies.tslib
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.unset-value.dependencies.has-values
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.v8-to-istanbul.dependencies.source-map
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.chalk
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.color-convert
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.supports-color
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-accessor-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-data-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.chalk.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.class-utils.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-accessor-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-data-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.levn
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.optionator
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.type-check
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.cross-spawn
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.shebang-command
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.which
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.debug
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expect.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extend-shallow.dependencies.is-extendable
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-accessor-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-data-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.has-values.dependencies.is-number
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.has-values.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.is-accessor-descriptor.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.is-data-descriptor.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.execa
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.get-stream
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.npm-run-path
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest.dependencies.jest-cli
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.mixin-deep.dependencies.is-extendable
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.node-notifier.dependencies.uuid
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.object-copy.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.object-copy.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.pretty-format.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.anymatch
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.braces
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.fill-range
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.is-number
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.micromatch
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.normalize-path
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.to-regex-range
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.set-value.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.slice-ansi.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.slice-ansi.dependencies.color-convert
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-descriptor
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-util.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.debug
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.static-extend.dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.table.dependencies.string-width
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.table.dependencies.strip-ansi
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.to-object-path.dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.unset-value.dependencies.has-value
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
dev	plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.wrap-ansi.dependencies.ansi-styles
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/compat-data
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-plugin-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-validator-identifier
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-validator-option
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/parser
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@bcoe/v8-coverage
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@istanbuljs/schema
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@nodelib/fs.stat
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/cli-table
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/debounce
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/events
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/istanbul-lib-coverage
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/json-schema
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/marked
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/minimatch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/node
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/normalize-package-data
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/prettier
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/semver
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/stack-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/uuid
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/which
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/yargs-parser
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@typescript-eslint/types
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.abab
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn-jsx
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn-walk
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-colors
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-diff
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-flatten
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-union
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.array-union
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.array-unique
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.assign-symbols
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.astral-regex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.asynckit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.atob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.binary-extensions
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.browser-process-hrtime
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.buffer-from
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.callsites
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.camelcase
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.caniuse-lite
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.char-regex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ci-info
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.cjs-module-lexer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.co
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.collect-v8-coverage
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.color-name
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.colorette
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.colors
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.comment-parser
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.component-emitter
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.copy-descriptor
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.cssom
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decamelize
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decimal.js
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decode-uri-component
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deep-is
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deepmerge
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.delayed-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.detect-newline
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.diff-sequences
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.electron-to-chromium
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.emittery
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esbuild
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.escalade
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.eslint-visitor-keys
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esprima
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.estraverse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esutils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.exec-sh
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.exit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-deep-equal
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-json-stable-stringify
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-levenshtein
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.for-in
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.functional-red-black-tree
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.gensync
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-caller-file
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-package-type
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-value
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.has-flag
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.hosted-git-info
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.html-escaper
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.human-signals
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ignore
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.imurmurhash
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-arrayish
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-buffer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-extendable
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-extglob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-fullwidth-code-point
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-generator-fn
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-number
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-potential-custom-element-name
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-typedarray
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-windows
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.isobject
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.istanbul-lib-coverage
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-get-type
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-pnp-resolver
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-regex-util
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.js-tokens
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsdoctypeparser
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsesc
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-parse-even-better-errors
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-schema-traverse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-stable-stringify-without-jsonify
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.kind-of
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.kleur
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.leven
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lines-and-columns
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lodash
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lodash.memoize
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.make-error
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.map-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.merge-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.merge2
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.mime-db
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.mimic-fn
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.natural-compare
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.nice-try
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.node-modules-regexp
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.node-releases
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.normalize-path
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.nwsapi
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-each-series
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-finally
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-try
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.parse5
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.pascalcase
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-exists
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-key
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-parse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-type
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.picomatch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.posix-character-classes
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.prelude-ls
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.progress
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.psl
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.punycode
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.queue-microtask
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.react-is
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.regexpp
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.regextras
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.remove-trailing-separator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.repeat-element
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.repeat-string
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.require-directory
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.require-main-filename
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-from
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-url
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ret
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.reusify
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.rsvp
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.safer-buffer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.set-blocking
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.shebang-regex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.signal-exit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.sisteransi
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.slash
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.source-map
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.source-map-url
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.spdx-exceptions
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.spdx-license-ids
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.sprintf-js
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-bom
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-eof
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-final-newline
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-json-comments
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.symbol-tree
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.text-table
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.throat
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.tmpl
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.to-fast-properties
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.type-detect
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.type-fest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.typescript
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.urix
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.use
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.v8-compile-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.webidl-conversions
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.whatwg-mimetype
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.which-module
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.word-wrap
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ws
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.xml-name-validator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.xmlchars
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.y18n
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/code-frame
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/core
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/generator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-compilation-targets
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-function-name
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-get-function-arity
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-member-expression-to-functions
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-module-imports
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-module-transforms
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-optimise-call-expression
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-replace-supers
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-simple-access
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-split-export-declaration
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helpers
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/highlight
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-async-generators
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-bigint
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-class-properties
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-import-meta
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-json-strings
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-numeric-separator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-object-rest-spread
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-optional-catch-binding
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-optional-chaining
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-top-level-await
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/template
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/traverse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/types
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@cnakazawa/watch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@eslint/eslintrc
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@istanbuljs/load-nyc-config
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/console
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/core
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/environment
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/fake-timers
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/globals
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/reporters
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/source-map
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/test-result
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/test-sequencer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/transform
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/types
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@nodelib/fs.scandir
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@nodelib/fs.walk
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@sinonjs/commons
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@sinonjs/fake-timers
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__core
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__generator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__template
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__traverse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/fb-watchman
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/fs-extra
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/glob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/graceful-fs
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/istanbul-lib-report
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/istanbul-reports
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/minipass
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/mkdirp
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/tar
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/yargs
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/eslint-plugin
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/experimental-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/parser
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/scope-manager
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/typescript-estree
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/visitor-keys
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.acorn-globals
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ajv
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ansi-escapes
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.anymatch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.argparse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-plugin-istanbul
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-plugin-jest-hoist
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-preset-current-node-syntax
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-preset-jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.base
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.braces
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.browserslist
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.bs-logger
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cache-base
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.capture-exit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chalk
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chokidar
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.class-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cliui
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.collection-visit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.color-convert
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.combined-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.convert-source-map
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cross-spawn
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cssstyle
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.data-urls
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.define-property
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.dir-glob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.doctrine
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.domexception
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.end-of-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.enquirer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.error-ex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.escodegen
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-plugin-jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-scope
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.espree
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esquery
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esrecurse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.execa
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.expand-brackets
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.expect
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.extend-shallow
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.extglob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fast-glob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fastq
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.file-entry-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fill-range
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.find-up
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.flat-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.form-data
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fragment-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fsevents
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.get-stream
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.glob-parent
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globals
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globby
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.growly
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.has-value
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.has-values
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.html-encoding-sniffer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.iconv-lite
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.import-fresh
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.import-local
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-accessor-descriptor
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-binary-path
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-ci
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-core-module
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-data-descriptor
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-descriptor
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-docker
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-glob
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-plain-object
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-wsl
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-instrument
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-report
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-source-maps
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-reports
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-changed-files
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-config
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-diff
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-docblock
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-each
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-environment-jsdom
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-environment-node
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-haste-map
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-jasmine2
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-leak-detector
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-matcher-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-message-util
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-mock
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-resolve
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-resolve-dependencies
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-runner
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-runtime
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-serializer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-snapshot
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-util
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-validate
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-watcher
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-worker
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.js-yaml
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jsdom
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.json5
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.levn
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.locate-path
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.lru-cache
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.make-dir
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.makeerror
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.map-visit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.micromatch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mime-types
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mixin-deep
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.nanomatch
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.node-notifier
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.normalize-package-data
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.npm-run-path
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object-copy
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object-visit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object.pick
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.onetime
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.optionator
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-limit
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-locate
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parent-module
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parse-json
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pirates
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pkg-dir
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pretty-format
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.prompts
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pump
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.read-pkg
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.read-pkg-up
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.readdirp
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.regex-not
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.resolve
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.resolve-cwd
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.rimraf
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.run-parallel
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.safe-regex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.sane
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.saxes
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.set-value
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.shebang-command
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.shellwords
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.slice-ansi
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon-node
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon-util
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.source-map-resolve
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.source-map-support
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.spdx-correct
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.spdx-expression-parse
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.split-string
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.stack-utils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.static-extend
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.string-length
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.supports-color
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.supports-hyperlinks
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.table
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.terminal-link
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.test-exclude
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-object-path
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-regex
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-regex-range
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tough-cookie
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tr46
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ts-jest
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tsutils
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.type-check
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.typedarray-to-buffer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.union-value
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.unset-value
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.uri-js
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.v8-to-istanbul
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.validate-npm-package-license
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.vscode-languageserver
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.w3c-hr-time
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.w3c-xmlserializer
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.walker
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.whatwg-encoding
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.whatwg-url
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.wrap-ansi
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.write-file-atomic
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.yargs
dev	plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.yargs-parser
devDependencies	plugged/coc.nvim/package.json	/^  "devDependencies": {},$/;"	o
devPrefixes	plugged/fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v	package:tui
devicetree	plugged/nvim-treesitter/lockfile.json	/^  "devicetree": {$/;"	o
devicons#plugins#ctrlp#init	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^function! devicons#plugins#ctrlp#init() abort$/;"	f
devicons#plugins#denite#init	plugged/vim-devicons/autoload/devicons/plugins/denite.vim	/^function! devicons#plugins#denite#init() abort$/;"	f
devicons#plugins#flagship#init	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^function! devicons#plugins#flagship#init() abort$/;"	f
devicons#plugins#startify#init	plugged/vim-devicons/autoload/devicons/plugins/startify.vim	/^function! devicons#plugins#startify#init() abort$/;"	f
devicons#plugins#unite#init	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^function! devicons#plugins#unite#init() abort$/;"	f
devicons#plugins#vimfiler#init	plugged/vim-devicons/autoload/devicons/plugins/vimfiler.vim	/^function! devicons#plugins#vimfiler#init() abort$/;"	f
dfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
dg	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
dge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
dh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
di	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
diagnostic.autoRefresh	plugged/coc.nvim/data/schema.json	/^    "diagnostic.autoRefresh": {$/;"	o	object:properties
diagnostic.checkCurrentLine	plugged/coc.nvim/data/schema.json	/^    "diagnostic.checkCurrentLine": {$/;"	o	object:properties
diagnostic.displayByAle	plugged/coc.nvim/data/schema.json	/^    "diagnostic.displayByAle": {$/;"	o	object:properties
diagnostic.enable	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enable": {$/;"	o	object:properties
diagnostic.enableHighlightLineNumber	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableHighlightLineNumber": {$/;"	o	object:properties
diagnostic.enableMessage	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableMessage": {$/;"	o	object:properties
diagnostic.enableSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableSign": {$/;"	o	object:properties
diagnostic.errorSign	coc-settings.json	/^    "diagnostic.errorSign": "✘",$/;"	s
diagnostic.errorSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.errorSign": {$/;"	o	object:properties
diagnostic.filetypeMap	plugged/coc.nvim/data/schema.json	/^    "diagnostic.filetypeMap": {$/;"	o	object:properties
diagnostic.floatConfig	plugged/coc.nvim/data/schema.json	/^    "diagnostic.floatConfig": {$/;"	o	object:properties
diagnostic.format	plugged/coc.nvim/data/schema.json	/^    "diagnostic.format": {$/;"	o	object:properties
diagnostic.highlighLimit	plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlighLimit": {$/;"	o	object:properties
diagnostic.highlightOffset	plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlightOffset": {$/;"	o	object:properties
diagnostic.hintSign	coc-settings.json	/^    "diagnostic.hintSign": "",$/;"	s
diagnostic.hintSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.hintSign": {$/;"	o	object:properties
diagnostic.infoSign	coc-settings.json	/^    "diagnostic.infoSign": "",$/;"	s
diagnostic.infoSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.infoSign": {$/;"	o	object:properties
diagnostic.level	plugged/coc.nvim/data/schema.json	/^    "diagnostic.level": {$/;"	o	object:properties
diagnostic.locationlistUpdate	plugged/coc.nvim/data/schema.json	/^    "diagnostic.locationlistUpdate": {$/;"	o	object:properties
diagnostic.messageDelay	plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageDelay": {$/;"	o	object:properties
diagnostic.messageTarget	plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageTarget": {$/;"	o	object:properties
diagnostic.refreshOnInsertMode	plugged/coc.nvim/data/schema.json	/^    "diagnostic.refreshOnInsertMode": {$/;"	o	object:properties
diagnostic.separateRelatedInformationAsDiagnostics	plugged/coc.nvim/data/schema.json	/^    "diagnostic.separateRelatedInformationAsDiagnostics": {$/;"	o	object:properties
diagnostic.showDeprecated	plugged/coc.nvim/data/schema.json	/^    "diagnostic.showDeprecated": {$/;"	o	object:properties
diagnostic.showUnused	plugged/coc.nvim/data/schema.json	/^    "diagnostic.showUnused": {$/;"	o	object:properties
diagnostic.signPriority	plugged/coc.nvim/data/schema.json	/^    "diagnostic.signPriority": {$/;"	o	object:properties
diagnostic.virtualText	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualText": {$/;"	o	object:properties
diagnostic.virtualTextCurrentLineOnly	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextCurrentLineOnly": {$/;"	o	object:properties
diagnostic.virtualTextLineSeparator	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLineSeparator": {$/;"	o	object:properties
diagnostic.virtualTextLines	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLines": {$/;"	o	object:properties
diagnostic.virtualTextPrefix	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextPrefix": {$/;"	o	object:properties
diagnostic.warningSign	coc-settings.json	/^    "diagnostic.warningSign": "",$/;"	s
diagnostic.warningSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.warningSign": {$/;"	o	object:properties
diagnostics	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12300.e.s
diagnostics	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.diagnostics = function(opts)$/;"	f	unknown:lsp
diagnostics component options	plugged/lualine.nvim/README.md	/^#### diagnostics component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
diagnostics_to_tbl	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.diagnostics_to_tbl = function(opts)$/;"	f	unknown:utils
dialog.confirmKey	plugged/coc.nvim/data/schema.json	/^    "dialog.confirmKey": {$/;"	o	object:properties
dialog.floatBorderHighlight	plugged/coc.nvim/data/schema.json	/^    "dialog.floatBorderHighlight": {$/;"	o	object:properties
dialog.floatHighlight	plugged/coc.nvim/data/schema.json	/^    "dialog.floatHighlight": {$/;"	o	object:properties
dialog.maxHeight	plugged/coc.nvim/data/schema.json	/^    "dialog.maxHeight": {$/;"	o	object:properties
dialog.maxWidth	plugged/coc.nvim/data/schema.json	/^    "dialog.maxWidth": {$/;"	o	object:properties
dialog.pickerButtonShortcut	plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtonShortcut": {$/;"	o	object:properties
dialog.pickerButtons	plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtons": {$/;"	o	object:properties
dict_default	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^local function dict_default(options, key, default)$/;"	f
diff component options	plugged/lualine.nvim/README.md	/^#### diff component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
diff-sequences	plugged/coc.nvim/package-lock.json	/^        "diff-sequences": "^26.6.2",$/;"	s	object:dependencies.jest-diff.requires
diff-sequences	plugged/coc.nvim/package-lock.json	/^    "diff-sequences": {$/;"	o	object:dependencies
difference	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.difference(tbl1, tbl2)$/;"	f	unknown:M
diffthis	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.diffthis = void(function(base)$/;"	f	unknown:M
dim	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
dimmed	plugged/github-nvim-theme/LUALINE.md	/^#### dimmed$/;"	t	subsection:Screenshots
dir	plugged/bufferline.nvim/lua/bufferline/duplicates.lua	/^    local dir = buffer:ancestor(buffer.prefix_count, function(dir, depth)$/;"	f
dir-glob	plugged/coc.nvim/package-lock.json	/^        "dir-glob": "^3.0.1",$/;"	s	object:dependencies.globby.requires
dir-glob	plugged/coc.nvim/package-lock.json	/^    "dir-glob": {$/;"	o	object:dependencies
dir_new	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function dir_new(cwd, name)$/;"	f
dir_up	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.dir_up(node)$/;"	f	unknown:M
dirname	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.dirname(file)$/;"	f	unknown:M
dirname	plugged/plenary.nvim/lua/plenary/busted.lua	/^local dirname = function(p)$/;"	f
dirs	plugged/nvim-treesitter/tests/indent/common.lua	/^  dirs = vim.tbl_map(function(dir)$/;"	f
disable	plugged/indent-blankline.nvim/lua/indent_blankline/commands.lua	/^M.disable = function(bang)$/;"	f	unknown:M
disableCompletion	plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableCompletion	plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableCompletion	plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableCompletion	plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDiagnostics	plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {$/;"	o	object:definitions.languageServerBase.properties
disableDiagnostics	plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDiagnostics	plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerModule.properties
disableDiagnostics	plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDynamicRegister	plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {$/;"	o	object:definitions.languageServerBase.properties
disableDynamicRegister	plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDynamicRegister	plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerModule.properties
disableDynamicRegister	plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerSocket.properties
disableSnippetCompletion	plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableSnippetCompletion	plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableSnippetCompletion	plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableSnippetCompletion	plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {$/;"	o	object:definitions.languageServerBase.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerCommand.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerModule.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerSocket.properties
disable_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_all(mod)$/;"	f
disable_mod_conf_autocmd	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_mod_conf_autocmd(mod)$/;"	f
disable_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_module(mod, bufnr)$/;"	f
disp	plugged/telescope.nvim/lua/tests/automated/pickers/find_files_spec.lua	/^local disp = function(val)$/;"	f
dispatch	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^local function dispatch(event_name, payload)$/;"	f
display	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
display	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^        mt.display = function(entry)$/;"	f	unknown:mt
display	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      display = function(entry)$/;"	f
display	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^    mt_file_entry.display = function(entry)$/;"	f	unknown:mt_file_entry
displayWidth	plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
displayWidth	plugged/fzf/src/tui/light.go	/^	displayWidth int$/;"	m	struct:tui.wrappedLine	typeref:typename:int
displayWidthWithLimit	plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
display_content	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.display_content = defaulter(function(_)$/;"	f	unknown:previewers
display_termcodes	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.display_termcodes(str)$/;"	f	unknown:utils
dispose	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	m	class:AnonymousFunctionaf1e5c4a9900.e
distance_line_from_origin	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^local distance_line_from_origin = function(line)$/;"	f
distance_line_from_origin	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^local distance_line_from_origin = function(line)$/;"	f
distance_line_from_origin	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^local distance_line_from_origin = function(line)$/;"	f
div	plugged/plenary.nvim/lua/plenary/operators.lua	/^  div = function(a, b)$/;"	f
dj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
dle	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
dm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dme	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
do_check	plugged/nvim-treesitter-textobjects/scripts/check-queries.lua	/^local function do_check()$/;"	f
do_check	plugged/nvim-treesitter/scripts/check-queries.lua	/^local function do_check()$/;"	f
do_copy	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function do_copy(source, destination)$/;"	f
do_cut	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function do_cut(source, destination)$/;"	f
do_mock	plugged/plenary.nvim/lua/luassert/mock.lua	/^    local function do_mock(object, self, key)$/;"	f
do_paste	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function do_paste(node, action_type, action_fn)$/;"	f
do_replace_text	plugged/nvim-spectre/lua/spectre/init.lua	/^M.do_replace_text = function(opts, async_id)$/;"	f	unknown:M
do_single_paste	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function do_single_paste(source, dest, action_type, action_fn)$/;"	f
doc	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var doc = document.documentElement, body = document.body;$/;"	v
doc	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    doc          = elem.ownerDocument,$/;"	v
docgen	plugged/lualine.nvim/Makefile	/^docgen:$/;"	t
docgen	plugged/telescope.nvim/Makefile	/^docgen:$/;"	t
docker	plugged/fzf/Makefile	/^docker:$/;"	t
docker-test	plugged/fzf/Makefile	/^docker-test:$/;"	t
dockerfile	plugged/nvim-treesitter/lockfile.json	/^  "dockerfile": {$/;"	o
doctrine	plugged/coc.nvim/package-lock.json	/^        "doctrine": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
doctrine	plugged/coc.nvim/package-lock.json	/^    "doctrine": {$/;"	o	object:dependencies
document_symbols	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.document_symbols = function(opts)$/;"	f	unknown:lsp
domexception	plugged/coc.nvim/package-lock.json	/^        "domexception": "^2.0.1",$/;"	s	object:dependencies.jsdom.requires
domexception	plugged/coc.nvim/package-lock.json	/^    "domexception": {$/;"	o	object:dependencies
dot	plugged/nvim-treesitter/lockfile.json	/^  "dot": {$/;"	o
dot_product	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.dot_product = function(a, b)$/;"	f	unknown:hsluv
dot_product	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.dot_product = function(a, b)$/;"	f	unknown:hsluv
dot_product	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.dot_product = function(a, b)$/;"	f	unknown:hsluv
doubleClickDuration	plugged/fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c	package:tui
down	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1e100.i
download	plugged/fzf/install	/^download() {$/;"	f
download	plugged/fzf/install.ps1	/^function download {$/;"	f
dp	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
dprint	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.dprint(obj)$/;"	f	unknown:M
dprintf	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.dprintf(obj, ...)$/;"	f	unknown:M
dr	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
dracula	plugged/lualine.nvim/THEMES.md	/^### dracula$/;"	S	chapter:Available themes
draw	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:draw(default_highlight, is_focused)$/;"	f	unknown:M
draw	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^function M.draw(tree, reload)$/;"	f	unknown:M
drawBorder	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f	struct:tui.LightWindow
drawBorder	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f	struct:tui.TcellWindow
drawBorderAround	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f	struct:tui.LightWindow
drawBorderHorizontal	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal(top, bottom bool) {$/;"	f	struct:tui.LightWindow
drawBorderVertical	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderVertical(left, right bool) {$/;"	f	struct:tui.LightWindow
draw_section	plugged/lualine.nvim/lua/lualine/utils/section.lua	/^function M.draw_section(section, section_name, is_focused)$/;"	f	unknown:M
drop	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Section:drop(index)$/;"	f	unknown:Section
drop	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:drop(entry)$/;"	f	unknown:MultiSelect
drop_all	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.drop_all(prompt_bufnr)$/;"	f	unknown:actions
ds	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
du	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
dump	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.dump()$/;"	f	unknown:M
dump_cache	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^   R.dump_cache = function()$/;"	f	unknown:R
dump_node	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/utils.lua	/^M.dump_node = function(node)$/;"	f	unknown:M
dump_node_text	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/utils.lua	/^M.dump_node_text = function(target)$/;"	f	unknown:M
dupeTheme	plugged/fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
duplicate	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local duplicate = function(...)$/;"	f
duplicate_fun_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local duplicate_fun_gen = function(param_x, state_x)$/;"	f
duplicate_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local duplicate_gen = function(param_x, state_x)$/;"	f
duplicate_table_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local duplicate_table_gen = function(param_x, state_x)$/;"	f
dw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
dx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
dy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dyn_title	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    dyn_title = function(_, entry)$/;"	f
dyn_title	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^    dyn_title = function(_, entry)$/;"	f
dynamic_workspace_symbols	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.dynamic_workspace_symbols = function(opts)$/;"	f	unknown:lsp
dz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
e	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:AnonymousFunctionaf1e5c4a3000
e	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:AnonymousFunctionaf1e5c4a3200
e	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Uq
e	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13c00
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a14400
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a17c00
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a17d00
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a18200
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a18300
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a18400
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a19200
e	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a1c900
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10000
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10100
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10a00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10b00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10c00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10d00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10f00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11000
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11400
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11600
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11700
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11800
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11900
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11a00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11b00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11d00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12000
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12100
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12300
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12400
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12500
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12600
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12700
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12800
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aea00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aeb00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aec00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aed00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aee00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aef00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af000
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af200
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af300
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af600
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af700
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af800
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af900
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afa00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afb00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afc00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afd00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afe00
e	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aff00
e	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunctionaf1e5c4a25900
e	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:pK
e	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
e	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionaf1e5c4a2f400.t
e	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2ef00
e	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33b00
e	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.scan
e	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	c	class:AnonymousFunctionaf1e5c4a33e00
e	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:BW
e	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:jW
e	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29800
e	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe
e	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:AnonymousFunctionaf1e5c4a9500
e	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:AnonymousFunctionaf1e5c4a9600
e	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:LK
e	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
e	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunctionaf1e5c4a12900
e	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	c	class:AnonymousFunctionaf1e5c4a9900
e	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunctionaf1e5c4a9700
e	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunctionaf1e5c4a9b00
e	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunctionaf1e5c4a9d00
e	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunctionaf1e5c4a9e00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4a9f00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aa000
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aa400
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aa600
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aa800
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aac00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aad00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aae00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aaf00
e	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4ab000
e	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunctionaf1e5c4a21500
e	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:see
e	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:cQ
e	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:hA
e	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
e	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
e	plugged/nvim-treesitter/tests/indent/python/branches.py	/^e = [[$/;"	v
e	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^e = [$/;"	v
e	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^e = (1, 2,$/;"	v
e4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
e5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
e6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
e7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
e8	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
e9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
eB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
eC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
eD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
eE	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
eF	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
eG	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
eN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
eS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
eU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
eV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
eZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
e_	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ea	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
eachLine	plugged/fzf/src/terminal.go	/^type eachLine struct {$/;"	s	package:fzf
eae	plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
easy_replace#create_window	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#create_window()$/;"	f
easy_replace#echo_status	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#echo_status()$/;"	f
easy_replace#exit	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#exit()$/;"	f
easy_replace#generate_context	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#generate_context(current_word, line)$/;"	f
easy_replace#highlight	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#highlight()$/;"	f
easy_replace#next_mode	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#next_mode()$/;"	f
easy_replace#replace	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#replace()$/;"	f
easy_replace#start	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#start(current_word, line)$/;"	f
easy_replace#stop_highlight	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#stop_highlight()$/;"	f
easy_replace#update_char	plugged/vim-easy-replace/autoload/easy_replace.vim	/^fun! easy_replace#update_char()$/;"	f
echo_warning	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.echo_warning(msg)$/;"	f	unknown:M
echoerr	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.echoerr(msg)$/;"	f	unknown:M
echomsg	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.echomsg(msg, hl)$/;"	f	unknown:M
echomsg	plugged/toggleterm.nvim/lua/toggleterm/utils.lua	/^function M.echomsg(msg, hl)$/;"	f	unknown:M
edge	plugged/plenary.nvim/scratch/_reference_count.lua	/^function edge(env, from, to, how, value)$/;"	f
edit	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.edit(path)$/;"	f	unknown:M
edit	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^action_set.edit = function(prompt_bufnr, command)$/;"	f	unknown:action_set
edit_buffer	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^  edit_buffer = function(command, bufnr)$/;"	f
edit_command_line	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.edit_command_line = function(prompt_bufnr)$/;"	f	unknown:actions
edit_query_file	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.edit_query_file(query_group, lang)$/;"	f	unknown:M
edit_query_file_user_after	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.edit_query_file_user_after(query_group, lang)$/;"	f	unknown:M
edit_register	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.edit_register = function(prompt_bufnr)$/;"	f	unknown:actions
edit_search_line	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.edit_search_line = function(prompt_bufnr)$/;"	f	unknown:actions
edits	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.s
eee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ef	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
eg	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ege	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	f
ei	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ei          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
eie	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
ej	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
el	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
ele	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
electron-to-chromium	plugged/coc.nvim/package-lock.json	/^        "electron-to-chromium": "^1.3.723",$/;"	s	object:dependencies.browserslist.requires
electron-to-chromium	plugged/coc.nvim/package-lock.json	/^    "electron-to-chromium": {$/;"	o	object:dependencies
elem	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					var elem = document.getElementById( match[3] );$/;"	v
elems	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = this.length > 1, elems;$/;"	v
elems	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var elems = jQuery.map(this, function(elem){$/;"	v
elixir	plugged/nvim-treesitter/lockfile.json	/^  "elixir": {$/;"	o
ellipsis	plugged/fzf/src/terminal.go	/^const ellipsis string = ".."$/;"	c	package:fzf	typeref:typename:string
elm	plugged/nvim-treesitter/lockfile.json	/^  "elm": {$/;"	o
em	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
eme	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
emit	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionaf1e5c4a7400.t
emittery	plugged/coc.nvim/package-lock.json	/^        "emittery": "^0.7.1",$/;"	s	object:dependencies.jest-runner.requires
emittery	plugged/coc.nvim/package-lock.json	/^    "emittery": {$/;"	o	object:dependencies
emmet#anchorizeURL	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#expandAbbr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageEncode	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageEncode() abort$/;"	f
emmet#imageSize	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#findTokens	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageEncode	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageEncode() abort$/;"	f
emmet#lang#css#imageSize	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#mergeLines	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#mergeLines() abort$/;"	f
emmet#lang#css#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#css#toggleComment	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#balanceTag	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#balanceTag(flag) range abort$/;"	f
emmet#lang#elm#findTokens	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#imageEncode	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#imageEncode() abort$/;"	f
emmet#lang#elm#mergeLines	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#mergeLines() abort$/;"	f
emmet#lang#elm#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrev(flag) abort$/;"	f
emmet#lang#elm#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#elm#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#parseTag	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseTag(tag) abort$/;"	f
emmet#lang#elm#removeTag	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#removeTag() abort$/;"	f
emmet#lang#elm#renderNode	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#splitJoinTag() abort$/;"	f
emmet#lang#elm#toString	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#elm#toggleComment	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toggleComment() abort$/;"	f
emmet#lang#exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#getExtends	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#getExtends(type) abort$/;"	f
emmet#lang#haml#balanceTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#findTokens	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageEncode	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageEncode() abort$/;"	f
emmet#lang#haml#imageSize	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#mergeLines	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#mergeLines() abort$/;"	f
emmet#lang#haml#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#haml#toggleComment	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#findTokens	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageEncode	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageEncode() abort$/;"	f
emmet#lang#html#imageSize	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#mergeLines	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#mergeLines() abort$/;"	f
emmet#lang#html#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#html#toggleComment	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#findTokens	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageEncode	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageEncode() abort$/;"	f
emmet#lang#jade#imageSize	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#mergeLines	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#mergeLines() abort$/;"	f
emmet#lang#jade#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#jade#toggleComment	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#findTokens	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageEncode	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageEncode() abort$/;"	f
emmet#lang#less#imageSize	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#mergeLines	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#mergeLines() abort$/;"	f
emmet#lang#less#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#less#toggleComment	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#findTokens	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageEncode	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageEncode() abort$/;"	f
emmet#lang#sass#imageSize	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#mergeLines	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#mergeLines() abort$/;"	f
emmet#lang#sass#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#sass#toggleComment	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#findTokens	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageEncode	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageEncode() abort$/;"	f
emmet#lang#scss#imageSize	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#mergeLines	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#mergeLines() abort$/;"	f
emmet#lang#scss#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#scss#toggleComment	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#findTokens	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageEncode	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageEncode() abort$/;"	f
emmet#lang#slim#imageSize	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#mergeLines	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#mergeLines() abort$/;"	f
emmet#lang#slim#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#slim#toggleComment	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() abort$/;"	f
emmet#mergeLines	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageEncodeDecode	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageEncodeDecode(fn, flag) abort$/;"	f
emmet#util#imageSizeWithImageMagick	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet-vim.zip	plugged/emmet-vim/Makefile	/^emmet-vim.zip: remove-zip$/;"	t
emmet.excludeLanguages	coc-settings.json	/^    "emmet.excludeLanguages": [],$/;"	a
emmet.includeLanguages	coc-settings.json	/^    "emmet.includeLanguages": $/;"	o
emmet.optimizeStylesheetParsing	coc-settings.json	/^    "emmet.optimizeStylesheetParsing": false,$/;"	b
emmet.priority	coc-settings.json	/^    "emmet.priority": 99,$/;"	n
emmet.showAbbreviationSuggestions	coc-settings.json	/^    "emmet.showAbbreviationSuggestions": true,$/;"	b
emmet.showSuggestionsAsSnippets	coc-settings.json	/^    "emmet.showSuggestionsAsSnippets": true,$/;"	b
emoji-regex	plugged/coc.nvim/package-lock.json	/^            "emoji-regex": "^7.0.1",$/;"	s	object:dependencies.table.dependencies.string-width.requires
emoji-regex	plugged/coc.nvim/package-lock.json	/^        "emoji-regex": "^8.0.0",$/;"	s	object:dependencies.string-width.requires
emoji-regex	plugged/coc.nvim/package-lock.json	/^        "emoji-regex": {$/;"	o	object:dependencies.table.dependencies
emoji-regex	plugged/coc.nvim/package-lock.json	/^    "emoji-regex": {$/;"	o	object:dependencies
empty	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.empty = function()$/;"	f	unknown:sorters
emptyLine	plugged/fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v	package:fzf
en	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {$/;"	o	object:definitions.languageServerBase.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerCommand.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerModule.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerSocket.properties
enable	plugged/indent-blankline.nvim/lua/indent_blankline/commands.lua	/^M.enable = function(bang)$/;"	f	unknown:M
enable_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_all(mod)$/;"	f
enable_mod_conf_autocmd	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_mod_conf_autocmd(mod)$/;"	f
enable_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_module(mod, bufnr, lang)$/;"	f
enabled	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function Config:enabled(feature)$/;"	f	unknown:Config
enabled	plugged/fzf/src/terminal.go	/^	enabled    bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
encodePlaceholder	plugged/fzf/src/terminal_test.go	/^func (flags placeholderFlags) encodePlaceholder() string {$/;"	f	unknown:fzf.placeholderFlags	typeref:typename:string
encoding	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
encoding	plugged/lualine.nvim/lua/lualine/components/encoding.lua	/^local function encoding()$/;"	f
end	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:o
end	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:Lae.a
end	plugged/fzf/src/tokenizer.go	/^	end   int$/;"	m	struct:fzf.Range	typeref:typename:int
end-of-stream	plugged/coc.nvim/package-lock.json	/^        "end-of-stream": "^1.1.0",$/;"	s	object:dependencies.pump.requires
end-of-stream	plugged/coc.nvim/package-lock.json	/^    "end-of-stream": {$/;"	o	object:dependencies
endLine	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af200.e.l
end]	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^end] = function(_, val)$/;"	f
end]	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^end] = function(selector, val)$/;"	f
end]	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      end] = function(e)$/;"	f
end_	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:end_()$/;"	f	unknown:TSRange
end_test_cases	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local end_test_cases = function()$/;"	f
enforce_regular_tabs	plugged/bufferline.nvim/lua/bufferline.lua	/^local function enforce_regular_tabs(context)$/;"	f
engines	plugged/coc.nvim/package.json	/^  "engines": {$/;"	o
enhance	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^  function mt:enhance(opts)$/;"	f	unknown:mt
enquirer	plugged/coc.nvim/package-lock.json	/^        "enquirer": "^2.3.5",$/;"	s	object:dependencies.eslint.requires
enquirer	plugged/coc.nvim/package-lock.json	/^    "enquirer": {$/;"	o	object:dependencies
enrich_group	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function enrich_group(index, group)$/;"	f
ensure_file_in_index	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.ensure_file_in_index = function(self)$/;"	f	unknown:Obj
enter	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^    enter = function(self)$/;"	f
entries	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^    { entries = dirs, fn = dir_new, check = function(_, abs) return luv.fs_access(abs, 'R') end /;"	f
entries	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^    { entries = files, fn = file_new, check = function() return true end }$/;"	f
entries	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^    { entries = links, fn = link_new, check = function(name) return name ~= nil end },$/;"	f
entry_adder	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:entry_adder(index, entry, _, insert)$/;"	f	unknown:Picker
entry_maker	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^      entry_maker = function(entry)$/;"	f
entry_maker	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^      entry_maker = function(entry)$/;"	f
entry_maker	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^      entry_maker = function(line)$/;"	f
entry_maker	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^      entry_maker = function(action)$/;"	f
entry_to_qf	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local entry_to_qf = function(entry)$/;"	f
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	a	object:definitions.languageServerBase.properties.revealOutputChannelOn
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	a	object:definitions.languageServerModule.properties.transport
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	a	object:definitions.languageServerBase.properties.trace.server
enum	plugged/coc.nvim/data/schema.json	/^          "enum": [$/;"	a	object:properties.coc.preferences.jumpCommand.anyOf.0
enum	plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	a	object:properties.outline.codeActionKinds.items
enum	plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	a	object:properties.suggest.detailField
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	a	object:properties.diagnostic.enableMessage
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	a	object:properties.suggest.autoTrigger
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	a	object:properties.coc.preferences.extensionUpdateCheck
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	a	object:properties.diagnostic.messageTarget
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	a	object:properties.signature.target
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	a	object:properties.list.source.diagnostics.pathFormat
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	a	object:properties.diagnostic.level
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	a	object:properties.suggest.defaultSortMethod
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	a	object:properties.coc.preferences.messageLevel
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	a	object:properties.outline.sortBy
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	a	object:properties.hover.target
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	a	object:properties.coc.preferences.listOfWorkspaceEdit
enumMember	plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {$/;"	o	object:definitions.languageServerBase.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerCommand.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerModule.properties
eo	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
eo	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
eo	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> eo          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
ep	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
eprint	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.eprint(msg)$/;"	f	unknown:M
eprint	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^local function eprint(msg, level)$/;"	f
eprintf	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.eprintf(fmt, ...)$/;"	f	unknown:M
eq	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
eq	plugged/plenary.nvim/lua/plenary/operators.lua	/^  eq = function(a, b)$/;"	f
eq	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^local eq = function(a, b)$/;"	f
eq	plugged/telescope.nvim/lua/tests/automated/resolver_spec.lua	/^local eq = function(a, b)$/;"	f
equal	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:equal(other)$/;"	f	unknown:List
equals	plugged/fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
equals	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function equals(state, arguments, level)$/;"	f
equals	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function equals(state, arguments, level)$/;"	f
er	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ere	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
erlang	plugged/nvim-treesitter/lockfile.json	/^  "erlang": {$/;"	o
err	plugged/fzf/src/terminal.go	/^	err  error$/;"	m	struct:fzf.eachLine	typeref:typename:error
error	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
error	plugged/nvcode-color-schemes.vim/generate	/^def error(message)$/;"	f
error	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function error(str)$/;"	f
error	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/_log.lua	/^        error = function(_) end,$/;"	f
error	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.error(msg)$/;"	f	unknown:M
error-ex	plugged/coc.nvim/package-lock.json	/^        "error-ex": "^1.3.1",$/;"	s	object:dependencies.parse-json.requires
error-ex	plugged/coc.nvim/package-lock.json	/^    "error-ex": {$/;"	o	object:dependencies
errorExit	plugged/fzf/src/options.go	/^func errorExit(msg string) {$/;"	f	package:fzf
errorExit	plugged/fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f	package:tui
error_handler	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.error_handler = function(err)$/;"	f	unknown:M
error_matches	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function error_matches(state, arguments, level)$/;"	f
errorlevel	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.errorlevel(level)$/;"	f	unknown:util
es	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> es          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
es-abstract	plugged/coc.nvim/package-lock.json	/^        "es-abstract": "^1.17.0-next.0",$/;"	s	object:dependencies.promise.prototype.finally.requires
es-abstract	plugged/coc.nvim/package-lock.json	/^        "es-abstract": "^1.18.0-next.1",$/;"	s	object:dependencies.string.prototype.matchall.requires
es-abstract	plugged/coc.nvim/package-lock.json	/^    "es-abstract": {$/;"	o	object:dependencies
es-to-primitive	plugged/coc.nvim/package-lock.json	/^        "es-to-primitive": "^1.2.1",$/;"	s	object:dependencies.es-abstract.requires
es-to-primitive	plugged/coc.nvim/package-lock.json	/^    "es-to-primitive": {$/;"	o	object:dependencies
esbuild	plugged/coc.nvim/package-lock.json	/^    "esbuild": {$/;"	o	object:dependencies
escDelay	plugged/fzf/src/tui/light.go	/^	escDelay      int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
escPollInterval	plugged/fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c	package:tui
escSequence	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
escalade	plugged/coc.nvim/package-lock.json	/^        "escalade": "^3.1.1",$/;"	s	object:dependencies.browserslist.requires
escalade	plugged/coc.nvim/package-lock.json	/^    "escalade": {$/;"	o	object:dependencies
escape-string-regexp	plugged/coc.nvim/package-lock.json	/^            "escape-string-regexp": "^1.0.5",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
escape-string-regexp	plugged/coc.nvim/package-lock.json	/^            "escape-string-regexp": "^1.0.5",$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
escape-string-regexp	plugged/coc.nvim/package-lock.json	/^        "escape-string-regexp": "^2.0.0"$/;"	s	object:dependencies.stack-utils.requires
escape-string-regexp	plugged/coc.nvim/package-lock.json	/^        "escape-string-regexp": {$/;"	o	object:dependencies.stack-utils.dependencies
escape-string-regexp	plugged/coc.nvim/package-lock.json	/^    "escape-string-regexp": {$/;"	o	object:dependencies
escape_chars	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.escape_chars = function(query)$/;"	f	unknown:M
escape_chars	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^local escape_chars = function(string)$/;"	f
escape_sed	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.escape_sed = function (query)$/;"	f	unknown:M
escape_slash	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.escape_slash = function(query)$/;"	f	unknown:M
escape_vim_magic	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.escape_vim_magic=function (query)$/;"	f	unknown:M
escapedColon	plugged/fzf/src/options.go	/^	escapedColon = 0$/;"	c	package:fzf
escapedComma	plugged/fzf/src/options.go	/^	escapedComma = 1$/;"	c	package:fzf
escapedPlus	plugged/fzf/src/options.go	/^	escapedPlus  = 2$/;"	c	package:fzf
escodegen	plugged/coc.nvim/package-lock.json	/^        "escodegen": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
escodegen	plugged/coc.nvim/package-lock.json	/^    "escodegen": {$/;"	o	object:dependencies
eslint	plugged/coc.nvim/package-lock.json	/^    "eslint": {$/;"	o	object:dependencies
eslint-plugin-jest	plugged/coc.nvim/package-lock.json	/^    "eslint-plugin-jest": {$/;"	o	object:dependencies
eslint-plugin-jsdoc	plugged/coc.nvim/package-lock.json	/^    "eslint-plugin-jsdoc": {$/;"	o	object:dependencies
eslint-scope	plugged/coc.nvim/package-lock.json	/^        "eslint-scope": "^5.0.0",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
eslint-scope	plugged/coc.nvim/package-lock.json	/^        "eslint-scope": "^5.1.1",$/;"	s	object:dependencies.eslint.requires
eslint-scope	plugged/coc.nvim/package-lock.json	/^    "eslint-scope": {$/;"	o	object:dependencies
eslint-utils	plugged/coc.nvim/package-lock.json	/^        "eslint-utils": "^2.0.0"$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
eslint-utils	plugged/coc.nvim/package-lock.json	/^        "eslint-utils": "^2.1.0",$/;"	s	object:dependencies.eslint.requires
eslint-utils	plugged/coc.nvim/package-lock.json	/^    "eslint-utils": {$/;"	o	object:dependencies
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^1.1.0"$/;"	s	object:dependencies.eslint-utils.requires
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^1.3.0"$/;"	s	object:dependencies.espree.requires
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^2.0.0"$/;"	s	object:dependencies.@typescript-eslint/visitor-keys.requires
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.eslint-utils.dependencies
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.espree.dependencies
eslint-visitor-keys	plugged/coc.nvim/package-lock.json	/^    "eslint-visitor-keys": {$/;"	o	object:dependencies
espree	plugged/coc.nvim/package-lock.json	/^        "espree": "^7.3.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
espree	plugged/coc.nvim/package-lock.json	/^        "espree": "^7.3.1",$/;"	s	object:dependencies.eslint.requires
espree	plugged/coc.nvim/package-lock.json	/^    "espree": {$/;"	o	object:dependencies
esprima	plugged/coc.nvim/package-lock.json	/^        "esprima": "^4.0.0"$/;"	s	object:dependencies.js-yaml.requires
esprima	plugged/coc.nvim/package-lock.json	/^        "esprima": "^4.0.1",$/;"	s	object:dependencies.escodegen.requires
esprima	plugged/coc.nvim/package-lock.json	/^    "esprima": {$/;"	o	object:dependencies
esquery	plugged/coc.nvim/package-lock.json	/^        "esquery": "^1.2.0",$/;"	s	object:dependencies.eslint.requires
esquery	plugged/coc.nvim/package-lock.json	/^    "esquery": {$/;"	o	object:dependencies
esrecurse	plugged/coc.nvim/package-lock.json	/^        "esrecurse": "^4.3.0",$/;"	s	object:dependencies.eslint-scope.requires
esrecurse	plugged/coc.nvim/package-lock.json	/^    "esrecurse": {$/;"	o	object:dependencies
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": "^4.1.1"$/;"	s	object:dependencies.eslint-scope.requires
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.1.0"$/;"	s	object:dependencies.esquery.requires
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.2.0"$/;"	s	object:dependencies.esrecurse.requires
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.2.0",$/;"	s	object:dependencies.escodegen.requires
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.escodegen.dependencies
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esquery.dependencies
estraverse	plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esrecurse.dependencies
estraverse	plugged/coc.nvim/package-lock.json	/^    "estraverse": {$/;"	o	object:dependencies
esutils	plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2"$/;"	s	object:dependencies.doctrine.requires
esutils	plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2",$/;"	s	object:dependencies.escodegen.requires
esutils	plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2",$/;"	s	object:dependencies.eslint.requires
esutils	plugged/coc.nvim/package-lock.json	/^    "esutils": {$/;"	o	object:dependencies
et	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1f300
et	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Wq
et	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> et          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
eu	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
ev	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
evalScript	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function evalScript( i, elem ) {$/;"	f
evaluateScrollOffset	plugged/fzf/src/terminal.go	/^func (t *Terminal) evaluateScrollOffset(list []*Item, height int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
event	plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				event = !data[0] || !data[0].preventDefault;$/;"	v
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = { originalEvent: originalEvent };$/;"	c
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.event = {$/;"	c	class:jQuery
event	plugged/fzf/src/reader.go	/^	event    int32$/;"	m	struct:fzf.Reader	typeref:typename:int32
event-lite	plugged/coc.nvim/package-lock.json	/^        "event-lite": "^0.1.1",$/;"	s	object:dependencies.msgpack-lite.requires
event-lite	plugged/coc.nvim/package-lock.json	/^    "event-lite": {$/;"	o	object:dependencies
eventBox	plugged/fzf/src/matcher.go	/^	eventBox       *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
eventBox	plugged/fzf/src/reader.go	/^	eventBox *util.EventBox$/;"	m	struct:fzf.Reader	typeref:typename:*util.EventBox
eventBox	plugged/fzf/src/terminal.go	/^	eventBox     *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
events	plugged/fzf/src/util/eventbox.go	/^	events Events$/;"	m	struct:util.EventBox	typeref:typename:Events
everforest	plugged/lualine.nvim/THEMES.md	/^### everforest$/;"	S	chapter:Available themes
ew	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
ex	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
exclude	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	exclude = \/z-?index|font-?weight|opacity|zoom|line-?height\/i,$/;"	v
excluded	plugged/telescope.nvim/lua/telescope/config.lua	/^                                local excluded = vim.tbl_filter(function(ending)$/;"	f
exclusive	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var exclusive = true;$/;"	v
exec	plugged/fzf/src/reader.go	/^	exec     *exec.Cmd$/;"	m	struct:fzf.Reader	typeref:typename:*exec.Cmd
exec	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.exec(cmd, num, size, dir, direction, go_back, open)$/;"	f	unknown:M
exec-sh	plugged/coc.nvim/package-lock.json	/^        "exec-sh": "^0.3.2",$/;"	s	object:dependencies.@cnakazawa/watch.requires
exec-sh	plugged/coc.nvim/package-lock.json	/^        "exec-sh": "^0.3.2",$/;"	s	object:dependencies.sane.requires
exec-sh	plugged/coc.nvim/package-lock.json	/^    "exec-sh": {$/;"	o	object:dependencies
execArgv	plugged/coc.nvim/data/schema.json	/^        "execArgv": {$/;"	o	object:definitions.languageServerModule.properties
exec_command	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.exec_command(args, count)$/;"	f	unknown:M
execa	plugged/coc.nvim/package-lock.json	/^        "execa": "^1.0.0",$/;"	s	object:dependencies.sane.requires
execa	plugged/coc.nvim/package-lock.json	/^        "execa": "^4.0.0",$/;"	s	object:dependencies.jest-changed-files.requires
execa	plugged/coc.nvim/package-lock.json	/^        "execa": {$/;"	o	object:dependencies.jest-changed-files.dependencies
execa	plugged/coc.nvim/package-lock.json	/^    "execa": {$/;"	o	object:dependencies
execute	plugged/plenary.nvim/lua/plenary/async/async.lua	/^local execute = function(async_function, callback, ...)$/;"	f
execute	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^local execute = function(future, callback)$/;"	f
execute	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.execute(id)$/;"	f	unknown:M
execute	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.execute(prefix, mode, buf)$/;"	f	unknown:M
executeCommand	plugged/fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f	struct:fzf.Terminal
executeRegexp	plugged/fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
execute_callback	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^function popup.execute_callback(bufnr)$/;"	f	unknown:popup
execute_keymap	plugged/telescope.nvim/lua/telescope/mappings.lua	/^mappings.execute_keymap = function(prompt_bufnr, keymap_identifier)$/;"	f	unknown:mappings
execute_test_case	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local execute_test_case = function(location, key, spec)$/;"	f
executing	plugged/fzf/src/terminal.go	/^	executing    *util.AtomicBool$/;"	m	struct:fzf.Terminal	typeref:typename:*util.AtomicBool
exists	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:exists()$/;"	f	unknown:Path
exit	plugged/coc.nvim/package-lock.json	/^            "exit": "^0.1.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
exit	plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.@jest/core.requires
exit	plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.@jest/reporters.requires
exit	plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.jest-runner.requires
exit	plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.jest-runtime.requires
exit	plugged/coc.nvim/package-lock.json	/^    "exit": {$/;"	o	object:dependencies
exit	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^    exit = function()$/;"	f
exitCancel	plugged/fzf/src/constants.go	/^	exitCancel    = -1$/;"	c	package:fzf
exitError	plugged/fzf/src/constants.go	/^	exitError     = 2$/;"	c	package:fzf
exitInterrupt	plugged/fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c	package:fzf
exitNoMatch	plugged/fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c	package:fzf
exitOk	plugged/fzf/src/constants.go	/^	exitOk        = 0$/;"	c	package:fzf
expand	plugged/plenary.nvim/lua/plenary/job.lua	/^local function expand(path)$/;"	f
expand	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:expand()$/;"	f	unknown:Path
expand-brackets	plugged/coc.nvim/package-lock.json	/^        "expand-brackets": "^2.1.4",$/;"	s	object:dependencies.extglob.requires
expand-brackets	plugged/coc.nvim/package-lock.json	/^    "expand-brackets": {$/;"	o	object:dependencies
expand_height	plugged/gitsigns.nvim/lua/gitsigns/popup.lua	/^local function expand_height(win_id, nlines)$/;"	f
expando	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
expect	plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2"$/;"	s	object:dependencies.@jest/globals.requires
expect	plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
expect	plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
expect	plugged/coc.nvim/package-lock.json	/^    "expect": {$/;"	o	object:dependencies
expect	plugged/fzf/src/terminal.go	/^	expect       map[tui.Event]string$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event]string
expected	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            expected = 'test  function abcde()',$/;"	f
expected	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            expected = 'test  function abcdenew()',$/;"	f
expectf	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.expectf(cond, interval)$/;"	f	unknown:M
explorer.file.reveal.auto	coc-settings.json	/^    "explorer.file.reveal.auto": true,$/;"	b
explorer.file.showHiddenFiles	coc-settings.json	/^    "explorer.file.showHiddenFiles": true,$/;"	b
explorer.icon.enableNerdfont	coc-settings.json	/^    "explorer.icon.enableNerdfont": true,$/;"	b
explorer.icon.source	coc-settings.json	/^    "explorer.icon.source": "nvim-web-devicons",$/;"	s
ext	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
extend	plugged/lualine.nvim/lua/lualine/utils/class.lua	/^function Object:extend()$/;"	f	unknown:Object
extend	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^local function extend(child)$/;"	f
extend	plugged/nvim-spectre/lua/spectre/search/base.lua	/^local function extend(child)$/;"	f
extend	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:extend()$/;"	f	unknown:Object
extend	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:extend(other)$/;"	f	unknown:List
extend-shallow	plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^            "extend-shallow": {$/;"	o	object:dependencies.sane.dependencies.braces.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^            "extend-shallow": {$/;"	o	object:dependencies.sane.dependencies.fill-range.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.expand-brackets.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.extglob.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.set-value.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.snapdragon.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.0"$/;"	s	object:dependencies.split-string.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.nanomatch.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.regex-not.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.to-regex.requires
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.expand-brackets.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.extglob.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.set-value.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.snapdragon.dependencies
extend-shallow	plugged/coc.nvim/package-lock.json	/^    "extend-shallow": {$/;"	o	object:dependencies
extend_tbl_with_ext_eq_ft_entries	plugged/plenary.nvim/lua/plenary/filetype.lua	/^local extend_tbl_with_ext_eq_ft_entries = function()$/;"	f
extended	plugged/fzf/src/pattern.go	/^	extended      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
extendedMatch	plugged/fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:([]Offset, int, *[]int)
extglob	plugged/coc.nvim/package-lock.json	/^            "extglob": "^2.0.4",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
extglob	plugged/coc.nvim/package-lock.json	/^    "extglob": {$/;"	o	object:dependencies
extra	plugged/github-nvim-theme/Makefile	/^extra: $(extra_path)$/;"	t
extra_path	plugged/github-nvim-theme/Makefile	/^extra_path = $(github_path)\/extra$/;"	m
extract	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.extract(n, field, width) -- Lua5.2 inspired$/;"	f	unknown:M
extractColor	plugged/fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]/;"	f	package:fzf	typeref:typename:(string, *[]ansiOffset, *ansiState)
extract_captures	plugged/nvim-treesitter-textobjects/scripts/check-queries.lua	/^local function extract_captures()$/;"	f
extract_captures	plugged/nvim-treesitter/scripts/check-queries.lua	/^local function extract_captures()$/;"	f
extract_color_from_hllist	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.extract_color_from_hllist(scope, syntaxlist, default)$/;"	f	unknown:M
extract_highlight_colors	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.extract_highlight_colors(color_group, scope)$/;"	f	unknown:M
extract_keys	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.extract_keys(nspace, tokens)$/;"	f	unknown:util
exts	plugged/github-nvim-theme/Makefile	/^exts = .\/extras\/$/;"	m
ey	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
f	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
f	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
f	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
f	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c
f	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
f	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
f	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
f	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read
f	plugged/plenary.nvim/lua/plenary/async/async.lua	/^local f = require "plenary.functional"$/;"	f
f	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^local f = require "plenary.functional"$/;"	f
f	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local f = require "plenary.functional"$/;"	f
f	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^local f = require "plenary.functional"$/;"	f
f	plugged/plenary.nvim/scratch/_reference_count.lua	/^	local f = function(from, to, how, v)$/;"	f
f	plugged/plenary.nvim/scratch/_reference_count.lua	/^	local f = function(from, to, how, value)$/;"	f
f	plugged/plenary.nvim/scratch/coroutine_examples.lua	/^local f = function(xyz)$/;"	f
f	plugged/plenary.nvim/tests/plenary/iterators_spec.lua	/^local f = require "plenary.functional"$/;"	f
f	plugged/telescope.nvim/lua/telescope/actions/utils.lua	/^    f = { f, "function" },$/;"	f
f	plugged/telescope.nvim/scratch/batched_finder_and_sorter.lua	/^local f = function(prompt, process_result, process_complete)$/;"	f
f$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
f0	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
f1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
f1	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f1(int x) {$/;"	f	typeref:typename:int
f2	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f2(int x)$/;"	f	typeref:typename:int
f3	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f3($/;"	f	typeref:typename:int
f4	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f4($/;"	f	typeref:typename:int
f5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
f5	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f5(int x,$/;"	f	typeref:typename:int
f6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
f6	plugged/nvim-treesitter/tests/indent/c/func.c	/^f6(int x, int y)$/;"	f	typeref:typename:int
f7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
f8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
f9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
fA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
fB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
fC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
fD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
fE	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
fF	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
fG	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
fK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
fR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
fTe	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
fV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
fW	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	v
fX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
fa	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
fae	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
fail	plugged/fzf/bin/fzf-tmux	/^fail() {$/;"	f
failed	plugged/fzf/src/terminal.go	/^	failed       *string$/;"	m	struct:fzf.Terminal	typeref:typename:*string
failure	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^    failure = f.any(function(_, v)$/;"	f
falsy	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function falsy(state, arguments, level)$/;"	f
falsy	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function falsy(state, arguments, level)$/;"	f
fast-deep-equal	plugged/coc.nvim/package-lock.json	/^        "fast-deep-equal": "^3.1.1",$/;"	s	object:dependencies.ajv.requires
fast-deep-equal	plugged/coc.nvim/package-lock.json	/^    "fast-deep-equal": {$/;"	o	object:dependencies
fast-diff	plugged/coc.nvim/package-lock.json	/^    "fast-diff": {$/;"	o	object:dependencies
fast-glob	plugged/coc.nvim/package-lock.json	/^        "fast-glob": "^3.1.1",$/;"	s	object:dependencies.globby.requires
fast-glob	plugged/coc.nvim/package-lock.json	/^    "fast-glob": {$/;"	o	object:dependencies
fast-json-stable-stringify	plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "2.x"$/;"	s	object:dependencies.bs-logger.requires
fast-json-stable-stringify	plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "2.x",$/;"	s	object:dependencies.ts-jest.requires
fast-json-stable-stringify	plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "^2.0.0",$/;"	s	object:dependencies.@jest/transform.requires
fast-json-stable-stringify	plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "^2.0.0",$/;"	s	object:dependencies.ajv.requires
fast-json-stable-stringify	plugged/coc.nvim/package-lock.json	/^    "fast-json-stable-stringify": {$/;"	o	object:dependencies
fast-levenshtein	plugged/coc.nvim/package-lock.json	/^            "fast-levenshtein": "~2.0.6",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
fast-levenshtein	plugged/coc.nvim/package-lock.json	/^        "fast-levenshtein": "^2.0.6",$/;"	s	object:dependencies.optionator.requires
fast-levenshtein	plugged/coc.nvim/package-lock.json	/^    "fast-levenshtein": {$/;"	o	object:dependencies
fastq	plugged/coc.nvim/package-lock.json	/^        "fastq": "^1.6.0"$/;"	s	object:dependencies.@nodelib/fs.walk.requires
fastq	plugged/coc.nvim/package-lock.json	/^    "fastq": {$/;"	o	object:dependencies
fb-watchman	plugged/coc.nvim/package-lock.json	/^        "fb-watchman": "^2.0.0",$/;"	s	object:dependencies.jest-haste-map.requires
fb-watchman	plugged/coc.nvim/package-lock.json	/^        "fb-watchman": "^2.0.0",$/;"	s	object:dependencies.sane.requires
fb-watchman	plugged/coc.nvim/package-lock.json	/^    "fb-watchman": {$/;"	o	object:dependencies
fd	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
fd	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) fd() int {$/;"	f	unknown:tui.LightRenderer	typeref:typename:int
feed	plugged/fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f	struct:fzf.Reader
feed	plugged/nvim-ts-autotag/tests/closetag_spec.lua	/^function helpers.feed(text, feed_opts)$/;"	f	unknown:helpers
feed	plugged/nvim-ts-autotag/tests/renametag_spec.lua	/^function helpers.feed(text, feed_opts)$/;"	f	unknown:helpers
feed	plugged/telescope.nvim/lua/tests/helpers.lua	/^  local feed = function(text, feed_opts)$/;"	f
fennel	plugged/nvim-treesitter/lockfile.json	/^  "fennel": {$/;"	o
ff	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
ffe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
fg	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
fg	plugged/fzf/src/ansi.go	/^	fg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
fg	plugged/fzf/src/tui/light.go	/^	fg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
fg	plugged/fzf/src/tui/tui.go	/^	fg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
fge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
fi	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
field	plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
field	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:field() end$/;"	f	unknown:TSRange
file	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
file	plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	plugged/fzf/src/terminal.go	/^	file          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
file	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.file = function(p)$/;"	f	unknown:parse
file-entry-cache	plugged/coc.nvim/package-lock.json	/^        "file-entry-cache": "^6.0.0",$/;"	s	object:dependencies.eslint.requires
file-entry-cache	plugged/coc.nvim/package-lock.json	/^    "file-entry-cache": {$/;"	o	object:dependencies
file_browser	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.file_browser = function(opts)$/;"	f	unknown:files
file_edit	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.file_edit(prompt_bufnr)$/;"	f	unknown:actions
file_info	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.file_info = function(self, file)$/;"	f	unknown:Obj
file_lines	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.file_lines(file)$/;"	f	unknown:M
file_maker	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.file_maker = function(filepath, bufnr, opts)$/;"	f	unknown:previewers
file_new	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function file_new(cwd, name)$/;"	f
file_split	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.file_split(prompt_bufnr)$/;"	f	unknown:actions
file_tab	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.file_tab(prompt_bufnr)$/;"	f	unknown:actions
file_vsplit	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.file_vsplit(prompt_bufnr)$/;"	f	unknown:actions
fileformat component options	plugged/lualine.nvim/README.md	/^#### fileformat component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
filename	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      filename = function(t)$/;"	f
filename component options	plugged/lualine.nvim/README.md	/^#### filename component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
files	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.files = function(opts)$/;"	f	unknown:git
files_changed	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Repo.files_changed = function(self)$/;"	f	unknown:Repo
filesize	plugged/lualine.nvim/lua/lualine/components/filesize.lua	/^local function filesize()$/;"	f
filesize_hook	plugged/telescope.nvim/lua/telescope/config.lua	/^                              filesize_hook = function(filepath, bufnr, opts)$/;"	f
filetype component options	plugged/lualine.nvim/README.md	/^#### filetype component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
filetype_hook	plugged/telescope.nvim/lua/telescope/config.lua	/^                              filetype_hook = function(filepath, bufnr, opts)$/;"	f
filetypes	coc-settings.json	/^            "filetypes": [$/;"	a	object:languageserver.racket
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {$/;"	o	object:definitions.languageServerBase.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerCommand.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerModule.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerSocket.properties
filetypes	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.filetypes = function(opts)$/;"	f	unknown:internal
fill	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
fill	plugged/fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, n ColorPair, r rune) {$/;"	f	package:tui
fill-range	plugged/coc.nvim/package-lock.json	/^            "fill-range": "^4.0.0",$/;"	s	object:dependencies.sane.dependencies.braces.requires
fill-range	plugged/coc.nvim/package-lock.json	/^        "fill-range": "^7.0.1"$/;"	s	object:dependencies.braces.requires
fill-range	plugged/coc.nvim/package-lock.json	/^        "fill-range": {$/;"	o	object:dependencies.sane.dependencies
fill-range	plugged/coc.nvim/package-lock.json	/^    "fill-range": {$/;"	o	object:dependencies
fillString	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
fill_section_separator	plugged/lualine.nvim/lua/lualine.lua	/^local function fill_section_separator(status, str_checked, last_hl, sep, reverse)$/;"	f
filled	plugged/fzf/src/terminal.go	/^	filled   bool$/;"	m	struct:fzf.previewed	typeref:typename:bool
filter	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.filter(tbl, predicate)$/;"	f	unknown:M
filter	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:filter(fun)$/;"	f	unknown:Iterator
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
filter1_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local filter1_gen = function(fun, gen_x, param_x, state_x, a)$/;"	f
filter_detect	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local filter_detect = function(fun, gen_x, param_x, state_x, ...)$/;"	f
filter_diag_severity	plugged/telescope.nvim/lua/telescope/utils.lua	/^local filter_diag_severity = function(opts, severity)$/;"	f
filter_duplicates	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.filter_duplicates(array)$/;"	f	unknown:M
filter_function	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^  local function filter_function(match)$/;"	f
filter_function	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^  local function filter_function(match)$/;"	f
filter_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local filter_gen = function(param, state_x)$/;"	f
filter_invisible	plugged/bufferline.nvim/lua/bufferline.lua	/^local function filter_invisible(list)$/;"	f
filter_symbols	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.filter_symbols = function(results, opts)$/;"	f	unknown:utils
filterm_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^filterm_gen = function(fun, gen_x, param_x, state_x, ...)$/;"	f
filterm_gen_shrink	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local filterm_gen_shrink = function(fun, gen_x, param_x, state_x)$/;"	f
fin	plugged/fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f	struct:fzf.Reader
finChan	plugged/fzf/src/reader.go	/^	finChan  chan bool$/;"	m	struct:fzf.Reader	typeref:typename:chan bool
final	plugged/fzf/src/matcher.go	/^	final      bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
final	plugged/fzf/src/merger.go	/^	final   bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
final	plugged/fzf/src/terminal.go	/^	final      bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
find	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.find(list, callback)$/;"	f	unknown:M
find	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:find(val_or_fn)$/;"	f	unknown:Iterator
find	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:find()$/;"	f	unknown:Picker
find-up	plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.0.0"$/;"	s	object:dependencies.pkg-dir.requires
find-up	plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
find-up	plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.read-pkg-up.requires
find-up	plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.yargs.requires
find-up	plugged/coc.nvim/package-lock.json	/^    "find-up": {$/;"	o	object:dependencies
findFirstMatch	plugged/fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findLastMatch	plugged/fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findOffset	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
findOffset	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
find_best_match	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.find_best_match(bufnr, capture_string, query_group, filter_predicate, scoring_functio/;"	f	unknown:M
find_child_match	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function find_child_match(opts)$/;"	f
find_child_tag_node	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function find_child_tag_node(opt)$/;"	f
find_definition	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_definition(node, bufnr)$/;"	f	unknown:M
find_entry	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:find_entry(entry)$/;"	f	unknown:EntryManager
find_file	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.find_file(with_open)$/;"	f	unknown:M
find_files	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.find_files = function(opts)$/;"	f	unknown:files
find_filetype	plugged/plenary.nvim/scripts/update_filetypes_from_github.lua	/^local find_filetype = function(name, linguist_info, filetype_set)$/;"	f
find_git_dir	plugged/lualine.nvim/lua/lualine/components/branch/git_branch.lua	/^function M.find_git_dir(dir_path)$/;"	f	unknown:M
find_hunk	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.find_hunk(lnum, hunks)$/;"	f	unknown:M
find_indent	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.find_indent = function(whitespace, only_whitespace, shiftwidth, strict_tabs, list_chars)$/;"	f	unknown:M
find_nearest_hunk	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.find_nearest_hunk(lnum, hunks, forwards, wrap)$/;"	f	unknown:M
find_next_hl	plugged/lualine.nvim/lua/lualine.lua	/^local function find_next_hl(status, str_checked)$/;"	f
find_next_idx	plugged/plenary.nvim/lua/plenary/enum.lua	/^  local function find_next_idx(e, i)$/;"	f
find_node	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.find_node(nodes, fn)$/;"	f	unknown:M
find_open_windows	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.find_open_windows(comparator)$/;"	f	unknown:M
find_parent_match	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function find_parent_match(opts)$/;"	f
find_tag_node	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function find_tag_node(opt)$/;"	f
find_usages	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_usages(node, scope_node, bufnr)$/;"	f	unknown:M
find_windows_by_bufnr	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.find_windows_by_bufnr(bufnr)$/;"	f	unknown:M
findallpaths	plugged/plenary.nvim/scratch/_reference_count.lua	/^function findallpaths(obj)$/;"	f
findnth	plugged/telescope.nvim/lua/telescope/actions/utils.lua	/^local findnth = function(str, nth)$/;"	f
first	plugged/plenary.nvim/tests/plenary/async/condvar_spec.lua	/^    local first = function()$/;"	f
firstKey	plugged/fzf/src/options.go	/^func firstKey(keymap map[tui.Event]string) tui.Event {$/;"	f	package:fzf	typeref:typename:tui.Event
first_bench	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^local first_bench = async(function()$/;"	f
first_non_null	plugged/telescope.nvim/lua/telescope/config.lua	/^local function first_non_null(...)$/;"	f
first_not_nil	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.first_not_nil = function(...)$/;"	f	unknown:M
first_sibling	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  first_sibling = function(node) lib.sibling(node, -math.huge) end,$/;"	f
fish	plugged/fzf/test/test_go.rb	/^    def fish$/;"	S	class:Shell
fish	plugged/nvim-treesitter/lockfile.json	/^  "fish": {$/;"	o
fix_nl	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text:fix_nl(line)$/;"	f	unknown:Text
fix_separators	plugged/lualine.nvim/lua/lualine/config.lua	/^local function fix_separators(separators)$/;"	f
fix_zero_version	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^  local function fix_zero_version(workspace_edit)$/;"	f
fixed	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    fixed        = css(elem, "position") == "fixed";$/;"	v
fj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
flags	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
flat-cache	plugged/coc.nvim/package-lock.json	/^        "flat-cache": "^3.0.4"$/;"	s	object:dependencies.file-entry-cache.requires
flat-cache	plugged/coc.nvim/package-lock.json	/^    "flat-cache": {$/;"	o	object:dependencies
flatted	plugged/coc.nvim/package-lock.json	/^        "flatted": "^2.0.1",$/;"	s	object:dependencies.log4js.requires
flatted	plugged/coc.nvim/package-lock.json	/^        "flatted": "^3.1.0",$/;"	s	object:dependencies.flat-cache.requires
flatted	plugged/coc.nvim/package-lock.json	/^        "flatted": {$/;"	o	object:dependencies.flat-cache.dependencies
flatted	plugged/coc.nvim/package-lock.json	/^    "flatted": {$/;"	o	object:dependencies
flatten	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:flatten()$/;"	f	unknown:Iterator
flatten_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local flatten_gen = function(_, state)$/;"	f
flatten_gen1	plugged/plenary.nvim/lua/plenary/iterators.lua	/^  flatten_gen1 = function(state, state_x, ...)$/;"	f
float	plugged/coc.nvim/data/schema.json	/^    "float": {$/;"	o	object:definitions
float32	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
float64	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
floordiv	plugged/plenary.nvim/lua/plenary/operators.lua	/^  floordiv = function(a, b)$/;"	f
flush	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:c
flush	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
flush	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f	unknown:tui.LightRenderer
fme	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
fmt	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^        fmt = function(data)$/;"	f
fmt_boolean	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_boolean(arg)$/;"	f
fmt_function	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_function(arg)$/;"	f
fmt_nil	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_nil(arg)$/;"	f
fmt_number	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_number(arg)$/;"	f
fmt_string	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_string(arg)$/;"	f
fmt_table	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_table(arg, fmtargs)$/;"	f
fmt_thread	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_thread(arg)$/;"	f
fmt_userdata	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function fmt_userdata(arg)$/;"	f
fn	plugged/coc.nvim/build/index.js	/^`),_.log(`Received request '${P.method} - (${P.id})'.`,z)}else to("receive-request",P)}function /;"	f
fn	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
fn	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	jQuery.fn[ name ] = function( selector ) {$/;"	f	function:jQuery
fn	plugged/plenary.nvim/tests/plenary/async/util_spec.lua	/^      local fn = function()$/;"	f
fn_command	plugged/telescope.nvim/lua/telescope/WIP.lua	/^      fn_command = function()$/;"	f
fn_command	plugged/telescope.nvim/lua/telescope/finders.lua	/^    fn_command = function()$/;"	f
fn_command	plugged/telescope.nvim/lua/telescope/finders/async_job_finder.lua	/^  local fn_command = function(prompt)$/;"	f
fn_command	plugged/telescope.nvim/scratch/piped_to_fzf.lua	/^    fn_command = function(_, prompt)$/;"	f
focus	plugged/fzf/test/test_go.rb	/^  def focus$/;"	f	class:Tmux
focus	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.focus()$/;"	f	unknown:M
focus	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.focus(winnr, open_if_closed)$/;"	f	unknown:M
focus_file	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function focus_file(file)$/;"	f
focusable	plugged/coc.nvim/data/schema.json	/^        "focusable": {$/;"	o	object:definitions.float.properties
focusable	plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
focusable	plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.hover.floatConfig.properties
focusable	plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.signature.floatConfig.properties
focusable	plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.suggest.floatConfig.properties
fold	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.fold(accum, callback, list)$/;"	f	unknown:M
folder	plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
folds_levels	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^local folds_levels = tsutils.memoize_by_buf_tick(function(bufnr)$/;"	f
follow	plugged/fzf/src/options.go	/^	follow      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
follow-redirects	plugged/coc.nvim/package-lock.json	/^    "follow-redirects": {$/;"	o	object:dependencies
following	plugged/fzf/src/terminal.go	/^	following  bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
foo	plugged/nvim-treesitter/tests/indent/c/comment.c	/^void foo(int *x, int y) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^struct foo {$/;"	s	file:
foo	plugged/nvim-treesitter/tests/indent/c/cond.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/enum.c	/^enum foo {$/;"	g	file:
foo	plugged/nvim-treesitter/tests/indent/c/expr.c	/^void foo(int x, int y)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/label.c	/^int foo(int x)$/;"	f	typeref:typename:int
foo	plugged/nvim-treesitter/tests/indent/c/loop.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/no_braces.c	/^int foo(int x) {$/;"	f	typeref:typename:int
foo	plugged/nvim-treesitter/tests/indent/c/preproc_cond.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/preproc_func.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/struct.c	/^struct foo {$/;"	s	file:
foo	plugged/nvim-treesitter/tests/indent/c/switch.c	/^void foo(int x) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/ternary.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/cpp/stream.cpp	/^void foo(int x) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/lua/func.lua	/^function foo(x)$/;"	f
foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    def foo(self):$/;"	m	class:Foo
foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^def foo(x):$/;"	f
foo	plugged/nvim-treesitter/tests/indent/python/branches.py	/^def foo(x, y):$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/array.rs	/^fn foo() {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/comment.rs	/^fn foo(x: i32, y: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/cond.rs	/^fn foo(mut x: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/func.rs	/^fn foo($/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/func.rs	/^fn foo() -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^    fn foo() -> i32 {$/;"	P	implementation:Foo
foo	plugged/nvim-treesitter/tests/indent/rust/loop.rs	/^fn foo(mut x: i32) {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/macro.rs	/^macro_rules! foo {$/;"	M
foo	plugged/nvim-treesitter/tests/indent/rust/match.rs	/^fn foo(x: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/mod.rs	/^mod foo {$/;"	n
foo	plugged/nvim-treesitter/tests/indent/rust/string.rs	/^fn foo() {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^fn foo<T>(t: T) -> i32 where$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^fn foo<T>(t: T) -> i32$/;"	f
foo	plugged/vim-blade/test.blade.php	/^<?php if($foo='bar' ) { $something() } ?>$/;"	v
for-in	plugged/coc.nvim/package-lock.json	/^        "for-in": "^1.0.2",$/;"	s	object:dependencies.mixin-deep.requires
for-in	plugged/coc.nvim/package-lock.json	/^    "for-in": {$/;"	o	object:dependencies
forEach	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
for_each	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.for_each(list, callback, matcher)$/;"	f	unknown:M
for_each	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:for_each(fn)$/;"	f	unknown:Iterator
forceBlack	plugged/fzf/src/tui/light.go	/^	forceBlack    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
forceBlack	plugged/fzf/src/tui/tui.go	/^	forceBlack   bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
forget	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  permit.forget = function(self_permit)$/;"	f	unknown:permit
forget	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  permit.forget = function(self_permit)$/;"	f	unknown:permit
form	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.form = function(t)$/;"	f	unknown:parse
form-data	plugged/coc.nvim/package-lock.json	/^        "form-data": "^3.0.0",$/;"	s	object:dependencies.jsdom.requires
form-data	plugged/coc.nvim/package-lock.json	/^    "form-data": {$/;"	o	object:dependencies
format	plugged/github-nvim-theme/Makefile	/^format:$/;"	t
format	plugged/lualine.nvim/Makefile	/^format:$/;"	t
format	plugged/plenary.nvim/lua/luassert/assert.lua	/^  format = function(self, args)$/;"	f
format	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function format(val)$/;"	f
format	plugged/plenary.nvim/lua/luassert/formatters/binarystring.lua	/^local format = function (str)$/;"	f
format	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function format(val)$/;"	f
format_argument	plugged/plenary.nvim/lua/luassert/state.lua	/^state.format_argument = function(val, s, fmtargs)$/;"	f	unknown:state
format_highlight	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.format_highlight(highlight_group, is_focused)$/;"	f	unknown:M
format_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function format_indent(arg, fmtargs)$/;"	f
format_name	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function format_name(name)$/;"	f
format_results	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.format_results = function(res)$/;"	f	unknown:mod
format_tabline	plugged/bufferline.nvim/tests/utils.lua	/^function M.format_tabline(str)$/;"	f	unknown:M
formatterPriority	plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {$/;"	o	object:definitions.languageServerBase.properties
formatterPriority	plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerCommand.properties
formatterPriority	plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerModule.properties
formatterPriority	plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerSocket.properties
fortran	plugged/nvim-treesitter/lockfile.json	/^  "fortran": {$/;"	o
forward	plugged/fzf/src/pattern.go	/^	forward       bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
forward_list_gen	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^local function forward_list_gen(param, state)$/;"	f
fp	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
fr	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
fragment-cache	plugged/coc.nvim/package-lock.json	/^            "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
fragment-cache	plugged/coc.nvim/package-lock.json	/^        "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.extglob.requires
fragment-cache	plugged/coc.nvim/package-lock.json	/^        "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.nanomatch.requires
fragment-cache	plugged/coc.nvim/package-lock.json	/^    "fragment-cache": {$/;"	o	object:dependencies
freeSocket	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunctionaf1e5c4a33e00.e
freeze	plugged/plenary.nvim/lua/plenary/tbl.lua	/^function tbl.freeze(t)$/;"	f	unknown:tbl
from	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
from_coc	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^local function from_coc()$/;"	f
from_fun	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local from_fun = function(fun)$/;"	f
from_iter	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List.from_iter(iter)$/;"	f	unknown:List
from_linear	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.from_linear = function(c)$/;"	f	unknown:hsluv
from_linear	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.from_linear = function(c)$/;"	f	unknown:hsluv
from_linear	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.from_linear = function(c)$/;"	f	unknown:hsluv
from_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_nodes(buf, start_node, end_node)$/;"	f	unknown:TSRange
from_num	plugged/plenary.nvim/lua/plenary/enum.lua	/^function Enum:from_num(num)$/;"	f	unknown:Enum
from_nvim_lsp	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^local function from_nvim_lsp()$/;"	f
from_str	plugged/plenary.nvim/lua/plenary/enum.lua	/^function Enum:from_str(key)$/;"	f	unknown:Enum
from_table	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_table(buf, range)$/;"	f	unknown:TSRange
fs	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	c
fs	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
fs-extra	plugged/coc.nvim/package-lock.json	/^        "fs-extra": "^8.1.0"$/;"	s	object:dependencies.streamroller.requires
fs-extra	plugged/coc.nvim/package-lock.json	/^        "fs-extra": {$/;"	o	object:dependencies.streamroller.dependencies
fs-extra	plugged/coc.nvim/package-lock.json	/^    "fs-extra": {$/;"	o	object:dependencies
fs-minipass	plugged/coc.nvim/package-lock.json	/^        "fs-minipass": "^2.0.0",$/;"	s	object:dependencies.tar.requires
fs-minipass	plugged/coc.nvim/package-lock.json	/^    "fs-minipass": {$/;"	o	object:dependencies
fs.realpath	plugged/coc.nvim/package-lock.json	/^        "fs.realpath": "^1.0.0",$/;"	s	object:dependencies.glob.requires
fs.realpath	plugged/coc.nvim/package-lock.json	/^    "fs.realpath": {$/;"	o	object:dependencies
fsevents	plugged/coc.nvim/package-lock.json	/^        "fsevents": "^2.1.2",$/;"	s	object:dependencies.jest-haste-map.requires
fsevents	plugged/coc.nvim/package-lock.json	/^        "fsevents": "~2.1.2",$/;"	s	object:dependencies.chokidar.requires
fsevents	plugged/coc.nvim/package-lock.json	/^    "fsevents": {$/;"	o	object:dependencies
ft	plugged/bufferline.nvim/tests/offset_spec.lua	/^    local ft = open_test_panel("H", filetype, function()$/;"	f
ft	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^  local function ft(t, l, with_crumbs)$/;"	f
ft_to_lang	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.ft_to_lang(ft)$/;"	f	unknown:M
fu	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
fugitive_branch	plugged/lualine.nvim/lua/lualine/extensions/fugitive.lua	/^local function fugitive_branch()$/;"	f
full_path	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function full_path(path)$/;"	f
fullscreen	plugged/fzf/src/terminal.go	/^	fullscreen   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
fullscreen	plugged/fzf/src/tui/light.go	/^	fullscreen    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
fun	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^  opts.fun = type(opts.fun) == "function" and { opts.fun } or opts.fun$/;"	f	unknown:opts
func	plugged/which-key.nvim/lua/which-key/init.lua	/^  local func = Keys.functions[id]$/;"	f
funcReport	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^    local funcReport = functionReport(information)$/;"	f
function	plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
function components now receive some default parameters	plugged/lualine.nvim/BREAKING_CHANGES.md	/^### function components now receive some default parameters$/;"	S
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1"$/;"	s	object:dependencies.has.requires
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1"$/;"	s	object:dependencies.promise.prototype.finally.requires
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.call-bind.requires
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.get-intrinsic.requires
function-bind	plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.unbox-primitive.requires
function-bind	plugged/coc.nvim/package-lock.json	/^    "function-bind": {$/;"	o	object:dependencies
functionReport	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^local function functionReport(information)$/;"	f
function_name:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  function_name: (_) @function)$/;"	f
function_name:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  function_name: (sym_lit) @definition.function (#set! definition.function.scope "parent"))$/;"	f
functional-red-black-tree	plugged/coc.nvim/package-lock.json	/^        "functional-red-black-tree": "^1.0.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
functional-red-black-tree	plugged/coc.nvim/package-lock.json	/^        "functional-red-black-tree": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
functional-red-black-tree	plugged/coc.nvim/package-lock.json	/^    "functional-red-black-tree": {$/;"	o	object:dependencies
future	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^    local function future(step)$/;"	f
future	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.future = function(func)$/;"	f	unknown:M
fuzzy	plugged/fzf/src/pattern.go	/^	fuzzy         bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fuzzyAlgo	plugged/fzf/src/pattern.go	/^	fuzzyAlgo     algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:algo.Algo
fuzzy_with_index_bias	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.fuzzy_with_index_bias = function(opts)$/;"	f	unknown:sorters
fv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
fw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
fx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
fx	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fx.prototype = {$/;"	c	class:jQuery
fy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
fzf	plugged/fzf/main.go	/^	fzf "github.com\/junegunn\/fzf\/src"$/;"	P	package:github.com/junegunn/fzf/src
fzf	plugged/fzf/man/man1/fzf.1	/^.TH fzf 1 "Nov 2021" "fzf 0.28.0" "fzf - a command-line fuzzy finder"$/;"	t
fzf	plugged/fzf/src/ansi.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/cache.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/constants.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/core.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/history.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/history_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/item.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/item_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/matcher.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/merger.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/options.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/options_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/pattern.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/reader.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_others.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	plugged/fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	plugged/fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf :heart: vim	plugged/fzf.vim/README.md	/^fzf :heart: vim$/;"	c
fzf inside terminal buffer	plugged/fzf/README-VIM.md	/^### fzf inside terminal buffer$/;"	S	section:FZF Vim integration""Tips
fzf!	plugged/fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#exec	plugged/fzf/plugin/fzf.vim	/^function! fzf#exec(...)$/;"	f
fzf#install	plugged/fzf/plugin/fzf.vim	/^function! fzf#install()$/;"	f
fzf#run	plugged/fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	plugged/fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#vim#_buflisted_sorted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...) range$/;"	f
fzf#vim#buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...) range$/;"	f
fzf#vim#complete	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#wrap	plugged/fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf-cd-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-cd-widget() {$/;"	f
fzf-completion	plugged/fzf/shell/completion.zsh	/^fzf-completion() {$/;"	f
fzf-file-widget	plugged/fzf/shell/key-bindings.bash	/^fzf-file-widget() {$/;"	f
fzf-file-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-file-widget() {$/;"	f
fzf-history-widget	plugged/fzf/shell/key-bindings.zsh	/^fzf-history-widget() {$/;"	f
fzf-tmux	plugged/fzf/man/man1/fzf-tmux.1	/^.TH fzf-tmux 1 "Nov 2021" "fzf 0.28.0" "fzf-tmux - open fzf in tmux split pane"$/;"	t
fzf.on_exit	plugged/fzf/plugin/fzf.vim	/^      function! fzf.on_exit(job_id, exit_status, event) dict$/;"	f
fzf.on_exit	plugged/fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf.switch_back	plugged/fzf/plugin/fzf.vim	/^  function! fzf.switch_back(inplace)$/;"	f
fzf_base	plugged/fzf/install.ps1	/^$fzf_base=Split-Path -Parent $MyInvocation.MyCommand.Definition$/;"	v
fzf_buffers	plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_popd	plugged/fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_statusline	plugged/lualine.nvim/lua/lualine/extensions/fzf.lua	/^local function fzf_statusline()$/;"	f
fzf_swap	plugged/fzf/plugin/fzf.vim	/^    augroup fzf_swap$/;"	a
g	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
g	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
g	plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
g	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
g	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
g	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
g	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
g$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
g0	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
g4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
g5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
g6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
g7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
g8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
g9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
g:	plugged/emmet-vim/unittest.vim	/^            let g:[opt] = oldoptions[opt]$/;"	v
g:	plugged/emmet-vim/unittest.vim	/^          let g:[opt] = options[opt]$/;"	v
g:	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:AutoPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":/;"	v
g:AutoPairsCenterLine	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:DrChipTopLvlMenu	RltvNmbr.vim	/^ let g:DrChipTopLvlMenu= "DrChip."$/;"	v
g:DrChipTopLvlMenu	RltvNmbrPlugin.vim	/^  let g:DrChipTopLvlMenu= "DrChip."$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:__fzf_command	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:_webdevicons_airline_orig_formatter = get(g:, 'airline#extensions#tabline#formatter', 'd/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette = {}$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.accents = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.ctrlp =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.inactive =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.inactive_modified = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.insert =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.insert_modified = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.insert_paste = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.normal =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.normal_modified = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.replace =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.replace_modified = {$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.visual =$/;"	v
g:airline#themes#ayu#palette	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let g:airline#themes#ayu#palette.visual_modified =$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette = {}$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.inactive = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.insert_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.normal_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.replace = airline#themes#generate_color_map($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.replace_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.visual_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette = {}$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.inactive = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.insert = airline#themes#generate_color_map ($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.insert_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.normal = airline#themes#generate_color_map ($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.normal_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.replace = airline#themes#generate_color_map /;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.replace_modified = {$/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.visual = airline#themes#generate_color_map ($/;"	v
g:airline#themes#base16_	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let g:airline#themes#base16_{s:scheme_slug}#palette.visual_modified = {$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette = {}$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.inactive = airline#themes#generate_color_map(s:IAMain, s:IARig/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.inactive.airline_error = s:IAError$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.inactive.airline_term = s:IAMiddle$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.inactive.airline_warning = s:IAWarn$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.insert = airline#themes#generate_color_map(s:IMain, s:IRight, /;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.insert.airline_error = s:IError$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.insert.airline_term = s:IMiddle$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.insert.airline_warning = s:IWarn$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.normal = airline#themes#generate_color_map(s:NMain, s:NRight, /;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.normal.airline_error = s:NError$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.normal.airline_term = s:NMiddle$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.normal.airline_warning = s:NWarn$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.replace = airline#themes#generate_color_map(s:RMain, s:RRight,/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.replace.airline_error = s:RError$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.replace.airline_term = s:RMiddle$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.replace.airline_warning = s:RWarn$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.visual = airline#themes#generate_color_map(s:VMain, s:VRight, /;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.visual.airline_error = s:VError$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.visual.airline_term = s:VMiddle$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.visual.airline_warning = s:VWarn$/;"	v
g:aqua_bold	plugged/aquarium-vim/colors/aquarium.vim	/^  let g:aqua_bold = 1$/;"	v
g:aqua_line	plugged/aquarium-vim/colors/aquarium.vim	/^    let g:aqua_line = 0$/;"	v
g:aqua_linenr	plugged/aquarium-vim/colors/aquarium.vim	/^    let g:aqua_linenr = 0$/;"	v
g:aqua_transparency	plugged/aquarium-vim/colors/aquarium.vim	/^    let g:aqua_transparency = 0$/;"	v
g:autoloaded_startify	plugged/vim-startify/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:blade_custom_directives	plugged/vim-blade/vimrc	/^let g:blade_custom_directives = ['datetime', 'namespaced::directive']$/;"	v
g:blade_custom_directives_pairs	plugged/vim-blade/vimrc	/^let g:blade_custom_directives_pairs = {'cache': 'endcache'}$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_autodismiss_on_select = 0$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_autodismiss_on_select = 1$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autodismiss_on_select = 1$/;"	v
g:buffergator_autoexpand_on_split	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autoexpand_on_split = 1$/;"	v
g:buffergator_autoupdate	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autoupdate = 0$/;"	v
g:buffergator_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_display_regime = "basename"$/;"	v
g:buffergator_hsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_hsplit_size = 20$/;"	v
g:buffergator_hsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_hsplit_size = g:buffergator_split_size$/;"	v
g:buffergator_move_wrap	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_move_wrap = 1$/;"	v
g:buffergator_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^            let g:buffergator_mru = []$/;"	v
g:buffergator_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:buffergator_mru = []$/;"	v
g:buffergator_mru_cycle_local_to_window	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_mru_cycle_local_to_window = 1$/;"	v
g:buffergator_mru_cycle_loop	plugged/vim-buffergator/plugin/buffergator.vim	/^    let g:buffergator_mru_cycle_loop = 1$/;"	v
g:buffergator_remap_arrow_keys	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_remap_arrow_keys = 0$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_show_full_directory_path = 0$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_show_full_directory_path = 1$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_show_full_directory_path = 1$/;"	v
g:buffergator_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_sort_regime = "bufnum"$/;"	v
g:buffergator_tab_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_tab_statusline = 1$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_track_mru = 0$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_track_mru = 1$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:buffergator_track_mru = 1$/;"	v
g:buffergator_viewport_split_policy	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_viewport_split_policy = s:buffergator_viewport_split_modes_cycle_l/;"	v
g:buffergator_viewport_split_policy	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_viewport_split_policy = "L"$/;"	v
g:buffergator_vsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_vsplit_size = 40$/;"	v
g:buffergator_vsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_vsplit_size = g:buffergator_split_size$/;"	v
g:buffergator_window_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_window_statusline = 1$/;"	v
g:clap#themes#aquarium#palette	plugged/aquarium-vim/colors/aquarium.vim	/^let g:clap#themes#aquarium#palette = s:palette$/;"	v
g:clap_fuzzy_match_hl_groups	plugged/aquarium-vim/colors/aquarium.vim	/^let g:clap_fuzzy_match_hl_groups = [$/;"	v
g:clap_theme	plugged/aquarium-vim/colors/aquarium.vim	/^let g:clap_theme = 'aquarium'$/;"	v
g:closetag_filenames	init.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.php'$/;"	v
g:closetag_filenames	plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_filenames = substitute(g:closetag_filenames, '\\s*,\\s\\+', ',', 'g')$/;"	v
g:closetag_filetypes	plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_filetypes = substitute(g:closetag_filetypes, '\\s*,\\s\\+', ',', 'g')$/;"	v
g:closetag_xhtml_filenames	plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_xhtml_filenames = substitute(g:closetag_xhtml_filenames, '\\s*,\\s\\+', ',', /;"	v
g:closetag_xhtml_filetypes	plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_xhtml_filetypes = substitute(g:closetag_xhtml_filetypes, '\\s*,\\s\\+', ',', /;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^    let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^  let g:coc#_context = {$/;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc_enabled	plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 0$/;"	v
g:coc_enabled	plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 1$/;"	v
g:coc_explorer_global_presets	init.vim	/^let g:coc_explorer_global_presets = {$/;"	v
g:coc_global_extensions	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_last_float_win	plugged/coc.nvim/autoload/coc/float.vim	/^  let g:coc_last_float_win = winid$/;"	v
g:coc_last_hover_message	plugged/coc.nvim/autoload/coc/util.vim	/^  let g:coc_last_hover_message = a:msg$/;"	v
g:coc_selected_text	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_user_config	plugged/coc.nvim/autoload/coc.vim	/^  let g:coc_user_config[a:section] = a:value$/;"	v
g:coc_user_config	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:colors_name	plugged/ayu-vim/colors/ayu.vim	/^let g:colors_name = "ayu"$/;"	v
g:colors_name	plugged/nord-vim/colors/nord.vim	/^let g:colors_name = "nord"$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/aurora.vim	/^let g:colors_name='aurora'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/dracula.vim	/^let g:colors_name='dracula'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/lunar.vim	/^let g:colors_name='lunar'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/metanoia.vim	/^let g:colors_name='metanoia'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/nord.vim	/^let g:colors_name='nord'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/nvcode.vim	/^let g:colors_name='nvcode'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/onedark.vim	/^let g:colors_name='onedark'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/palenight.vim	/^let g:colors_name='palenight'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/snazzy.vim	/^let g:colors_name='snazzy'$/;"	v
g:colors_name	plugged/nvcode-color-schemes.vim/colors/xoria.vim	/^let g:colors_name='xoria'$/;"	v
g:colors_name	plugged/uwu.vim/colors/uwu.vim	/^let g:colors_name = "uwu"$/;"	v
g:ctrlp_formatline_func	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:did_buffergator	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:did_buffergator = 1$/;"	v
g:did_coc_loaded	plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:easy_replace_add_history	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_add_history =$/;"	v
g:easy_replace_enable	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_enable =$/;"	v
g:easy_replace_highlight_ctermbg	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_highlight_ctermbg =$/;"	v
g:easy_replace_highlight_guibg	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_highlight_guibg =$/;"	v
g:easy_replace_launch_cword_in_visual_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_launch_cword_in_visual_key =$/;"	v
g:easy_replace_launch_cword_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_launch_cword_key =$/;"	v
g:easy_replace_launch_in_visual_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_launch_in_visual_key =$/;"	v
g:easy_replace_launch_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:easy_replace_launch_key =$/;"	v
g:emmet_curl_command	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:fzf#vim#buffers	plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:gutentags_add_ctrlp_root_markers	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:indent_blankline_bufname_exclude	init.vim	/^ let g:indent_blankline_bufname_exclude = ['NvimTree','coc-explorer','tagbar']$/;"	v
g:indent_blankline_char	init.vim	/^let g:indent_blankline_char = '▏'$/;"	v
g:indent_blankline_enabled	init.vim	/^let g:indent_blankline_enabled = v:false$/;"	v
g:indent_blankline_filetype_exclude	init.vim	/^ let g:indent_blankline_filetype_exclude =['help', 'NvimTree', 'coc-explorer', 'tagbar', 'toggle/;"	v
g:indent_blankline_use_treesitter	init.vim	/^let g:indent_blankline_use_treesitter= v:true$/;"	v
g:lightline#colorscheme#aquarium#palette	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let g:lightline#colorscheme#aquarium#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#ayu#palette	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let g:lightline#colorscheme#ayu#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#tokyonight#palette	plugged/tokyonight.nvim/autoload/lightline/colorscheme/tokyonight.vim	/^let g:lightline#colorscheme#tokyonight#palette = lightline#colorscheme#fill(s:palette)$/;"	v
g:loaded_RltvNmbr	RltvNmbr.vim	/^let g:loaded_RltvNmbr = "v4b"$/;"	v
g:loaded_RltvNmbrPlugin	RltvNmbrPlugin.vim	/^let g:loaded_RltvNmbrPlugin = "v4b"$/;"	v
g:loaded_autoload_easy_replace	plugged/vim-easy-replace/autoload/easy_replace.vim	/^let g:loaded_autoload_easy_replace = 1$/;"	v
g:loaded_bbye	plugged/vim-bbye/plugin/bbye.vim	/^let g:loaded_bbye = 1$/;"	v
g:loaded_commentary	plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_cool	plugged/vim-cool/plugin/cool.vim	/^let g:loaded_cool = 1$/;"	v
g:loaded_devicons	plugged/nvim-web-devicons/plugin/nvim-web-devicons.vim	/^let g:loaded_devicons = 1$/;"	v
g:loaded_easy_replace	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let g:loaded_easy_replace = 1$/;"	v
g:loaded_emmet_vim	plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fzf	plugged/fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_fzf_vim	plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_indent_blankline	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^let g:loaded_indent_blankline = 1$/;"	v
g:loaded_nvim_treesitter	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let g:loaded_nvim_treesitter = 1$/;"	v
g:loaded_startify	plugged/vim-startify/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_telescope	plugged/telescope.nvim/plugin/telescope.vim	/^let g:loaded_telescope = 1$/;"	v
g:loaded_tmux_navigator	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let g:loaded_tmux_navigator = 1$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:netrw_banner	init.vim	/^let g:netrw_banner      = 0$/;"	v
g:netrw_keepdir	init.vim	/^let g:netrw_keepdir     = 0$/;"	v
g:netrw_localcopydircmd	init.vim	/^let g:netrw_localcopydircmd = 'cp -r'$/;"	v
g:nord_bold	plugged/nord-vim/colors/nord.vim	/^  let g:nord_bold = 1$/;"	v
g:nord_bold_vertical_split_line	plugged/nord-vim/colors/nord.vim	/^  let g:nord_bold_vertical_split_line = 0$/;"	v
g:nord_comment_brightness	plugged/nord-vim/colors/nord.vim	/^  let g:nord_comment_brightness = 10$/;"	v
g:nord_cursor_line_number_background	plugged/nord-vim/colors/nord.vim	/^  let g:nord_cursor_line_number_background = 0$/;"	v
g:nord_italic	plugged/nord-vim/colors/nord.vim	/^    let g:nord_italic = 0$/;"	v
g:nord_italic	plugged/nord-vim/colors/nord.vim	/^    let g:nord_italic = 1$/;"	v
g:nord_uniform_diff_background	plugged/nord-vim/colors/nord.vim	/^  let g:nord_uniform_diff_background = 0$/;"	v
g:nord_uniform_status_lines	plugged/nord-vim/colors/nord.vim	/^  let g:nord_uniform_status_lines = 0$/;"	v
g:nvim_web_devicons	plugged/nvim-web-devicons/plugin/nvim-web-devicons.vim	/^let g:nvim_web_devicons = 1$/;"	v
g:startify_bookmarks	init.vim	/^let g:startify_bookmarks = [ $/;"	v
g:startify_change_cmd	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_change_cmd = 'lcd'$/;"	v
g:startify_change_cmd	plugged/vim-startify/autoload/startify.vim	/^  let g:startify_change_cmd = get(g:, 'startify_change_cmd', 'lcd')$/;"	v
g:startify_change_to_dir	init.vim	/^let g:startify_change_to_dir = 1$/;"	v
g:startify_commands	init.vim	/^let g:startify_commands = [$/;"	v
g:startify_custom_header	init.vim	/^let g:startify_custom_header = [$/;"	v
g:startify_custom_header	plugged/vim-startify/test/vimrc	/^let g:startify_custom_header = []$/;"	v
g:startify_custom_header_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_custom_header_quotes = exists('g:startify_custom_header_quotes')$/;"	v
g:startify_enable_special	plugged/vim-startify/autoload/startify.vim	/^let g:startify_enable_special = get(g:, 'startify_enable_special', 1)$/;"	v
g:startify_files_number	init.vim	/^let g:startify_files_number = 5$/;"	v
g:startify_files_number	plugged/vim-startify/autoload/startify.vim	/^let g:startify_files_number = get(g:, 'startify_files_number', 10)$/;"	v
g:startify_fortune_use_unicode	plugged/vim-startify/autoload/startify/fortune.vim	/^let g:startify_fortune_use_unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unico/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_header += ['']  " add blank line$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^  let g:startify_header = exists('g:startify_custom_header')$/;"	v
g:startify_lists	init.vim	/^let g:startify_lists = [$/;"	v
g:startify_locked	plugged/vim-startify/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:startify_padding_left	init.vim	/^let g:startify_padding_left = 4$/;"	v
g:startify_padding_left	plugged/vim-startify/autoload/startify.vim	/^let g:startify_padding_left = get(g:, 'startify_padding_left', 3)$/;"	v
g:startify_relative_path	plugged/vim-startify/autoload/startify.vim	/^let g:startify_relative_path = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
g:startify_relative_path	plugged/vim-startify/test/vimrc	/^let g:startify_relative_path = 1$/;"	v
g:startify_session_autoload	init.vim	/^let g:startify_session_autoload = 0$/;"	v
g:startify_session_before_save	init.vim	/^let g:startify_session_before_save = ['silent! tabdo NvimTreeClose',]$/;"	v
g:startify_session_delete_buffers	init.vim	/^let g:startify_session_delete_buffers = 1$/;"	v
g:startify_session_dir	init.vim	/^let g:startify_session_dir = "\/home\/eb\/.config\/nvim\/sessions\/"$/;"	v
g:startify_session_dir	init.vim	/^let g:startify_session_dir = "\/home\/eb\/.config\/nvim\/stsessions\/"$/;"	v
g:startify_session_dir	plugged/vim-startify/test/vimrc	/^let g:startify_session_dir = 'session'$/;"	v
g:startify_session_persistence	init.vim	/^let g:startify_session_persistence = 1$/;"	v
g:startify_skiplist	plugged/vim-startify/autoload/startify.vim	/^let g:startify_skiplist = extend(get(g:, 'startify_skiplist', []), [$/;"	v
g:startify_transformations	plugged/vim-startify/autoload/startify.vim	/^let g:startify_transformations = get(g:, 'startify_transformations', [])$/;"	v
g:startify_update_oldfiles	init.vim	/^let g:startify_update_oldfiles = 1$/;"	v
g:tagbar#icon_closed	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_autoclose	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_autoclose = !g:tagbar_autoclose$/;"	v
g:tagbar_case_insensitive	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_case_insensitive = !g:tagbar_case_insensitive$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^                let g:tagbar_ctags_bin = ctags$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_height	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_height = g:tagbar_vertical$/;"	v
g:tagbar_hide_nonpublic	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_hide_nonpublic = !g:tagbar_hide_nonpublic$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'botright vertical'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'leftabove'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'rightbelow'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'topleft vertical'$/;"	v
g:tagbar_sort	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_sort = !g:tagbar_sort$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors += [s:palette.fg_idle[s:style], s:palette.error[s:style]]$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors += [s:palette.regexp[s:style],  "#FFFFFF"]$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors += [s:palette.regexp[s:style],  s:palette.comment[s:style]]$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors += [s:palette.string[s:style],  s:palette.accent[s:style]]$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors += [s:palette.tag[s:style],     s:palette.constant[s:style]]$/;"	v
g:terminal_ansi_colors	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_ansi_colors =  [s:palette.bg[s:style],      s:palette.markup[s:style]]$/;"	v
g:terminal_ansi_colors	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_ansi_colors = [s:nord1_gui, s:nord11_gui, s:nord14_gui, s:nord13_gui, s:nord9_g/;"	v
g:terminal_color_0	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_0 =  s:palette.bg[s:style]$/;"	v
g:terminal_color_0	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_0 = s:nord1_gui$/;"	v
g:terminal_color_1	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_1 =  s:palette.markup[s:style]$/;"	v
g:terminal_color_1	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_1 = s:nord11_gui$/;"	v
g:terminal_color_10	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_10 = s:palette.string[s:style]$/;"	v
g:terminal_color_10	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_10 = s:nord14_gui$/;"	v
g:terminal_color_11	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_11 = s:palette.accent[s:style]$/;"	v
g:terminal_color_11	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_11 = s:nord13_gui$/;"	v
g:terminal_color_12	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_12 = s:palette.tag[s:style]$/;"	v
g:terminal_color_12	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_12 = s:nord9_gui$/;"	v
g:terminal_color_13	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_13 = s:palette.constant[s:style]$/;"	v
g:terminal_color_13	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_13 = s:nord15_gui$/;"	v
g:terminal_color_14	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_14 = s:palette.regexp[s:style]$/;"	v
g:terminal_color_14	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_14 = s:nord7_gui$/;"	v
g:terminal_color_15	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_15 = s:palette.comment[s:style]$/;"	v
g:terminal_color_15	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_15 = s:nord6_gui$/;"	v
g:terminal_color_2	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_2 =  s:palette.string[s:style]$/;"	v
g:terminal_color_2	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_2 = s:nord14_gui$/;"	v
g:terminal_color_3	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_3 =  s:palette.accent[s:style]$/;"	v
g:terminal_color_3	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_3 = s:nord13_gui$/;"	v
g:terminal_color_4	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_4 =  s:palette.tag[s:style]$/;"	v
g:terminal_color_4	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_4 = s:nord9_gui$/;"	v
g:terminal_color_5	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_5 =  s:palette.constant[s:style]$/;"	v
g:terminal_color_5	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_5 = s:nord15_gui$/;"	v
g:terminal_color_6	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_6 =  s:palette.regexp[s:style]$/;"	v
g:terminal_color_6	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_6 = s:nord8_gui$/;"	v
g:terminal_color_7	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_7 =  "#FFFFFF"$/;"	v
g:terminal_color_7	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_7 = s:nord5_gui$/;"	v
g:terminal_color_8	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_8 =  s:palette.fg_idle[s:style]$/;"	v
g:terminal_color_8	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_8 = s:nord3_gui$/;"	v
g:terminal_color_9	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_9 =  s:palette.error[s:style]$/;"	v
g:terminal_color_9	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_9 = s:nord11_gui$/;"	v
g:terminal_color_background	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_foreground	plugged/ayu-vim/colors/ayu.vim	/^  let g:terminal_color_foreground = s:palette.fg[s:style]$/;"	v
g:tmux_navigator_disable_when_zoomed	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  let g:tmux_navigator_disable_when_zoomed = 0$/;"	v
g:tmux_navigator_no_mappings	init.vim	/^let g:tmux_navigator_no_mappings = 1$/;"	v
g:tmux_navigator_preserve_zoom	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  let g:tmux_navigator_preserve_zoom = 0$/;"	v
g:tmux_navigator_save_on_switch	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  let g:tmux_navigator_save_on_switch = 0$/;"	v
g:toggleterm_terminal_mapping	init.vim	/^let g:toggleterm_terminal_mapping = '<A-t>'$/;"	v
g:user_emmet_install_global	plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_install_global = s:old_user_emmet_install_global$/;"	v
g:user_emmet_leader_key	plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:user_emmet_settings	plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_settings = s:old_user_emmet_settings$/;"	v
g:user_emmet_settings	plugged/emmet-vim/unittest.vim	/^    let g:user_emmet_settings = {'variables': {'indentation': "\\t", 'use_selection': 1}}$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_startify	funcs.vim	/^let g:webdevicons_enable_startify = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
gB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
gB	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> gB :BuffergatorMruCycleNext<CR>$/;"	m
gC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
gD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
gG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
gH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
gQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gS	plugged/vim-surround/plugin/surround.vim	/^  xmap gS  <Plug>VgSurround$/;"	m
gV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
gW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
gX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
gY	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
gZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
gae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
gb	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> gb :BuffergatorMruCyclePrev<CR>$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gcc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gdscript	plugged/nvim-treesitter/lockfile.json	/^  "gdscript": {$/;"	o
ge	plugged/plenary.nvim/lua/plenary/operators.lua	/^  ge = function(a, b)$/;"	f
gee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gen_config_doc	plugged/gitsigns.nvim/gen_help.lua	/^local function gen_config_doc()$/;"	f
gen_config_doc_deprecated	plugged/gitsigns.nvim/gen_help.lua	/^local function gen_config_doc_deprecated(dep_info)$/;"	f
gen_config_doc_field	plugged/gitsigns.nvim/gen_help.lua	/^local function gen_config_doc_field(field)$/;"	f
gen_date	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local gen_date = (function()$/;"	f
gen_dump_path	plugged/plenary.nvim/lua/plenary/curl.lua	/^util.gen_dump_path = function()$/;"	f	unknown:util
gen_from_apropos	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_apropos(opts)$/;"	f	unknown:make_entry
gen_from_autocommands	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_autocommands(_)$/;"	f	unknown:make_entry
gen_from_buffer	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_buffer(opts)$/;"	f	unknown:make_entry
gen_from_buffer_lines	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_buffer_lines(opts)$/;"	f	unknown:make_entry
gen_from_commands	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_commands(_)$/;"	f	unknown:make_entry
gen_from_ctags	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_ctags(opts)$/;"	f	unknown:make_entry
gen_from_file	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  function make_entry.gen_from_file(opts)$/;"	f	unknown:make_entry
gen_from_git_commits	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_git_commits(opts)$/;"	f	unknown:make_entry
gen_from_git_stash	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_git_stash()$/;"	f	unknown:make_entry
gen_from_git_status	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_git_status(opts)$/;"	f	unknown:make_entry
gen_from_highlights	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_highlights()$/;"	f	unknown:make_entry
gen_from_lsp_diagnostics	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_lsp_diagnostics(opts)$/;"	f	unknown:make_entry
gen_from_lsp_symbols	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_lsp_symbols(opts)$/;"	f	unknown:make_entry
gen_from_marks	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_marks(_)$/;"	f	unknown:make_entry
gen_from_packages	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_packages(opts)$/;"	f	unknown:make_entry
gen_from_picker	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_picker(opts)$/;"	f	unknown:make_entry
gen_from_quickfix	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_quickfix(opts)$/;"	f	unknown:make_entry
gen_from_registers	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_registers(_)$/;"	f	unknown:make_entry
gen_from_string	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  function make_entry.gen_from_string()$/;"	f	unknown:make_entry
gen_from_treesitter	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_treesitter(opts)$/;"	f	unknown:make_entry
gen_from_vimgrep	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  function make_entry.gen_from_vimgrep(opts)$/;"	f	unknown:make_entry
gen_from_vimoptions	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^function make_entry.gen_from_vimoptions()$/;"	f	unknown:make_entry
gen_help	plugged/gitsigns.nvim/Makefile	/^gen_help:$/;"	t
gen_ls	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local gen_ls = function(data, path, opts)$/;"	f
gen_new_finder	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^  local gen_new_finder = function()$/;"	f
gen_permissions	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local gen_permissions = (function()$/;"	f
gen_search_pat	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local gen_search_pat = function(pattern)$/;"	f
gen_size	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local gen_size = (function()$/;"	f
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/alacritty.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/fish.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/kitty.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/tmux.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/wezterm.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/xfceterm.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate	plugged/tokyonight.nvim/lua/tokyonight/extra/xresources.lua	/^function M.generate(colors)$/;"	f	unknown:M
generate_file	plugged/plenary.nvim/scripts/update_vararg.py	/^def generate_file(name, outpath, **kwargs):$/;"	f
generate_filetypes	plugged/plenary.nvim/Makefile	/^generate_filetypes:$/;"	t
generate_join	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.generate_join(separator)$/;"	f	unknown:M
generate_sublists	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function generate_sublists(size)$/;"	f
gensync	plugged/coc.nvim/package-lock.json	/^        "gensync": "^1.0.0-beta.2",$/;"	s	object:dependencies.@babel/core.requires
gensync	plugged/coc.nvim/package-lock.json	/^    "gensync": {$/;"	o	object:dependencies
get	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function M.get(key)$/;"	f	unknown:M
get	plugged/bufferline.nvim/lua/bufferline/custom_area.lua	/^function M.get(prefs)$/;"	f	unknown:M
get	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^function M.get(opts)$/;"	f	unknown:M
get	plugged/bufferline.nvim/lua/bufferline/offset.lua	/^function M.get(prefs)$/;"	f	unknown:M
get	plugged/bufferline.nvim/lua/bufferline/pick.lua	/^function M.get(buf)$/;"	f	unknown:M
get	plugged/bufferline.nvim/lua/bufferline/tabpages.lua	/^function M.get(style, prefs)$/;"	f	unknown:M
get	plugged/gitsigns.nvim/lua/gitsigns/signs.lua	/^function M.get(bufnr, lnum)$/;"	f	unknown:M
get	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^    get = function(cache, params)$/;"	f
get	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function get(_, key)$/;"	f
get	plugged/nvim-spectre/lua/spectre/replace/init.lua	/^r.get = function(key)$/;"	f	unknown:r
get	plugged/nvim-spectre/lua/spectre/search/init.lua	/^s.get = function(key)$/;"	f	unknown:s
get	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.get(type_name, bufnr)$/;"	f	unknown:cache
get	plugged/onedark.nvim/lua/onedark/config.lua	/^local function get(setting, default)$/;"	f
get	plugged/telescope.nvim/lua/telescope/config.lua	/^  local function get(name, default_val)$/;"	f
get	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:get()$/;"	f	unknown:MultiSelect
get	plugged/toggleterm.nvim/lua/toggleterm/config.lua	/^function M.get(key)$/;"	f	unknown:M
get	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.get(id)$/;"	f	unknown:M
get	plugged/which-key.nvim/lua/which-key/tree.lua	/^function Tree:get(prefix, index, plugin_context)$/;"	f	unknown:Tree
get-caller-file	plugged/coc.nvim/package-lock.json	/^        "get-caller-file": "^2.0.1",$/;"	s	object:dependencies.yargs.requires
get-caller-file	plugged/coc.nvim/package-lock.json	/^    "get-caller-file": {$/;"	o	object:dependencies
get-intrinsic	plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.0.2"$/;"	s	object:dependencies.call-bind.requires
get-intrinsic	plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.0.2",$/;"	s	object:dependencies.side-channel.requires
get-intrinsic	plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.1.0",$/;"	s	object:dependencies.internal-slot.requires
get-intrinsic	plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
get-intrinsic	plugged/coc.nvim/package-lock.json	/^    "get-intrinsic": {$/;"	o	object:dependencies
get-package-type	plugged/coc.nvim/package-lock.json	/^        "get-package-type": "^0.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
get-package-type	plugged/coc.nvim/package-lock.json	/^    "get-package-type": {$/;"	o	object:dependencies
get-stream	plugged/coc.nvim/package-lock.json	/^            "get-stream": "^5.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
get-stream	plugged/coc.nvim/package-lock.json	/^        "get-stream": "^4.0.0",$/;"	s	object:dependencies.execa.requires
get-stream	plugged/coc.nvim/package-lock.json	/^        "get-stream": {$/;"	o	object:dependencies.jest-changed-files.dependencies
get-stream	plugged/coc.nvim/package-lock.json	/^    "get-stream": {$/;"	o	object:dependencies
get-value	plugged/coc.nvim/package-lock.json	/^            "get-value": "^2.0.3",$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
get-value	plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.cache-base.requires
get-value	plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.has-value.requires
get-value	plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.union-value.requires
get-value	plugged/coc.nvim/package-lock.json	/^    "get-value": {$/;"	o	object:dependencies
getBytes	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getBytesInternal	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getColor	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.getColor(color)$/;"	f	unknown:util
getColor	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.getColor(color)$/;"	f	unknown:util
getEnv	plugged/fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
getLineOffsets	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
getLineOffsets	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getRegex	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	p	class:Zse.t
getText	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
getText	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getTextEditChange	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
getWH	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			function getWH() {$/;"	f	function:AnonymousFunctionc5b93c5c2700
get_actions	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.get_actions = function()$/;"	f	unknown:M
get_adjacent	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^function M.get_adjacent(forward, node, query_string, same_parent, overlapping_range_ok, bufnr)$/;"	f	unknown:M
get_all	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.get_all(include_hidden)$/;"	f	unknown:M
get_all_entries	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.get_all_entries = function()$/;"	f	unknown:M
get_at_path	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_at_path(tbl, path)$/;"	f	unknown:M
get_best_fmt	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^  local get_best_fmt = function(time)$/;"	f
get_best_result	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_best_result = function()$/;"	f	unknown:test_helpers
get_blame_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function get_blame_hunk(repo, info)$/;"	f
get_border_size	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local get_border_size = function(opts)$/;"	f
get_bounds	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.get_bounds = function(l)$/;"	f	unknown:hsluv
get_bounds	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.get_bounds = function(l)$/;"	f	unknown:hsluv
get_bounds	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.get_bounds = function(l)$/;"	f	unknown:hsluv
get_branch	plugged/lualine.nvim/lua/lualine/components/branch/git_branch.lua	/^function M.get_branch(bufnr)$/;"	f	unknown:M
get_buf_ids	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_buf_ids(bufs)$/;"	f
get_buf_lang	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_buf_lang(bufnr)$/;"	f	unknown:M
get_buf_option	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.get_buf_option(opts)$/;"	f	unknown:M
get_buf_path	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local function get_buf_path(bufnr)$/;"	f
get_buffer_by_name	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^        get_buffer_by_name = function()$/;"	f
get_buffer_by_name	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    get_buffer_by_name = function()$/;"	f
get_buffer_by_name	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    get_buffer_by_name = function(_, entry)$/;"	f
get_buffer_highlight	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_buffer_highlight(buffer, config)$/;"	f
get_buffer_name	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_buffer_name(ctx)$/;"	f
get_buffer_of_orig	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^      local get_buffer_of_orig = function(selection)$/;"	f
get_bufnr	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local function get_bufnr(self)$/;"	f
get_bufnr	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  local function get_bufnr(self)$/;"	f
get_bufnr_by_bufname	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local function get_bufnr_by_bufname(self, value)$/;"	f
get_by_id	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.get_by_id(id)$/;"	f	unknown:M
get_byte_offset	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^local function get_byte_offset(buf, row, col)$/;"	f
get_cache_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_cache_dir()$/;"	f	unknown:M
get_capture_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_capture_matches(bufnr, captures, query_group, root, lang)$/;"	f	unknown:M
get_capture_matches_recursively	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_capture_matches_recursively(bufnr, capture_or_fn, query_type)$/;"	f	unknown:M
get_color	plugged/nvcode-color-schemes.vim/generate	/^def get_color(color)$/;"	f
get_color_avg	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function get_color_avg(rgb_color)$/;"	f
get_color_brightness	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function get_color_brightness(rgb_color)$/;"	f
get_color_distance	plugged/lualine.nvim/lua/lualine/utils/color_utils.lua	/^  local function get_color_distance(color1, color2)$/;"	f
get_color_from_hl	plugged/nvim-tree.lua/lua/nvim-tree/colors.lua	/^local function get_color_from_hl(hl_name, fallback)$/;"	f
get_colors	plugged/nvim-tree.lua/lua/nvim-tree/colors.lua	/^local function get_colors()$/;"	f
get_colors	plugged/onedarkpro.nvim/lua/onedark/init.lua	/^function M.get_colors(name)$/;"	f	unknown:M
get_colors	plugged/onedarkpro.nvim/lua/onedarkpro/init.lua	/^function M.get_colors(name)$/;"	f	unknown:M
get_command	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_command(cmd)$/;"	f
get_command	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^    get_command = function(entry)$/;"	f
get_command	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^    get_command = function(entry, status)$/;"	f
get_compare_obj	plugged/gitsigns.nvim/lua/gitsigns/cache.lua	/^CacheEntry.get_compare_obj = function(self, base)$/;"	f	unknown:CacheEntry
get_compare_text	plugged/gitsigns.nvim/lua/gitsigns/cache.lua	/^CacheEntry.get_compare_text = function(self)$/;"	f	unknown:CacheEntry
get_container	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:get_container(index)$/;"	f	unknown:EntryManager
get_context	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^local function get_context(lvl)$/;"	f
get_current_buf_index	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_current_buf_index(opts)$/;"	f
get_current_buf_line	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^local get_current_buf_line = function(winnr)$/;"	f
get_current_config	plugged/lualine.nvim/lua/lualine/config.lua	/^local function get_current_config()$/;"	f
get_current_context	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.get_current_context = function(type_patterns)$/;"	f	unknown:M
get_current_entry	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.get_current_entry = function ()$/;"	f	unknown:M
get_current_history	plugged/telescope.nvim/lua/telescope/actions/state.lua	/^function action_state.get_current_history()$/;"	f	unknown:action_state
get_current_line	plugged/telescope.nvim/lua/telescope/actions/state.lua	/^function action_state.get_current_line()$/;"	f	unknown:action_state
get_current_picker	plugged/telescope.nvim/lua/telescope/actions/state.lua	/^function action_state.get_current_picker(prompt_bufnr)$/;"	f	unknown:action_state
get_cursor	plugged/telescope.nvim/lua/telescope/themes.lua	/^function themes.get_cursor(opts)$/;"	f	unknown:themes
get_cursor_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function get_cursor_hunk(bufnr, hunks)$/;"	f
get_cwd	plugged/nvim-spectre/tests/helper.lua	/^M.get_cwd = function(path)$/;"	f	unknown:M
get_default	plugged/gitsigns.nvim/gen_help.lua	/^local function get_default(field)$/;"	f
get_default	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.get_default = function(x, default)$/;"	f	unknown:utils
get_default_component_color	plugged/lualine.nvim/lua/lualine/highlight.lua	/^local function get_default_component_color(color, options_color, default_color, kind)$/;"	f
get_defaults	plugged/bufferline.nvim/lua/bufferline/config.lua	/^local function get_defaults()$/;"	f
get_definition_id	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_id(scope, node_text)$/;"	f	unknown:M
get_definition_scopes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_scopes(node, bufnr, scope_type)$/;"	f	unknown:M
get_definitions	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definitions(bufnr)$/;"	f	unknown:M
get_definitions_lookup_table	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^M.get_definitions_lookup_table = ts_utils.memoize_by_buf_tick(function(bufnr)$/;"	f	unknown:M
get_devicons	plugged/nvim-spectre/lua/spectre/ui.lua	/^local get_devicons = (function()$/;"	f
get_devicons	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.get_devicons = load_once(function()$/;"	f	unknown:utils
get_diagnostics	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^M.get_diagnostics = function(sources)$/;"	f	unknown:M
get_dropdown	plugged/telescope.nvim/lua/telescope/themes.lua	/^function themes.get_dropdown(opts)$/;"	f	unknown:themes
get_entry	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:get_entry(index)$/;"	f	unknown:EntryManager
get_err_dict	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^local function get_err_dict(errs)$/;"	f
get_existing_buffers	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function get_existing_buffers()$/;"	f
get_existing_prompts	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.get_existing_prompts()$/;"	f	unknown:state
get_extension_sections	plugged/lualine.nvim/lua/lualine.lua	/^local function get_extension_sections(current_ft, is_focused)$/;"	f
get_extensions_subcommand	plugged/telescope.nvim/lua/telescope/command.lua	/^function command.get_extensions_subcommand()$/;"	f	unknown:command
get_file	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_file = function()$/;"	f	unknown:test_helpers
get_file_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^    get_file_icon = function()$/;"	f
get_file_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^    get_file_icon = function(fname, extension, line, depth)$/;"	f
get_file_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_file_icon = function() return "" end$/;"	f
get_file_path	plugged/nvim-spectre/lua/spectre/actions.lua	/^local get_file_path=function(filename)$/;"	f
get_file_stat	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^local get_file_stat = function(filename)$/;"	f
get_finder_creator	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.get_finder_creator = function()$/;"	f	unknown:M
get_fold	plugged/nvim-spectre/lua/spectre/init.lua	/^M.get_fold = function(lnum)$/;"	f	unknown:M
get_fold_indic	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^function M.get_fold_indic(lnum)$/;"	f	unknown:M
get_folder_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  get_folder_icon = function(open, is_symlink, has_children)$/;"	f
get_folder_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_folder_icon = function() return "" end$/;"	f
get_from_list	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.get_from_list = function(list, i, default)$/;"	f	unknown:M
get_fuzzy_file	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.get_fuzzy_file = function(opts)$/;"	f	unknown:sorters
get_fzy_sorter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.get_fzy_sorter = function(opts)$/;"	f	unknown:sorters
get_generic_fuzzy_sorter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.get_generic_fuzzy_sorter = function(opts)$/;"	f	unknown:sorters
get_git_head	plugged/lualine.nvim/lua/lualine/components/branch/git_branch.lua	/^local function get_git_head(head_file)$/;"	f
get_git_hl	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  get_git_hl = function(node)$/;"	f
get_git_hl	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_git_hl = function() return end$/;"	f
get_git_icons	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  get_git_icons = function(node, line, depth, icon_len)$/;"	f
get_git_icons	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_git_icons = function() return "" end$/;"	f
get_git_root	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^local function get_git_root(path)$/;"	f
get_global_key	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.get_global_key(key)$/;"	f	unknown:state
get_groupname	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local get_groupname = (function()$/;"	f
get_handlers	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^local function get_handlers(event_name)$/;"	f
get_height	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^    get_height = function(self, max_columns, max_lines) end$/;"	f
get_hex	plugged/bufferline.nvim/lua/bufferline/colors.lua	/^function M.get_hex(opts)$/;"	f	unknown:M
get_highlight_name	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function get_highlight_name(data)$/;"	f
get_hl	plugged/lualine.nvim/lua/lualine/components/buffers/init.lua	/^local function get_hl(section, is_active)$/;"	f
get_hl	plugged/lualine.nvim/lua/lualine/components/tabs/init.lua	/^local function get_hl(section, is_active)$/;"	f
get_hl_groups	plugged/nvim-tree.lua/lua/nvim-tree/colors.lua	/^local function get_hl_groups()$/;"	f
get_hl_line_text	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.get_hl_line_text = function(opts)$/;"	f	unknown:M
get_hunks	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.get_hunks = function(bufnr)$/;"	f	unknown:M
get_icon	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.get_icon(buf, is_directory)$/;"	f	unknown:M
get_icon	plugged/lualine.nvim/lua/tests/spec/component_spec.lua	/^      get_icon = function()$/;"	f
get_icon	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function get_icon(name, ext, opts)$/;"	f
get_icon_color	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function get_icon_color(name, ext, opts)$/;"	f
get_icon_state	plugged/nvim-tree.lua/lua/nvim-tree/config.lua	/^function M.get_icon_state()$/;"	f	unknown:M
get_icons	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^  get_icons = function() return icons end,$/;"	f
get_ignored_parser_installs	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_ignored_parser_installs()$/;"	f	unknown:M
get_indent	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.get_indent(lnum)$/;"	f	unknown:M
get_indents	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local get_indents = tsutils.memoize_by_buf_tick(function(bufnr, root, lang)$/;"	f
get_index	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_index(row)$/;"	f	unknown:Picker
get_initial_window_options	plugged/telescope.nvim/lua/telescope/pickers/window.lua	/^function p_window.get_initial_window_options(picker)$/;"	f	unknown:p_window
get_installed_revision	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_installed_revision(lang)$/;"	f
get_ivy	plugged/telescope.nvim/lua/telescope/themes.lua	/^function themes.get_ivy(opts)$/;"	f	unknown:themes
get_jit_os	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.get_jit_os()$/;"	f	unknown:M
get_job_status	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_job_status()$/;"	f
get_last_group_node	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.get_last_group_node(node)$/;"	f	unknown:M
get_lazy_default	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.get_lazy_default = function(x, defaulter, ...)$/;"	f	unknown:utils
get_leading	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^  local get_leading = function(time)$/;"	f
get_leaf_function_argc	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  function M.get_leaf_function_argc(async_func)$/;"	f	unknown:M
get_level	plugged/plenary.nvim/lua/luassert/assert.lua	/^  get_level = function(self, level)$/;"	f
get_levenshtein_sorter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.get_levenshtein_sorter = function()$/;"	f	unknown:sorters
get_line_for_node	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local get_line_for_node = function(node, type_patterns, transform_fn)$/;"	f
get_line_from_node	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^local function get_line_from_node(node, find_parent)$/;"	f
get_lines	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^local function get_lines(bufnr)$/;"	f
get_links	plugged/nvim-tree.lua/lua/nvim-tree/colors.lua	/^local function get_links()$/;"	f
get_local_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_local_nodes(local_def)$/;"	f	unknown:M
get_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_locals(bufnr)$/;"	f	unknown:M
get_lowest_severity	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^local function get_lowest_severity(diagnostics)$/;"	f
get_lua_version	plugged/plenary.nvim/lua/plenary/nvim_meta.lua	/^local get_lua_version = function()$/;"	f
get_maker	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^local get_maker = function(opts)$/;"	f
get_map	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^  local get_map = function(capture)$/;"	f
get_mappings	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.get_mappings(mode, prefix, buf)$/;"	f	unknown:M
get_marker_size	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_marker_size(count, element_size)$/;"	f
get_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.get_matches(bufnr, query_group)$/;"	f	unknown:M
get_max_len	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local get_max_len = function(tbl)$/;"	f
get_mode	plugged/lualine.nvim/lua/lualine/utils/mode.lua	/^function Mode.get_mode()$/;"	f	unknown:Mode
get_mode	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.get_mode()$/;"	f	unknown:M
get_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_module(mod_path)$/;"	f	unknown:M
get_multi_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_multi_selection()$/;"	f	unknown:Picker
get_named_children	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_named_children(node)$/;"	f	unknown:M
get_next	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.History:get_next(line, picker)$/;"	f	unknown:histories.History
get_next_id	plugged/telescope.nvim/lua/telescope/mappings.lua	/^local get_next_id = function()$/;"	f
get_next_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_next_node(node, allow_switch_parents, allow_next_parent)$/;"	f	unknown:M
get_next_text	plugged/telescope.nvim/lua/telescope/_.lua	/^  local get_next_text = function(previous)$/;"	f
get_node_at_cursor	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.get_node_at_cursor()$/;"	f	unknown:M
get_node_at_cursor	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_at_cursor(winnr)$/;"	f	unknown:M
get_node_at_line	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^local function get_node_at_line(line)$/;"	f
get_node_at_line	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local function get_node_at_line(root, lnum)$/;"	f
get_node_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_range(node_or_range)$/;"	f	unknown:M
get_node_text	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_text(node, bufnr)$/;"	f	unknown:M
get_num_entries	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function get_num_entries(iter)$/;"	f
get_nvim_output	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^local get_nvim_output = function(job_id)$/;"	f
get_operator	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.get_operator(prefix)$/;"	f	unknown:M
get_options	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^local get_options=function(cfg)$/;"	f
get_or_create_term	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.get_or_create_term(num, dir, direction)$/;"	f	unknown:M
get_ordered_schema_keys	plugged/gitsigns.nvim/gen_help.lua	/^local function get_ordered_schema_keys()$/;"	f
get_ordinal	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:get_ordinal(index)$/;"	f	unknown:EntryManager
get_origin_window	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.get_origin_window()$/;"	f	unknown:M
get_original_function	plugged/plenary.nvim/lua/plenary/lsp/override.lua	/^function M.get_original_function(method)$/;"	f	unknown:M
get_os_command_output	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.get_os_command_output(cmd, cwd)$/;"	f	unknown:utils
get_output	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^local get_output = function(index, res, runs)$/;"	f
get_package_path	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_package_path()$/;"	f	unknown:M
get_padding	plugged/nvim-tree.lua/lua/nvim-tree/renderer/padding.lua	/^function M.get_padding(depth)$/;"	f	unknown:M
get_padding_arrows	plugged/nvim-tree.lua/lua/nvim-tree/renderer/padding.lua	/^local function get_padding_arrows(icon_state)$/;"	f
get_padding_indent_markers	plugged/nvim-tree.lua/lua/nvim-tree/renderer/padding.lua	/^local function get_padding_indent_markers(depth, idx, tree, _, markers)$/;"	f
get_parameter	plugged/plenary.nvim/lua/luassert/assert.lua	/^  get_parameter = function(self, name)$/;"	f
get_parameter	plugged/plenary.nvim/lua/luassert/state.lua	/^state.get_parameter = function(name, s)$/;"	f	unknown:state
get_parser	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser(bufnr, lang)$/;"	f	unknown:M
get_parser_configs	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser_configs()$/;"	f	unknown:M
get_parser_info_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_parser_info_dir()$/;"	f	unknown:M
get_parser_install_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_parser_install_dir(folder_name)$/;"	f	unknown:M
get_parser_install_info	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_parser_install_info(lang, validate)$/;"	f
get_path_args	plugged/nvim-spectre/lua/spectre/search/ag.lua	/^ag.get_path_args = function(_, paths)$/;"	f	unknown:ag
get_path_args	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.get_path_args = function(self, path)$/;"	f	unknown:base
get_path_args	plugged/nvim-spectre/lua/spectre/search/rg.lua	/^rg.get_path_args = function(_, paths)$/;"	f	unknown:rg
get_path_sep	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_path_sep()$/;"	f	unknown:M
get_picker	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_picker = function()$/;"	f	unknown:test_helpers
get_prev	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.History:get_prev(line, picker)$/;"	f	unknown:histories.History
get_previous_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_previous_node(node, allow_switch_parents, allow_previous_parent)$/;"	f	unknown:M
get_prompt	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_prompt = function()$/;"	f	unknown:test_helpers
get_props	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:get_props()$/;"	f	unknown:Buffer
get_query	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.get_query(lang, query_name)$/;"	f	unknown:M
get_query_guard	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function get_query_guard(query)$/;"	f
get_range_hunks	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function get_range_hunks(hunks, range)$/;"	f
get_references	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_references(bufnr)$/;"	f	unknown:M
get_registered_mappings	plugged/telescope.nvim/lua/telescope/actions/utils.lua	/^function utils.get_registered_mappings(prompt_bufnr)$/;"	f	unknown:utils
get_relative_time	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.get_relative_time(timestamp)$/;"	f	unknown:M
get_replace_creator	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.get_replace_creator = function()$/;"	f	unknown:M
get_replace_engine_config	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.get_replace_engine_config = function ()$/;"	f	unknown:M
get_replacer	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^local get_replacer = function(handler)$/;"	f
get_replacer_case	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^local get_replacer_case = function(handler)$/;"	f
get_repo_info	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^M.get_repo_info = function(path, cmd)$/;"	f	unknown:M
get_reset_row	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_reset_row()$/;"	f	unknown:Picker
get_result_completor	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_result_completor(results_bufnr, find_id, prompt, status_updater)$/;"	f	unknown:Picker
get_result_processor	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_result_processor(find_id, prompt, status_updater)$/;"	f	unknown:Picker
get_results	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_results = function()$/;"	f	unknown:test_helpers
get_results_bufnr	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_results_bufnr = function()$/;"	f	unknown:test_helpers
get_results_from_file	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local get_results_from_file = function(file)$/;"	f
get_returns	plugged/plenary.nvim/lua/luassert/spy.lua	/^    local function get_returns(...)$/;"	f
get_revision	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_revision(lang)$/;"	f
get_root_for_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_root_for_node(node)$/;"	f	unknown:M
get_root_for_position	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_root_for_position(line, col, root_lang_tree)$/;"	f	unknown:M
get_row	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_row(index)$/;"	f	unknown:Picker
get_row	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local get_row = function(picker, preview_height, index)$/;"	f
get_scope_tree	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scope_tree(node, bufnr)$/;"	f	unknown:M
get_scopes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scopes(bufnr)$/;"	f	unknown:M
get_score	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:get_score(index)$/;"	f	unknown:EntryManager
get_score_floor	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.get_score_floor()$/;"	f	unknown:fzy
get_score_max	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.get_score_max()$/;"	f	unknown:fzy
get_score_min	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.get_score_min()$/;"	f	unknown:fzy
get_search_engine_config	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.get_search_engine_config = function ()$/;"	f	unknown:M
get_section_text	plugged/bufferline.nvim/lua/bufferline/offset.lua	/^local function get_section_text(size, highlight, offset)$/;"	f
get_sections	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_sections(components)$/;"	f
get_selected_entry	plugged/telescope.nvim/lua/telescope/actions/state.lua	/^function action_state.get_selected_entry()$/;"	f	unknown:action_state
get_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_selection()$/;"	f	unknown:Picker
get_selection	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_selection = function()$/;"	f	unknown:test_helpers
get_selection_row	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_selection_row()$/;"	f	unknown:Picker
get_selection_value	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.get_selection_value = function()$/;"	f	unknown:test_helpers
get_separator	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_separator(focused, style)$/;"	f
get_separator	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.get_separator = function()$/;"	f	unknown:utils
get_short_cwd	plugged/lualine.nvim/lua/lualine/extensions/nerdtree.lua	/^local function get_short_cwd()$/;"	f
get_show_text	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Repo.get_show_text = function(self, object)$/;"	f	unknown:Repo
get_sign_count	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^function M.get_sign_count(bufnr)$/;"	f	unknown:M
get_simple_history	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^histories.get_simple_history = function()$/;"	f	unknown:histories
get_site_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_site_dir()$/;"	f	unknown:M
get_size	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function get_size()$/;"	f
get_size	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.get_size(size, direction)$/;"	f	unknown:M
get_sorted_keys	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function get_sorted_keys(t)$/;"	f
get_special_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  get_special_icon = function()$/;"	f
get_special_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_special_icon = function() return "" end$/;"	f
get_state	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.get_state = function()$/;"	f	unknown:M
get_stats	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^local get_stats = function(results)$/;"	f
get_status	plugged/plenary.nvim/scratch/term_open_checker.lua	/^local get_status = function(job_id)$/;"	f
get_status	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.get_status(prompt_bufnr)$/;"	f	unknown:state
get_status_updater	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:get_status_updater(prompt_win, prompt_bufnr)$/;"	f	unknown:Picker
get_substr_matcher	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.get_substr_matcher = function()$/;"	f	unknown:sorters
get_summary	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.get_summary(hunks)$/;"	f	unknown:M
get_summary	plugged/plenary.nvim/lua/plenary/benchmark/init.lua	/^local get_summary = function(res)$/;"	f
get_symlink_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  get_symlink_icon = function()$/;"	f
get_symlink_icon	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local get_symlink_icon = function() return icon_state.icons.symlink end$/;"	f
get_tab	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function get_tab(group_id, components)$/;"	f
get_tag_name	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function get_tag_name(node)$/;"	f
get_term_id	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  local function get_term_id(self)$/;"	f
get_theme_colors	plugged/onedarkpro.nvim/lua/onedarkpro/colors/init.lua	/^function M.get_theme_colors(name)$/;"	f	unknown:M
get_theme_from_config	plugged/lualine.nvim/lua/lualine.lua	/^  local function get_theme_from_config()$/;"	f
get_toggled_id	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.get_toggled_id(position)$/;"	f	unknown:M
get_trace	plugged/plenary.nvim/lua/plenary/busted.lua	/^local function get_trace(element, level, msg)$/;"	f
get_trailing_length	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local function get_trailing_length()$/;"	f
get_transitional_highlights	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.get_transitional_highlights(left_hl, right_hl)$/;"	f	unknown:M
get_tree	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.get_tree(mode, buf)$/;"	f	unknown:M
get_tree_root	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_tree_root(bufnr)$/;"	f	unknown:M
get_ts_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function get_ts_tag()$/;"	f
get_update_strategy	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_update_strategy()$/;"	f	unknown:M
get_updated_buffers	plugged/bufferline.nvim/lua/bufferline.lua	/^local function get_updated_buffers(buf_nums, sorted)$/;"	f
get_user_input_char	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.get_user_input_char()$/;"	f	unknown:M
get_username	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local get_username = (function()$/;"	f
get_valid_buffers	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.get_valid_buffers()$/;"	f	unknown:M
get_valid_configuration_keys	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local get_valid_configuration_keys = function(strategy_config)$/;"	f
get_value	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^  local get_value = function(k)$/;"	f
get_variable	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.get_variable = function(key)$/;"	f	unknown:M
get_vim_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_vim_range(range, buf)$/;"	f	unknown:M
get_visual_selection	plugged/nvim-spectre/lua/spectre/utils.lua	/^function M.get_visual_selection()$/;"	f	unknown:M
get_width	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^    get_width = function(self, max_columns, max_lines) end$/;"	f
get_window_options	plugged/telescope.nvim/lua/telescope/pickers/window.lua	/^function p_window.get_window_options(picker, max_columns, max_lines)$/;"	f	unknown:p_window
get_winnr	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.get_winnr(tabpage)$/;"	f	unknown:M
get_workspace_symbols_requester	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^local function get_workspace_symbols_requester(bufnr, opts)$/;"	f
get_xpparam_flag	plugged/gitsigns.nvim/lua/gitsigns/diff_int/xdl_diff_ffi.lua	/^local function get_xpparam_flag(diff_algo)$/;"	f
getch	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getch	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getchar	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.getchar()$/;"	f	unknown:M
geterror	plugged/plenary.nvim/lua/luassert/assert.lua	/^local function geterror(assertion_message, failure_message, args)$/;"	f
getvarvalue	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^local function getvarvalue(name, lvl)$/;"	f
gfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
gg	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
gge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
gh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gi	init.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gi	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
gi	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> gi          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
gie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
git	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.git(args)$/;"	f	unknown:M
git_apply_stash	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_apply_stash = function(prompt_bufnr)$/;"	f	unknown:actions
git_branch_log	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_branch_log = defaulter(function(opts)$/;"	f	unknown:previewers
git_checkout	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_checkout = function(prompt_bufnr)$/;"	f	unknown:actions
git_checkout_current_buffer	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_checkout_current_buffer = function(prompt_bufnr)$/;"	f	unknown:actions
git_commit_diff_as_was	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_commit_diff_as_was = defaulter(function(opts)$/;"	f	unknown:previewers
git_commit_diff_to_head	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_commit_diff_to_head = defaulter(function(opts)$/;"	f	unknown:previewers
git_commit_diff_to_parent	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_commit_diff_to_parent = defaulter(function(opts)$/;"	f	unknown:previewers
git_commit_message	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_commit_message = defaulter(function(opts)$/;"	f	unknown:previewers
git_create_branch	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_create_branch = function(prompt_bufnr)$/;"	f	unknown:actions
git_diff	plugged/telescope.nvim/lua/telescope/WIP.lua	/^WIP.git_diff = function()$/;"	f	unknown:WIP
git_dir	plugged/toggleterm.nvim/lua/toggleterm/utils.lua	/^function M.git_dir()$/;"	f	unknown:M
git_file_diff	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_file_diff = defaulter(function(opts)$/;"	f	unknown:previewers
git_reset_branch	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local git_reset_branch = function(prompt_bufnr, mode)$/;"	f
git_reset_hard	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_reset_hard = function(prompt_bufnr)$/;"	f	unknown:actions
git_reset_mixed	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_reset_mixed = function(prompt_bufnr)$/;"	f	unknown:actions
git_reset_soft	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_reset_soft = function(prompt_bufnr)$/;"	f	unknown:actions
git_root	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^function M.git_root(path)$/;"	f	unknown:M
git_staging_toggle	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_staging_toggle = function(prompt_bufnr)$/;"	f	unknown:actions
git_stash_diff	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.git_stash_diff = defaulter(function(opts)$/;"	f	unknown:previewers
git_switch_branch	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.git_switch_branch = function(prompt_bufnr)$/;"	f	unknown:actions
github_path	plugged/github-nvim-theme/Makefile	/^github_path = lua\/github-theme$/;"	m
gitsigns.nvim	plugged/gitsigns.nvim/README.md	/^# gitsigns.nvim$/;"	c
give	plugged/fzf/src/terminal_test.go	/^	give$/;"	M	struct:fzf.testCase	typeref:typename:give
give	plugged/fzf/src/terminal_test.go	/^type give struct {$/;"	s	package:fzf
gj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
glimmer	plugged/nvim-treesitter/lockfile.json	/^  "glimmer": {$/;"	o
glob	plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.1",$/;"	s	object:dependencies.jest-config.requires
glob	plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.2",$/;"	s	object:dependencies.@jest/reporters.requires
glob	plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.3"$/;"	s	object:dependencies.rimraf.requires
glob	plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.3",$/;"	s	object:dependencies.jest-runtime.requires
glob	plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.4",$/;"	s	object:dependencies.test-exclude.requires
glob	plugged/coc.nvim/package-lock.json	/^    "glob": {$/;"	o	object:dependencies
glob-parent	plugged/coc.nvim/package-lock.json	/^        "glob-parent": "^5.0.0",$/;"	s	object:dependencies.eslint.requires
glob-parent	plugged/coc.nvim/package-lock.json	/^        "glob-parent": "^5.1.0",$/;"	s	object:dependencies.fast-glob.requires
glob-parent	plugged/coc.nvim/package-lock.json	/^        "glob-parent": "~5.1.0",$/;"	s	object:dependencies.chokidar.requires
glob-parent	plugged/coc.nvim/package-lock.json	/^    "glob-parent": {$/;"	o	object:dependencies
global	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	global: {},$/;"	p	class:jQuery.event
globalSetup	plugged/coc.nvim/package.json	/^    "globalSetup": ".\/jest.js",$/;"	s	object:jest
globals	plugged/coc.nvim/package-lock.json	/^        "globals": "^11.1.0"$/;"	s	object:dependencies.@babel/traverse.requires
globals	plugged/coc.nvim/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
globals	plugged/coc.nvim/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.eslint.requires
globals	plugged/coc.nvim/package-lock.json	/^        "globals": {$/;"	o	object:dependencies.@babel/traverse.dependencies
globals	plugged/coc.nvim/package-lock.json	/^    "globals": {$/;"	o	object:dependencies
globals	plugged/coc.nvim/package.json	/^    "globals": {$/;"	o	object:jest
globby	plugged/coc.nvim/package-lock.json	/^        "globby": "^11.0.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
globby	plugged/coc.nvim/package-lock.json	/^    "globby": {$/;"	o	object:dependencies
glsl	plugged/nvim-treesitter/lockfile.json	/^  "glsl": {$/;"	o
gm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
gme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
go	plugged/fzf/test/test_go.rb	/^  def go(args)$/;"	f	class:Tmux
go	plugged/nvim-treesitter/lockfile.json	/^  "go": {$/;"	o
go	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> go          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
go_to	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function go_to(mode)$/;"	f
go_to_buffer	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.go_to_buffer(num, absolute)$/;"	f	unknown:M
godotResource	plugged/nvim-treesitter/lockfile.json	/^  "godotResource": {$/;"	o
goe	plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
gomod	plugged/nvim-treesitter/lockfile.json	/^  "gomod": {$/;"	o
goto_next_end	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.goto_next_end = function(query_string)$/;"	f	unknown:M
goto_next_start	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.goto_next_start = function(query_string)$/;"	f	unknown:M
goto_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.goto_node(node, goto_end, avoid_set_jump)$/;"	f	unknown:M
goto_previous	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.goto_previous()$/;"	f	unknown:M
goto_previous_end	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.goto_previous_end = function(query_string)$/;"	f	unknown:M
goto_previous_start	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^M.goto_previous_start = function(query_string)$/;"	f	unknown:M
gp	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
gq	plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
gr	init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
graceful-fs	plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.1.6"$/;"	s	object:dependencies.streamroller.dependencies.jsonfile.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.2.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.1.6",$/;"	s	object:dependencies.jsonfile.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.0",$/;"	s	object:dependencies.fs-extra.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4"$/;"	s	object:dependencies.jest-serializer.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/core.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/reporters.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/source-map.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/test-sequencer.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/transform.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.babel-jest.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-config.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-haste-map.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-message-util.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-resolve.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-runner.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-runtime.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-snapshot.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-util.requires
graceful-fs	plugged/coc.nvim/package-lock.json	/^    "graceful-fs": {$/;"	o	object:dependencies
graphql	plugged/nvim-treesitter/lockfile.json	/^  "graphql": {$/;"	o
green	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
greenBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
grep_string	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.grep_string = function(opts)$/;"	f	unknown:files
group	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^  local group = utils.find(state.components_by_group, function(list)$/;"	f
group_action	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.group_action(name, action)$/;"	f	unknown:M
group_by_name	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function group_by_name(name)$/;"	f
group_components	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^    local group_components = utils.find(state.components_by_group, function(item)$/;"	f
growly	plugged/coc.nvim/package-lock.json	/^        "growly": "^1.3.0",$/;"	s	object:dependencies.node-notifier.requires
growly	plugged/coc.nvim/package-lock.json	/^    "growly": {$/;"	o	object:dependencies
gruvbox	plugged/lualine.nvim/THEMES.md	/^### gruvbox$/;"	S	chapter:Available themes
gruvbox-material	plugged/lualine.nvim/THEMES.md	/^### gruvbox-material$/;"	S	chapter:Available themes
gruvbox_dark	plugged/lualine.nvim/THEMES.md	/^### gruvbox_dark$/;"	S	chapter:Available themes
gruvbox_light	plugged/lualine.nvim/THEMES.md	/^### gruvbox_light$/;"	S	chapter:Available themes
gs	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> gs          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
gse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
gt	plugged/plenary.nvim/lua/plenary/operators.lua	/^  gt = function(a, b)$/;"	f
gu	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
guess_direction	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.guess_direction()$/;"	f	unknown:M
guess_window_highlight	plugged/bufferline.nvim/lua/bufferline/offset.lua	/^local function guess_window_highlight(win_id, attribute, match)$/;"	f
gui	plugged/onedark.nvim/lua/onedark/highlights.lua	/^local function gui(group_settings)$/;"	f
gui_normal	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let gui_normal = s:has_attr('fg', 'gui') ? 'foreground' : 'NONE'$/;"	v
guid	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	guid: 1,$/;"	p	class:jQuery.event
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
gv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gw	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
gx	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
gy	init.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
gy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
h	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
h	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
h	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
h	plugged/coc.nvim/build/index.js	/^`)}function h(y,S){var w=[],_=0;if(!Array.isArray(y)&&typeof y=="object"){var L=Object.keys(y)[0/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
h	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
h	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
h$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
h0	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
h1	plugged/emmet-vim/docs/static/css/style-sites.css	/^h1 {$/;"	s
h3 a	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
h3 a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
h5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
h6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
h6e	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
h7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
h8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
h9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
hBe	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
hC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
hD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
hF	plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	v
hG	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
hMe	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
hN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
hO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
hQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
hV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
hW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
hY	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
ha	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
hae	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
handle	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var handle = jQuery.data( elem, "handle" );$/;"	v	class:jQuery.event
handle	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var handle = jQuery.data(elem, "handle");$/;"	v
handle	plugged/telescope.nvim/lua/telescope/pickers.lua	/^    local handle = type(opts.new_prefix) == "table" and unpack or function(x)$/;"	f
handle_click	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.handle_click(id, button)$/;"	f	unknown:M
handle_close_buffer	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.handle_close_buffer(buf_id)$/;"	f	unknown:M
handle_deprecated	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^local function handle_deprecated(cfg)$/;"	f
handle_deprecations	plugged/bufferline.nvim/lua/bufferline/config.lua	/^local function handle_deprecations(options)$/;"	f
handle_deprecations	plugged/toggleterm.nvim/lua/toggleterm/config.lua	/^local function handle_deprecations(conf)$/;"	f
handle_depth	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local handle_depth = function(base_paths, entry, depth)$/;"	f
handle_group_click	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.handle_group_click(group_id)$/;"	f	unknown:M
handle_group_enter	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.handle_group_enter()$/;"	f	unknown:M
handle_moved	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local handle_moved = function(bufnr, bcache, old_relpath)$/;"	f
handle_term_enter	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.handle_term_enter()$/;"	f	unknown:M
handle_term_leave	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.handle_term_leave()$/;"	f	unknown:M
handle_user_command	plugged/bufferline.nvim/lua/bufferline.lua	/^local function handle_user_command(command, buf_id)$/;"	f
handle_win_click	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.handle_win_click(id)$/;"	f	unknown:M
handler	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var handler = handlers[j];$/;"	v
handler	plugged/telescope.nvim/lua/telescope/config.lua	/^    handler = function(...)$/;"	f
handlers	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
hanging_indent	plugged/nvim-treesitter/tests/indent/python/hanging_indent.py	/^def hanging_indent($/;"	f
has	plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3"$/;"	s	object:dependencies.is-core-module.requires
has	plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.es-abstract.requires
has	plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.get-intrinsic.requires
has	plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.internal-slot.requires
has	plugged/coc.nvim/package-lock.json	/^    "has": {$/;"	o	object:dependencies
has	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.has(type_name, bufnr)$/;"	f	unknown:cache
has-bigints	plugged/coc.nvim/package-lock.json	/^        "has-bigints": "^1.0.1",$/;"	s	object:dependencies.unbox-primitive.requires
has-bigints	plugged/coc.nvim/package-lock.json	/^    "has-bigints": {$/;"	o	object:dependencies
has-flag	plugged/coc.nvim/package-lock.json	/^            "has-flag": "^3.0.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color.requires
has-flag	plugged/coc.nvim/package-lock.json	/^            "has-flag": "^3.0.0"$/;"	s	object:dependencies.cli-table.dependencies.supports-color.requires
has-flag	plugged/coc.nvim/package-lock.json	/^        "has-flag": "^4.0.0"$/;"	s	object:dependencies.supports-color.requires
has-flag	plugged/coc.nvim/package-lock.json	/^        "has-flag": "^4.0.0",$/;"	s	object:dependencies.supports-hyperlinks.requires
has-flag	plugged/coc.nvim/package-lock.json	/^        "has-flag": {$/;"	o	object:dependencies.@babel/highlight.dependencies
has-flag	plugged/coc.nvim/package-lock.json	/^        "has-flag": {$/;"	o	object:dependencies.cli-table.dependencies
has-flag	plugged/coc.nvim/package-lock.json	/^    "has-flag": {$/;"	o	object:dependencies
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1"$/;"	s	object:dependencies.get-intrinsic.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1",$/;"	s	object:dependencies.object.assign.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1",$/;"	s	object:dependencies.string.prototype.matchall.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2"$/;"	s	object:dependencies.is-regex.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2"$/;"	s	object:dependencies.is-symbol.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2",$/;"	s	object:dependencies.es-abstract.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2",$/;"	s	object:dependencies.unbox-primitive.requires
has-symbols	plugged/coc.nvim/package-lock.json	/^    "has-symbols": {$/;"	o	object:dependencies
has-value	plugged/coc.nvim/package-lock.json	/^        "has-value": "^0.3.1",$/;"	s	object:dependencies.unset-value.requires
has-value	plugged/coc.nvim/package-lock.json	/^        "has-value": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
has-value	plugged/coc.nvim/package-lock.json	/^        "has-value": {$/;"	o	object:dependencies.unset-value.dependencies
has-value	plugged/coc.nvim/package-lock.json	/^    "has-value": {$/;"	o	object:dependencies
has-values	plugged/coc.nvim/package-lock.json	/^            "has-values": "^0.1.4",$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
has-values	plugged/coc.nvim/package-lock.json	/^        "has-values": "^1.0.0",$/;"	s	object:dependencies.has-value.requires
has-values	plugged/coc.nvim/package-lock.json	/^        "has-values": {$/;"	o	object:dependencies.unset-value.dependencies
has-values	plugged/coc.nvim/package-lock.json	/^    "has-values": {$/;"	o	object:dependencies
hasPreviewAction	plugged/fzf/src/terminal.go	/^func hasPreviewAction(opts *Options) bool {$/;"	f	package:fzf	typeref:typename:bool
hasPreviewFlags	plugged/fzf/src/terminal.go	/^func hasPreviewFlags(template string) (slot bool, plus bool, query bool) {$/;"	f	package:fzf	typeref:typename:(slot bool, plus bool, query bool)
hasPreviewWindow	plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hasPreviewer	plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
has_all_executables	plugged/plenary.nvim/tests/plenary/job_spec.lua	/^local has_all_executables = function(execs)$/;"	f
has_ancestor	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function has_ancestor(match, pattern, bufnr, pred)$/;"	f
has_cmd	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.has_cmd(path)$/;"	f	unknown:M
has_error	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:has_error()$/;"	f	unknown:TSRange
has_error	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function has_error(state, arguments, level)$/;"	f
has_filetype	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^local function has_filetype(ft)$/;"	f
has_key	plugged/plenary.nvim/lua/plenary/enum.lua	/^function Enum:has_key(key)$/;"	f	unknown:Enum
has_loaded	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^  has_loaded = function() return loaded end,$/;"	f
has_match	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.has_match(needle, haystack)$/;"	f	unknown:fzy
has_moved	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.has_moved = function(self)$/;"	f	unknown:Obj
has_options	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.has_options = function(key)$/;"	f	unknown:M
has_parser	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.has_parser(lang)$/;"	f	unknown:M
has_query_files	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.has_query_files(lang, query_name)$/;"	f	unknown:M
has_saved_size	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.has_saved_size(direction)$/;"	f	unknown:M
has_some_textobject_mapping	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter-textobjects.lua	/^local function has_some_textobject_mapping(lang)$/;"	f
has_textobjects	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter-textobjects.lua	/^M.has_textobjects = function(lang)$/;"	f	unknown:M
hash	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
haskell	plugged/nvim-treesitter/lockfile.json	/^  "haskell": {$/;"	o
hastostring	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.hastostring(object)$/;"	f	unknown:util
hc	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
hcl	plugged/nvim-treesitter/lockfile.json	/^  "hcl": {$/;"	o
hd	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
head	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:head(lines)$/;"	f	unknown:Path
header	plugged/fzf/src/terminal.go	/^	header       []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
header0	plugged/fzf/src/terminal.go	/^	header0      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
headerFirst	plugged/fzf/src/terminal.go	/^	headerFirst  bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
headerLines	plugged/fzf/src/options.go	/^	headerLines int$/;"	m	struct:fzf.previewOpts	typeref:typename:int
headerLines	plugged/fzf/src/terminal.go	/^	headerLines  int$/;"	m	struct:fzf.Terminal	typeref:typename:int
headers	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
headers	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunctionaf1e5c4a2c000.o
headers	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.headers = function(t)$/;"	f	unknown:parse
health#coc#check	plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
health#nvim_treesitter#check	plugged/nvim-treesitter/autoload/health/nvim_treesitter.vim	/^function! health#nvim_treesitter#check()$/;"	f
health#telescope#check	plugged/telescope.nvim/autoload/health/telescope.vim	/^function! health#telescope#check()$/;"	f
health#which_key#check	plugged/which-key.nvim/autoload/health/which_key.vim	/^function! health#which_key#check()$/;"	f
hee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
heex	plugged/nvim-treesitter/lockfile.json	/^  "heex": {$/;"	o
height	plugged/fzf/src/tui/light.go	/^	height        int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
height	plugged/fzf/src/tui/light.go	/^	height   int$/;"	m	struct:tui.LightWindow	typeref:typename:int
height	plugged/fzf/src/tui/tcell.go	/^	height      int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
height	plugged/telescope.nvim/lua/telescope/themes.lua	/^      height = function(_, _, max_lines)$/;"	f
help	plugged/fzf/bin/fzf-tmux	/^help() {$/;"	f
help	plugged/fzf/install	/^help() {$/;"	f
help	plugged/fzf/src/options.go	/^func help(code int) {$/;"	f	package:fzf
help	plugged/fzf/uninstall	/^help() {$/;"	f
help	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.help = defaulter(function(_)$/;"	f	unknown:previewers
help_tags	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.help_tags = function(opts)$/;"	f	unknown:internal
helpers	plugged/gitsigns.nvim/test/gs_helpers.lua	/^local helpers = require('test.functional.helpers')()$/;"	f
helpers	plugged/gitsigns.nvim/test/preload.lua	/^local helpers = require('test.functional.helpers')(nil)$/;"	f
hexToRgb	plugged/github-nvim-theme/lua/github-theme/util.lua	/^local function hexToRgb(hex_str)$/;"	f
hexToRgb	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^local function hexToRgb(hex_str)$/;"	f
hex_to_hpluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hex_to_hpluv = function(s)$/;"	f	unknown:hsluv
hex_to_hpluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hex_to_hpluv = function(s)$/;"	f	unknown:hsluv
hex_to_hpluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hex_to_hpluv = function(s)$/;"	f	unknown:hsluv
hex_to_hsluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hex_to_hsluv = function(s)$/;"	f	unknown:hsluv
hex_to_hsluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hex_to_hsluv = function(s)$/;"	f	unknown:hsluv
hex_to_hsluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hex_to_hsluv = function(s)$/;"	f	unknown:hsluv
hex_to_rgb	plugged/bufferline.nvim/lua/bufferline/colors.lua	/^local function hex_to_rgb(color)$/;"	f
hex_to_rgb	plugged/github-nvim-theme/lua/github-theme/extra/konsole.lua	/^function M.hex_to_rgb(hex)$/;"	f	unknown:M
hex_to_rgb	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hex_to_rgb = function(hex)$/;"	f	unknown:hsluv
hex_to_rgb	plugged/nvcode-color-schemes.vim/generate	/^def hex_to_rgb(hex)$/;"	f
hex_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hex_to_rgb = function(hex)$/;"	f	unknown:hsluv
hex_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^local hex_to_rgb = function(hex_str)$/;"	f
hex_to_rgb	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hex_to_rgb = function(hex)$/;"	f	unknown:hsluv
hfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
hg	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
hge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
hi	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
hi_color	plugged/nvcode-color-schemes.vim/generate	/^  def hi_color(kind, color)$/;"	f	class:Highlight
hi_display	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:hi_display(row, prefix, display_highlights)$/;"	f	unknown:Highlighter
hi_multiselect	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:hi_multiselect(row, is_selected)$/;"	f	unknown:Highlighter
hi_selection	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:hi_selection(row, caret)$/;"	f	unknown:Highlighter
hi_sorter	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:hi_sorter(row, prompt, display)$/;"	f	unknown:Highlighter
hi_style	plugged/nvcode-color-schemes.vim/generate	/^  def hi_style(style)$/;"	f	class:Highlight
hidden	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
hidden	plugged/fzf/src/options.go	/^	hidden      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
hide	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(){$/;"	m	class:jQuery.fx
hide	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.hide()$/;"	f	unknown:M
hide_cursor	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.hide_cursor()$/;"	f	unknown:M
hide_in_width	plugged/lualine.nvim/examples/evil_lualine.lua	/^  hide_in_width = function()$/;"	f
hide_preview	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:hide_preview()$/;"	f	unknown:Picker
hie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
highlight	plugged/JABS.nvim/lua/jabs.lua	/^                _, highlight = xpcall(function()$/;"	f
highlight	plugged/coc.nvim/data/schema.json	/^        "highlight": {$/;"	o	object:definitions.float.properties
highlight	plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
highlight	plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.hover.floatConfig.properties
highlight	plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.signature.floatConfig.properties
highlight	plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.suggest.floatConfig.properties
highlight	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.highlight(group, color)$/;"	f	unknown:util
highlight	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.highlight(name, foreground, background, gui, link)$/;"	f	unknown:M
highlight	plugged/material.nvim/lua/material/util.lua	/^util.highlight = function (group, color)$/;"	f	unknown:util
highlight	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.highlight(group, color)$/;"	f	unknown:util
highlight	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text:highlight(row, from, to, group)$/;"	f	unknown:Text
highlight_buffer	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local highlight_buffer = function(bufnr, content)$/;"	f
highlight_exists	plugged/lualine.nvim/lua/lualine/highlight.lua	/^function M.highlight_exists(highlight_name)$/;"	f	unknown:M
highlight_hunk_lines	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function highlight_hunk_lines(bufnr, offset, hunk)$/;"	f
highlight_icon	plugged/bufferline.nvim/lua/bufferline.lua	/^local function highlight_icon(buffer)$/;"	f
highlight_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_node(node, buf, hl_namespace, hl_group)$/;"	f	unknown:M
highlight_one_row	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:highlight_one_row(results_bufnr, prompt, display, row)$/;"	f	unknown:Picker
highlight_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_range(range, buf, hl_namespace, hl_group)$/;"	f	unknown:M
highlighter	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.highlighter = function(bufnr, ft, opts)$/;"	f	unknown:utils
highlighter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^    highlighter = function(_, prompt, display)$/;"	f
highlighter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^    highlighter = opts.highlighter or function(_, prompt, display)$/;"	f
highlighter_only	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.highlighter_only = function(opts)$/;"	f	unknown:sorters
highlights	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.highlights = function(opts)$/;"	f	unknown:internal
highlights	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.highlights = defaulter(function(_)$/;"	f	unknown:previewers
hijack_current_window	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.hijack_current_window()$/;"	f	unknown:M
history	plugged/fzf/src/terminal.go	/^	history      *History$/;"	m	struct:fzf.Terminal	typeref:typename:*History
hj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
hje	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
hjson	plugged/nvim-treesitter/lockfile.json	/^  "hjson": {$/;"	o
hl	plugged/bufferline.nvim/lua/bufferline/highlights.lua	/^function M.hl(item)$/;"	f	unknown:M
hl_exists	plugged/bufferline.nvim/lua/bufferline/highlights.lua	/^function M.hl_exists(name)$/;"	f	unknown:M
hl_match	plugged/nvim-spectre/lua/spectre/init.lua	/^local function hl_match(opts)$/;"	f
hl_term	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.hl_term(term)$/;"	f	unknown:M
hle	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
hm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
hme	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
hn	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
hoe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
holes	plugged/plenary.nvim/lua/luassert/array.lua	/^local function holes(state, args, level)$/;"	f
homepage	plugged/coc.nvim/package.json	/^  "homepage": "https:\/\/github.com\/neoclide\/coc.nvim#readme",$/;"	s
hook_add	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.hook_add(prefix, mode, buf, secret_only)$/;"	f	unknown:M
hook_del	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.hook_del(prefix, mode, buf)$/;"	f	unknown:M
hook_id	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.hook_id(prefix, mode, buf)$/;"	f	unknown:M
horizon	plugged/lualine.nvim/THEMES.md	/^### horizon$/;"	S	chapter:Available themes
horizontal	plugged/fzf/src/tui/tui.go	/^	horizontal  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
host	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
host	plugged/coc.nvim/data/schema.json	/^        "host": {$/;"	o	object:definitions.languageServerSocket.properties
hosted-git-info	plugged/coc.nvim/package-lock.json	/^        "hosted-git-info": "^2.1.4",$/;"	s	object:dependencies.normalize-package-data.requires
hosted-git-info	plugged/coc.nvim/package-lock.json	/^    "hosted-git-info": {$/;"	o	object:dependencies
hostname	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
hostname	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
hostname	plugged/lualine.nvim/lua/lualine/components/hostname.lua	/^local function hostname()$/;"	f
hover.autoHide	plugged/coc.nvim/data/schema.json	/^    "hover.autoHide": {$/;"	o	object:properties
hover.floatConfig	plugged/coc.nvim/data/schema.json	/^    "hover.floatConfig": {$/;"	o	object:properties
hover.previewMaxHeight	plugged/coc.nvim/data/schema.json	/^    "hover.previewMaxHeight": {$/;"	o	object:properties
hover.target	plugged/coc.nvim/data/schema.json	/^    "hover.target": {$/;"	o	object:properties
howworkthis	plugged/emmet-vim/docs/index.html	/^			<article id="howworkthis">$/;"	I
hp	plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
hpluv_to_hex	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hpluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_hex	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hpluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_hex	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hpluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_lch	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hpluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_lch	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hpluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_lch	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hpluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_rgb	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hpluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hpluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
hpluv_to_rgb	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hpluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
hr	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
href	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
hs	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hscroll	plugged/fzf/src/terminal.go	/^	hscroll      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
hscrollOff	plugged/fzf/src/terminal.go	/^	hscrollOff   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
hsl_to_rgb	plugged/nvcode-color-schemes.vim/generate	/^def hsl_to_rgb(h, s, l)$/;"	f
hsluv_to_hex	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hsluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_hex	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hsluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_hex	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hsluv_to_hex = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_lch	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hsluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_lch	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hsluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_lch	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hsluv_to_lch = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_rgb	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.hsluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.hsluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
hsluv_to_rgb	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.hsluv_to_rgb = function(tuple)$/;"	f	unknown:hsluv
ht	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
html	plugged/nvim-treesitter/lockfile.json	/^  "html": {$/;"	o
html-encoding-sniffer	plugged/coc.nvim/package-lock.json	/^        "html-encoding-sniffer": "^2.0.1",$/;"	s	object:dependencies.jsdom.requires
html-encoding-sniffer	plugged/coc.nvim/package-lock.json	/^    "html-encoding-sniffer": {$/;"	o	object:dependencies
html-escaper	plugged/coc.nvim/package-lock.json	/^        "html-escaper": "^2.0.0",$/;"	s	object:dependencies.istanbul-reports.requires
html-escaper	plugged/coc.nvim/package-lock.json	/^    "html-escaper": {$/;"	o	object:dependencies
html.filetypes	coc-settings.json	/^    "html.filetypes": [$/;"	a
http	coc-settings.json	/^        "http": ["php","blade"],$/;"	a	object:emmet.includeLanguages
http-proxy-agent	plugged/coc.nvim/package-lock.json	/^        "http-proxy-agent": "^4.0.1",$/;"	s	object:dependencies.jsdom.requires
http-proxy-agent	plugged/coc.nvim/package-lock.json	/^    "http-proxy-agent": {$/;"	o	object:dependencies
http.proxy	plugged/coc.nvim/data/schema.json	/^    "http.proxy": {$/;"	o	object:properties
http.proxyAuthorization	plugged/coc.nvim/data/schema.json	/^    "http.proxyAuthorization": {$/;"	o	object:properties
http.proxyCA	plugged/coc.nvim/data/schema.json	/^    "http.proxyCA": {$/;"	o	object:properties
http.proxyStrictSSL	plugged/coc.nvim/data/schema.json	/^    "http.proxyStrictSSL": {$/;"	o	object:properties
https-proxy-agent	plugged/coc.nvim/package-lock.json	/^        "https-proxy-agent": "^5.0.0",$/;"	s	object:dependencies.jsdom.requires
https-proxy-agent	plugged/coc.nvim/package-lock.json	/^    "https-proxy-agent": {$/;"	o	object:dependencies
human-signals	plugged/coc.nvim/package-lock.json	/^            "human-signals": "^1.1.1",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
human-signals	plugged/coc.nvim/package-lock.json	/^    "human-signals": {$/;"	o	object:dependencies
hunk_func	plugged/gitsigns.nvim/lua/gitsigns/diff_int/xdl_diff_ffi.lua	/^   local hunk_func = ffi.cast('xdl_emit_hunk_consume_func_t', function($/;"	f
hunks_to_qflist	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function hunks_to_qflist(buf_or_filename, hunks, qflist)$/;"	f
hw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
hx	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
hy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
i	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f	function:W7
i	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f	function:eZ
i	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:AnonymousFunctionaf1e5c4a1e100
i	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
i	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c	class:AnonymousFunctionaf1e5c4a1c500.AnonymousFunctionaf1e5c4a1c600
i	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
i	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af900
i	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afc00
i	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00
i	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
i	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
i	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2b900
i	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunctionaf1e5c4a12900
i	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunctionaf1e5c4a21500
i	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionaf1e5c4a7400
i	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
i	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:q0
i	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Oae
i	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Rg
i	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	c	class:vY
i	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
i	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
i	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> i           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
i	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> i           :call b:buffergator_catalog_viewer.cycle_displ/;"	m
i	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> i             :enew <bar> startinsert<cr>$/;"	m
i$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
i0	plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
i2e	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
i5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
i6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
i9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
iB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
iC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
iD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
iF	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
iG	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
iQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
iR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
iU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
iV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
iVe	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
i_	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ia	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
iae	plugged/coc.nvim/build/index.js	/^`)}function iae(r,e,t){return p$(e,r)?{num:t+1,line:e.replace(d0,g$(t+1))}:{num:t,line:m$(g$(t))/;"	f
iceberg	plugged/lualine.nvim/THEMES.md	/^### iceberg$/;"	S	chapter:Available themes
iceberg_dark	plugged/lualine.nvim/THEMES.md	/^### iceberg_dark$/;"	S	chapter:Available themes
iceberg_light	plugged/lualine.nvim/THEMES.md	/^### iceberg_light$/;"	S	chapter:Available themes
iconv-lite	plugged/coc.nvim/package-lock.json	/^        "iconv-lite": "0.4.24"$/;"	s	object:dependencies.whatwg-encoding.requires
iconv-lite	plugged/coc.nvim/package-lock.json	/^    "iconv-lite": {$/;"	o	object:dependencies
id	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
id	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
id	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.z.Yt
id	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.id = async(function(...)$/;"	f	unknown:M
id	plugged/plenary.nvim/lua/plenary/curl.lua	/^  local id = string.gsub("xxxx4xxx", "[xy]", function(l)$/;"	f
identifier	plugged/nvim-treesitter/queries/c_sharp/highlights.scm	/^  (identifier) @constant) @constant.macro$/;"	f
identifier	plugged/nvim-treesitter/queries/gdscript/highlights.scm	/^  (identifier) @parameter)$/;"	f
identifier	plugged/nvim-treesitter/queries/python/locals.scm	/^  (identifier) @definition.parameter)$/;"	f
identify	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function M.identify(name)$/;"	f	unknown:M
identity	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.identity(...)$/;"	f	unknown:M
identity	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.identity(a)$/;"	f	unknown:M
ids	plugged/bufferline.nvim/tests/sorters_spec.lua	/^    local ids = vim.tbl_map(function(buf)$/;"	f
ids	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^  ids = vim.tbl_filter(function(id)$/;"	f
ie	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
iee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ieee754	plugged/coc.nvim/package-lock.json	/^        "ieee754": "^1.1.8",$/;"	s	object:dependencies.msgpack-lite.requires
ieee754	plugged/coc.nvim/package-lock.json	/^    "ieee754": {$/;"	o	object:dependencies
if_nil	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.if_nil(val, was_nil, was_not_nil)$/;"	f	unknown:f
if_nil	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.if_nil = function(x, was_nil, was_not_nil)$/;"	f	unknown:utils
ig	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
ige	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
ignore	plugged/coc.nvim/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ignore	plugged/coc.nvim/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.eslint.requires
ignore	plugged/coc.nvim/package-lock.json	/^        "ignore": "^5.1.4",$/;"	s	object:dependencies.globby.requires
ignore	plugged/coc.nvim/package-lock.json	/^        "ignore": {$/;"	o	object:dependencies.@eslint/eslintrc.dependencies
ignore	plugged/coc.nvim/package-lock.json	/^        "ignore": {$/;"	o	object:dependencies.eslint.dependencies
ignore	plugged/coc.nvim/package-lock.json	/^    "ignore": {$/;"	o	object:dependencies
ignore	plugged/fzf/src/util/eventbox.go	/^	ignore map[EventType]bool$/;"	m	struct:util.EventBox	typeref:typename:map[EventType]bool
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {$/;"	o	object:definitions.languageServerBase.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerCommand.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerModule.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerSocket.properties
ii	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ij	plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
ik	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
ile	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
im	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
imacros	plugged/telescope.nvim/data/options/options.lua	/^local imacros=function(s)$/;"	f
ime	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
img	plugged/emmet-vim/docs/static/css/style-sites.css	/^img {$/;"	s
implement	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:implement(...)$/;"	f	unknown:Object
implementations	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.implementations = function(opts)$/;"	f	unknown:lsp
import-fresh	plugged/coc.nvim/package-lock.json	/^        "import-fresh": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
import-fresh	plugged/coc.nvim/package-lock.json	/^        "import-fresh": "^3.2.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
import-fresh	plugged/coc.nvim/package-lock.json	/^    "import-fresh": {$/;"	o	object:dependencies
import-local	plugged/coc.nvim/package-lock.json	/^            "import-local": "^3.0.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
import-local	plugged/coc.nvim/package-lock.json	/^        "import-local": "^3.0.2",$/;"	s	object:dependencies.jest.requires
import-local	plugged/coc.nvim/package-lock.json	/^    "import-local": {$/;"	o	object:dependencies
imurmurhash	plugged/coc.nvim/package-lock.json	/^        "imurmurhash": "^0.1.4",$/;"	s	object:dependencies.eslint.requires
imurmurhash	plugged/coc.nvim/package-lock.json	/^        "imurmurhash": "^0.1.4",$/;"	s	object:dependencies.write-file-atomic.requires
imurmurhash	plugged/coc.nvim/package-lock.json	/^    "imurmurhash": {$/;"	o	object:dependencies
inBytes	plugged/fzf/src/util/chars.go	/^	inBytes         bool$/;"	m	struct:util.Chars	typeref:typename:bool
inHandle	plugged/fzf/src/tui/light.go	/^	inHandle        uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
in_git_dir	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local function in_git_dir(file)$/;"	f
incl	plugged/plenary.nvim/tests/plenary/curl_spec.lua	/^local incl = function(p, s)$/;"	f
indent	plugged/plenary.nvim/lua/plenary/busted.lua	/^local indent = function(msg, spaces)$/;"	f
indent_blankline#Refresh	plugged/indent-blankline.nvim/autoload/indent_blankline.vim	/^function! indent_blankline#Refresh(...)$/;"	f
indent_new_line	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.indent_new_line(file, spec, opts)$/;"	f	unknown:M
indent_whole_file	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.indent_whole_file(file, opts)$/;"	f	unknown:M
index	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					var index = elem.selectedIndex,$/;"	v
index	plugged/fzf/src/matcher.go	/^	index   int$/;"	m	struct:fzf.partialResult	typeref:typename:int
indexAt	plugged/fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f	package:algo	typeref:typename:int
index_of	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.index_of(tbl, obj)$/;"	f	unknown:M
inflight	plugged/coc.nvim/package-lock.json	/^        "inflight": "^1.0.4",$/;"	s	object:dependencies.glob.requires
inflight	plugged/coc.nvim/package-lock.json	/^    "inflight": {$/;"	o	object:dependencies
info	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/_log.lua	/^        info = function(_) end,$/;"	f
infoDefault	plugged/fzf/src/options.go	/^	infoDefault infoStyle = iota$/;"	c	package:fzf	typeref:type:infoStyle
infoHidden	plugged/fzf/src/options.go	/^	infoHidden$/;"	c	package:fzf
infoInline	plugged/fzf/src/options.go	/^	infoInline$/;"	c	package:fzf
infoStyle	plugged/fzf/src/options.go	/^type infoStyle int$/;"	t	package:fzf	typeref:typename:int
infoStyle	plugged/fzf/src/terminal.go	/^	infoStyle    infoStyle$/;"	m	struct:fzf.Terminal	typeref:typename:infoStyle
info_error	plugged/plenary.nvim/lua/plenary/errors.lua	/^M.info_error = function(s, func_info, level)$/;"	f	unknown:M
inherits	plugged/coc.nvim/package-lock.json	/^        "inherits": "2",$/;"	s	object:dependencies.glob.requires
inherits	plugged/coc.nvim/package-lock.json	/^    "inherits": {$/;"	o	object:dependencies
ini	plugged/coc.nvim/package-lock.json	/^        "ini": "~1.3.0",$/;"	s	object:dependencies.rc.requires
ini	plugged/coc.nvim/package-lock.json	/^    "ini": {$/;"	o	object:dependencies
init	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.init.prototype = jQuery.fn;$/;"	c	class:jQuery.fn
init	plugged/fzf/src/constants.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/options.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/pattern.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/pattern_test.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/terminal.go	/^func init() {$/;"	f	package:fzf
init	plugged/fzf/src/tui/tui.go	/^func init() {$/;"	f	package:tui
init	plugged/indent-blankline.nvim/lua/indent_blankline/init.lua	/^M.init = function()$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/branch/git_branch.lua	/^function M.init()$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/branch/init.lua	/^M.init = function(self, options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:init(opts)$/;"	f	unknown:Buffer
init	plugged/lualine.nvim/lua/lualine/components/buffers/init.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/diagnostics/init.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^function M.init(opts)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/diff/init.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/fileformat.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/filename.lua	/^M.init = function(self, options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/filetype.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/tabs/init.lua	/^function M:init(options)$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/components/tabs/tab.lua	/^function Tab:init(opts)$/;"	f	unknown:Tab
init	plugged/lualine.nvim/lua/lualine/extensions/quickfix.lua	/^function M.init()$/;"	f	unknown:M
init	plugged/lualine.nvim/lua/lualine/utils/class.lua	/^function Object:init(...) end$/;"	f	unknown:Object
init	plugged/nvim-spectre/lua/spectre/replace/sed.lua	/^sed.init = function(_, config)$/;"	f	unknown:sed
init	plugged/nvim-spectre/lua/spectre/search/ag.lua	/^ag.init = function(_, config)$/;"	f	unknown:ag
init	plugged/nvim-spectre/lua/spectre/search/rg.lua	/^rg.init = function(_, config)$/;"	f	unknown:rg
init	plugged/nvim-spectre/tests/helper.lua	/^M.init = function ()$/;"	f	unknown:M
init	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.init(with_open, with_reload)$/;"	f	unknown:M
init	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter-textobjects.lua	/^function M.init()$/;"	f	unknown:M
init	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.init()$/;"	f	unknown:M
init	plugged/nvim-ts-autotag/lua/nvim-ts-autotag.lua	/^function M.init()$/;"	f	unknown:M
init	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^    init = function(obj)$/;"	f
init.lua	plugged/github-nvim-theme/LUALINE.md	/^### init.lua$/;"	S
init.vim	plugged/github-nvim-theme/LUALINE.md	/^### init.vim$/;"	S
initChanges	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
initDelay	plugged/fzf/src/terminal.go	/^	initDelay    time.Duration$/;"	m	struct:fzf.Terminal	typeref:typename:time.Duration
initDocumentChanges	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
initFunc	plugged/fzf/src/terminal.go	/^	initFunc     func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
initPalette	plugged/fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f	package:tui
initPlatform	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initPlatform	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initScreen	plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f	unknown:tui.FullscreenRenderer
initTheme	plugged/fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f	package:tui
init_buffer_tabnr	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function init_buffer_tabnr(buf)$/;"	f
init_selection	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.init_selection()$/;"	f	unknown:M
initialDelay	plugged/fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c	package:fzf
initialDelayTac	plugged/fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c	package:fzf
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {$/;"	o	object:definitions.languageServerBase.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerCommand.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerModule.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerSocket.properties
initialize	plugged/fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
initialize	plugged/nvcode-color-schemes.vim/generate	/^  def initialize(name, conf)$/;"	f	class:Highlight
inner_describe	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.inner_describe = function(desc, func)$/;"	f	unknown:mod
inner_loop	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^  local inner_loop = function(line)$/;"	f
input	plugged/fzf/src/terminal.go	/^	input        []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
ins_left	plugged/lualine.nvim/examples/evil_lualine.lua	/^local function ins_left(component)$/;"	f
ins_right	plugged/lualine.nvim/examples/evil_lualine.lua	/^local function ins_right(component)$/;"	f
insert	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
insert	plugged/nvim-ts-autotag/tests/closetag_spec.lua	/^function helpers.insert(text)$/;"	f	unknown:helpers
insert	plugged/nvim-ts-autotag/tests/renametag_spec.lua	/^function helpers.insert(text)$/;"	f	unknown:helpers
insert	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:insert(idx, other)$/;"	f	unknown:List
insert	plugged/telescope.nvim/lua/telescope/sorters.lua	/^      insert = function(set_, entry)$/;"	f
insert_in_results	plugged/plenary.nvim/lua/plenary/scandir.lua	/^  local insert_in_results = (function()$/;"	f
insert_symbol	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.insert_symbol = function(prompt_bufnr)$/;"	f	unknown:actions
insert_symbol_i	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.insert_symbol_i = function(prompt_bufnr)$/;"	f	unknown:actions
insert_to_path	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function insert_to_path(object, path, value)$/;"	f
insert_value	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.insert_value = function(prompt_bufnr)$/;"	f	unknown:actions
install	plugged/emmet-vim/docs/index.html	/^			<article id="install">$/;"	I
install	plugged/fzf/Makefile	/^install: bin\/fzf$/;"	t
install	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install(options)$/;"	f
install_health	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function install_health()$/;"	f
install_info	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function install_info()$/;"	f
install_lang	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install_lang(lang, ask_reinstall, cache_folder, install_folder, with_sync, genera/;"	f
installed	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^      installed = vim.tbl_filter(function(l)$/;"	f
installed_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^function M.installed_parsers()$/;"	f	unknown:M
int16	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int32	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int64	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int64-buffer	plugged/coc.nvim/package-lock.json	/^        "int64-buffer": "^0.1.9",$/;"	s	object:dependencies.msgpack-lite.requires
int64-buffer	plugged/coc.nvim/package-lock.json	/^    "int64-buffer": {$/;"	o	object:dependencies
int8	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
intdiv	plugged/plenary.nvim/lua/plenary/operators.lua	/^  intdiv = function(a, b)$/;"	f
integrity	plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
integrity	plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",$/;"	s	object:dependencies.sane.dependencies.fill-range
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO\/qM=",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3\/mrtk=",$/;"	s	object:dependencies.sane.dependencies.normalize-path
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",$/;"	s	object:dependencies.has-values.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-IZMqVJ9eUv\/ZqCf1cOBL5iqX2lQ=",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",$/;"	s	object:dependencies.has-values.dependencies.is-number
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",$/;"	s	object:dependencies.sane.dependencies.is-number
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",$/;"	s	object:dependencies.escodegen.dependencies.levn
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="$/;"	s	object:dependencies.rc.dependencies.strip-json-comments
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",$/;"	s	object:dependencies.execa.dependencies.path-key
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-RKrGW2lbAzmJaMOfNj\/uXer98eo=",$/;"	s	object:dependencies.execa.dependencies.shebang-command
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.extglob.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.set-value.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",$/;"	s	object:dependencies.snapdragon.dependencies.ms
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",$/;"	s	object:dependencies.escodegen.dependencies.type-check
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-bWHeldkd\/Km5oCCJrThL\/49it3E=",$/;"	s	object:dependencies.unset-value.dependencies.has-values
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.base.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.extglob.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",$/;"	s	object:dependencies.unset-value.dependencies.has-value
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",$/;"	s	object:dependencies.sane.dependencies.to-regex-range
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="$/;"	s	object:dependencies.cli-table.dependencies.color-name
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="$/;"	s	object:dependencies.cli-table.dependencies.has-flag
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.class-utils.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.expand-brackets.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.object-copy.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.snapdragon.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.static-extend.dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7q/;"	s	object:dependencies.escodegen.dependencies.optionator
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX/;"	s	object:dependencies.node-notifier.dependencies.uuid
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p\/rmMueb7tWZjQ1rx4Lo/;"	s	object:dependencies.table.dependencies.ansi-regex
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.base.dependencies.is-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.define-property.dependencies.is-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.extglob.dependencies.is-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d\/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2Kkl/;"	s	object:dependencies.sane.dependencies.anymatch
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-6J72N8UNa462wa\/KFODt\/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6G/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-6J72N8UNa462wa\/KFODt\/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6G/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.escodegen.dependencies.estraverse
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.esquery.dependencies.estraverse
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.esrecurse.dependencies.estraverse
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7h/;"	s	object:dependencies.table.dependencies.emoji-regex
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPm/;"	s	object:dependencies.table.dependencies.strip-ansi
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-FiNkvbeHzB\/syOjIUxFDCnhSfzAL8R5vs40MgLFBorXACCOAEaWu0gRZl14vG8MR/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-GF9noBSa9t08pSyl3CY4frMrqp+aQXFGFkf5hEPbh\/pIUFYWMK6ZLTfbmadxJVcJ/;"	s	object:dependencies.jest.dependencies.jest-cli
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112\/TZmHx/;"	s	object:dependencies.execa.dependencies.which
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-LFZ6WMB3iPezQAU9OnGoERzcIVKhcs0OLfD\/NHcqSj3g1wgxuLUL5kSlZbbjFySQ/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64A/;"	s	object:dependencies.sane.dependencies.micromatch
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+I/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+I/;"	s	object:dependencies.cli-table.dependencies.chalk
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7\/wOcfdRHaZ7VWtqCztfHri\/++YKmP51OdWeGPuq/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg\/0BC0wi/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-PoeGJYh8HK4BTO\/a9Tf6ZG3veo\/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.cli-table.dependencies.color-convert
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZm/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZm/;"	s	object:dependencies.cli-table.dependencies.supports-color
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC\/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW\/Vu0miy5YoWvbV345Hau/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VGzh06oynbYa6JbTKUbxOEZN7CYEtWhN7DK5wfzUpeCJl8X8xZX39g2PVfpqXrIEd/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VlZwKPCkYKxQgeSbH5EyngOmRp7Ww7I9rQLERETtf5ofd9pGeswWiOtogpEO850jz/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-WOBp\/EEGUiIsJSp7wcv\/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCm/;"	s	object:dependencies.@babel/traverse.dependencies.globals
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV\/0E4EyYn43P7\/7qvQwPh9BGkHewbMu/;"	s	object:dependencies.tsutils.dependencies.tslib
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc\/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQr/;"	s	object:dependencies.sane.dependencies.braces
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul\/6WlbVge9bhM74OpNP/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul\/6WlbVge9bhM74OpNP/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8C/;"	s	object:dependencies.cssstyle.dependencies.cssom
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.@babel/core.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.make-dir.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\//;"	s	object:dependencies.expand-brackets.dependencies.debug
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\//;"	s	object:dependencies.snapdragon.dependencies.debug
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bYQuGLeFxhkxNOF3rcMtiZxvCBAquGzZm6oWA1oZ0g2THUzivaRhv8uOhdr19Lmoo/;"	s	object:dependencies.streamroller.dependencies.date-format
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hd/;"	s	object:dependencies.jest-validate.dependencies.camelcase
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-cyFDKrqc\/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy\/KjuxWLZ\/FHEH/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-cyFDKrqc\/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy\/KjuxWLZ\/FHEH/;"	s	object:dependencies.eslint.dependencies.ignore
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpw/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cq/;"	s	object:dependencies.execa.dependencies.cross-spawn
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW/;"	s	object:dependencies.jsonfile.dependencies.universalify
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-j5W0\/\/W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj/;"	s	object:dependencies.jest-changed-files.dependencies.execa
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.base.dependencies.is-data-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-nBF+F1rAZVCu\/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP\/QwPNZHnOlwbTk/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-nkiNDGI+Ytp7uj1lxHXddXCoEunhcry1D+KmVHBfUUgWT9jMF8ZJyH5KQObdF+OGA/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7\/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3/;"	s	object:dependencies.read-pkg.dependencies.type-fest
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTm/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTm/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5/;"	s	object:dependencies.streamroller.dependencies.universalify
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5/;"	s	object:dependencies.tough-cookie.dependencies.universalify
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-sauaDf\/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7Qz/;"	s	object:dependencies.execa.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-sauaDf\/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7Qz/;"	s	object:dependencies.normalize-package-data.dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea\/M0Q7+T374Jp1aUiyUl0GKxp/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-tqPKHZ5CaBJw0Xmy0ZZvLs1qTV+BNFSyvn77ASXkpBNfIRk8ev26fKrD9iLGwGA9z/;"	s	object:dependencies.jsdom.dependencies.acorn
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-vafcv6KjVZKSgz06oM\/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJ/;"	s	object:dependencies.table.dependencies.string-width
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9/;"	s	object:dependencies.streamroller.dependencies.fs-extra
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zAoAQiudy+r5SvnSw3KJy5os\/oRJYHzrzja\/tBDqrZtNhUw8bt6y8OBzMWcjWr+/;"	s	object:dependencies.flat-cache.dependencies.flatted
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.chalk.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.expect.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+K/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-1kYQdP6\/7HHn4VI1dhoyml3HxSA=",$/;"	s	object:dependencies.arr-diff
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s="$/;"	s	object:dependencies.concat-map
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4\/fm6Ho=",$/;"	s	object:dependencies.which-module
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2pN\/emLiH+wf0Y1Js1wpNQZ6bHI=",$/;"	s	object:dependencies.urix
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",$/;"	s	object:dependencies.get-value
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og\/YW4=",$/;"	s	object:dependencies.to-fast-properties
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3TxQsm8FnyXn7e42REGDWOKprYk=",$/;"	s	object:dependencies.msgpack-lite
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",$/;"	s	object:dependencies.delayed-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",$/;"	s	object:dependencies.arr-union
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",$/;"	s	object:dependencies.makeerror
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",$/;"	s	object:dependencies.is-typedarray
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-6PvzdNxVb\/iUehDcsFctYz8s+hA="$/;"	s	object:dependencies.isexe
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",$/;"	s	object:dependencies.decode-uri-component
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",$/;"	s	object:dependencies.map-visit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-7uuINC+tvoAnwPNq2pIaE+b5YgY="$/;"	s	object:dependencies.rfc-3986
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=",$/;"	s	object:dependencies.growly
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",$/;"	s	object:dependencies.object-visit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",$/;"	s	object:dependencies.decamelize
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-AerA\/jta9xoqbAL+q7jB\/vfgDqs=",$/;"	s	object:dependencies.posix-character-classes
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",$/;"	s	object:dependencies.set-blocking
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",$/;"	s	object:dependencies.sprintf-js
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BjJjj42HfMghB9MKD\/8aF8uhzQw=",$/;"	s	object:dependencies.exit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",$/;"	s	object:dependencies.is-data-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",$/;"	s	object:dependencies.is-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="$/;"	s	object:dependencies.path-is-absolute
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="$/;"	s	object:dependencies.fs.realpath
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ="$/;"	s	object:dependencies.escape-string-regexp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",$/;"	s	object:dependencies.has-value
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",$/;"	s	object:dependencies.functional-red-black-tree
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ\/wA=",$/;"	s	object:dependencies.lines-and-columns
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE=",$/;"	s	object:dependencies.tmpl
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-J3siiofZWtd30HwTgyAiQGpHNCM="$/;"	s	object:dependencies.int64-buffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",$/;"	s	object:dependencies.extend-shallow
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",$/;"	s	object:dependencies.to-object-path
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",$/;"	s	object:dependencies.walker
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-LGN\/53yJOv0qZj\/iGqkIAGjiBSo=",$/;"	s	object:dependencies.resolve-url
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-NDcSHbL+Za8LoIC34ahjb2MsypE=",$/;"	s	object:dependencies.isuri
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",$/;"	s	object:dependencies.npm-run-path
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",$/;"	s	object:dependencies.p-finally
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",$/;"	s	object:dependencies.fast-levenshtein
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",$/;"	s	object:dependencies.safe-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr\/\/DRk=",$/;"	s	object:dependencies.fragment-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",$/;"	s	object:dependencies.collection-visit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",$/;"	s	object:dependencies.inflight
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Sr6\/7tdUHywnrPspvbvRXI1bpPc=",$/;"	s	object:dependencies.natural-compare
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",$/;"	s	object:dependencies.isobject
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",$/;"	s	object:dependencies.once
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-WWZ\/QfrdTyDMvCu5a41Pf3jsA2c=",$/;"	s	object:dependencies.assign-symbols
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-XqtQsor+WAdNDVgpE4iCi15fvJg=",$/;"	s	object:dependencies.chainsaw
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-YICcOcv\/VTNyJv1eC1IPNB8ftcY=",$/;"	s	object:dependencies.static-extend
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd\/Ik=",$/;"	s	object:dependencies.is-extendable
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",$/;"	s	object:dependencies.copy-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",$/;"	s	object:dependencies.co
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-cXuPIgzAu3tE5AUUwisui7xw2Lk="$/;"	s	object:dependencies.traverse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",$/;"	s	object:dependencies.is-arrayish
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",$/;"	s	object:dependencies.text-table
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",$/;"	s	object:dependencies.object-copy
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",$/;"	s	object:dependencies.unset-value
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",$/;"	s	object:dependencies.for-in
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-h6EKxMFpS9Lhy\/U1kaZhQftd10c=",$/;"	s	object:dependencies.object.pick
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs="$/;"	s	object:dependencies.node-int64
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jGStX9MNqxyXbiNE\/+f3kqam30I=",$/;"	s	object:dependencies.require-directory
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA=",$/;"	s	object:dependencies.node-modules-regexp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jcrkcOHIirwtYA\/\/Sndihtp15jc=",$/;"	s	object:dependencies.repeat-string
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",$/;"	s	object:dependencies.imurmurhash
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-lbC2P+whRmGab+V\/51Yo1aOe\/k8=",$/;"	s	object:dependencies.has-values
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-n2BVO8XOjDOG87VTz\/R0Yq3sqnk=",$/;"	s	object:dependencies.binary
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",$/;"	s	object:dependencies.is-fullwidth-code-point
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",$/;"	s	object:dependencies.is-extglob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qJS3XUvE9s1nnvMkSp\/Y9Gri1Cg=",$/;"	s	object:dependencies.array-unique
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qeEss66Nh2cn7u84Q\/igiXtcmNY=",$/;"	s	object:dependencies.is-accessor-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-s2PlXoAGym\/iF4TS2yK9FdeRfxQ=",$/;"	s	object:dependencies.pascalcase
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",$/;"	s	object:dependencies.deep-is
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-skV5w77U1tOWru5tmorn9Ugqt7s="$/;"	s	object:dependencies.buffers
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-t3c14xXOMPa27\/D4OwQVGiJEliI=",$/;"	s	object:dependencies.expand-brackets
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="$/;"	s	object:dependencies.wrappy
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-u0P\/VZim6wXYm1n80SnJgzE2Br8=",$/;"	s	object:dependencies.strip-eof
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="$/;"	s	object:dependencies.isarray
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-vMbEmkKihA7Zl\/Mj6tpezRguC\/4=",$/;"	s	object:dependencies.lodash.memoize
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",$/;"	s	object:dependencies.remove-trailing-separator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",$/;"	s	object:dependencies.map-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",$/;"	s	object:dependencies.asynckit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF\/1\/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0/;"	s	object:dependencies.astral-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+a9MPUQrNGRrGU630OGbYVQ+11iOIovjCkqxajPa9w57Sd5ruK8WQNsslzpa0x\/QJqC8/;"	s	object:dependencies.vscode-languageserver-types
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+bT2uH4E5LGE7h\/n3evcS\/sQlJXCpIp6ym8OWJ5eV6+67Dsql\/LaaT7qJBAt2rzfoa/;"	s	object:dependencies.levn
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEh/;"	s	object:dependencies.string-length
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+nVsLKlcUCeMzD2ufHEYuJ9a2ovstb6Dp52A5VsoKxDXgvE051XgHI\/33I1EymwkRGQk/;"	s	object:dependencies.@types/semver
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+q\/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidI/;"	s	object:dependencies.at-least-node
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+ufuXprtQ1D1iZTO\/K9+EBRn+qPWMJjZSw\/S0KlFrxCw4tkrzv9grgpDHkY9MeQTjTY/;"	s	object:dependencies.@babel/helpers
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x\/oI/;"	s	object:dependencies.end-of-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0JV5+SOCQkIdzjBK9buARcV804Ddu7A0Qet6sHi3FimE9ne6m4BGQZfRn+NZiXbBk4F4X/;"	s	object:dependencies.is-bigint
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0Xv+xcmkTsOZdIF4yCnd7RkOOyfyqPaqJ7RZFKnwdxfDbkN3eAAE9sHl8zJFqBz4Vhxol/;"	s	object:dependencies.@types/tar
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0b4HOimQHj9nXNEAA7zWwMM91Zhhba3pspja6sQbgTpynOJf+bkjBnfybNYzbpLbnwXnb/;"	s	object:dependencies.tar
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0fr\/mIH1dlO+x7TlcMy+bIDqKPsw\/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6F/;"	s	object:dependencies.type-detect
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXa/;"	s	object:dependencies.@bcoe/v8-coverage
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L\/vyMX0kHzT\/jiB43jRhd9YUlMGYLQy2z/;"	s	object:dependencies.eslint-visitor-keys
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-14Uleatt7jdzefLPYM3KLcnUl1ZNikaKq34enpb5XG9i81JpppDb5muZvonvKyrl7ftEH/;"	s	object:dependencies.@jest/fake-timers
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-15Ih7phfcdP5YxqiB+iDtLoaTz4Nd35+IiAv0kQ5FNKHzXgdWqPoTIqEDDJmXceQt4JZk/;"	s	object:dependencies.tr46
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxc/;"	s	object:dependencies.nice-try
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-1vinpnX\/ZERcmE443i3SZTmU5DF0rPO9DrL4I2iVAllhxzCM9SzPlHnz19fsZB78htkK/;"	s	object:dependencies.cli-table
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2AlqgYnVPOc9WDyWu7S5DJaEZsfk6dNh\/neatQ3IHUW4QLutM\/VPSH9lG7bif+XjFWc/;"	s	object:dependencies.marked
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2DtFcgT68wiTTiwZ2hNdJfcHNke9XOfnwmBRWXhmeKM8rF0TGwmC\/Qto3S7RoZKp5cil/;"	s	object:dependencies.fast-glob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2NxwbF\/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx\/hIZl6Va0bF45RQOOwhLIy8lQDbuCi/;"	s	object:dependencies.eslint-scope
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2gdzbKUuqtQ3lYNrUTQYoClPhm7oQu4UdpSZMp1\/DGgkHBT8E2Z1l0yMdb6D4zNAxwDi/;"	s	object:dependencies.is-string
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2z6JzQvZRa9A2Y7xC6dQQm4FSTSTNWjKIYYTt4246eMTJmIo0Q+ZyOsU66X8lxK1AbB92/;"	s	object:dependencies.is-negative-zero
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-37RSHht+gzzgYeobbG+KWryeAW8J33Nhr69cjTqSYymXVZEN9NbRYWoYlRtDhHKPVT1Fy/;"	s	object:dependencies.@types/yargs-parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-39nnKffWz8xN1BU\/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515/;"	s	object:dependencies.estraverse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE\/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPN/;"	s	object:dependencies.define-properties
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo\/TlYz6eQi/;"	s	object:dependencies.gensync
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3lFWKbLxJm34QxyVNNCgXX1u4o\/RV0myvA2y2Bxm46iGIjKlaY0own9gIckbjZJPn+Wa/;"	s	object:dependencies.ts-jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpW/;"	s	object:dependencies.balanced-match
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv\/41Sn2emQ0dycQW4uZXLejwKv/;"	s	object:dependencies.yallist
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV\/ioewSgQl97JHvgjoRG/;"	s	object:dependencies.strip-bom
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvN/;"	s	object:dependencies.is-number
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-48ql1CLL59aKbU94Y88Xgb2VFy7a95ykGRbJJaaVv+LX5U8wFpLfiGXJJGUozsmA1oEh\//;"	s	object:dependencies.@babel/helper-member-expression-to-functions
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2bi/;"	s	object:dependencies.convert-source-map
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4cVvR2\/1B693IuOvSI20xqqa\/+bl7lqAMR59R4iu39R9aOX8\/JoYY1sFaNvUMyMBGn/;"	s	object:dependencies.@babel/helper-module-imports
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY/;"	s	object:dependencies.type-fest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4tzD0mF8iSiMiNs30BiLO3EpfGLZUT2MSX\/G+o7ZywDzliWQ3OPtTZ0PTC3B3ca1UAf4/;"	s	object:dependencies.w3c-xmlserializer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT\/H6NQv\/ghhy30o55ufafxJ\/LdH7/;"	s	object:dependencies.is-glob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5LBh1Tls8c9xgGjw3QrMwETmTMVk0oFgvrFSvWx62llR2hcEInrKNZ2GZCCuuy2lvWrdl/;"	s	object:dependencies.saxes
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5O7H5c\/7YlojphYNrK02LlDIV2GNPYisKwHm2QTKjNZeEzezCbwYs9swJySv2UfPMyZ0/;"	s	object:dependencies.@jest/test-result
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6/;"	s	object:dependencies.base
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB\/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKD/;"	s	object:dependencies.jsonfile
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5kvd38wZpqGY4yP\/6W3qhYX6Hz0NwUbijVsX2rxczpY6OXaMxh0+5E5uLJKVFwaBM7PJ/;"	s	object:dependencies.@typescript-eslint/types
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5l4VyZR86LZ\/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB\/c0GUsH+y39UfCi3dz/;"	s	object:dependencies.run-parallel
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1\//;"	s	object:dependencies.ci-info
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6564t0m0fuQMnockqBv7wJxo9T5C2V9JpYXyNScfRDPVLusOQQhkpMGrFC17QbiolraQ1/;"	s	object:dependencies.ansi-styles
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li\/Hx6tyK0NEb+2GCy/;"	s	object:dependencies.to-regex-range
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6A2fkfq1rfeQZjxrZJGerpLCTHRNEBiSgnu0+obeJpEPZRUooHgsizvzv0ZjJwOz3iWIH/;"	s	object:dependencies.is-core-module
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E\/91/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2P/;"	s	object:dependencies.normalize-path
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6fPc+R4ihwqP6N\/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS\//;"	s	object:dependencies.strip-json-comments
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6m+9Z3Gv9wN0WFVasqjCL\/06+EFCMTqDEUl\/b87HYK2rAPTyfz4ZIuSlPhY51PIQRWx/;"	s	object:dependencies.jest-diff
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6sXEzV5+I5j8Bmq9\/vUphGRM\/RJNT9SCURJLjwfOg51heRtguGWDzcaBlgAzKhQa0EV/;"	s	object:dependencies.supports-hyperlinks
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShW/;"	s	object:dependencies.shebang-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91/;"	s	object:dependencies.optionator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7AeGuCYNGmycyQbCqd\/3PWH4eOoX\/OiCa0uphp57NVTeAGdJGaAliecxwBDHYQCIvrW/;"	s	object:dependencies.pretty-format
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7Eczs8gIPDrVzT+EksYBcupqMyxSHXXrHOLRRxU2\/DicV8789MRBRR8+Hc2uWzUupOs4/;"	s	object:dependencies.fastq
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7FEjbrx5SL9cWvXioDbnlYTppcZGuCY6ow3\/D5vMggb2Ywgu4dMrpTJX0JdQAIcRRUEl/;"	s	object:dependencies.@babel/helper-simple-access
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7Gps\/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs\/cpyJJ3CVIVpH/;"	s	object:dependencies.file-entry-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtz/;"	s	object:dependencies.call-bind
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa\/XMrSbdmg3r2Xnaidz9/;"	s	object:dependencies.progress
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4\/\/DL+icEBfc0U7qJCisqrTsKT/;"	s	object:dependencies.error-ex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s/;"	s	object:dependencies.uri-js
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-85Ltnm7HlB\/KesBUuALwQ68YTU72w9H2xW9FjZ1eL1U3lhtefjjl5c2MiUbpXt\/i6La/;"	s	object:dependencies.@jest/globals
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8TEXQxlldWAuIODdukIb+TR5s+9Ds40eSJrw+1iDDA9IFORPjMELarNQE3myz5XIkWWpd/;"	s	object:dependencies.vscode-uri
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8oDqyLC7eD4HM307boe2QWKyuzdzWBj56xI\/imSl2cpL+U3tCMaTAkMJ4ee5JBZ\/FsO/;"	s	object:dependencies.@types/which
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe\/WZkoIzjn\/3TGDwtOCYtXGxA3O8tPzpc/;"	s	object:dependencies.merge2
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9H6YdfkcK\/uOnY\/K7\/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsS/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9IK9EadsbHo6jLWIpxpR6pL0sazTXV6+SQv25ZB+F7Bj9mJNaOc4nCRabwd5M\/JwmUa8/;"	s	object:dependencies.abab
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9/;"	s	object:dependencies.symbol-tree
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9YXf6xtW+qzQ+hcMQXx95MOvfqXFgsKDZodX3qZB0x2n5Z94ioetIITsBtvJbiOyxa\/6/;"	s	object:dependencies.regextras
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9\/hlOBkQl2l\/PLHJx6JjoDF6xPKcJEsUlWKb23rKE7KzeDqUZKXKNMW27KIue5JMdBV/;"	s	object:dependencies.expect
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDk/;"	s	object:dependencies.browser-process-hrtime
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9tZvz7AiR3PEDNGiV9vIouQ\/EAcqMXFmkcA1CDFTwOB98OZVDL0PH9glHotf5Ugp6GCO/;"	s	object:dependencies.istanbul-reports
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A2HuJWl2opDH0EafgdjwEw7HysI8ff\/n4lW4QEVBCUXFk9QeGecBWv0Deph0UmLe3tTN/;"	s	object:dependencies.promise.prototype.finally
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz\/qizqzJKOMIfUJHETbBw\/sFaDxgd6fxm1ewUaM0jZ/;"	s	object:dependencies.xml-name-validator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A81F9pDwyS7yM\/\/KwbCSDqy3Uj4NMIurtplxphWxoYtNPov7cJsDkAFNNyVlIZ3jwGy/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A8OG5SR\/ij3SsJdWDJdkkSYUjQdCUx6APQXem0SaEePBSRg4eymGYwBkKo1Y6DU+af\//;"	s	object:dependencies.emittery
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE\/QtHm/;"	s	object:dependencies.babel-plugin-istanbul
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AKcdTnFSWATd5\/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+y/;"	s	object:dependencies.cache-base
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9\/Sr/;"	s	object:dependencies.glob-parent
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi\/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4/;"	s	object:dependencies.cssstyle
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Al2P394dx+kXCl61fhrrZ1FTI7qsRDIUiVSuN6rTwss6lUn8uVO2+nnF4AvO0ug8vMsy3/;"	s	object:dependencies.@typescript-eslint/scope-manager
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ao2jlksPEUGCEXBvJz5e2MuDpYUtxXgtUk45cg0g5Mmy4f0j7bQuDlOlqBMgKGRl9dZAK/;"	s	object:dependencies.@types/fb-watchman
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ArliyUsWDUqEGfWcmzpGUzNfLxTdTp6WU4IuP6QFSp9gGfWS6boxFCkJSJ\/L4+RG8z\//;"	s	object:dependencies.@babel/parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz/;"	s	object:dependencies.strip-ansi
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Auw9a4AxqWpa9GUfj370BMPzzyncfBABW8Mab7BGWBYDj4Isgq+cDKtx0i6u9jcX9pQDn/;"	s	object:dependencies.fsevents
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8\/9My\/DD9onKeu\/94fwrMocemO2QAJFAlnn/;"	s	object:dependencies.write-file-atomic
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BJ3jwPQu1jeynJ5BrjLuGfK\/UJu6uwHxJ\/di7sanqmUmxzmyIcd3vz58PMR7wpi8k3i/;"	s	object:dependencies.@typescript-eslint/parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjE/;"	s	object:dependencies.which
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BMpfD7PpiETpBl\/A6S498BaIJ6Y\/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53/;"	s	object:dependencies.ignore
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BTIhocbPBSrRmHxOAJFtR18oLhxTtAFDAvL8hY1S3iU8k+E60W\/YFs4jrixGzQjMpF4q/;"	s	object:dependencies.@nodelib/fs.walk
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BWICuzzDvDoH54NHKCseDanAhE3CeDorgDL5MT6LMXXj2WCnd9UC2szdk4AWLfjdgNBCX/;"	s	object:dependencies.globals
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BXgQl9kf4WTCPCCpmFGoJkz\/+uhvm7h7PFKUYxh7qarQd3ER33vHG\/\/qaE8eN25l07/;"	s	object:dependencies.istanbul-lib-instrument
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BdWQhoVJkp6nVjB7nkFWcn43dkprYauqtk++Py2eaf\/GRDFm5BxRqEIZCiHlZUGAVmtw/;"	s	object:dependencies.@babel/helper-optimise-call-expression
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzh/;"	s	object:dependencies.strip-final-newline
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-C\/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq/;"	s	object:dependencies.is-symbol
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-D5JbOMBIR\/TVZkubHT+OyT2705QvogUW4IBn6nHd756OwieSF9aDYFj4dv6HHEVGYbHa/;"	s	object:dependencies.html-encoding-sniffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DPSke0pXhTZgoF\/d+WSt2QaKMCFSfx7QegxEWT+JOuHF5aWrKEn0G+ztjuJg\/gG8\/I/;"	s	object:dependencies.uuid
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DjEVzQNz5LICkzN0REdpD5prGoidvbdYk1BVgRUOINaWJP2t6avB27X1guXK1kXNrX0WM/;"	s	object:dependencies.@babel/helper-get-function-arity
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DkPJKQeY6kKwmuMretBhr7G6Vodr7bFwDYTXIkfG1gjvNpaxBTQV3PbXg6bR1c1UP4jPO/;"	s	object:dependencies.fb-watchman
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DpKm2Ui\/xN7\/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3\/J/;"	s	object:dependencies.validate-npm-package-license
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DtM3g7juCXQxFVSNPNByEC2+NImtBuxQQvWlHunpJIS5Ocr0lG306cC7FCi7cEA0fzmyb/;"	s	object:dependencies.chokidar
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DyFP3BM\/3YHTQOCUL\/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo/;"	s	object:dependencies.get-caller-file
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-E9JjhUgNzvuQ+vVAL21vlyfy12gP0GhazGgJC4h6qUt1jSdUXGWJ1wfu\/X7Sd8etSgxV/;"	s	object:dependencies.@jest/transform
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EQyfIuO2hPDsX1L\/blblV+H7I0knhgAd82cVneCwcdND9B8AuCDuRcBH6yIcG4dFzlOU/;"	s	object:dependencies.prompts
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXR/;"	s	object:dependencies.@types/events
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EfB5OHNYp1F4px\/LI\/FEnGylop7nOqkQ1LRzCM0KccA2U8tvV8w01KBv37LbO7nW4H+/;"	s	object:dependencies.@eslint/eslintrc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EkYm5BcKUGiduxzSt3Eppko+PiNWNEpa4ySk9vTC6wDsQJW9rHSa+UhGNJoRYp7bz6Ht1/;"	s	object:dependencies.https-proxy-agent
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLr/;"	s	object:dependencies.content-disposition
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHT/;"	s	object:dependencies.has-flag
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWh/;"	s	object:dependencies.is-docker
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-F+v2zxZgw\/fMwPz\/VUGIggG4ZndDsYy0vlpthi3tjmDZlcfbhN5mYW0evXUsBr2sUtu/;"	s	object:dependencies.electron-to-chromium
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj\/6WqMiFQJpBBYz1Pt+66bZ/;"	s	object:dependencies.deepmerge
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04/;"	s	object:dependencies.mime-db
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP\/UODVpGsr5OhXhhXg6f+qt/;"	s	object:dependencies.minimist
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8l/;"	s	object:dependencies.combined-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FWtleNAtZ\/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKi/;"	s	object:dependencies.to-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FtyOnWN\/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioE/;"	s	object:dependencies.snapdragon
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GKNxVA7\/iuTnAqGADlTWX4tkhzxZKXp5fLJqKTlQLHkE65XDUKutZ3BHaJC5IGcper2t/;"	s	object:dependencies.comment-parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS\//;"	s	object:dependencies.get-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GQ2EWRpQV8\/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl\/hC3vtHHBfGm2Ifi6qWV+coDGkr/;"	s	object:dependencies.parent-module
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8\/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOI/;"	s	object:dependencies.safe-buffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Gv3ZIs\/nA48\/Zvjrl34bf+oD76JHiGDUxNOVgUjh3j890sblXryjY4rss71fPtD\/nj/;"	s	object:dependencies.jest-regex-util
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkR/;"	s	object:dependencies.html-escaper
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-H8jvkz1O50L3dMZCsLqiuB2tA7muqbSg1AtGEkN0leAqGjsUzDJir3Zwr02BhqdcITPg3/;"	s	object:dependencies.jsonc-parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz\/cR5pf8r\/cR4Wq60sL\//;"	s	object:dependencies.array-union
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HRDzbaKjC+AOWVXxAU\/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu\/Fr23Eiek/;"	s	object:dependencies.pkg-dir
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HV1Cm0Q3ZrpCR93tkWOYiuYIgLxZXZFVG2VgK+MBWjUqZTundupbfx2aXarXuw5Ko5aMc/;"	s	object:dependencies.@babel/code-frame
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HkGSK7CGAXncr8Qn\/0VqNtExEE+PHMWb+qlR1faHMao7ng6P3tAaoWWBMdva0gL5h4zp/;"	s	object:dependencies.@types/mkdirp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HnSYx1BsJ87\/p6swwzv+2v6B4X+uxUteoDfRxsAb1S1BePzQqOLevVmkdA15GHJVd9A9/;"	s	object:dependencies.event-lite
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF\/f5O\/t8x+KaNdrdI/;"	s	object:dependencies.source-map-resolve
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Hz\/mrNwitNRh\/HUAtM\/VT\/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1K/;"	s	object:dependencies.word-wrap
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-IY1R2i2aLsLr7Id3S6p2BA82GNWryt4oSvEXLAKc+L2zdi89dSkE8xC1C+0kpATG4JhBJ/;"	s	object:dependencies.@jest/console
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-IrlBhD9bm4bdYcS8xpWarazkKXlE7iYb1HzRuyBP114mIaj5DJPo11Us1HgH60dTt41TC/;"	s	object:dependencies.@typescript-eslint/visitor-keys
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-J1DcMe8UYTBSrKezuIUTUwjXsho29693unXM2YhJUTR2txK\/eG47bvNa\/wipPFmZFgr/;"	s	object:dependencies.is-callable
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN\/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaV/;"	s	object:dependencies.regex-not
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC7/;"	s	object:dependencies.y18n
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JV\/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgal/;"	s	object:dependencies.ini
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX\/2o0L9UBw9O\/Y3o6wFw\/i9YLapc/;"	s	object:dependencies.rimraf
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7/;"	s	object:dependencies.xmlchars
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JgdzOYZ\/qGaKTVkn5qEDV\/SXAh8KcyUVkCoSWGN8T3bwrgd6m+\/dJa2kVGi6RJYJgE/;"	s	object:dependencies.@babel/helper-compilation-targets
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JiBdRBq91WlY7uRJ0ds7R+dU02i6LKi8r3BuQhNXn+kmeLN+EfHhfjqMRis1zJxnlu88h/;"	s	object:dependencies.regexp.prototype.flags
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd\/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fa/;"	s	object:dependencies.lru-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666\/hhCGKN5t9QFjbJQKUU\/g8MNbFDbvfrgKXvI1Q/;"	s	object:dependencies.ansi-colors
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JvONPptw3GAQGXlVV2utDcHx0BiY34FupW\/kI6mZ5x06ER5DdPG\/tXWMVHjTNULF5uK/;"	s	object:dependencies.vscode-jsonrpc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m\/XPHafOmK4UWD7m2CI14GMcFypt4w\/0+NV5f\/ZMb/;"	s	object:dependencies.set-value
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-K0Ptm\/47OKfQRpNQ2J\/oIN\/3QYiK6FwW+eJbILhsdxh2WTLdl+30o8aGdTbm5Jbffp/;"	s	object:dependencies.acorn-jsx
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6/;"	s	object:dependencies.jest-worker
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KaL7+6Fw6i5A2XSnsbhm\/6B+NuEA7TZ4vqxnd5tXz9sbKtrN9Srj8ab4vKVdK8YAqZO9/;"	s	object:dependencies.decimal.js
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ki212dKK4ogX+xDo4CtOZBVIwhsKBEfsEEcwmJfLQzirgc2jIWdzg40Unxz\/HzEUqM1W/;"	s	object:dependencies.spdx-license-ids
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL\/oCFgn2NYXEtqP8\/L3pKapUA4G8cFVaoF3SU323CD4/;"	s	object:dependencies.esrecurse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2\/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuG/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRD/;"	s	object:dependencies.camelcase
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-L3hKV5R\/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXc/;"	s	object:dependencies.arr-flatten
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo\/k5YYdYgpY2\/2EsOsksJrq7lOHxryrVOn/;"	s	object:dependencies.path-parse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2\/+StMjK8Y6Vqd2MG7r\/Qjw4ghtuCOjFv/;"	s	object:dependencies.repeat-element
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw\/ufM8+rVj649RIHzcm\/vGwQRXFt6OPqIFWsm2XEMrN/;"	s	object:dependencies.deep-extend
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LSBS2LjbNBTf6287JEbEzvJgftkF5qFkmCo9hDRpAzKhUOlJ+hx8dd4USs00SgsUNwc46/;"	s	object:dependencies.has-bigints
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LwZy+p3SFs1Pytd\/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69Tx/;"	s	object:dependencies.pump
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO/;"	s	object:dependencies.glob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB\/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV\//;"	s	object:dependencies.whatwg-mimetype
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-M7LQ0bxarkxQoN+vz5aJPsLBn77n8QgTFmo8WK0\/44auK2xlCXrYcUxHFxgU7qW5Yzw\//;"	s	object:dependencies.babel-preset-current-node-syntax
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MDW0fKfsn0OI7MS7Euz6h8HNDXVQ0gaM9uW6RjfDmd1DAFcaxX9OqIakHIqhbnmF08Cf2/;"	s	object:dependencies.jest-util
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MKGMzyfeuutC\/ZJ1cba9NqcNpfeqMUcYmyF1ZFY6\/Cn7CNSAKx6a+s48sqLqyAiZuaP/;"	s	object:dependencies.colorette
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO\/k9V3hjVUF\/zwW7KBVdSK4gIt\/bzwS9Mb/;"	s	object:dependencies.buffer-from
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo\/RPgnr1\/GGt+ic3iJTzQ8/;"	s	object:dependencies.emoji-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MZPUxrmFubI36XS1DI3qmI0YdN1gks62JtFZvxR67ljjSNCeK6U08Zx4msEWOXuofgqUt/;"	s	object:dependencies.@sinonjs/fake-timers
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mc8jNuSFImQUIateBFwdOQcmC6Q5maU0VVvdC2R6XMb66\/VnT+7WS4D\/0EeNMZu1YOD/;"	s	object:dependencies.log4js
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MdSJnBjl+bdwkLskZ3NGFp9YcXGx5ggLpQQPqtgakVhsWK0hTtNYhjpZLlWQTviGTvF8a/;"	s	object:dependencies.@types/babel__generator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mer\/f0KaATbjl8MCJ+0GEpNdqmnVmDYqCTJYTvoo7rqmRiDllmp2AYN+06F93nXcY3ur/;"	s	object:dependencies.jest-each
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7D/;"	s	object:dependencies.minipass
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MmnFaF7P8Sw\/WsselXtoexTUxPJGWupUDMTz0T76mWU+M61TXt213UBgxA\/idr7ZSCn/;"	s	object:dependencies.@chemzqm/neovim
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mv\/TDa3nZ9sbc5soK+OoA74BsS3mL37yixCvUAQkiuA4Wz6YtwP\/K47n2rv2ovzHZvo/;"	s	object:dependencies.diff-sequences
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NEYZ9Aeyj0i5rQqbq+tpIOom0YS1u2MVu6+euBsvpgIme+FOfRmoC4R5p0JiAUpaFvFy2/;"	s	object:dependencies.jest-validate
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe\/ZdlJy+J3uCpfa/;"	s	object:dependencies.require-main-filename
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NTPErx4\/FiPCGScH7foPyr+\/1Dkzkni+rHiYHHoTjvwou7AQzJkNeD60A9CXRy+ZEN2/;"	s	object:dependencies.@types/babel__template
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NYZlkZRydxw+YT56IlhIcS8PAhb+FEUiOzuhFTfqDyPmzAhRge6ua0dQYT\/Uh0t\/EDH/;"	s	object:dependencies.@babel/helper-function-name
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5\/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN/;"	s	object:dependencies.is-buffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgd/;"	s	object:dependencies.extglob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+Gjk/;"	s	object:dependencies.object-keys
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5/;"	s	object:dependencies.queue-microtask
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NzNVhJDYpwceVVii8\/Hu6DKfD2G+NrQHlS\/V\/qgv763EYudVwEcMQNxd2lh+0VrUBy/;"	s	object:dependencies.split-string
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-O0DB1JC\/sPyZl7cIo78n5dR7eUSwwpYPiXRhTzNxZVAMUuB8vlnRFyLxdrVToks6XPLV/;"	s	object:dependencies.internal-slot
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-O27l4xaMYt\/RSQ5TR3vpWCAB5Kb\/czIcqUFOM\/C4fYcLnbZUc1PkjTAMjof2pBWaST/;"	s	object:dependencies.snapdragon-node
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OBxYDA2ifZQ2e13cP82dWFMaCV9CGF8GzmN4fljBVw5O5wep0lu4gacm1OL6MjROoUnB8/;"	s	object:dependencies.string.prototype.matchall
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OG79qm3AujAM9ImoqgWEY1xG4HX+Lw+yY6qZj9R1K2mhF5bEmQ849wvrb+4vt4jLMLzwX/;"	s	object:dependencies.streamroller
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OLhxz05EzUtsAmOMzuupt1lHYXCNib0ECyuZ\/PZOx9TrZcC8vL0x+DUG3TL+GLX3yHG4/;"	s	object:dependencies.jest-snapshot
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2\/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2w/;"	s	object:dependencies.acorn-walk
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6\/Cy2/;"	s	object:dependencies.jsesc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ofn\/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z/;"	s	object:dependencies.parse5
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH\/sqsWvhQ3vgwKFRR1Hpj/;"	s	object:dependencies.mimic-fn
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OrOb32TeeambH6UrhtShmF7CRDqhL6\/5XpPNp2DuRH6+9QLw\/orhp72j87v8Qa1ScDk/;"	s	object:dependencies.semver
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OrZaX2Mb+rJCpH\/6CpSqt9xFVpN++x01XnN2ie9g6P5\/3xelLAkXWVADpdz1IHD\/KF/;"	s	object:dependencies.resolve-cwd
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OznJUda\/soKXv0XhpvzGWDnml4Qnwp16GN+D\/kZIdLsWoHj05kyu8Rm5kXmMef+rVJZ/;"	s	object:dependencies.@babel/helper-module-transforms
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y\/GNK7v0aa8rY816xWjZ7rJd/;"	s	object:dependencies.anymatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENct/;"	s	object:dependencies.callsites
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PO9t0697lNTmcEHH69mdtYiOIkkOlj9fySqfO3K1eCcdISevLAE0xY59VLLUj0SoiPiTX/;"	s	object:dependencies.babel-plugin-jest-hoist
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PiT\/hQmTonHhl\/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbd/;"	s	object:dependencies.capture-exit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PijRCG\/K3s3w1We6ynUKdxEc5AcuuH3NBmMDP8uvKVp6X43UY7NQlTzczakXP3DJR0F4/;"	s	object:dependencies.@types/prettier
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PpOwAdQ\/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6/;"	s	object:dependencies.find-up
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2/;"	s	object:dependencies.es-to-primitive
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-QnZUISJJXyhyD6L1e5QwXDV\/A5i2W1\/gl6D6YMc8u0ncPepbv\/B4w3S+izVvtAg60m/;"	s	object:dependencies.@types/cli-table
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJ/;"	s	object:dependencies.slice-ansi
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-R4nPAVTAU0B9D35\/Gk3uJf\/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2/;"	s	object:dependencies.p-try
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-R79ZZ\/0wAxKGu3oYMlz8jy\/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsb/;"	s	object:dependencies.p-locate
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RDZ4Iz3QbtRWycd8bUEPxQsTlYazfYn\/h5R65Fc6gOfwozFhoImx+affzky\/FFBuqIS/;"	s	object:dependencies.jest-docblock
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RHkBKtLWUVwd7SqRIvCZMEvAMoGUp0XU+seQiZejj0COz3RI3hWP4sCv3gZWWLjJTd7rG/;"	s	object:dependencies.form-data
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ\/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r/;"	s	object:dependencies.psl
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RJJrrySY7A8havqpGObOB4W92QXKJo63\/jFLLgpvOtsGUqbQZ9Sbgl35KMm1DjC6j7Av/;"	s	object:dependencies.@types/stack-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpf/;"	s	object:dependencies.color-convert
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RU0lI\/n95pMoUKu9v1BZP5MBcZuNSVJkMkAG2dJqC4z2GlkGUNeH68SuHuBKBD\/XFe+/;"	s	object:dependencies.is-number-object
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RZNwNclF7+MS\/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFI/;"	s	object:dependencies.agent-base
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpk/;"	s	object:dependencies.@tootallnate/once
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0\/yYnSin6Q\/rD3mOutHvUrCAhJub3r90uNb+SE/;"	s	object:dependencies.component-emitter
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2k/;"	s	object:dependencies.js-tokens
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RkhPPp2zrqDAQA\/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1Dcp/;"	s	object:dependencies.@nodelib/fs.stat
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RzaGXLNt+CW+T41h1zl6pGz3EaeVhYlK+rdAap+7DxW5kqsqePO8kRtWPaCiVqdhZc86E/;"	s	object:dependencies.unzip-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-S5wqyz0DXnNJPd\/xfIzZ5Xnp1HrJWBczg8mMfMpN78OJ5eDxXyf+Ygld9wX1DnUWbIbh/;"	s	object:dependencies.jest-serializer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj\/3EdaNfAlxKthD1xjEQfGOUhllCGGJV/;"	s	object:dependencies.human-signals
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SEYeGAIQIQX8NN6LDKprLjbrd5dARM5EXsd8GI\/A5l0apYI1fGMWgPHSe4ZKL4eozlAy/;"	s	object:dependencies.@types/glob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SbehVj+zL0QFTufW3HP\/Xvwr\/kFWw1sFMLCvmyJdp5Xegbo81sqA2tByWlyeryvSwWB/;"	s	object:dependencies.@types/debounce
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TLz+x\/vEXm\/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EB/;"	s	object:dependencies.detect-newline
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B\/RzEfUlLct7b5G\/ytav+wPrplCpVMFuwzXbkecJrb/;"	s	object:dependencies.ret
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TopkMDmLzq8ngChwRlyjR6raKD6gMSae4JdYDB8bByKreQgG0RBTuKe9LRxW3wFtUnjxO/;"	s	object:dependencies.@babel/helper-validator-option
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TpfaviN1R2pQWkIihlfEanwOXK0zcxrKEE4MlU6Tn7keoXdN6\/3gK\/xl0yEh8DOunn5/;"	s	object:dependencies.jest-get-type
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TsdRgvBFHMyHOOzcP9S6QU0QQtjxlRpEYOy3mcCO5RgmC305ki42aSAmfZEMSSYBla2oZ/;"	s	object:dependencies.@babel/traverse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TxNb7YEUwkLXCQYeudi6lgQ\/SZrzNO4kMdlqVxaZPUIUjCv6iSSypUQX70kNBSERpQ8f/;"	s	object:dependencies.v8-to-istanbul
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ty1vmF4NHJkolaEmdjtxTfSfkdb8Ywarwf63f+F8\/mDD1uLSSWDxDuMiZxiPhwunLrn9/;"	s	object:dependencies.jsdom
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-U9nH88a3fc\/ekCF1l0\/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m/;"	s	object:dependencies.reusify
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UIcJDjX7IFkck7cSkNNyzIz5FyvpQfY7sdzVy+wkKN\/BLaD4DQ0ppXQrKePomCxTS7Rr/;"	s	object:dependencies.vscode-languageserver-textdocument
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg0/;"	s	object:dependencies.read-pkg
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC\/mggutCMUIhWMm8gAHb8tHlyfD3\/l/;"	s	object:dependencies.istanbul-lib-coverage
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz\/h0Plj6enJqjz1Zbq2l5Wa/;"	s	object:dependencies.source-map
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V2hovdzFbOi77\/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNc/;"	s	object:dependencies.rfdc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V3ts7zMSu5lfiwWDVWzRDGIN+lnCEUdaXgtVHJgLb1rGaA6jMrtB9EmE7L18foXJIE8Un/;"	s	object:dependencies.@babel/helper-validator-identifier
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf\/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFR/;"	s	object:dependencies.signal-exit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V\/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8/;"	s	object:dependencies.fs-minipass
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-VjeHSlIzpv\/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5/;"	s	object:dependencies.@istanbuljs/load-nyc-config
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Vr64xFDT8w30wFll643e7cGrIkPEU50yIiI36OdSIDoSGguIeaLzBo0vpGvzo9RECUqq7/;"	s	object:dependencies.eslint
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Vs0hm0vPahPMYi9tDjtP66llufgO3ST16WXaSTtDGEl9cewAl3AibmxWw6TINOqHPT9z0/;"	s	object:dependencies.@types/babel__traverse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WKJob0P\/Em2csiVthsI68p6aGKTIcsfjH9Gsx1f0A3Italz43e3ho0geSAVsmj09RWOE/;"	s	object:dependencies.jest-watcher
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WRoDn\/\/mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlr/;"	s	object:dependencies.mixin-deep
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WjKPNJF79dtJAVniUlGGWHYGz2jWxT6VhN\/4m1NdkbZ2nOsEF+cI1Edgql5zCRhs\/Vs/;"	s	object:dependencies.graceful-fs
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55\/tb6DuqyF6pcQ5AbiHEshaDpY9v6/;"	s	object:dependencies.dir-glob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wm6ukoaOGJi\/73p\/cl2GvLjTI5JM1k\/O14isD73YML8StrH\/7\/lRFgmg8nICZgD3/;"	s	object:dependencies.atob
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi\/Mdjv7Tip2cyVbLj5o0cFPN4EV/;"	s	object:dependencies.source-map-support
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wspk\/PqO+4W9qp5iUTJsa1B\/QrYn1keNCcEP5OvP7WBwT4KaDly0uONYmC6Xa3Z5Iqn/;"	s	object:dependencies.browserslist
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+M/;"	s	object:dependencies.pirates
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-X5eWTSXO\/BJmpdIKCRuKUgSCgAN0OwliVK3yPKbwIWU1Tdw5BRajxlzMidvh+gwko9Af/;"	s	object:dependencies.data-urls
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa\/HBy124RqtVh\/O2/;"	s	object:dependencies.mime-types
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprV/;"	s	object:dependencies.punycode
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqd/;"	s	object:dependencies.type-check
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orG/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YHlVIjP5nfEyjlrSr8t\/YdNfU\/1XEt7c5b4OxcXCjyRhjzLYu\/rO69\/WHPuYcbCWk/;"	s	object:dependencies.@jest/test-sequencer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YM4WIsmurrp0rHX6XiXQppqKB8Ne5ATiZLJe2+\/fkp9l9ExXFr43BbAbjZaVrpCT+tuP/;"	s	object:dependencies.eslint-plugin-jsdoc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YSCOwxvTYEIMSGaBQb5kDDsCopDdiUGsqpatp3fOlI4+2HQSkTmEVWnVuySdAC5EWCqSW/;"	s	object:dependencies.@babel/highlight
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7v/;"	s	object:dependencies.safer-buffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX/;"	s	object:dependencies.is-ci
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YmhHDO4MzaDLB+M9ym\/mDA5z0naX8j7SIlT8f8z+I0VtzsRbekxEutHSme7NPS2qE8St/;"	s	object:dependencies.ws
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YvdtlVm9t3k777c5NPQIv6cxFFFapys25HiUmuSgHwIZhfifweR5c5Sf5nwE3MAbfu327/;"	s	object:dependencies.babel-preset-jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YwYcCwAnNmOVsZ8mr3GfnzdXDAl4LaenZP5z+G0c8bzC9\/dugL8zRmxZzdoTl4IaS3Cr/;"	s	object:dependencies.@jest/source-map
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YyFjePHHp1LzpzYcmgqkJ0nm0gg\/lJx2aZFzFy1S6eUqNjXsOqTK10zNRff2dNfssgok/;"	s	object:dependencies.jest-mock
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR\/g7rd0xUimYNlvZRE\/K2MgZTjWy725/;"	s	object:dependencies.is-binary-path
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZOIzd8yVsQQA7j8GCSlPGXwg5PfmA1mrq0JP4nGhh54LaKN3xdai\/vHUDu74pKwV8Oxs/;"	s	object:dependencies.regexpp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZPafIPSwzUlAoWT8DKs1W2VyF2gOWthGd5NGFMsBcMMol+ZhK+EQY\/e6V96poa6PA\/B/;"	s	object:dependencies.@babel/helper-plugin-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZQl7LOWaF5ePqqcX4hLuv\/bLXYQNfNWw2c0\/yX\/TsPRKamzHcTGQnlCjHT3TsmkOUV/;"	s	object:dependencies.acorn-globals
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW\/wVob10HkOJ1X\/pAlcI7D/;"	s	object:dependencies.@istanbuljs/schema
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/5CMN3T0R4XTj4DcGaexo+roZSdSFW\/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4s/;"	s	object:dependencies.normalize-package-data
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/65lxR\/CuLJoOdzTjOTYUPWS7k5qzaWese4PObnWc6jwLryUrSa7DslYfaRXigh5\/x/;"	s	object:dependencies.vscode-languageserver
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/7xxiGA57xMo\/P2GVvdEumr8ONhFOhfgq2ihK3h1e6THqzTAkHbkXgB0xI9yeTfIUoH/;"	s	object:dependencies.@babel/template
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/\/88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBE/;"	s	object:dependencies.p-limit
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/b4ZVsG7Z5XVtIxs\/h9W8nvfLgSAyKYdtGWQLbqy6jA1icmgjf8WCoTKgeS4wy5tYaP/;"	s	object:dependencies.is-date-object
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu\/tfgmq1e1cIRwRzwZgo/;"	s	object:dependencies.spdx-exceptions
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-a+UqTh4kgZg\/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv/;"	s	object:dependencies.colors
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA\/R+UlWDzfnHFC/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aW35yZM6Bb\/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9Q/;"	s	object:dependencies.decompress-response
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-abv\/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol\/doWcdA4ZqsWQ8ENrFKk/;"	s	object:dependencies.merge-stream
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7\/nxfAdhnox83seTDbwnaqKO4sXRy7roHA/;"	s	object:dependencies.execa
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8\/OVvhMrADFFEDh8DHDFRv\//;"	s	object:dependencies.yargs
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc\/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAH/;"	s	object:dependencies.path-exists
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-anKkLmZZ+xm4p8JWBf4hElkM4XR+EZeA2M9BAkkTldmcyDY4mbdIJnRghDJH3Ov5ooY7\//;"	s	object:dependencies.@types/graceful-fs
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd\/TRsmW8BsJfOEGkr76TbOyPV/;"	s	object:dependencies.follow-redirects
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-atgKpRHnaA2OvByG\/HpGA4g6CSPS\/1LK0jK3gATJAoptC1ojltpmVlYC3TYgdmGp+GL/;"	s	object:dependencies.jest-runner
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq\/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKa/;"	s	object:dependencies.is-descriptor
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ayCKvm\/phCGxOkYRSCM82iDwct8\/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/;"	s	object:dependencies.parse-json
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma\/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/;"	s	object:dependencies.whatwg-encoding
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+l/;"	s	object:dependencies.braces
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ\/hxLY8p/;"	s	object:dependencies.minizlib
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF\/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPK/;"	s	object:dependencies.is-potential-custom-element-name
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Ey/;"	s	object:dependencies.chownr
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVD/;"	s	object:dependencies.sisteransi
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bXdQWkECBUIAcCkeH1unwJLIpZYaa5VvuygSyS\/c2lf719mTKZDU5UdDRlpd01UjADgm/;"	s	object:dependencies.is-boolean-object
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2/;"	s	object:dependencies.ansi-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bn0S6flG\/j0xtQdz3hsjJ624h3W0r3llttBMfyHX3YrZ\/KtLYr15bjA0FXkgW7FpvrD/;"	s	object:dependencies.@babel/generator
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9/;"	s	object:dependencies.which-boxed-primitive
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-c16LpFRkR8vQXyHZ5nLpY35JZtzj1PQY1iZmesUbf1FZHbIupcWfjgOXBY9YHkLEQ6puz/;"	s	object:dependencies.istanbul-lib-source-maps
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWl/;"	s	object:dependencies.@types/istanbul-reports
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk\/Mh\/xC\/pzVPlQtY6ngoIH\/5\//;"	s	object:dependencies.test-exclude
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro\/aZiAQUlQ3qgr/;"	s	object:dependencies.esquery
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cMhu7c\/8rdhkHXWsY+osBhfSy0JikwpHK\/5+imo+LpeasTF8ouErHrlYkwT0++njiyu/;"	s	object:dependencies.readdirp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJ/;"	s	object:dependencies.spdx-correct
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJ/;"	s	object:dependencies.source-map-url
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cTIB4yPYL\/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs/;"	s	object:dependencies.is-generator-fn
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H\/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXw/;"	s	object:dependencies.spdx-expression-parse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-chXa79rL\/UC2KlX17jo3vRGz0azaWEx5tGqZg5pO3NUyEJVB17dMruQlzCCOfUvElghK/;"	s	object:dependencies.has-symbols
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cwESVXlO3url9YWlFW\/TA9cshCEhtu7IKJ\/p5soJ\/gGpj7vbvFrAY\/eIioQ6Dw23K/;"	s	object:dependencies.use
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cxWFQVseBm6O9Gbw1IWb8r6OS4OhSt3hPZLkFApLjM8TEXROBuQGLAH2i2gZpcXdLBIrp/;"	s	object:dependencies.@types/json-schema
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-d5adCgRHB+NAme23hkiTkvpfZUDqoNtL2Sr2nZBJqSj3zyHLxsfFWsGQ2sK2z9aX6L1xk/;"	s	object:dependencies.@types/marked
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV\/4+/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dNGGjzuEzCE3d5EPZQ\/QGtmlMotqnYWD\/QpCZ1UuZlrMAdhG5rldh0N0haCvhGnUkSe/;"	s	object:dependencies.eslint-plugin-jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo/;"	s	object:dependencies.color-name
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dcS1ul+9tmeD95T+x28\/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcr/;"	s	object:dependencies.kind-of
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6\/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXO/;"	s	object:dependencies.ieee754
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf/;"	s	object:dependencies.chalk
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eD/;"	s	object:dependencies.flat-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-e5mCJlSH7poANfC8z8S9s9S2IN5\/4Zb3aZ33f5s8YqoazCFzNLloLU8r5VCG+G7WoqLv/;"	s	object:dependencies.object-inspect
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX\/SVeJBDM\/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/;"	s	object:dependencies.esprima
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eQ9qFW\/fhfGJF8WKHGEHZEyVWfZxrT+6CLIJGBcZPfxUh\/+BnEj+UCGYMlr9qZuX\/2/;"	s	object:dependencies.@types/uuid
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL/;"	s	object:dependencies.kleur
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ\/pGu6m8TR/;"	s	object:dependencies.is-windows
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-easWIJXIw71B2RdR8kgqpjQrbMRWQBgiBwXYEhtGUTaX+doCjBheluShdDMeR8IMfJiTq/;"	s	object:dependencies.jest-haste-map
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ecNRHw4clCkowNOBJH1e77nvbPxHYnWIXMv1IAoG\/9+MYGkgoyr3Ppxr7XYFNL41V422/;"	s	object:dependencies.@types/fs-extra
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eyTcpKOcamdhWJXj56DpQMo1ylSQpcGtGKXcU0Tb97+K56\/CF5amAqqqNj0+KvA0iw2y/;"	s	object:dependencies.date-format
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f+8cldu7X\/y7RAJurMEJmdoKXGB\/X550w2Nr3tTbezL6RwEE\/iMcm+tZnXeoZtKuOq/;"	s	object:dependencies.json5
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5\/VKPp5tTpWIV4JHHZK1\/BxbFRtf\/siA2SWTe/;"	s	object:dependencies.has
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f3qQ9oQy9j2AhBe\/H9VC91wLmKBCCU\/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xl/;"	s	object:dependencies.fast-deep-equal
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f5j5b\/Gf71L+dbqxIpQ4Z2WlmI\/mPJ0fOkGGmFgtb6sAu97EPczzbS3\/tJKxmcYDj5/;"	s	object:dependencies.@types/normalize-package-data
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fABclAX2QIEDmTMk6Yd7Muv1CzFLwWM4505nETzRHpP3br6jfahD9UUJkhnJ\/g2m7lwf/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fC6QCp7Sc5sX6g8Tvbmj4XUTbyrik0akgRy03yjXbQaBWWNWGE7SGtJk98m0N8nzegD\//;"	s	object:dependencies.@jest/types
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fDS7szLcY9sCtIip8Fjry9oGf3I2ht\/QT21bAHm5Dmf0mD4X3ReNUf17y+bO6fR8WgbI/;"	s	object:dependencies.jest-changed-files
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3/;"	s	object:dependencies.is-wsl
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZF/;"	s	object:dependencies.throat
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ffdmosjA807y7+lA1NM0jELARVmYul\/715xiILEjo3hBLPTcirgQNnXECn5g3mtR8TOL/;"	s	object:dependencies.globby
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVq/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb\/h+X94VXzI64rKF/;"	s	object:dependencies.nanomatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fy+R77xWv0AiqfLl4nuGUlQ3\/6b5uNfQ4WAbGQVMYshCTCCPK9psC1nWh3XHuxGVCtlc/;"	s	object:dependencies.whatwg-url
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-g3FeP20LNwhALb\/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J\/fiSf1s/;"	s	object:dependencies.make-dir
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz/;"	s	object:dependencies.slash
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gDKb8aZMDeD\/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2B/;"	s	object:dependencies.path-type
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR\/xKluxHV+Z9QEwNIgCfM1\/uwPMCuzVVnh5mwTd+OuBZcw/;"	s	object:dependencies.ansi-escapes
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gL\/\/fkxfWUsIlFL2Tl42Cl6+HFALEaB1FU76I\/Fy+oZjRreP7OPMXFlGbxM7NQsI0Z/;"	s	object:dependencies.stack-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gQxTNE\/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4\/wMmA63ZGDJnWBmgY\/lyQBpnDUkGmA/;"	s	object:dependencies.bser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gXx7jAWpMddu0f7a+L+txMplp3FnHl53OhQIF9puXKq3hDGY\/GjH+MF04oWnV\/adPSC/;"	s	object:dependencies.@types/node
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2AatdwYH+JHiZpv7pt\/gSX1XoRGb7L\/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshR/;"	s	object:dependencies.nwsapi
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2bW53APG4HvkOnVMo8q3QXa6pcaNt1HkwVsOPMBV6LD\/q9oSpxNSYZQYkAnjdMjrJ86/;"	s	object:dependencies.@jest/reporters
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2iAoN838FqAFJY2\/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+/;"	s	object:dependencies.fs-extra
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI\/yqXiFR5md/;"	s	object:dependencies.is-plain-object
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8\/kREfEn4qO\/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNb/;"	s	object:dependencies.sane
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-i2wXrWQNkH6JplJQGn3Rd2I4Pij8GdHkXwHMxm+zV5YG\/Jci+bCNrWZEWC4o+umiDkRr/;"	s	object:dependencies.@babel/compat-data
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-i4xlXpsVSMeKvg2cEKdfhh0H39qlJlP5Ex1yQxwF9ubahboQYMgTtz5oML35AVA3B4Eu+/;"	s	object:dependencies.jest-leak-detector
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWe/;"	s	object:dependencies.collect-v8-coverage
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iCuPHDFgrHX7H2vEI\/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187uf/;"	s	object:dependencies.brace-expansion
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+U/;"	s	object:dependencies.cross-spawn
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ixT2L5THXsApyiUPYKmW+2EHpXXe5Ii3M+f4e+aJFAHao5amFRW6J0OO6c\/LU8Be47ut/;"	s	object:dependencies.object.assign
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGSh/;"	s	object:dependencies.ajv
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jB5AmTKOCSJIZ72sd78ECEhuPiDMKlQdDI\/4QRI6lzYATx5SSogS1oQA2AoPecRCknm3/;"	s	object:dependencies.@babel/core
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jDctJ\/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7bl/;"	s	object:dependencies.binary-extensions
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jgPqCruTlt3Kwqg5\/WVFyHIOJHsiAvhcp2qiR2QQstuG9yWox5+iHpU3ZrcBxW14T4fe/;"	s	object:dependencies.jest-environment-jsdom
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jh6e984OBfvxS50tdY2nRZnoC5\/mLFKOREQfw8t5yytkoUsJRNxvI\/E39qu1sD0OtWI/;"	s	object:dependencies.string.prototype.trimstart
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jrTA2jJIL6\/DAEILBEh2\/w9QxCuwmvNXIry39Ay\/HVfhE3o2yVV0U44blYkqdHA\/O/;"	s	object:dependencies.jsdoctypeparser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZ/;"	s	object:dependencies.define-property
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX\/TJjGJZHuh9B2UxbsaEkmlEo9M/;"	s	object:dependencies.escalade
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq\/Y+BOyPrgpUrA7HylqvU/;"	s	object:dependencies.http-proxy-agent
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX\/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1\/y/;"	s	object:dependencies.shebang-command
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kPKUrQtc8aYwBV7CqBg5pu+tmYXlvFlSFYn18ev4gPFtrRzB15N2gW\/Roew3187q2w2e/;"	s	object:dependencies.jest-jasmine2
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kQ5JNTrbDv3Rp5X2n\/iUu37IJBDU2gsZ5R\/g1\/KHOOEc5IKfUFjXT6DENPGduh08I\//;"	s	object:dependencies.@types/yargs
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6\/8ij300KBWTJq32P\/dYeWTSwK41WyTxalN1eRmA5Z9U/;"	s	object:dependencies.esutils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0/;"	s	object:dependencies.char-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv\/cOSeGpcoX4pXHfKUxNKVoArnr/;"	s	object:dependencies.get-intrinsic
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoI/;"	s	object:dependencies.inherits
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/;"	s	object:dependencies.onetime
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q\/LdUx8u7lsWvPDKmpodJAJNwkAhJC\/\//;"	s	object:dependencies.v8-compile-cache
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lCj4aIs0xUefJFQnwwQv2Bxg7Omd6bgquZ6LGC+gGMh6\/s5qDVfjuCMlDmYQ15SLsWHd/;"	s	object:dependencies.@babel/types
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lGS5PXGAzR4RF7V5+XObhqz2KZIDUA1yD0DG6pBVmy10eh0ZIXQImRuzocsI\/N2XZ1Gr/;"	s	object:dependencies.jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lY1Q\/PiJGC2zOv\/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4/;"	s	object:dependencies.picomatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT\/ZgrFbXlDNi/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lhd\/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8/;"	s	object:dependencies.fast-json-stable-stringify
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-llnc8vQgYcNqDrqRDXWwMr9i7rS5XFiCwvh6DTP7Jqa2mqpcCBBlpCbn+trkG0KNhPu\//;"	s	object:dependencies.jest-matcher-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lrzyR3N8sacTAMeonbqpnSka1dHNux2uk0qqDXVkMv2c\/A3wYnvQ4EXuI013Y6+gSKSC/;"	s	object:dependencies.jest-runtime
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mAlWowT4A6h0TC9F+J5pdbEhjNiEMO+kqPKQ4sc3fVieKL71dEqfkKgtcFVSX3cjSBwYw/;"	s	object:dependencies.@typescript-eslint/experimental-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv\/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKh/;"	s	object:dependencies.tsutils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mYtLl1xfZLi1m4RtQYlZgJUNQjl4ZxVnHzIR8nLLgi4q1YT8o\/WM+MK\/f8yfcc9s5Ir/;"	s	object:dependencies.debounce
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8/;"	s	object:dependencies.snapdragon-util
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mmHKys\/C8BFUGI+MAWNcSYoORYLMdPzjrknd2Vc+bUsjN5bXcr8EhrNB+UTqfL1y3I9c/;"	s	object:dependencies.escodegen
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU\/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4t/;"	s	object:dependencies.hosted-git-info
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nFy+fHl28zUrRsCeMB61VDThV1pVTtlEokBRgqPrcT1JNq4yRNIyTHfyht6PqtUvY9Isu/;"	s	object:dependencies.@jest/environment
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQIr12dxV7SSxE6r6f1l3DtAeEYdsGpps13dR0TwJg1S8gyp4ZPgy3FZcHBgbiQqnoqST/;"	s	object:dependencies.es-abstract
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQn+hI3yp+oD0huYhKwvYI32+JFeq+XkNcD1GAo3Y\/MjxsfVGmrrzrnzjWiNY6f+pUCP/;"	s	object:dependencies.exec-sh
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQyp0o1\/mNdbTO1PO6kHkwSrmgZ0MT\/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg/;"	s	object:dependencies.acorn
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839Hw/;"	s	object:dependencies.rsvp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-o50j0JeToy\/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUy/;"	s	object:dependencies.yargs-parser
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-o5Roy6tNG4SL\/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGv/;"	s	object:dependencies.argparse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-oJP\/9NAdd9+x2Q+rfphB2RJCHjod70RcRLjosiPMMu5gjIfwVnOUGq2nbTjTUbmy0DJ\//;"	s	object:dependencies.node-notifier
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uh/;"	s	object:dependencies.path-key
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-okMH7OXXJ7YrN9Ok3\/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo\/QEZoqwZkYaIDk3jV/;"	s	object:dependencies.js-yaml
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-olV41bKSMm8BdnuMsewT4jqlZ8+3TCARAXjZGT9jcoSnrfUnRCqnMoF9XEeoWjbzObpqF/;"	s	object:dependencies.jest-pnp-resolver
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR\/NS6otu/;"	s	object:dependencies.cssom
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pRmzw\/XUcwXGpD9aI9q\/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V1/;"	s	object:dependencies.micromatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pVwUjJkxbhe4RY8QEWzN3vns2kqyuldKpxlxJlzEYfKSvY6\/bMvxoFrYYzUO1Gx28yKW/;"	s	object:dependencies.jest-resolve-dependencies
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw\/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XR/;"	s	object:dependencies.debug
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pb\/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp\/+vgZqsCGJapvy8N3Q+/;"	s	object:dependencies.resolve-from
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76/;"	s	object:dependencies.bs-logger
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cA/;"	s	object:dependencies.get-package-type
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pl4Q+GAVOHwvjrck6jKjvmGhnO3jHX\/xuB9d27f+EJZ\/6k+6nMuPjorrYp7s++bKKdA/;"	s	object:dependencies.babel-jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi\/P+7Y8GDpzkEwLa/;"	s	object:dependencies.@types/istanbul-lib-report
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42\/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3Rw/;"	s	object:dependencies.side-channel
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qBIvFLGiBpLjfwmYAaHPXsn+ho5xZnGvyGvsarywGNc8VyQJUMHJ8OBKGGrPER0okBeMD/;"	s	object:dependencies.webidl-conversions
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qOhPa\/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsS/;"	s	object:dependencies.class-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl\/djYSu2OdQ2Pa302N4oq/;"	s	object:dependencies.fill-range
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qSVXFz28HM7y+IWX6vLCsexdlvzT1PJNFSBuaQLQ5o0IEw8UDYW6\/2+eCMVyIsbM8CNL/;"	s	object:dependencies.is-regex
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pq/;"	s	object:dependencies.supports-color
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qsda+H8jTaUaN\/x5vzW2rzc+8Rw4TAQ\/4KjB46IwK5VH+IlVeeeje\/EoZRpiXvIqjF/;"	s	object:dependencies.leven
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+\/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i/;"	s	object:dependencies.flatted
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ\/SOIZwINatK9KY\/tf+Zrly/;"	s	object:dependencies.wrap-ansi
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-rGiLePzQ3AzwUshu2+Rn+UMFk0pHN58sOG+IaJbk5Jxuqo3NYO1U2\/MIR4S1sKgsoYSX/;"	s	object:dependencies.jest-message-util
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT\/EUduxXYxcrt4r/;"	s	object:dependencies.universalify
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr\/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0g/;"	s	object:dependencies.make-error
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM/;"	s	object:dependencies.ms
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sOxsZOq25mT1wRsfHcbtkInS+Ek7Q8jCHUB0ZUTP0tc\/c41QHriU\/NunqMfCUWsL4H3/;"	s	object:dependencies.jest-resolve
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-scDPs+mELZgsFetTgBSsIxKGrlitn9t\/d2ecP+S1QSIGD+31fkMBEftLfOAX5k3tU06\//;"	s	object:dependencies.@types/jest
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sz7iLqvVUg1gIedBOvlkxPlc8\/uVzyS5OwGz1cKjXzkl3FpL3al0crU8YGU1WoHkxn0W/;"	s	object:dependencies.@types/istanbul-lib-coverage
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t5qdIj\/bCj2j7NFVHb2nFB4aUdfucDn3JRKgrZnplb8nieAirAzRSHP8uDEd+qV6ygzg/;"	s	object:dependencies.jest-config
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL\/cvv6HPE5VgvqCuAIDR0NgU52ds6/;"	s	object:dependencies.cliui
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uG/;"	s	object:dependencies.locate-path
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tC7MKZIMRTYxQhrVAFoJq\/DlRwv1bnqA4\/S2r3+HuHibqvbrPcyf858lNzU7bFmy4mL/;"	s	object:dependencies.@typescript-eslint/typescript-estree
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tCJDltF83htUtXx5NLcaDqRmknv652ZWCHyoTETf1CXYJdPC7nohZohjUgieXhv0hTJdR/;"	s	object:dependencies.@babel/helper-split-export-declaration
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi\/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwt/;"	s	object:dependencies.tough-cookie
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs/;"	s	object:dependencies.@types/minimatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG\/xwT+s2JN8+pr1+8jCRf/;"	s	object:dependencies.union-value
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tZU\/3NqK3dA5gpE1KtyiJUrEB0lxnGkMFHptJ7q6ewdZ8s12QrODwNbhIJStmJkd1QDX/;"	s	object:dependencies.unbox-primitive
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-thGloWsGH3SOxv1SoY7QojKi0tc+8FnOmiarEGMbd\/lar7QOEd3hvlx3Fp5y6FlDUGl9/;"	s	object:dependencies.typescript
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk\/eDlIXOhb2LHWoLpDF7TEHyl/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uW7fodD6pyW2FZNZnp\/Z3hvWKeEW1Y8R1+1CnErE8cXFXzl5blBOoVB41CvMer6P6Q0S/;"	s	object:dependencies.node-releases
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uZtkfKblCEQtZKBF6EBXVZeQNl82yqtDQdv+eck8u7tdPxjLu2\/lp5\/uPW+um2tpuxI/;"	s	object:dependencies.tslib
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uc2Vix1frTfnuzxxu1Hp4ktSvM3QaI4oXl4ZUqL1wjTu\/BGki9TrCWoqLTg\/drR1KwA/;"	s	object:dependencies.cjs-module-lexer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-un0FmiRUQNr5PJqy9kP7c40F5BOfpGlYTrxonDChEZB7pzZxRNp\/bt+ymiy9\/npwXya/;"	s	object:dependencies.terminal-link
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVG/;"	s	object:dependencies.lodash
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v3JCNCE64umkFpmkFGqzVKsOT0tN1Zr+ueqLZfpV1Ob8e+CEgPWa+OxCoGH3tnhimMKIa/;"	s	object:dependencies.espree
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL/;"	s	object:dependencies.iconv-lite
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw\/N3rWOYy9zkV66ursAoVr0mV1/;"	s	object:dependencies.@cnakazawa/watch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYI/;"	s	object:dependencies.shellwords
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp\//;"	s	object:dependencies.mkdirp
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xr/;"	s	object:dependencies.import-fresh
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vjL3+w0oulAVZ0hBHnxa\/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9X/;"	s	object:dependencies.import-local
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg\/WmIQ65qoWWhcGKf\/b5eplkkarX0m9z8ppCat4mlOqUsW/;"	s	object:dependencies.prelude-ls
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm\/NOTo0KG7HYHU7/;"	s	object:dependencies.@nodelib/fs.scandir
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vxENKWBo928ErLiT\/uUv8Sl2EoC5cF3cZzCTc8hDEh9ZAZ75xblJCr72NeJo74lxWaGo/;"	s	object:dependencies.esbuild
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-w2GsyukL62IJnlaff\/nRegPQR94C\/XXamvMWmSHRJ4y7Ts\/4ocGRmTHvOs8PSE6pB3/;"	s	object:dependencies.react-is
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj/;"	s	object:dependencies.eslint-utils
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh\/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr06/;"	s	object:dependencies.resolve
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5y/;"	s	object:dependencies.istanbul-lib-report
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu\/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6\/YR3qRZv7/;"	s	object:dependencies.table
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE\/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfnt/;"	s	object:dependencies.@babel/plugin-syntax-bigint
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wuzZksN4w4kyfoOv\/dlpov4NOunwutLA\/q7uc00xU02ZyUY+aoM5PWIXEKBMnm0NHd4/;"	s	object:dependencies.@types/minipass
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDl/;"	s	object:dependencies.fast-diff
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU\/Jxzk629Brsab\/mM/;"	s	object:dependencies.json-schema-traverse
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xkNcLAn\/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z\//;"	s	object:dependencies.@sinonjs/commons
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xvV1kKbhfUqFVuZ8Cyo+JPpipAHHAV3kcDBftiduK8EICXmTFddryy3P7NfZt8Pv37rA9/;"	s	object:dependencies.@jest/core
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xyFwyhro\/JEof6Ghe2iz2NcXoj2sloNsWr\/XsERDK\/oiPCfaNhl5ONfp+jQdAZRQQ0/;"	s	object:dependencies.json-parse-even-better-errors
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexC/;"	s	object:dependencies.rc
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-y9xCjw1P23Awk8EvTpcyL2NIr1j7wJ39f+k6lvRnSMz+mz9CGz9NYPelDk42kOz6+ql8x/;"	s	object:dependencies.string.prototype.trimend
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfa/;"	s	object:dependencies.function-bind
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4h/;"	s	object:dependencies.minimatch
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7Uadd/;"	s	object:dependencies.doctrine
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ycIL2+1V32th+8scbpTvyHNaHe02z0sjgh91XXjAk+ZeXoPN4Z46DVUnzdso0aX4KckKw/;"	s	object:dependencies.p-each-series
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yjNnPr315\/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ\/od/;"	s	object:dependencies.enquirer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yxJ2mFy\/sibVQlu5qHjOkf9J3K6zgmCxgJ94u2EdvDOV09H+32LtRswEcUsmUWN72pVL/;"	s	object:dependencies.domexception
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr/;"	s	object:dependencies.mimic-response
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo\/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkI/;"	s	object:dependencies.w3c-hr-time
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zGZJzzBUVDo\/eV6KgbE0f0ZI7dInEYvo12Rb70uNQDshC3SkRMb67ja0GgRHZgAX3Za6/;"	s	object:dependencies.@types/babel__core
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zK0TB7Xd6JpCLmlLmufqykGE+\/TlOePD6qKClNW7hHDKFh\/J7\/7gCWGR7joEQEW1bK/;"	s	object:dependencies.read-pkg-up
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01\/K5Paj5UHj7VyrQOJvzawSVlKp/;"	s	object:dependencies.string-width
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zWEwIVqnzPkSAXOUlQnPW2oKoYb2aLQ4Q5ejdjBcnH63rfypaW34CxaeBn1VMya2XaEU3/;"	s	object:dependencies.caniuse-lite
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zZ7uHCWlxfEAAOVDYQpEf\/uyi1dmeC7fX4nCf2iz9drnCwi1zvwXL3HwWWNXUQEJ1k23/;"	s	object:dependencies.@babel/helper-replace-supers
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbz/;"	s	object:dependencies.bytes
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr\/\/H6V+0DvJ3OQ/;"	s	object:dependencies.typedarray-to-buffer
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zhtMio3Exty18dy8ee8eJ9kjnRyZC1N4C1Nt\/VShN1apyXc8rWGtJ9lI7vqiWcyyXS4B/;"	s	object:dependencies.jest-environment-node
integrity	plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zrMuwHOAQRhjDSnflWdJG+O2ztMWss8GqUUB8dXLR\/FPenwkiBNkMIJJYfSN6sgskvsF/;"	s	object:dependencies.vscode-languageserver-protocol
intelephense.licenceKey	coc-settings.json	/^    "intelephense.licenceKey": "000YOP3TTT7QMST",$/;"	s
intelephense.progress.enable	coc-settings.json	/^    "intelephense.progress.enable": true, $/;"	b
interface	plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
internal-slot	plugged/coc.nvim/package-lock.json	/^        "internal-slot": "^1.0.2",$/;"	s	object:dependencies.string.prototype.matchall.requires
internal-slot	plugged/coc.nvim/package-lock.json	/^    "internal-slot": {$/;"	o	object:dependencies
interpretCode	plugged/fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) ansiState {$/;"	f	package:fzf	typeref:typename:ansiState
into	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
intro	plugged/gitsigns.nvim/gen_help.lua	/^local function intro()$/;"	f
inv	plugged/fzf/src/pattern.go	/^	inv           bool$/;"	m	struct:fzf.term	typeref:typename:bool
invalid_test_case	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local invalid_test_case = function(k)$/;"	f
invalidate_query_cache	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.invalidate_query_cache(lang, query_name)$/;"	f	unknown:M
invalidate_query_file	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.invalidate_query_file(fname)$/;"	f	unknown:M
inverse	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
invertColor	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.invertColor(color)$/;"	f	unknown:util
invertColor	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.invertColor(color)$/;"	f	unknown:util
invoke	plugged/which-key.nvim/lua/which-key/plugins/init.lua	/^function M.invoke(mapping, context)$/;"	f	unknown:M
invokes	plugged/plenary.nvim/lua/luassert/stub.lua	/^      invokes = function(func)$/;"	f
invokes	plugged/plenary.nvim/lua/luassert/stub.lua	/^  s.invokes = function(func)$/;"	f	unknown:s
io	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
ip	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
ipairs	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:ipairs()$/;"	f	unknown:LinkedList
ipairs_left	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:ipairs_left()$/;"	f	unknown:Deque
ipairs_left	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:ipairs_left()$/;"	f	unknown:Deque
ipairs_right	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:ipairs_right()$/;"	f	unknown:Deque
ipairs_right	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:ipairs_right()$/;"	f	unknown:Deque
ipe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
ir	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
ire	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
is	plugged/plenary.nvim/lua/luassert/modifiers.lua	/^local function is(state)$/;"	f
is	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:is(T)$/;"	f	unknown:Object
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": "^0.1.6",$/;"	s	object:dependencies.is-descriptor.requires
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-accessor-descriptor	plugged/coc.nvim/package-lock.json	/^    "is-accessor-descriptor": {$/;"	o	object:dependencies
is-arrayish	plugged/coc.nvim/package-lock.json	/^        "is-arrayish": "^0.2.1"$/;"	s	object:dependencies.error-ex.requires
is-arrayish	plugged/coc.nvim/package-lock.json	/^    "is-arrayish": {$/;"	o	object:dependencies
is-bigint	plugged/coc.nvim/package-lock.json	/^        "is-bigint": "^1.0.1",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-bigint	plugged/coc.nvim/package-lock.json	/^    "is-bigint": {$/;"	o	object:dependencies
is-binary-path	plugged/coc.nvim/package-lock.json	/^        "is-binary-path": "~2.1.0",$/;"	s	object:dependencies.chokidar.requires
is-binary-path	plugged/coc.nvim/package-lock.json	/^    "is-binary-path": {$/;"	o	object:dependencies
is-boolean-object	plugged/coc.nvim/package-lock.json	/^        "is-boolean-object": "^1.1.0",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-boolean-object	plugged/coc.nvim/package-lock.json	/^    "is-boolean-object": {$/;"	o	object:dependencies
is-buffer	plugged/coc.nvim/package-lock.json	/^                "is-buffer": "^1.1.5"$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^                "is-buffer": "^1.1.5"$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.has-values.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.object-copy.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.to-object-path.dependencies.kind-of.requires
is-buffer	plugged/coc.nvim/package-lock.json	/^    "is-buffer": {$/;"	o	object:dependencies
is-callable	plugged/coc.nvim/package-lock.json	/^        "is-callable": "^1.1.4",$/;"	s	object:dependencies.es-to-primitive.requires
is-callable	plugged/coc.nvim/package-lock.json	/^        "is-callable": "^1.2.3",$/;"	s	object:dependencies.es-abstract.requires
is-callable	plugged/coc.nvim/package-lock.json	/^    "is-callable": {$/;"	o	object:dependencies
is-ci	plugged/coc.nvim/package-lock.json	/^            "is-ci": "^2.0.0",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
is-ci	plugged/coc.nvim/package-lock.json	/^        "is-ci": "^2.0.0",$/;"	s	object:dependencies.jest-util.requires
is-ci	plugged/coc.nvim/package-lock.json	/^    "is-ci": {$/;"	o	object:dependencies
is-core-module	plugged/coc.nvim/package-lock.json	/^        "is-core-module": "^2.2.0",$/;"	s	object:dependencies.resolve.requires
is-core-module	plugged/coc.nvim/package-lock.json	/^    "is-core-module": {$/;"	o	object:dependencies
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": "^0.1.4",$/;"	s	object:dependencies.is-descriptor.requires
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-data-descriptor	plugged/coc.nvim/package-lock.json	/^    "is-data-descriptor": {$/;"	o	object:dependencies
is-date-object	plugged/coc.nvim/package-lock.json	/^        "is-date-object": "^1.0.1",$/;"	s	object:dependencies.es-to-primitive.requires
is-date-object	plugged/coc.nvim/package-lock.json	/^    "is-date-object": {$/;"	o	object:dependencies
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.class-utils.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.expand-brackets.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.object-copy.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.snapdragon.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.static-extend.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.base.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.extglob.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-descriptor": "^1.0.2",$/;"	s	object:dependencies.define-property.requires
is-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-descriptor	plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-descriptor	plugged/coc.nvim/package-lock.json	/^    "is-descriptor": {$/;"	o	object:dependencies
is-docker	plugged/coc.nvim/package-lock.json	/^        "is-docker": "^2.0.0"$/;"	s	object:dependencies.is-wsl.requires
is-docker	plugged/coc.nvim/package-lock.json	/^    "is-docker": {$/;"	o	object:dependencies
is-extendable	plugged/coc.nvim/package-lock.json	/^                "is-extendable": "^0.1.0"$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^                "is-extendable": "^0.1.0"$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.extglob.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.set-value.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^0.1.1",$/;"	s	object:dependencies.set-value.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^0.1.1",$/;"	s	object:dependencies.union-value.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^1.0.1"$/;"	s	object:dependencies.extend-shallow.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^1.0.1"$/;"	s	object:dependencies.mixin-deep.requires
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": {$/;"	o	object:dependencies.extend-shallow.dependencies
is-extendable	plugged/coc.nvim/package-lock.json	/^        "is-extendable": {$/;"	o	object:dependencies.mixin-deep.dependencies
is-extendable	plugged/coc.nvim/package-lock.json	/^    "is-extendable": {$/;"	o	object:dependencies
is-extglob	plugged/coc.nvim/package-lock.json	/^        "is-extglob": "^2.1.1"$/;"	s	object:dependencies.is-glob.requires
is-extglob	plugged/coc.nvim/package-lock.json	/^    "is-extglob": {$/;"	o	object:dependencies
is-fullwidth-code-point	plugged/coc.nvim/package-lock.json	/^            "is-fullwidth-code-point": "^2.0.0",$/;"	s	object:dependencies.table.dependencies.string-width.requires
is-fullwidth-code-point	plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": "^2.0.0"$/;"	s	object:dependencies.slice-ansi.requires
is-fullwidth-code-point	plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": "^3.0.0",$/;"	s	object:dependencies.string-width.requires
is-fullwidth-code-point	plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": {$/;"	o	object:dependencies.string-width.dependencies
is-fullwidth-code-point	plugged/coc.nvim/package-lock.json	/^    "is-fullwidth-code-point": {$/;"	o	object:dependencies
is-generator-fn	plugged/coc.nvim/package-lock.json	/^        "is-generator-fn": "^2.0.0",$/;"	s	object:dependencies.jest-jasmine2.requires
is-generator-fn	plugged/coc.nvim/package-lock.json	/^    "is-generator-fn": {$/;"	o	object:dependencies
is-glob	plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
is-glob	plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.1"$/;"	s	object:dependencies.glob-parent.requires
is-glob	plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
is-glob	plugged/coc.nvim/package-lock.json	/^        "is-glob": "~4.0.1",$/;"	s	object:dependencies.chokidar.requires
is-glob	plugged/coc.nvim/package-lock.json	/^    "is-glob": {$/;"	o	object:dependencies
is-negative-zero	plugged/coc.nvim/package-lock.json	/^        "is-negative-zero": "^2.0.1",$/;"	s	object:dependencies.es-abstract.requires
is-negative-zero	plugged/coc.nvim/package-lock.json	/^    "is-negative-zero": {$/;"	o	object:dependencies
is-number	plugged/coc.nvim/package-lock.json	/^            "is-number": "^3.0.0",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
is-number	plugged/coc.nvim/package-lock.json	/^            "is-number": "^3.0.0",$/;"	s	object:dependencies.sane.dependencies.to-regex-range.requires
is-number	plugged/coc.nvim/package-lock.json	/^        "is-number": "^3.0.0",$/;"	s	object:dependencies.has-values.requires
is-number	plugged/coc.nvim/package-lock.json	/^        "is-number": "^7.0.0"$/;"	s	object:dependencies.to-regex-range.requires
is-number	plugged/coc.nvim/package-lock.json	/^        "is-number": {$/;"	o	object:dependencies.has-values.dependencies
is-number	plugged/coc.nvim/package-lock.json	/^        "is-number": {$/;"	o	object:dependencies.sane.dependencies
is-number	plugged/coc.nvim/package-lock.json	/^    "is-number": {$/;"	o	object:dependencies
is-number-object	plugged/coc.nvim/package-lock.json	/^        "is-number-object": "^1.0.4",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-number-object	plugged/coc.nvim/package-lock.json	/^    "is-number-object": {$/;"	o	object:dependencies
is-plain-object	plugged/coc.nvim/package-lock.json	/^            "is-plain-object": "^2.0.4"$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable.requires
is-plain-object	plugged/coc.nvim/package-lock.json	/^            "is-plain-object": "^2.0.4"$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable.requires
is-plain-object	plugged/coc.nvim/package-lock.json	/^        "is-plain-object": "^2.0.3",$/;"	s	object:dependencies.set-value.requires
is-plain-object	plugged/coc.nvim/package-lock.json	/^    "is-plain-object": {$/;"	o	object:dependencies
is-potential-custom-element-name	plugged/coc.nvim/package-lock.json	/^        "is-potential-custom-element-name": "^1.0.1",$/;"	s	object:dependencies.jsdom.requires
is-potential-custom-element-name	plugged/coc.nvim/package-lock.json	/^    "is-potential-custom-element-name": {$/;"	o	object:dependencies
is-regex	plugged/coc.nvim/package-lock.json	/^        "is-regex": "^1.1.3",$/;"	s	object:dependencies.es-abstract.requires
is-regex	plugged/coc.nvim/package-lock.json	/^    "is-regex": {$/;"	o	object:dependencies
is-stream	plugged/coc.nvim/package-lock.json	/^            "is-stream": "^2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
is-stream	plugged/coc.nvim/package-lock.json	/^        "is-stream": "^1.1.0",$/;"	s	object:dependencies.execa.requires
is-stream	plugged/coc.nvim/package-lock.json	/^        "is-stream": {$/;"	o	object:dependencies.jest-changed-files.dependencies
is-stream	plugged/coc.nvim/package-lock.json	/^    "is-stream": {$/;"	o	object:dependencies
is-string	plugged/coc.nvim/package-lock.json	/^        "is-string": "^1.0.5",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-string	plugged/coc.nvim/package-lock.json	/^        "is-string": "^1.0.6",$/;"	s	object:dependencies.es-abstract.requires
is-string	plugged/coc.nvim/package-lock.json	/^    "is-string": {$/;"	o	object:dependencies
is-symbol	plugged/coc.nvim/package-lock.json	/^        "is-symbol": "^1.0.2"$/;"	s	object:dependencies.es-to-primitive.requires
is-symbol	plugged/coc.nvim/package-lock.json	/^        "is-symbol": "^1.0.3"$/;"	s	object:dependencies.which-boxed-primitive.requires
is-symbol	plugged/coc.nvim/package-lock.json	/^    "is-symbol": {$/;"	o	object:dependencies
is-typedarray	plugged/coc.nvim/package-lock.json	/^        "is-typedarray": "^1.0.0"$/;"	s	object:dependencies.typedarray-to-buffer.requires
is-typedarray	plugged/coc.nvim/package-lock.json	/^        "is-typedarray": "^1.0.0",$/;"	s	object:dependencies.write-file-atomic.requires
is-typedarray	plugged/coc.nvim/package-lock.json	/^    "is-typedarray": {$/;"	o	object:dependencies
is-windows	plugged/coc.nvim/package-lock.json	/^        "is-windows": "^1.0.2",$/;"	s	object:dependencies.nanomatch.requires
is-windows	plugged/coc.nvim/package-lock.json	/^    "is-windows": {$/;"	o	object:dependencies
is-wsl	plugged/coc.nvim/package-lock.json	/^        "is-wsl": "^2.2.0",$/;"	s	object:dependencies.node-notifier.requires
is-wsl	plugged/coc.nvim/package-lock.json	/^    "is-wsl": {$/;"	o	object:dependencies
is24	plugged/fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f	type:tui.Color	typeref:typename:bool
isAlphabet	plugged/fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isArrayLike	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector./;"	v
isAscii	plugged/fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f	package:algo	typeref:typename:bool
isCI	plugged/gitsigns.nvim/test/preload.lua	/^global_helpers.isCI = function(_)$/;"	f	unknown:global_helpers
isCtrlSeqStart	plugged/fzf/src/ansi.go	/^func isCtrlSeqStart(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isEscaped	plugged/plenary.nvim/lua/plenary/json.lua	/^local isEscaped = function(jsonString, quotePosition)$/;"	f
isExecuteAction	plugged/fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f	package:fzf	typeref:typename:actionType
isFull	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isGitSignHl	plugged/gitsigns.nvim/lua/gitsigns/highlight.lua	/^local function isGitSignHl(hl)$/;"	f
isIncremental	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isLSPMessage	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
isNumeric	plugged/fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isPreviewEnabled	plugged/fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
isPrint	plugged/fzf/src/ansi.go	/^func isPrint(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isRoot	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
isSimple	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isSimple = \/^.[^:#\\[\\.]*$\/,$/;"	v
isUri	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
is_absolute	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:is_absolute()$/;"	f	unknown:Path
is_absolute	plugged/plenary.nvim/lua/plenary/path.lua	/^local is_absolute = function(filename, sep)$/;"	f
is_boolean	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_boolean(state, arguments, level)  return is_type(state, arguments, level, "boo/;"	f
is_boolean	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_boolean(state, arguments, level)  return is_type(state, arguments, level, "boo/;"	f
is_bright_background	plugged/toggleterm.nvim/lua/toggleterm/colors.lua	/^function M.is_bright_background()$/;"	f	unknown:M
is_buf_valid	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function is_buf_valid(bufnr)$/;"	f
is_close_empty_node	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/utils.lua	/^M.is_close_empty_node = function(node)$/;"	f	unknown:M
is_dir	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:is_dir()$/;"	f	unknown:Path
is_dir	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^  local is_dir = function(value)$/;"	f
is_disabled	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^local function is_disabled(diagnostics)$/;"	f
is_done	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:is_done()$/;"	f	unknown:Picker
is_empty	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:is_empty()$/;"	f	unknown:Deque
is_empty	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:is_empty()$/;"	f	unknown:Deque
is_empty	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.is_empty(tab)$/;"	f	unknown:M
is_enabled	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_enabled(mod, lang)$/;"	f	unknown:M
is_end	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Component:is_end()$/;"	f	unknown:Component
is_enum	plugged/plenary.nvim/lua/plenary/enum.lua	/^local function is_enum(tbl)$/;"	f
is_false	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_false(state, arguments, level)$/;"	f
is_false	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_false(state, arguments, level)$/;"	f
is_file	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:is_file()$/;"	f	unknown:Path
is_file_readable	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function is_file_readable(fname)$/;"	f
is_float	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:is_float()$/;"	f	unknown:Terminal
is_float	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.is_float(window)$/;"	f	unknown:M
is_focused	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.is_focused()$/;"	f	unknown:M
is_function	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_function(state, arguments, level) return is_type(state, arguments, level, "fun/;"	f
is_function	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_function(state, arguments, level) return is_type(state, arguments, level, "fun/;"	f
is_help_ui	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.is_help_ui(tabpage)$/;"	f	unknown:M
is_hl_set	plugged/gitsigns.nvim/lua/gitsigns/highlight.lua	/^local function is_hl_set(hl_name)$/;"	f
is_hook	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.is_hook(prefix, cmd)$/;"	f	unknown:M
is_hooked	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.is_hooked(prefix, mode, buf)$/;"	f	unknown:M
is_in_array_part	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function is_in_array_part(key, length)$/;"	f
is_in_node_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_in_node_range(node, line, col)$/;"	f	unknown:M
is_in_table	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function is_in_table(tbl, val)$/;"	f
is_insert	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^local function is_insert() -- insert or replace$/;"	f
is_installed	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function is_installed(lang)$/;"	f
is_job	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job.is_job(item)$/;"	f	unknown:Job
is_leaf_function	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  function M.is_leaf_function(async_func)$/;"	f	unknown:M
is_list	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List.is_list(tbl)$/;"	f	unknown:List
is_loclist	plugged/lualine.nvim/lua/lualine/extensions/quickfix.lua	/^local function is_loclist()$/;"	f
is_lower	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^local function is_lower(c)$/;"	f
is_match_empty	plugged/JABS.nvim/lua/split.lua	/^local function is_match_empty(pat, plain)$/;"	f
is_matcher	plugged/plenary.nvim/lua/luassert/match.lua	/^  is_matcher = function(object)$/;"	f
is_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_module(mod)$/;"	f	unknown:M
is_multi_selected	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:is_multi_selected(entry)$/;"	f	unknown:Picker
is_new_signature_handler	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^local function is_new_signature_handler()$/;"	f
is_nil	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_nil(state, arguments, level)      return is_type(state, arguments, level, "nil/;"	f
is_nil	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_nil(state, arguments, level)      return is_type(state, arguments, level, "nil/;"	f
is_not	plugged/plenary.nvim/lua/luassert/modifiers.lua	/^local function is_not(state)$/;"	f
is_number	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_number(state, arguments, level)   return is_type(state, arguments, level, "num/;"	f
is_number	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_number(state, arguments, level)   return is_type(state, arguments, level, "num/;"	f
is_offset_section	plugged/bufferline.nvim/lua/bufferline/offset.lua	/^local function is_offset_section(windows, offset)$/;"	f
is_open	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:is_open()$/;"	f	unknown:Terminal
is_parent	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_parent(dest, source)$/;"	f	unknown:M
is_path	plugged/plenary.nvim/lua/plenary/path.lua	/^Path.is_path = function(a)$/;"	f	unknown:Path
is_path_hidden	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.is_path_hidden = function(opts, path_display)$/;"	f	unknown:utils
is_ref_matcher	plugged/plenary.nvim/lua/luassert/match.lua	/^  is_ref_matcher = function(object)$/;"	f
is_relative_path	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function is_relative_path(path)$/;"	f
is_root	plugged/plenary.nvim/lua/plenary/path.lua	/^local function is_root(pathname)$/;"	f
is_selected	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:is_selected(entry)$/;"	f	unknown:MultiSelect
is_simple_type	plugged/gitsigns.nvim/gen_help.lua	/^local function is_simple_type(t)$/;"	f
is_slant	plugged/bufferline.nvim/lua/bufferline.lua	/^local function is_slant(style)$/;"	f
is_split	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:is_split()$/;"	f	unknown:Terminal
is_spy	plugged/plenary.nvim/lua/luassert/spy.lua	/^  is_spy = function(object)$/;"	f
is_string	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_string(state, arguments, level)   return is_type(state, arguments, level, "str/;"	f
is_string	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_string(state, arguments, level)   return is_type(state, arguments, level, "str/;"	f
is_supported	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter-textobjects.lua	/^        is_supported = function(lang)$/;"	f
is_supported	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^      is_supported = function()$/;"	f
is_supported	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    is_supported = function()$/;"	f
is_supported	plugged/nvim-ts-autotag/lua/nvim-ts-autotag.lua	/^      is_supported = function(lang)$/;"	f
is_supported	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.is_supported = function (lang)$/;"	f	unknown:M
is_table	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_table(state, arguments, level)    return is_type(state, arguments, level, "tab/;"	f
is_table	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_table(state, arguments, level)    return is_type(state, arguments, level, "tab/;"	f
is_test	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.is_test()$/;"	f	unknown:M
is_thread	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_thread(state, arguments, level)   return is_type(state, arguments, level, "thr/;"	f
is_thread	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_thread(state, arguments, level)   return is_type(state, arguments, level, "thr/;"	f
is_true	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_true(state, arguments, level)$/;"	f
is_true	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_true(state, arguments, level)$/;"	f
is_type	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_type(state, arguments, level, etype)$/;"	f
is_type	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_type(state, arguments, level, etype)$/;"	f
is_unix	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^M.is_unix = (function()$/;"	f	unknown:M
is_upper	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^local function is_upper(c)$/;"	f
is_uri	plugged/plenary.nvim/lua/plenary/path.lua	/^local is_uri = function(filename)$/;"	f
is_uri	plugged/telescope.nvim/lua/telescope/utils.lua	/^local is_uri = function(filename)$/;"	f
is_userdata	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function is_userdata(state, arguments, level) return is_type(state, arguments, level, "use/;"	f
is_userdata	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function is_userdata(state, arguments, level) return is_type(state, arguments, level, "use/;"	f
is_using_coc	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^local function is_using_coc()$/;"	f
is_valid	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.is_valid(buf_num)$/;"	f	unknown:M
is_valid	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.is_valid()$/;"	f	unknown:M
is_valid_filename	plugged/lualine.nvim/lua/lualine_require.lua	/^function M.is_valid_filename(name)$/;"	f	unknown:M
is_valid_layout	plugged/bufferline.nvim/lua/bufferline/offset.lua	/^local function is_valid_layout(windows)$/;"	f
is_vertical	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.is_vertical()$/;"	f	unknown:M
is_win	plugged/nvim-spectre/lua/spectre/search/base.lua	/^local is_win = vim.api.nvim_call_function("has", {"win32"}) == 1$/;"	f
is_win	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^local is_win = vim.api.nvim_call_function("has", {"win32"}) == 1$/;"	f
is_win	plugged/telescope.nvim/lua/telescope/health.lua	/^local is_win = vim.api.nvim_call_function("has", { "win32" }) == 1$/;"	f
isarray	plugged/coc.nvim/package-lock.json	/^                "isarray": "1.0.0"$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject.requires
isarray	plugged/coc.nvim/package-lock.json	/^        "isarray": "^1.0.0"$/;"	s	object:dependencies.msgpack-lite.requires
isarray	plugged/coc.nvim/package-lock.json	/^    "isarray": {$/;"	o	object:dependencies
isempty	plugged/plenary.nvim/scratch/_reference_count.lua	/^function List.isempty (list)$/;"	f	unknown:List
isexe	plugged/coc.nvim/package-lock.json	/^            "isexe": "^2.0.0"$/;"	s	object:dependencies.execa.dependencies.which.requires
isexe	plugged/coc.nvim/package-lock.json	/^        "isexe": "^2.0.0"$/;"	s	object:dependencies.which.requires
isexe	plugged/coc.nvim/package-lock.json	/^    "isexe": {$/;"	o	object:dependencies
isobject	plugged/coc.nvim/package-lock.json	/^            "isobject": "^2.0.0"$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
isobject	plugged/coc.nvim/package-lock.json	/^            "isobject": "^3.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
isobject	plugged/coc.nvim/package-lock.json	/^            "isobject": {$/;"	o	object:dependencies.unset-value.dependencies.has-value.dependencies
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.has-value.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.object-visit.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.unset-value.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0",$/;"	s	object:dependencies.class-utils.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0",$/;"	s	object:dependencies.snapdragon-node.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.define-property.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.is-plain-object.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.object.pick.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1",$/;"	s	object:dependencies.base.requires
isobject	plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1",$/;"	s	object:dependencies.cache-base.requires
isobject	plugged/coc.nvim/package-lock.json	/^    "isobject": {$/;"	o	object:dependencies
isobject	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^  local isobject = (argtype == "table" or argtype == "function" or argtype == "thread" or argtyp/;"	f
istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-report.requires
istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
istanbul-lib-coverage	plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-coverage": {$/;"	o	object:dependencies
istanbul-lib-instrument	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-instrument": "^4.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
istanbul-lib-instrument	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-instrument": "^4.0.3",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-instrument	plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-instrument": {$/;"	o	object:dependencies
istanbul-lib-report	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-report": "^3.0.0"$/;"	s	object:dependencies.istanbul-reports.requires
istanbul-lib-report	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-report": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-report	plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-report": {$/;"	o	object:dependencies
istanbul-lib-source-maps	plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-source-maps": "^4.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-source-maps	plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-source-maps": {$/;"	o	object:dependencies
istanbul-reports	plugged/coc.nvim/package-lock.json	/^        "istanbul-reports": "^3.0.2",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-reports	plugged/coc.nvim/package-lock.json	/^    "istanbul-reports": {$/;"	o	object:dependencies
isuri	plugged/coc.nvim/package-lock.json	/^    "isuri": {$/;"	o	object:dependencies
it	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
it	plugged/gitsigns.nvim/test/gs_helpers.lua	/^M.it = function(it)$/;"	f	unknown:M
it	plugged/plenary.nvim/lua/plenary/async/tests.lua	/^M.it = function(s, async_func)$/;"	f	unknown:M
it	plugged/plenary.nvim/lua/plenary/async_lib/tests.lua	/^M.it = function(s, func)$/;"	f	unknown:M
it	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.it = function(desc, func)$/;"	f	unknown:mod
it	plugged/plenary.nvim/lua/plenary/iterators.lua	/^  local it = function(new_iter, state_x, ...)$/;"	f
italic	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
item	plugged/fzf/src/result.go	/^	item   *Item$/;"	m	struct:fzf.Result	typeref:typename:*Item
item	plugged/fzf/src/terminal.go	/^	item *Item$/;"	m	struct:fzf.selectedItem	typeref:typename:*Item
itemLine	plugged/fzf/src/terminal.go	/^type itemLine struct {$/;"	s	package:fzf
item_count	plugged/fzf/test/test_go.rb	/^          def item_count$/;"	f	method:Tmux.until
items	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^    local items = utils.map(function(map)$/;"	f
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.additionalSchemes
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.filetypes
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.ignoredRootPaths
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.rootPatterns
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerCommand.properties.args
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.args
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.execArgv
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnSaveFiletypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnTypeFiletypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.rootPatterns
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.around.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.buffer.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.ignorePatterns
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.triggerCharacters
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.trimSameExts
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.outline.ctagsFilestypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.symbols.excludes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.statusLineSegments
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.outline.codeActionKinds
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.suggest.invalidInsertCharacters
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.bottomUpFiletypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.ignoredFiletypes
items	plugged/fzf/src/chunklist.go	/^	items [chunkSize]Item$/;"	m	struct:fzf.Chunk	typeref:typename:[chunkSize]Item
iter	plugged/fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forwa/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
iter	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^  local function iter(entries)$/;"	f
iter	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^  local function iter(entries, recursive)$/;"	f
iter	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^  local function iter(nodes)$/;"	f
iter	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:iter()$/;"	f	unknown:List
iter	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local iter = function(obj, param, state)$/;"	f
iter	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:iter()$/;"	f	unknown:Path
iter	plugged/plenary.nvim/tests/plenary/scandir_spec.lua	/^        iter = function()$/;"	f
iter	plugged/telescope.nvim/lua/telescope/_.lua	/^function ChunkPipe:iter()$/;"	f	unknown:ChunkPipe
iter	plugged/telescope.nvim/lua/telescope/_.lua	/^function LinesPipe:iter(schedule)$/;"	f	unknown:LinesPipe
iter	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:iter()$/;"	f	unknown:LinkedList
iter	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:iter()$/;"	f	unknown:EntryManager
iter_children	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:iter_children()$/;"	f	unknown:TSRange
iter_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.iter_cmd(cmd_list, i, lang, success_message)$/;"	f	unknown:M
iter_cmd_sync	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function iter_cmd_sync(cmd_list)$/;"	f
iter_group_results	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_group_results(bufnr, query_group, root, root_lang)$/;"	f	unknown:M
iter_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_locals(bufnr, root)$/;"	f	unknown:M
iter_prepared_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_prepared_matches(query, qnode, bufnr, start_row, end_row)$/;"	f	unknown:M
iter_scope_tree	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_scope_tree(node, bufnr)$/;"	f	unknown:M
iterator	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function iterator()$/;"	f
iterm	plugged/github-nvim-theme/lua/github-theme/extra/iterm.lua	/^function M.iterm(config)$/;"	f	unknown:M
iu	plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
iv	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
iw	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
ix	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
iy	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
j	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
j	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
j$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
j0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
j4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j4e	plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
j5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
j6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
j8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
j9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
jB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
jC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
jD	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
jG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
jJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
jM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
jN	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
jQuery	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var jQuery = window.jQuery = window.$ = function( selector, context ) {$/;"	v
jT	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
jV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
jW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
jX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
jZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ja	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
java	plugged/nvim-treesitter/lockfile.json	/^  "java": {$/;"	o
javascript	coc-settings.json	/^        "javascript": "javascriptreact", $/;"	s	object:emmet.includeLanguages
javascript	plugged/nvim-treesitter/lockfile.json	/^  "javascript": {$/;"	o
javascriptreact	coc-settings.json	/^        "javascriptreact": ["javascript"],$/;"	a	object:snippets.extends
jb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
jc	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
jd	plugged/coc.nvim/build/index.js	/^`}function jd(r,e){return`\\r$/;"	f
je	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
jee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
jellybeans	plugged/lualine.nvim/THEMES.md	/^### jellybeans$/;"	S	chapter:Available themes
jest	plugged/coc.nvim/package-lock.json	/^    "jest": {$/;"	o	object:dependencies
jest	plugged/coc.nvim/package.json	/^  "jest": {$/;"	o
jest-changed-files	plugged/coc.nvim/package-lock.json	/^        "jest-changed-files": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-changed-files	plugged/coc.nvim/package-lock.json	/^    "jest-changed-files": {$/;"	o	object:dependencies
jest-cli	plugged/coc.nvim/package-lock.json	/^        "jest-cli": "^26.6.3"$/;"	s	object:dependencies.jest.requires
jest-cli	plugged/coc.nvim/package-lock.json	/^        "jest-cli": {$/;"	o	object:dependencies.jest.dependencies
jest-config	plugged/coc.nvim/package-lock.json	/^            "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-config	plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-config	plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest-runner.requires
jest-config	plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest-runtime.requires
jest-config	plugged/coc.nvim/package-lock.json	/^    "jest-config": {$/;"	o	object:dependencies
jest-diff	plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.0.0",$/;"	s	object:dependencies.@types/jest.requires
jest-diff	plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.6.2",$/;"	s	object:dependencies.jest-matcher-utils.requires
jest-diff	plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-diff	plugged/coc.nvim/package-lock.json	/^    "jest-diff": {$/;"	o	object:dependencies
jest-docblock	plugged/coc.nvim/package-lock.json	/^        "jest-docblock": "^26.0.0",$/;"	s	object:dependencies.jest-runner.requires
jest-docblock	plugged/coc.nvim/package-lock.json	/^    "jest-docblock": {$/;"	o	object:dependencies
jest-each	plugged/coc.nvim/package-lock.json	/^        "jest-each": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-each	plugged/coc.nvim/package-lock.json	/^    "jest-each": {$/;"	o	object:dependencies
jest-environment-jsdom	plugged/coc.nvim/package-lock.json	/^        "jest-environment-jsdom": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-environment-jsdom	plugged/coc.nvim/package-lock.json	/^    "jest-environment-jsdom": {$/;"	o	object:dependencies
jest-environment-node	plugged/coc.nvim/package-lock.json	/^        "jest-environment-node": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-environment-node	plugged/coc.nvim/package-lock.json	/^    "jest-environment-node": {$/;"	o	object:dependencies
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.expect.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-config.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-diff.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-each.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-leak-detector.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-matcher-utils.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-snapshot.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-validate.requires
jest-get-type	plugged/coc.nvim/package-lock.json	/^    "jest-get-type": {$/;"	o	object:dependencies
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-haste-map	plugged/coc.nvim/package-lock.json	/^    "jest-haste-map": {$/;"	o	object:dependencies
jest-jasmine2	plugged/coc.nvim/package-lock.json	/^        "jest-jasmine2": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
jest-jasmine2	plugged/coc.nvim/package-lock.json	/^    "jest-jasmine2": {$/;"	o	object:dependencies
jest-leak-detector	plugged/coc.nvim/package-lock.json	/^        "jest-leak-detector": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-leak-detector	plugged/coc.nvim/package-lock.json	/^    "jest-leak-detector": {$/;"	o	object:dependencies
jest-matcher-utils	plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.expect.requires
jest-matcher-utils	plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-matcher-utils	plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-matcher-utils	plugged/coc.nvim/package-lock.json	/^    "jest-matcher-utils": {$/;"	o	object:dependencies
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.expect.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-message-util	plugged/coc.nvim/package-lock.json	/^    "jest-message-util": {$/;"	o	object:dependencies
jest-mock	plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2"$/;"	s	object:dependencies.@jest/environment.requires
jest-mock	plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-mock	plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
jest-mock	plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
jest-mock	plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-mock	plugged/coc.nvim/package-lock.json	/^    "jest-mock": {$/;"	o	object:dependencies
jest-pnp-resolver	plugged/coc.nvim/package-lock.json	/^        "jest-pnp-resolver": "^1.2.2",$/;"	s	object:dependencies.jest-resolve.requires
jest-pnp-resolver	plugged/coc.nvim/package-lock.json	/^    "jest-pnp-resolver": {$/;"	o	object:dependencies
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0"$/;"	s	object:dependencies.expect.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.@jest/core.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.@jest/transform.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-config.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-haste-map.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-resolve-dependencies.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-runtime.requires
jest-regex-util	plugged/coc.nvim/package-lock.json	/^    "jest-regex-util": {$/;"	o	object:dependencies
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-resolve	plugged/coc.nvim/package-lock.json	/^    "jest-resolve": {$/;"	o	object:dependencies
jest-resolve-dependencies	plugged/coc.nvim/package-lock.json	/^        "jest-resolve-dependencies": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-resolve-dependencies	plugged/coc.nvim/package-lock.json	/^    "jest-resolve-dependencies": {$/;"	o	object:dependencies
jest-runner	plugged/coc.nvim/package-lock.json	/^        "jest-runner": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-runner	plugged/coc.nvim/package-lock.json	/^        "jest-runner": "^26.6.3",$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-runner	plugged/coc.nvim/package-lock.json	/^    "jest-runner": {$/;"	o	object:dependencies
jest-runtime	plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3"$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-runtime	plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-runtime	plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-runtime	plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.jest-runner.requires
jest-runtime	plugged/coc.nvim/package-lock.json	/^    "jest-runtime": {$/;"	o	object:dependencies
jest-serializer	plugged/coc.nvim/package-lock.json	/^        "jest-serializer": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-serializer	plugged/coc.nvim/package-lock.json	/^    "jest-serializer": {$/;"	o	object:dependencies
jest-snapshot	plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2"$/;"	s	object:dependencies.jest-resolve-dependencies.requires
jest-snapshot	plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-snapshot	plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-snapshot	plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-snapshot	plugged/coc.nvim/package-lock.json	/^    "jest-snapshot": {$/;"	o	object:dependencies
jest-util	plugged/coc.nvim/package-lock.json	/^            "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.1.0",$/;"	s	object:dependencies.ts-jest.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2"$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2"$/;"	s	object:dependencies.jest-environment-node.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-each.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-resolve.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-util	plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
jest-util	plugged/coc.nvim/package-lock.json	/^    "jest-util": {$/;"	o	object:dependencies
jest-validate	plugged/coc.nvim/package-lock.json	/^            "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-validate	plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-validate	plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-validate	plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-validate	plugged/coc.nvim/package-lock.json	/^    "jest-validate": {$/;"	o	object:dependencies
jest-watcher	plugged/coc.nvim/package-lock.json	/^        "jest-watcher": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-watcher	plugged/coc.nvim/package-lock.json	/^    "jest-watcher": {$/;"	o	object:dependencies
jest-worker	plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-worker	plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-worker	plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-worker	plugged/coc.nvim/package-lock.json	/^    "jest-worker": {$/;"	o	object:dependencies
jg	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
jie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
jj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
jk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
jme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
job_is_running	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.job_is_running(job_id)$/;"	f	unknown:utils
job_maker	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.job_maker = function(cmd, bufnr, opts)$/;"	f	unknown:utils
jobs	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^  local jobs = vim.tbl_map(function(p)$/;"	f
join	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.join(...)$/;"	f	unknown:M
join	plugged/plenary.nvim/lua/plenary/async/util.lua	/^M.join = function(async_fns)$/;"	f	unknown:M
join	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.join = M.wrap(function(futures, step)$/;"	f	unknown:M
join	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:join(sep)$/;"	f	unknown:List
join	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.join(array, sep)$/;"	f	unknown:f
join	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job.join(...)$/;"	f	unknown:Job
joinTokens	plugged/fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f	package:fzf	typeref:typename:string
joinpath	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:joinpath(...)$/;"	f	unknown:Path
js-tokens	plugged/coc.nvim/package-lock.json	/^        "js-tokens": "^4.0.0"$/;"	s	object:dependencies.@babel/highlight.requires
js-tokens	plugged/coc.nvim/package-lock.json	/^    "js-tokens": {$/;"	o	object:dependencies
js-yaml	plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
js-yaml	plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
js-yaml	plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.eslint.requires
js-yaml	plugged/coc.nvim/package-lock.json	/^    "js-yaml": {$/;"	o	object:dependencies
jsdoc	plugged/nvim-treesitter/lockfile.json	/^  "jsdoc": {$/;"	o
jsdoctypeparser	plugged/coc.nvim/package-lock.json	/^        "jsdoctypeparser": "^9.0.0",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
jsdoctypeparser	plugged/coc.nvim/package-lock.json	/^    "jsdoctypeparser": {$/;"	o	object:dependencies
jsdom	plugged/coc.nvim/package-lock.json	/^        "jsdom": "^16.4.0"$/;"	s	object:dependencies.jest-environment-jsdom.requires
jsdom	plugged/coc.nvim/package-lock.json	/^    "jsdom": {$/;"	o	object:dependencies
jse	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jsesc	plugged/coc.nvim/package-lock.json	/^        "jsesc": "^2.5.1",$/;"	s	object:dependencies.@babel/generator.requires
jsesc	plugged/coc.nvim/package-lock.json	/^    "jsesc": {$/;"	o	object:dependencies
json	plugged/nvim-treesitter/lockfile.json	/^  "json": {$/;"	o
json-parse-even-better-errors	plugged/coc.nvim/package-lock.json	/^        "json-parse-even-better-errors": "^2.3.0",$/;"	s	object:dependencies.parse-json.requires
json-parse-even-better-errors	plugged/coc.nvim/package-lock.json	/^    "json-parse-even-better-errors": {$/;"	o	object:dependencies
json-schema-traverse	plugged/coc.nvim/package-lock.json	/^        "json-schema-traverse": "^0.4.1",$/;"	s	object:dependencies.ajv.requires
json-schema-traverse	plugged/coc.nvim/package-lock.json	/^    "json-schema-traverse": {$/;"	o	object:dependencies
json-stable-stringify-without-jsonify	plugged/coc.nvim/package-lock.json	/^        "json-stable-stringify-without-jsonify": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
json-stable-stringify-without-jsonify	plugged/coc.nvim/package-lock.json	/^    "json-stable-stringify-without-jsonify": {$/;"	o	object:dependencies
json5	plugged/coc.nvim/package-lock.json	/^        "json5": "2.x",$/;"	s	object:dependencies.ts-jest.requires
json5	plugged/coc.nvim/package-lock.json	/^        "json5": "^2.1.2",$/;"	s	object:dependencies.@babel/core.requires
json5	plugged/coc.nvim/package-lock.json	/^    "json5": {$/;"	o	object:dependencies
json5	plugged/nvim-treesitter/lockfile.json	/^  "json5": {$/;"	o
json_strip_comments	plugged/plenary.nvim/lua/plenary/json.lua	/^function M.json_strip_comments(jsonString, options)$/;"	f	unknown:M
jsonc	plugged/nvim-treesitter/lockfile.json	/^  "jsonc": {$/;"	o
jsonc-parser	plugged/coc.nvim/package-lock.json	/^    "jsonc-parser": {$/;"	o	object:dependencies
jsonfile	plugged/coc.nvim/package-lock.json	/^            "jsonfile": "^4.0.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
jsonfile	plugged/coc.nvim/package-lock.json	/^        "jsonfile": "^6.0.1",$/;"	s	object:dependencies.fs-extra.requires
jsonfile	plugged/coc.nvim/package-lock.json	/^        "jsonfile": {$/;"	o	object:dependencies.streamroller.dependencies
jsonfile	plugged/coc.nvim/package-lock.json	/^    "jsonfile": {$/;"	o	object:dependencies
jsonrpc	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
jsonrpc	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
jsonrpc	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.z.Yt
ju	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
julia	plugged/nvim-treesitter/lockfile.json	/^  "julia": {$/;"	o
jumpAcceptEnabled	plugged/fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c	package:fzf
jumpDisabled	plugged/fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c	package:fzf	typeref:type:jumpMode
jumpEnabled	plugged/fzf/src/terminal.go	/^	jumpEnabled$/;"	c	package:fzf
jumpLabels	plugged/fzf/src/terminal.go	/^	jumpLabels   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
jumpMode	plugged/fzf/src/terminal.go	/^type jumpMode int$/;"	t	package:fzf	typeref:typename:int
jump_to_line	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local jump_to_line = function(self, bufnr, lnum)$/;"	f
jumping	plugged/fzf/src/terminal.go	/^	jumping      jumpMode$/;"	m	struct:fzf.Terminal	typeref:typename:jumpMode
jumplist	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.jumplist = function(opts)$/;"	f	unknown:internal
jy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
jz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
k	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:g
k$	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
k0	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
k2	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k4	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	v
k5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
k6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
k7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
k8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
k8e	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
k9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
kC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
kD	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
kE	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
kF	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
kG	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
kH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
kI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
kO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
kR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
kS	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
kV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
k_	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
ka	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
kae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
kb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
kc	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ke	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
kee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
keepRight	plugged/fzf/src/terminal.go	/^	keepRight    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
key	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
key	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^  key = function(bufnr, _, lang)$/;"	f
key	plugged/which-key.nvim/lua/which-key/plugins/spelling.lua	/^    table.insert(items, { key = key, label = label, fn = function()$/;"	f
keyMatch	plugged/fzf/src/terminal.go	/^func keyMatch(key tui.Event, event tui.Event) bool {$/;"	f	package:fzf	typeref:typename:bool
key_comparator	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^  local function key_comparator(key1, key2)$/;"	f
key_id	plugged/telescope.nvim/lua/telescope/mappings.lua	/^  local key_id = assign_function(prompt_bufnr, key_func)$/;"	f
key_stack	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^    key_stack = key_stack:gsub("%[builtin#(%d+)%]", function(x)$/;"	f
keymap	plugged/fzf/src/terminal.go	/^	keymap       map[tui.Event][]action$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event][]action
keymaps	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.keymaps = function(opts)$/;"	f	unknown:internal
keyword	plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
keyword:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  keyword: (defun_keyword "defmethod")$/;"	f
keyword:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  keyword: (defun_keyword "defmethod")$/;"	f
keywords	plugged/coc.nvim/package.json	/^  "keywords": [$/;"	a
kill	plugged/fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killChan	plugged/fzf/src/terminal.go	/^	killChan     chan int$/;"	m	struct:fzf.Terminal	typeref:typename:chan int
killPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f	struct:fzf.Terminal
killed	plugged/fzf/src/reader.go	/^	killed   bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
kind	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a10000.e.o
kind	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12000.e.a
kind	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12100.e.c
kind	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4afe00.e.o
kind	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4aff00.e.a
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^3.0.2"$/;"	s	object:dependencies.has-values.dependencies.is-number.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^3.0.2"$/;"	s	object:dependencies.sane.dependencies.is-number.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.base.dependencies.is-data-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": {$/;"	o	object:dependencies.has-values.dependencies.is-number.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^            "kind-of": {$/;"	o	object:dependencies.sane.dependencies.is-number.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.is-accessor-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.is-data-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.to-object-path.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.3"$/;"	s	object:dependencies.object-copy.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.2.0"$/;"	s	object:dependencies.snapdragon-util.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^4.0.0"$/;"	s	object:dependencies.has-values.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^5.0.0"$/;"	s	object:dependencies.is-descriptor.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": "^6.0.2",$/;"	s	object:dependencies.nanomatch.requires
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.has-values.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-accessor-descriptor.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-data-descriptor.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-descriptor.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.object-copy.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.snapdragon-util.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.to-object-path.dependencies
kind-of	plugged/coc.nvim/package-lock.json	/^    "kind-of": {$/;"	o	object:dependencies
kitty	plugged/github-nvim-theme/lua/github-theme/extra/kitty.lua	/^function M.kitty(config)$/;"	f	unknown:M
kitty_dark	plugged/github-nvim-theme/Makefile	/^kitty_dark: kitty_pre$/;"	t
kitty_dark_default	plugged/github-nvim-theme/Makefile	/^kitty_dark_default: kitty_pre$/;"	t
kitty_dimmed	plugged/github-nvim-theme/Makefile	/^kitty_dimmed: kitty_pre$/;"	t
kitty_light	plugged/github-nvim-theme/Makefile	/^kitty_light: kitty_pre$/;"	t
kitty_light_default	plugged/github-nvim-theme/Makefile	/^kitty_light_default: kitty_pre$/;"	t
kitty_pre	plugged/github-nvim-theme/Makefile	/^kitty_pre:$/;"	t
kitty_theme	plugged/github-nvim-theme/Makefile	/^kitty_theme = ~\/.config\/kitty\/themes\/github.conf$/;"	m
kl	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
kle	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
kleur	plugged/coc.nvim/package-lock.json	/^        "kleur": "^3.0.3",$/;"	s	object:dependencies.prompts.requires
kleur	plugged/coc.nvim/package-lock.json	/^    "kleur": {$/;"	o	object:dependencies
km_bufs	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  local km_bufs = (function()$/;"	f
kme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
kn	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ko	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
konsole	plugged/github-nvim-theme/lua/github-theme/extra/konsole.lua	/^function M.konsole(config)$/;"	f	unknown:M
kotlin	plugged/nvim-treesitter/lockfile.json	/^  "kotlin": {$/;"	o
kq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
kv_map	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.kv_map(fun, t)$/;"	f	unknown:f
kv_pairs	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.kv_pairs(t)$/;"	f	unknown:f
kv_to_list	plugged/plenary.nvim/lua/plenary/curl.lua	/^util.kv_to_list = function(kv, prefix, sep)$/;"	f	unknown:util
kv_to_str	plugged/plenary.nvim/lua/plenary/curl.lua	/^util.kv_to_str = function(kv, sep, kvsep)$/;"	f	unknown:util
kw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
kxe	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
ky	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
l	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e100
l	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
l	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
l	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:jC
l	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunctionaf1e5c4a34600
l	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4af200.e
l	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
l	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
l	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
l	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
l	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33b00.e
l	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunctionaf1e5c4a33f00
l	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29d00
l	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2c100
l	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	c	class:vme
l	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:WQ
l	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
l$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
l0	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
l3e	plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
l4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
l5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
l6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
l8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
l9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
lC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
lD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lF	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
lG	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
lH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
lJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
lK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
lL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
lOe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
lQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
lS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
lV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lW	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
lX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
lY	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
l_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
l_to_y	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.l_to_y = function(L)$/;"	f	unknown:hsluv
l_to_y	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.l_to_y = function(L)$/;"	f	unknown:hsluv
l_to_y	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.l_to_y = function(L)$/;"	f	unknown:hsluv
label	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a11b00.e.o
label	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4afa00.e.o
label	plugged/fzf/src/terminal.go	/^	label    string$/;"	m	struct:fzf.itemLine	typeref:typename:string
label	plugged/lualine.nvim/lua/lualine/components/tabs/tab.lua	/^function Tab:label()$/;"	f	unknown:Tab
label	plugged/lualine.nvim/lua/lualine/extensions/quickfix.lua	/^local function label()$/;"	f
lae	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  lambda_list: (list_lit (list_lit . (sym_lit) @parameter . (_))))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  lambda_list: (list_lit (sym_lit) @parameter))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  lambda_list: (list_lit (list_lit . (sym_lit) @definition.parameter . (_))))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  lambda_list: (list_lit (sym_lit) @definition.parameter))$/;"	f
land	plugged/plenary.nvim/lua/plenary/operators.lua	/^  land = function(a, b)$/;"	f
languageServerBase	plugged/coc.nvim/data/schema.json	/^    "languageServerBase": {$/;"	o	object:definitions
languageServerCommand	plugged/coc.nvim/data/schema.json	/^    "languageServerCommand": {$/;"	o	object:definitions
languageServerModule	plugged/coc.nvim/data/schema.json	/^    "languageServerModule": {$/;"	o	object:definitions
languageServerSocket	plugged/coc.nvim/data/schema.json	/^    "languageServerSocket": {$/;"	o	object:definitions
languageserver	coc-settings.json	/^    "languageserver": {$/;"	o
languageserver	plugged/coc.nvim/data/schema.json	/^    "languageserver": {$/;"	o	object:properties
last	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  Receiver.last = function()$/;"	f	unknown:Receiver
last	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  Receiver.last = async(function()$/;"	f	unknown:Receiver
last	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.last(...)$/;"	f	unknown:f
lastChunk	plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f	struct:fzf.ChunkList	typeref:typename:*Chunk
lastX	plugged/fzf/src/tui/tcell.go	/^	lastX       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
lastY	plugged/fzf/src/tui/tcell.go	/^	lastY       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
last_sibling	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  last_sibling = function(node) lib.sibling(node, math.huge) end,$/;"	f
latex	plugged/nvim-treesitter/lockfile.json	/^  "latex": {$/;"	o
layout	plugged/fzf/src/terminal.go	/^	layout       layoutType$/;"	m	struct:fzf.Terminal	typeref:typename:layoutType
layout	plugged/which-key.nvim/lua/which-key/layout.lua	/^function Layout:layout(win)$/;"	f	unknown:Layout
layoutDefault	plugged/fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c	package:fzf	typeref:type:layoutType
layoutReverse	plugged/fzf/src/options.go	/^	layoutReverse$/;"	c	package:fzf
layoutReverseList	plugged/fzf/src/options.go	/^	layoutReverseList$/;"	c	package:fzf
layoutType	plugged/fzf/src/options.go	/^type layoutType int$/;"	t	package:fzf	typeref:typename:int
lazy_require	plugged/lualine.nvim/lua/lualine_require.lua	/^function M.lazy_require(modules)$/;"	f	unknown:M
lb	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
lbg	plugged/fzf/src/ansi.go	/^	lbg  tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
lc	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lch_to_hpluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.lch_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_hpluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.lch_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_hpluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.lch_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_hsluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.lch_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_hsluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.lch_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_hsluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.lch_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
lch_to_luv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.lch_to_luv = function(tuple)$/;"	f	unknown:hsluv
lch_to_luv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.lch_to_luv = function(tuple)$/;"	f	unknown:hsluv
lch_to_luv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.lch_to_luv = function(tuple)$/;"	f	unknown:hsluv
lch_to_rgb	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.lch_to_rgb = function(tuple)$/;"	f	unknown:hsluv
lch_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.lch_to_rgb = function(tuple)$/;"	f	unknown:hsluv
lch_to_rgb	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.lch_to_rgb = function(tuple)$/;"	f	unknown:hsluv
lchmod	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:u
lchmodSync	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:u
le	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
le	plugged/plenary.nvim/lua/plenary/operators.lua	/^  le = function(a, b)$/;"	f
leaf	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  local function leaf(...)$/;"	f
ledger	plugged/nvim-treesitter/lockfile.json	/^  "ledger": {$/;"	o
lee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
left	plugged/bufferline.nvim/tests/custom_area_spec.lua	/^          left = function ()$/;"	f
left	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	p	class:results
left	plugged/fzf/src/tui/light.go	/^	left     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
left	plugged/fzf/src/tui/tcell.go	/^	left        int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
len	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:len()$/;"	f	unknown:Deque
len	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:len()$/;"	f	unknown:Deque
len	plugged/plenary.nvim/lua/plenary/operators.lua	/^  len = function(a)$/;"	f
len	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text.len(str)$/;"	f	unknown:Text
length	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
length	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
length	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
length	plugged/plenary.nvim/lua/plenary/operators.lua	/^  length = function(a)$/;"	f
length_of_ray_until_intersect	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^local length_of_ray_until_intersect = function(theta, line)$/;"	f
length_of_ray_until_intersect	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^local length_of_ray_until_intersect = function(theta, line)$/;"	f
length_of_ray_until_intersect	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^local length_of_ray_until_intersect = function(theta, line)$/;"	f
level	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
level	plugged/plenary.nvim/lua/luassert/assert.lua	/^  level = function(self, level)$/;"	f
leven	plugged/coc.nvim/package-lock.json	/^        "leven": "^3.1.0",$/;"	s	object:dependencies.jest-validate.requires
leven	plugged/coc.nvim/package-lock.json	/^    "leven": {$/;"	o	object:dependencies
levn	plugged/coc.nvim/package-lock.json	/^            "levn": "~0.3.0",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
levn	plugged/coc.nvim/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.eslint.requires
levn	plugged/coc.nvim/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.optionator.requires
levn	plugged/coc.nvim/package-lock.json	/^        "levn": {$/;"	o	object:dependencies.escodegen.dependencies
levn	plugged/coc.nvim/package-lock.json	/^    "levn": {$/;"	o	object:dependencies
lf	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
lge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
li a	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
li a:active	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
li a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
license	plugged/coc.nvim/package.json	/^  "license": "MIT",$/;"	s
license	plugged/emmet-vim/docs/index.html	/^			<article id="license">$/;"	I
light	plugged/aquarium-vim/extras/alacritty_aquarium.yml	/^  aquarium_light: &light$/;"	a
light	plugged/github-nvim-theme/LUALINE.md	/^#### light$/;"	t	subsection:Screenshots
light	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.light(brightness)$/;"	f	unknown:util
light	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.light(brightness)$/;"	f	unknown:util
light_colors	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.light_colors(colors)$/;"	f	unknown:util
light_default	plugged/github-nvim-theme/LUALINE.md	/^#### light_default$/;"	t	subsection:Screenshots
lighten	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.lighten(hex, amount, fg)$/;"	f	unknown:util
lighten	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.lighten(hex, amount, fg)$/;"	f	unknown:utils
lighten	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.lighten(hex, amount, fg)$/;"	f	unknown:util
limit	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^  limit = function(range_fn)$/;"	f
line	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	p	class:$c.t
line	plugged/fzf/src/terminal.go	/^	line string$/;"	m	struct:fzf.eachLine	typeref:typename:string
line	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^      local node, line = utils.find_node(nodes, function(node)$/;"	f
line-length	coc-settings.json	/^        "line-length": false$/;"	b	object:markdownlint.config
lines	plugged/fzf/src/history.go	/^	lines    []string$/;"	m	struct:fzf.History	typeref:typename:[]string
lines	plugged/fzf/src/terminal.go	/^	lines      []string$/;"	m	struct:fzf.previewer	typeref:typename:[]string
lines	plugged/fzf/src/terminal.go	/^	lines   []string$/;"	m	struct:fzf.previewResult	typeref:typename:[]string
lines	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local lines = function(input)$/;"	f
lines	plugged/plenary.nvim/tests/plenary/strings_spec.lua	/^    local function lines(t)$/;"	f
lines-and-columns	plugged/coc.nvim/package-lock.json	/^        "lines-and-columns": "^1.1.6"$/;"	s	object:dependencies.parse-json.requires
lines-and-columns	plugged/coc.nvim/package-lock.json	/^    "lines-and-columns": {$/;"	o	object:dependencies
link_fzf_in_path	plugged/fzf/install	/^link_fzf_in_path() {$/;"	f
link_new	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function link_new(cwd, name)$/;"	f
lint	plugged/github-nvim-theme/Makefile	/^lint: $(github_path)$/;"	t
lint	plugged/lualine.nvim/Makefile	/^lint:$/;"	t
lint	plugged/telescope.nvim/Makefile	/^lint:$/;"	t
list	plugged/fzf/src/terminal.go	/^	list     []*Item$/;"	m	struct:fzf.previewRequest	typeref:typename:[]*Item
list.alignColumns	plugged/coc.nvim/data/schema.json	/^    "list.alignColumns": {$/;"	o	object:properties
list.extendedSearchMode	plugged/coc.nvim/data/schema.json	/^    "list.extendedSearchMode": {$/;"	o	object:properties
list.height	plugged/coc.nvim/data/schema.json	/^    "list.height": {$/;"	o	object:properties
list.indicator	plugged/coc.nvim/data/schema.json	/^    "list.indicator": {$/;"	o	object:properties
list.insertMappings	plugged/coc.nvim/data/schema.json	/^    "list.insertMappings": {$/;"	o	object:properties
list.interactiveDebounceTime	plugged/coc.nvim/data/schema.json	/^    "list.interactiveDebounceTime": {$/;"	o	object:properties
list.limitLines	plugged/coc.nvim/data/schema.json	/^    "list.limitLines": {$/;"	o	object:properties
list.matchHighlightGroup	plugged/coc.nvim/data/schema.json	/^    "list.matchHighlightGroup": {$/;"	o	object:properties
list.maxPreviewHeight	plugged/coc.nvim/data/schema.json	/^    "list.maxPreviewHeight": {$/;"	o	object:properties
list.nextKeymap	plugged/coc.nvim/data/schema.json	/^    "list.nextKeymap": {$/;"	o	object:properties
list.normalMappings	plugged/coc.nvim/data/schema.json	/^    "list.normalMappings": {$/;"	o	object:properties
list.previewHighlightGroup	plugged/coc.nvim/data/schema.json	/^    "list.previewHighlightGroup": {$/;"	o	object:properties
list.previewSplitRight	plugged/coc.nvim/data/schema.json	/^    "list.previewSplitRight": {$/;"	o	object:properties
list.previousKeymap	plugged/coc.nvim/data/schema.json	/^    "list.previousKeymap": {$/;"	o	object:properties
list.selectedSignText	plugged/coc.nvim/data/schema.json	/^    "list.selectedSignText": {$/;"	o	object:properties
list.signOffset	plugged/coc.nvim/data/schema.json	/^    "list.signOffset": {$/;"	o	object:properties
list.source.diagnostics.includeCode	plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.includeCode": {$/;"	o	object:properties
list.source.diagnostics.pathFormat	plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.pathFormat": {$/;"	o	object:properties
list.source.outline.ctagsFilestypes	plugged/coc.nvim/data/schema.json	/^    "list.source.outline.ctagsFilestypes": {$/;"	o	object:properties
list.source.symbols.excludes	plugged/coc.nvim/data/schema.json	/^    "list.source.symbols.excludes": {$/;"	o	object:properties
list.statusLineSegments	plugged/coc.nvim/data/schema.json	/^    "list.statusLineSegments": {$/;"	o	object:properties
list_dir	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^local list_dir = (function()$/;"	f
list_or_jump	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^local function list_or_jump(action, title, opts)$/;"	f
list_shrink	plugged/lualine.nvim/lua/lualine/utils/utils.lua	/^function M.list_shrink(list)$/;"	f	unknown:M
lists	plugged/fzf/src/merger.go	/^	lists   [][]Result$/;"	m	struct:fzf.Merger	typeref:typename:[][]Result
live_grep	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.live_grep = function(opts)$/;"	f	unknown:files
live_grepper	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^  local live_grepper = finders.new_job(function(prompt)$/;"	f
live_grepper	plugged/telescope.nvim/media/demo_script_2.lua	/^local live_grepper = finders.new_job(function(prompt)$/;"	f
lj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
llvm	plugged/nvim-treesitter/lockfile.json	/^  "llvm": {$/;"	o
lme	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
ln	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
lnot	plugged/plenary.nvim/lua/plenary/operators.lua	/^  lnot = function(a)$/;"	f
lnum	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      lnum = function(t)$/;"	f
load	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.load(theme)$/;"	f	unknown:util
load	plugged/material.nvim/lua/material/util.lua	/^function util.load()$/;"	f	unknown:util
load	plugged/onedarkpro.nvim/lua/onedark/init.lua	/^function M.load(name)$/;"	f	unknown:M
load	plugged/onedarkpro.nvim/lua/onedarkpro/colors/onedark.lua	/^function M.load(config)$/;"	f	unknown:M
load	plugged/onedarkpro.nvim/lua/onedarkpro/colors/onelight.lua	/^function M.load(config)$/;"	f	unknown:M
load	plugged/onedarkpro.nvim/lua/onedarkpro/init.lua	/^function M.load(name)$/;"	f	unknown:M
load	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.load(theme)$/;"	f	unknown:utils
load	plugged/telescope.nvim/lua/telescope/_extensions/init.lua	/^extensions.load = function(name)$/;"	f	unknown:extensions
load	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.load(theme)$/;"	f	unknown:util
load	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.load()$/;"	f	unknown:M
loadEditor	plugged/material.nvim/lua/material/theme.lua	/^theme.loadEditor = function ()$/;"	f	unknown:theme
loadLSP	plugged/material.nvim/lua/material/theme.lua	/^theme.loadLSP = function ()$/;"	f	unknown:theme
loadPlugins	plugged/material.nvim/lua/material/theme.lua	/^theme.loadPlugins = function()$/;"	f	unknown:theme
loadSyntax	plugged/material.nvim/lua/material/theme.lua	/^theme.loadSyntax = function ()$/;"	f	unknown:theme
loadTerminal	plugged/material.nvim/lua/material/theme.lua	/^theme.loadTerminal = function ()$/;"	f	unknown:theme
loadTreeSitter	plugged/material.nvim/lua/material/theme.lua	/^theme.loadTreeSitter = function ()$/;"	f	unknown:theme
load_all	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function load_all(config)$/;"	f
load_command	plugged/telescope.nvim/lua/telescope/command.lua	/^function command.load_command(start_line, end_line, count, cmd, ...)$/;"	f	unknown:command
load_components	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function load_components(config)$/;"	f
load_extension	plugged/telescope.nvim/lua/telescope/init.lua	/^function telescope.load_extension(name)$/;"	f	unknown:telescope
load_extensions	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function load_extensions(config)$/;"	f
load_lockfile	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function load_lockfile()$/;"	f
load_once	plugged/telescope.nvim/lua/telescope/utils.lua	/^local load_once = function(f)$/;"	f
load_sections	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function load_sections(sections, options)$/;"	f
load_theme	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function load_theme(theme_name)$/;"	f
loaded_component	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^        loaded_component = require 'lualine.components.special.function_component'(component)$/;"	f
loading	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^   local loading = defer(1000, function()$/;"	f
locate-path	plugged/coc.nvim/package-lock.json	/^        "locate-path": "^5.0.0",$/;"	s	object:dependencies.find-up.requires
locate-path	plugged/coc.nvim/package-lock.json	/^    "locate-path": {$/;"	o	object:dependencies
location	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12000.e.a
location	plugged/lualine.nvim/lua/lualine/components/location.lua	/^local function location()$/;"	f
lockfileVersion	plugged/coc.nvim/package-lock.json	/^  "lockfileVersion": 1,$/;"	n
loclist	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.loclist = function(opts)$/;"	f	unknown:internal
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.14",$/;"	s	object:dependencies.table.requires
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.15",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.@eslint/eslintrc.requires
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.eslint.requires
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.20",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
lodash	plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.7.0",$/;"	s	object:dependencies.whatwg-url.requires
lodash	plugged/coc.nvim/package-lock.json	/^    "lodash": {$/;"	o	object:dependencies
lodash.memoize	plugged/coc.nvim/package-lock.json	/^        "lodash.memoize": "4.x",$/;"	s	object:dependencies.ts-jest.requires
lodash.memoize	plugged/coc.nvim/package-lock.json	/^    "lodash.memoize": {$/;"	o	object:dependencies
loe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
log	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.log(msg, hl)$/;"	f	unknown:M
log4js	plugged/coc.nvim/package-lock.json	/^    "log4js": {$/;"	o	object:dependencies
log_at_level	plugged/plenary.nvim/lua/plenary/log.lua	/^  local log_at_level = function(level, level_config, message_maker, ...)$/;"	f
log_to_console	plugged/plenary.nvim/lua/plenary/log.lua	/^      local log_to_console = function()$/;"	f
logo	plugged/emmet-vim/docs/index.html	/^	<img id="logo" src="static\/images\/emmet-vim-logo.png" title="禅" alt="禅" \/>$/;"	I
longest_string_length	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function longest_string_length(list)$/;"	f
loop	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
lor	plugged/plenary.nvim/lua/plenary/operators.lua	/^  lor = function(a, b)$/;"	f
love	plugged/vim-bbye/Makefile	/^love:$/;"	t
lp	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
lq	plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
lrotate	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.lrotate(x, disp)  -- Lua5.2 inspired$/;"	f	unknown:M
lru-cache	plugged/coc.nvim/package-lock.json	/^            "lru-cache": "^6.0.0"$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver.requires
lru-cache	plugged/coc.nvim/package-lock.json	/^    "lru-cache": {$/;"	o	object:dependencies
lru_pairs	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function lru_pairs()$/;"	f
ls	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
ls	plugged/plenary.nvim/lua/plenary/scandir.lua	/^m.ls = function(path, opts)$/;"	f	unknown:m
ls_async	plugged/plenary.nvim/lua/plenary/scandir.lua	/^m.ls_async = function(path, opts)$/;"	f	unknown:m
lse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
lshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.lshift(x, n)$/;"	f	unknown:M.bit
lshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.lshift(a,disp) -- Lua5.2 inspired$/;"	f	unknown:M
lt	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
lt	plugged/plenary.nvim/lua/plenary/operators.lua	/^  lt = function(a, b)$/;"	f
lua	plugged/nvim-treesitter/lockfile.json	/^  "lua": {$/;"	o
lua_eval	plugged/lualine.nvim/lua/lualine/components/special/eval_func_component.lua	/^function M.lua_eval(code)$/;"	f	unknown:M
lua_fun	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^  lua_fun = function(component)$/;"	f
lualib_installed	plugged/telescope.nvim/lua/telescope/health.lua	/^local function lualib_installed(lib_name)$/;"	f
lualine.nvim	plugged/lualine.nvim/README.md	/^# lualine.nvim$/;"	c
luv_to_lch	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.luv_to_lch = function(tuple)$/;"	f	unknown:hsluv
luv_to_lch	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.luv_to_lch = function(tuple)$/;"	f	unknown:hsluv
luv_to_lch	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.luv_to_lch = function(tuple)$/;"	f	unknown:hsluv
luv_to_xyz	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.luv_to_xyz = function(tuple)$/;"	f	unknown:hsluv
luv_to_xyz	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.luv_to_xyz = function(tuple)$/;"	f	unknown:hsluv
luv_to_xyz	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.luv_to_xyz = function(tuple)$/;"	f	unknown:hsluv
lv	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
lw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
lxe	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
ly	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
m	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
m	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
m$	plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
m0	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
m1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
m4e	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
m5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
m6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
m7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
m8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
m9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
mB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
mC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
mD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
mF	plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	v
mG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
mK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
mN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
mP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
mR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
mSe	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
mV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
mW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
mX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
mZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
macros	plugged/telescope.nvim/data/options/options.lua	/^local macros=function(s)$/;"	f
mae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
magenta	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
magentaBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
main	plugged/coc.nvim/package.json	/^  "main": ".\/lib\/index.js",$/;"	s
main	plugged/fzf/main.go	/^func main() {$/;"	f	package:main
main	plugged/fzf/main.go	/^package main$/;"	p
main	plugged/gitsigns.nvim/gen_help.lua	/^local function main()$/;"	f
main_loop	plugged/telescope.nvim/lua/telescope/pickers.lua	/^  local main_loop = async.void(function()$/;"	f
main_syntax	plugged/vim-blade/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
maintained_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.maintained_parsers()$/;"	f	unknown:M
major	plugged/coc.nvim/build/index.js	/^  var major = parseInt(parts[0], 10)$/;"	v
make-dir	plugged/coc.nvim/package-lock.json	/^        "make-dir": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-report.requires
make-dir	plugged/coc.nvim/package-lock.json	/^    "make-dir": {$/;"	o	object:dependencies
make-error	plugged/coc.nvim/package-lock.json	/^        "make-error": "1.x",$/;"	s	object:dependencies.ts-jest.requires
make-error	plugged/coc.nvim/package-lock.json	/^    "make-error": {$/;"	o	object:dependencies
makeFreeSpace	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function makeFreeSpace(bytes)$/;"	f
makeSpace	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f	struct:tui.LightRenderer
makeSpinner	plugged/fzf/src/terminal.go	/^func makeSpinner(unicode bool) []string {$/;"	f	package:fzf	typeref:typename:[]string
make_attach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/attach.lua	/^function M.make_attach(normal_mode_functions, submodule)$/;"	f	unknown:M
make_bitop	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function make_bitop(t)$/;"	f
make_bitop_uncached	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function make_bitop_uncached(t, m)$/;"	f
make_cached_tail	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local make_cached_tail = function()$/;"	f
make_cached_uppers	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local make_cached_uppers = function()$/;"	f
make_clickable	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.make_clickable(func_name, id, component)$/;"	f	unknown:M
make_default_callable	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.make_default_callable(f, default_opts)$/;"	f	unknown:utils
make_detach	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/attach.lua	/^function M.make_detach(normal_mode_functions, submodule)$/;"	f	unknown:M
make_directory_change_for_command	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.make_directory_change_for_command(dir, command)$/;"	f	unknown:M
make_display	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  local make_display = function(mapping)$/;"	f
make_display	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^  local make_display = function(entry)$/;"	f
make_display	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^  local function make_display(entry)$/;"	f
make_display	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  local make_display = function(entry)$/;"	f
make_display	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  local make_display = function(module_name)$/;"	f
make_documented_layout	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local function make_documented_layout(name, layout_config, layout)$/;"	f
make_enum	plugged/plenary.nvim/lua/plenary/enum.lua	/^local function make_enum(tbl)$/;"	f
make_git_branch_action	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local function make_git_branch_action(opts)$/;"	f
make_gitignore	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local make_gitignore = function(basepath)$/;"	f
make_globals	plugged/telescope.nvim/lua/telescope/pickers/_test_helpers.lua	/^test_helpers.make_globals = function()$/;"	f	unknown:test_helpers
make_ignored	plugged/nvim-treesitter/scripts/update-lockfile.sh	/^make_ignored() {$/;"	f
make_preview_location_callback	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^function M.make_preview_location_callback(textobject, context)$/;"	f	unknown:M
make_relative	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:make_relative(cwd)$/;"	f	unknown:Path
make_string	plugged/plenary.nvim/lua/plenary/log.lua	/^  local make_string = function(...)$/;"	f
makeerror	plugged/coc.nvim/package-lock.json	/^        "makeerror": "1.0.x"$/;"	s	object:dependencies.walker.requires
makeerror	plugged/coc.nvim/package-lock.json	/^    "makeerror": {$/;"	o	object:dependencies
maker	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^      local maker = function()$/;"	f
man	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.man = defaulter(function(opts)$/;"	f	unknown:previewers
man_cmd	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^  opts.man_cmd = utils.get_lazy_default(opts.man_cmd, function()$/;"	f	unknown:opts
man_pages	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.man_pages = function(opts)$/;"	f	unknown:internal
manage	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
manage_netrw	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function manage_netrw(disable_netrw, hijack_netrw)$/;"	f
manager	plugged/telescope.nvim/lua/tests/automated/entry_manager_spec.lua	/^    local manager = EntryManager:new(1, function()$/;"	f
manager	plugged/telescope.nvim/lua/tests/automated/entry_manager_spec.lua	/^    local manager = EntryManager:new(2, function()$/;"	f
manager	plugged/telescope.nvim/lua/tests/automated/entry_manager_spec.lua	/^    local manager = EntryManager:new(5, function()$/;"	f
map	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.map(callback, list)$/;"	f	unknown:M
map	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
map	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:map(fun)$/;"	f	unknown:Iterator
map	plugged/telescope.nvim/lua/telescope/mappings.lua	/^  local map = function(mode, key_bind, key_func, opts)$/;"	f
map	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.map(mode, prefix, cmd, buf, opts)$/;"	f	unknown:M
map-cache	plugged/coc.nvim/package-lock.json	/^        "map-cache": "^0.2.2"$/;"	s	object:dependencies.fragment-cache.requires
map-cache	plugged/coc.nvim/package-lock.json	/^        "map-cache": "^0.2.2",$/;"	s	object:dependencies.snapdragon.requires
map-cache	plugged/coc.nvim/package-lock.json	/^    "map-cache": {$/;"	o	object:dependencies
map-visit	plugged/coc.nvim/package-lock.json	/^        "map-visit": "^1.0.0",$/;"	s	object:dependencies.collection-visit.requires
map-visit	plugged/coc.nvim/package-lock.json	/^    "map-visit": {$/;"	o	object:dependencies
map_entries	plugged/telescope.nvim/lua/telescope/actions/utils.lua	/^function utils.map_entries(prompt_bufnr, f)$/;"	f	unknown:utils
map_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local map_gen = function(map, key)$/;"	f
map_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local map_gen = function(param, state)$/;"	f
map_selections	plugged/telescope.nvim/lua/telescope/actions/utils.lua	/^function utils.map_selections(prompt_bufnr, f)$/;"	f	unknown:utils
mapleader	init.vim	/^let mapleader = ","$/;"	v
mapping_buffer	plugged/nvim-spectre/lua/spectre/init.lua	/^function M.mapping_buffer(bufnr)$/;"	f	unknown:M
mappings	plugged/nvim-tree.lua/lua/nvim-tree/renderer/help.lua	/^  local mappings = vim.tbl_filter(function(v)$/;"	f
margin	plugged/fzf/src/terminal.go	/^	margin       [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
mark	plugged/bufferline.nvim/lua/bufferline/duplicates.lua	/^function M.mark(buffers)$/;"	f	unknown:M
markdownlint.config	coc-settings.json	/^    "markdownlint.config": {$/;"	o
marked	plugged/coc.nvim/package-lock.json	/^    "marked": {$/;"	o	object:dependencies
marker	plugged/fzf/src/terminal.go	/^	marker       string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerEmpty	plugged/fzf/src/terminal.go	/^	markerEmpty  string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerLen	plugged/fzf/src/terminal.go	/^	markerLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
marks	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.marks = function(opts)$/;"	f	unknown:internal
match	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var match = quickExpr.exec( selector );$/;"	v
match	plugged/fzf/src/terminal_test.go	/^	match  string \/\/ output is matched against this regex (when output is empty string)$/;"	m	struct:fzf.want	typeref:typename:string
match	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^  local match = queries.find_best_match(bufnr, query_string, "textobjects", filter_function, sco/;"	f
matchChunk	plugged/fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
matchControlSequence	plugged/fzf/src/ansi.go	/^func matchControlSequence(s string) int {$/;"	f	package:fzf	typeref:typename:int
matchOperatingSystemCommand	plugged/fzf/src/ansi.go	/^func matchOperatingSystemCommand(s string) int {$/;"	f	package:fzf	typeref:typename:int
match_count	plugged/fzf/test/test_go.rb	/^          def match_count$/;"	f	method:Tmux.until
match_dag	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.match_dag(lines, spec)$/;"	f	unknown:M
match_debug_messages	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.match_debug_messages(spec)$/;"	f	unknown:M
match_lines	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.match_lines(lines, spec)$/;"	f	unknown:M
match_lines2	plugged/gitsigns.nvim/test/gs_helpers.lua	/^local function match_lines2(lines, spec)$/;"	f
match_text_line	plugged/nvim-spectre/lua/spectre/utils.lua	/^local function match_text_line(match, str, padding)$/;"	f
matchargs	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.matchargs(argslist, args)$/;"	f	unknown:util
matcher	plugged/bufferline.nvim/tests/groups_spec.lua	/^              matcher = function(buf)$/;"	f
matcher	plugged/plenary.nvim/lua/plenary/reload.lua	/^    matcher = function(pack)$/;"	f
matches	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	p	class:c
matches	plugged/fzf/src/matcher.go	/^	matches []Result$/;"	m	struct:fzf.partialResult	typeref:typename:[]Result
matches	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^  local matches = query.get_capture_matches_recursively(bufnr, function(lang)$/;"	f
matches	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function matches(state, arguments, level)$/;"	f
matches	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function matches(state, arguments, level)$/;"	f
matches	plugged/plenary.nvim/lua/luassert/util.lua	/^  local function matches(t1, t2, t1refs)$/;"	f
matches_any_import	plugged/plenary.nvim/tests/plenary/popup_requires_spec.lua	/^  local matches_any_import = function(line)$/;"	f
material	plugged/lualine.nvim/THEMES.md	/^### material$/;"	S	chapter:Available themes
maxBodyLength	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:BW.e
maxHeight	plugged/coc.nvim/data/schema.json	/^        "maxHeight": {$/;"	o	object:definitions.float.properties
maxHeight	plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
maxHeight	plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.hover.floatConfig.properties
maxHeight	plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.signature.floatConfig.properties
maxHeightFunc	plugged/fzf/src/tui/light.go	/^	maxHeightFunc func(int) int$/;"	m	struct:tui.LightRenderer	typeref:typename:func(int) int
maxInputBuffer	plugged/fzf/src/tui/light.go	/^	maxInputBuffer  = 10 * 1024$/;"	c	package:tui
maxItems	plugged/fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
maxMulti	plugged/fzf/src/constants.go	/^	maxMulti          = math.MaxInt32$/;"	c	package:fzf
maxPartitions	plugged/fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c	package:fzf
maxPatternLength	plugged/fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c	package:fzf
maxRedirects	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
maxRedirects	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:BW.e
maxSize	plugged/fzf/src/history.go	/^	maxSize  int$/;"	m	struct:fzf.History	typeref:typename:int
maxWidth	plugged/coc.nvim/data/schema.json	/^        "maxWidth": {$/;"	o	object:definitions.float.properties
maxWidth	plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
maxWidth	plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.hover.floatConfig.properties
maxWidth	plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.signature.floatConfig.properties
maxWidth	plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.suggest.floatConfig.properties
max_safe_chroma_for_l	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.max_safe_chroma_for_l = function(l)$/;"	f	unknown:hsluv
max_safe_chroma_for_l	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.max_safe_chroma_for_l = function(l)$/;"	f	unknown:hsluv
max_safe_chroma_for_l	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.max_safe_chroma_for_l = function(l)$/;"	f	unknown:hsluv
max_safe_chroma_for_lh	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.max_safe_chroma_for_lh = function(l, h)$/;"	f	unknown:hsluv
max_safe_chroma_for_lh	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.max_safe_chroma_for_lh = function(l, h)$/;"	f	unknown:hsluv
max_safe_chroma_for_lh	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.max_safe_chroma_for_lh = function(l, h)$/;"	f	unknown:hsluv
max_split	plugged/telescope.nvim/lua/telescope/utils.lua	/^function utils.max_split(s, pattern, maxsplit)$/;"	f	unknown:utils
max_width	plugged/which-key.nvim/lua/which-key/layout.lua	/^function Layout:max_width(key)$/;"	f	unknown:Layout
maximum	plugged/coc.nvim/data/schema.json	/^          "maximum": 100,$/;"	n	object:definitions.float.properties.winblend
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.highPrioritySourceLimit
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 1000,$/;"	n	object:properties.signature.triggerSignatureWait
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 15000,$/;"	n	object:properties.suggest.timeout
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 500,$/;"	n	object:properties.suggest.triggerCompletionWait
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
maxmin	plugged/plenary.nvim/lua/plenary/benchmark/stat.lua	/^stat.maxmin = function(t)$/;"	f	unknown:stat
me	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
mean	plugged/plenary.nvim/lua/plenary/benchmark/stat.lua	/^stat.mean = function(t)$/;"	f	unknown:stat
measure	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.measure(...)$/;"	f	unknown:M
median	plugged/plenary.nvim/lua/plenary/benchmark/stat.lua	/^stat.median = function(t)$/;"	f	unknown:stat
memoize	plugged/plenary.nvim/lua/plenary/bit.lua	/^local function memoize(f)$/;"	f
memoize_by_buf_tick	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.memoize_by_buf_tick(fn, options)$/;"	f	unknown:M
merge	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function Config:merge(defaults)$/;"	f	unknown:Config
merge	plugged/fzf/src/tui/tui.go	/^func (p ColorPair) merge(other ColorPair, except Color) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
merge	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^local function merge(t, first, mid, last, comparator)$/;"	f
merge-stream	plugged/coc.nvim/package-lock.json	/^            "merge-stream": "^2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
merge-stream	plugged/coc.nvim/package-lock.json	/^        "merge-stream": "^2.0.0",$/;"	s	object:dependencies.jest-worker.requires
merge-stream	plugged/coc.nvim/package-lock.json	/^    "merge-stream": {$/;"	o	object:dependencies
merge2	plugged/coc.nvim/package-lock.json	/^        "merge2": "^1.3.0",$/;"	s	object:dependencies.fast-glob.requires
merge2	plugged/coc.nvim/package-lock.json	/^        "merge2": "^1.3.0",$/;"	s	object:dependencies.globby.requires
merge2	plugged/coc.nvim/package-lock.json	/^    "merge2": {$/;"	o	object:dependencies
merge_mappings	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function merge_mappings(user_mappings)$/;"	f
merge_ranges	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.merge_ranges = function(ranges)$/;"	f	unknown:M
merge_sort	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.merge_sort(t, comparator)$/;"	f	unknown:M
merged	plugged/fzf/src/merger.go	/^	merged  []Result$/;"	m	struct:fzf.Merger	typeref:typename:[]Result
mergedGet	plugged/fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
merger	plugged/fzf/src/terminal.go	/^	merger       *Merger$/;"	m	struct:fzf.Terminal	typeref:typename:*Merger
mergerCache	plugged/fzf/src/matcher.go	/^	mergerCache    map[string]*Merger$/;"	m	struct:fzf.Matcher	typeref:typename:map[string]*Merger
mergerCacheMax	plugged/fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c	package:fzf	typeref:typename:int
message	plugged/bufferline.nvim/lua/bufferline/config.lua	/^    message = "please specify 'numbers' as a function instead. See :h bufferline-numbers for det/;"	f
message	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af700.e.c
message	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
messenger.format_exception	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.format_exception( msg) dict$/;"	f
messenger.format_message	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.format_message(leader, msg) dict$/;"	f
messenger.send_error	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_error(msg) dict$/;"	f
messenger.send_info	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_info(msg) dict$/;"	f
messenger.send_status	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_status(msg) dict$/;"	f
messenger.send_warning	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_warning(msg) dict$/;"	f
method	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
method	plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
method	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.method = function(s)$/;"	f	unknown:parse
mfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
mg	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
mge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
mi	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
micromatch	plugged/coc.nvim/package-lock.json	/^            "micromatch": "^3.1.4",$/;"	s	object:dependencies.sane.dependencies.anymatch.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^3.1.4",$/;"	s	object:dependencies.sane.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2"$/;"	s	object:dependencies.jest-util.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.@jest/core.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.@jest/transform.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.fast-glob.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-config.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-haste-map.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-message-util.requires
micromatch	plugged/coc.nvim/package-lock.json	/^        "micromatch": {$/;"	o	object:dependencies.sane.dependencies
micromatch	plugged/coc.nvim/package-lock.json	/^    "micromatch": {$/;"	o	object:dependencies
mid	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1e100.i
middle	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.middle = function(sorting_strategy, max_results, num_results)$/;"	f	unknown:scroller
middle_mouse_command	plugged/bufferline.nvim/tests/bufferline_spec.lua	/^          middle_mouse_command = function(bufid)$/;"	f
mie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
mime-db	plugged/coc.nvim/package-lock.json	/^        "mime-db": "1.48.0"$/;"	s	object:dependencies.mime-types.requires
mime-db	plugged/coc.nvim/package-lock.json	/^    "mime-db": {$/;"	o	object:dependencies
mime-types	plugged/coc.nvim/package-lock.json	/^        "mime-types": "^2.1.12"$/;"	s	object:dependencies.form-data.requires
mime-types	plugged/coc.nvim/package-lock.json	/^    "mime-types": {$/;"	o	object:dependencies
mimic-fn	plugged/coc.nvim/package-lock.json	/^        "mimic-fn": "^2.1.0"$/;"	s	object:dependencies.onetime.requires
mimic-fn	plugged/coc.nvim/package-lock.json	/^    "mimic-fn": {$/;"	o	object:dependencies
mimic-response	plugged/coc.nvim/package-lock.json	/^        "mimic-response": "^3.1.0"$/;"	s	object:dependencies.decompress-response.requires
mimic-response	plugged/coc.nvim/package-lock.json	/^    "mimic-response": {$/;"	o	object:dependencies
min	plugged/telescope.nvim/lua/telescope/algos/string_distance.lua	/^local function min(a, b, c)$/;"	f
minHeight	plugged/fzf/src/terminal.go	/^	minHeight = 4$/;"	c	package:fzf
minItem	plugged/fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v	package:fzf
minRank	plugged/fzf/src/result.go	/^func minRank() Result {$/;"	f	package:fzf	typeref:typename:Result
minWidth	plugged/fzf/src/terminal.go	/^	minWidth  = 4$/;"	c	package:fzf
minimatch	plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4"$/;"	s	object:dependencies.test-exclude.requires
minimatch	plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
minimatch	plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.eslint.requires
minimatch	plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.glob.requires
minimatch	plugged/coc.nvim/package-lock.json	/^    "minimatch": {$/;"	o	object:dependencies
minimist	plugged/coc.nvim/package-lock.json	/^            "minimist": "^1.2.5"$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp.requires
minimist	plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.1.1",$/;"	s	object:dependencies.sane.requires
minimist	plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.0"$/;"	s	object:dependencies.@cnakazawa/watch.requires
minimist	plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.0",$/;"	s	object:dependencies.rc.requires
minimist	plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.5"$/;"	s	object:dependencies.json5.requires
minimist	plugged/coc.nvim/package-lock.json	/^    "minimist": {$/;"	o	object:dependencies
minimum	plugged/coc.nvim/data/schema.json	/^          "minimum": 0,$/;"	n	object:definitions.float.properties.winblend
minimum	plugged/coc.nvim/data/schema.json	/^          "minimum": 2,$/;"	n	object:definitions.float.properties.maxHeight
minimum	plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	n	object:properties.coc.preferences.jumpCommand.anyOf.1
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.highPrioritySourceLimit
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.signature.triggerSignatureWait
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 30,$/;"	n	object:properties.suggest.triggerCompletionWait
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 500,$/;"	n	object:properties.suggest.timeout
minipass	plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0"$/;"	s	object:dependencies.fs-minipass.requires
minipass	plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0",$/;"	s	object:dependencies.minizlib.requires
minipass	plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0",$/;"	s	object:dependencies.tar.requires
minipass	plugged/coc.nvim/package-lock.json	/^    "minipass": {$/;"	o	object:dependencies
minizlib	plugged/coc.nvim/package-lock.json	/^        "minizlib": "^2.1.1",$/;"	s	object:dependencies.tar.requires
minizlib	plugged/coc.nvim/package-lock.json	/^    "minizlib": {$/;"	o	object:dependencies
minor	plugged/coc.nvim/build/index.js	/^  var minor = parseInt(parts[1], 10)$/;"	v
missing	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:missing()$/;"	f	unknown:TSRange
mixin-deep	plugged/coc.nvim/package-lock.json	/^        "mixin-deep": "^1.2.0",$/;"	s	object:dependencies.base.requires
mixin-deep	plugged/coc.nvim/package-lock.json	/^    "mixin-deep": {$/;"	o	object:dependencies
mk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
mk_repeatable	plugged/gitsigns.nvim/lua/gitsigns/repeat.lua	/^function M.mk_repeatable(fn)$/;"	f	unknown:M
mkdir	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:mkdir(opts)$/;"	f	unknown:Path
mkdirp	plugged/coc.nvim/package-lock.json	/^        "mkdirp": "1.x",$/;"	s	object:dependencies.ts-jest.requires
mkdirp	plugged/coc.nvim/package-lock.json	/^        "mkdirp": "^0.5.1"$/;"	s	object:dependencies.unzip-stream.requires
mkdirp	plugged/coc.nvim/package-lock.json	/^        "mkdirp": "^1.0.3",$/;"	s	object:dependencies.tar.requires
mkdirp	plugged/coc.nvim/package-lock.json	/^        "mkdirp": {$/;"	o	object:dependencies.unzip-stream.dependencies
mkdirp	plugged/coc.nvim/package-lock.json	/^    "mkdirp": {$/;"	o	object:dependencies
mme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
mock_apply	plugged/plenary.nvim/lua/luassert/mock.lua	/^local function mock_apply(object, action)$/;"	f
mocking with luassert	plugged/plenary.nvim/TESTS_README.md	/^# mocking with luassert$/;"	c
mod	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^  mod = function(component)$/;"	f
mod	plugged/plenary.nvim/lua/plenary/operators.lua	/^  mod = function(a, b)$/;"	f
mod[k]	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^    mod[k] = function(opts)$/;"	f
mod[k]	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^    mod[k] = function(opts)$/;"	f
mod[k]	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^    mod[k] = function(opts)$/;"	f
mod[k]	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    mod[k] = function(opts)$/;"	f
mod[k]	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^    mod[k] = function(opts)$/;"	f
mode	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
mode	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^  mode = mode:gsub("%-?%d+", function(s) prof_depth = tonumber(s); return "" end)$/;"	f
mode	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^  mode = mode:gsub("i%d*", function(s) interval = s; return "" end)$/;"	f
mode	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^  mode = mode:gsub("m(%d+)", function(s) prof_min = tonumber(s); return "" end)$/;"	f
modified	plugged/fzf/src/history.go	/^	modified map[int]string$/;"	m	struct:fzf.History	typeref:typename:map[int]string
modified_component	plugged/bufferline.nvim/lua/bufferline.lua	/^local function modified_component(context)$/;"	f
modifier	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
module	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
module	plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
module	plugged/coc.nvim/data/schema.json	/^        "module": {$/;"	o	object:definitions.languageServerModule.properties
moduleFileExtensions	plugged/coc.nvim/package.json	/^    "moduleFileExtensions": [$/;"	a	object:jest
module_info	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function module_info(module)$/;"	f
modus-vivendi	plugged/lualine.nvim/THEMES.md	/^### modus-vivendi$/;"	S	chapter:Available themes
molokai	plugged/lualine.nvim/THEMES.md	/^### molokai$/;"	S	chapter:Available themes
moonfly	plugged/lualine.nvim/THEMES.md	/^### moonfly$/;"	S	chapter:Available themes
mouse	plugged/fzf/src/tui/light.go	/^	mouse         bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
mouse	plugged/fzf/src/tui/tui.go	/^	mouse        bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
mouseSequence	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
move	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.move(direction)$/;"	f	unknown:M
move	plugged/fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f	struct:fzf.Terminal
move	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f	struct:tui.LightRenderer
move	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^local function move(query_string, forward, start, bufnr)$/;"	f
move	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:move(from, len, to, other)$/;"	f	unknown:List
move	plugged/plenary.nvim/lua/plenary/popup/init.lua	/^function popup.move(win_id, vim_options)$/;"	f	unknown:popup
move	plugged/plenary.nvim/lua/plenary/window/border.lua	/^function Border:move(content_win_options, border_win_options)$/;"	f	unknown:Border
moveCursor	plugged/fzf/src/tui/tcell.go	/^	moveCursor  bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
move_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:move_selection(change)$/;"	f	unknown:Picker
move_selection_better	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_selection_better(prompt_bufnr)$/;"	f	unknown:actions
move_selection_next	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_selection_next(prompt_bufnr)$/;"	f	unknown:actions
move_selection_previous	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_selection_previous(prompt_bufnr)$/;"	f	unknown:actions
move_selection_worse	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_selection_worse(prompt_bufnr)$/;"	f	unknown:actions
move_to_bottom	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_to_bottom(prompt_bufnr)$/;"	f	unknown:actions
move_to_middle	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_to_middle(prompt_bufnr)$/;"	f	unknown:actions
move_to_top	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.move_to_top(prompt_bufnr)$/;"	f	unknown:actions
mozilla	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	mozilla: \/mozilla\/.test( userAgent ) && !\/(compatible|webkit)\/.test( userAgent )$/;"	p	class:jQuery.browser
mp	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
mpsc	plugged/plenary.nvim/lua/plenary/async/control.lua	/^M.channel.mpsc = function()$/;"	f	unknown:M.channel
mpsc	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.channel.mpsc = function()$/;"	f	unknown:M.channel
mr	plugged/coc.nvim/build/index.js	/^`),_.log(`Received notification '${P.method}'.`,z)}else to("receive-notification",P)}function mr/;"	f
ms	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
ms	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ms	plugged/coc.nvim/package-lock.json	/^            "ms": "2.0.0"$/;"	s	object:dependencies.expand-brackets.dependencies.debug.requires
ms	plugged/coc.nvim/package-lock.json	/^            "ms": "2.0.0"$/;"	s	object:dependencies.snapdragon.dependencies.debug.requires
ms	plugged/coc.nvim/package-lock.json	/^            "ms": "2.1.2"$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug.requires
ms	plugged/coc.nvim/package-lock.json	/^        "ms": "^2.1.1"$/;"	s	object:dependencies.debug.requires
ms	plugged/coc.nvim/package-lock.json	/^        "ms": {$/;"	o	object:dependencies.expand-brackets.dependencies
ms	plugged/coc.nvim/package-lock.json	/^        "ms": {$/;"	o	object:dependencies.snapdragon.dependencies
ms	plugged/coc.nvim/package-lock.json	/^    "ms": {$/;"	o	object:dependencies
mse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
msg	plugged/plenary.nvim/lua/plenary/busted.lua	/^  local ok, msg = xpcall(func, function(msg)$/;"	f
msg	plugged/telescope.nvim/lua/telescope/pickers.lua	/^        local ok, msg = pcall(function()$/;"	f
msgpack-lite	plugged/coc.nvim/package-lock.json	/^        "msgpack-lite": "^0.1.26"$/;"	s	object:dependencies.@chemzqm/neovim.requires
msgpack-lite	plugged/coc.nvim/package-lock.json	/^    "msgpack-lite": {$/;"	o	object:dependencies
msie	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	msie: \/msie\/.test( userAgent ) && !\/opera\/.test( userAgent ),$/;"	p	class:jQuery.browser
mul	plugged/plenary.nvim/lua/plenary/operators.lua	/^  mul = function(a, b)$/;"	f
multi	plugged/fzf/src/terminal.go	/^	multi        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
mutex	plugged/fzf/src/cache.go	/^	mutex sync.Mutex$/;"	m	struct:fzf.ChunkCache	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/chunklist.go	/^	mutex  sync.Mutex$/;"	m	struct:fzf.ChunkList	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/reader.go	/^	mutex    sync.Mutex$/;"	m	struct:fzf.Reader	typeref:typename:sync.Mutex
mutex	plugged/fzf/src/terminal.go	/^	mutex        sync.Mutex$/;"	m	struct:fzf.Terminal	typeref:typename:sync.Mutex
mv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
mw	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
my	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
mynext	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function mynext(_, prev_key)$/;"	f
n	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:AnonymousFunctionaf1e5c4a1df00
n	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
n	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
n	plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunctionaf1e5c4a34600
n	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a11d00.e
n	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af900
n	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afc00
n	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00
n	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
n	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
n	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
n	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2c800.AnonymousFunctionaf1e5c4a2c900
n	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400
n	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionaf1e5c4a33600
n	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunctionaf1e5c4a33f00
n	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:eme
n	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2b900
n	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunctionaf1e5c4a12900
n	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:Cae
n	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:wee
n	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionaf1e5c4a7400
n	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
n	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
n	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Oae
n	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:q0
n	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
n	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.n(str)$/;"	f	unknown:M
n	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> n ' j'[v:searchforward].'n'$/;"	m
n$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
n5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
n6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
n7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
n8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
n8e	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
n9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
nB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
nC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
nCe	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
nD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
nG	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
nJ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
nK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
nP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
nQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
nR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
nT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
nU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
nV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
nW	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
nX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
nZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
n_	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
na	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
nae	plugged/coc.nvim/build/index.js	/^`)}function nae(r,e,t){return r=r.trim(),r=e?rae(r,t):tae(r,t),r}function Fd(r){return r+`$/;"	f
name	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12000.e.a
name	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12100.e.c
name	plugged/coc.nvim/package-lock.json	/^  "name": "coc.nvim-master",$/;"	s
name	plugged/coc.nvim/package.json	/^  "name": "coc.nvim",$/;"	s
name	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:name()$/;"	f	unknown:Buffer
name	plugged/vim-easy-replace/addon-info.json	/^  "name": "easy-replace",$/;"	s
name:	plugged/nvim-treesitter/queries/python/highlights.scm	/^  name: (identifier) @parameter)$/;"	f
name]	plugged/plenary.nvim/lua/plenary/log.lua	/^    obj[x.name] = function(...)$/;"	f	unknown:obj[x
name_formatter	plugged/bufferline.nvim/tests/bufferline_spec.lua	/^          name_formatter = function(buf)$/;"	f
named	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named()$/;"	f	unknown:TSRange
named_child	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child(index)$/;"	f	unknown:TSRange
named_child_count	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child_count()$/;"	f	unknown:TSRange
names	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.names(include_empty)$/;"	f	unknown:M
namespace	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
namespace_modules	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function namespace_modules(modulelist)$/;"	f
nanomatch	plugged/coc.nvim/package-lock.json	/^            "nanomatch": "^1.2.9",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
nanomatch	plugged/coc.nvim/package-lock.json	/^    "nanomatch": {$/;"	o	object:dependencies
nargs	plugged/plenary.nvim/lua/plenary/async/util.lua	/^  local nargs = a.get_leaf_function_argc(async_fn)$/;"	f
natural-compare	plugged/coc.nvim/package-lock.json	/^        "natural-compare": "^1.4.0",$/;"	s	object:dependencies.eslint.requires
natural-compare	plugged/coc.nvim/package-lock.json	/^        "natural-compare": "^1.4.0",$/;"	s	object:dependencies.jest-snapshot.requires
natural-compare	plugged/coc.nvim/package-lock.json	/^    "natural-compare": {$/;"	o	object:dependencies
nav_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function nav_hunk(opts)$/;"	f
nc	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ne	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ne	plugged/plenary.nvim/lua/plenary/operators.lua	/^  ne = function(a, b)$/;"	f
near	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function near(state, arguments, level)$/;"	f
near	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function near(state, arguments, level)$/;"	f
needs_update	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function needs_update(lang)$/;"	f
neovimdotfiles	README.md	/^# neovimdotfiles$/;"	c
neq	plugged/plenary.nvim/lua/plenary/operators.lua	/^  neq = function(a)$/;"	f
nested_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.nested_scope(node, cursor_pos)$/;"	f	unknown:M
new	plugged/bufferline.nvim/lua/bufferline.lua	/^function Context:new(ctx)$/;"	f	unknown:Context
new	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function Config:new(o)$/;"	f	unknown:Config
new	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Buffer:new(buf)$/;"	f	unknown:Buffer
new	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Component:new(t)$/;"	f	unknown:Component
new	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function GroupView:new(group)$/;"	f	unknown:GroupView
new	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Section:new(n)$/;"	f	unknown:Section
new	plugged/bufferline.nvim/tests/utils.lua	/^function MockBuffer:new(o)$/;"	f	unknown:MockBuffer
new	plugged/gitsigns.nvim/lua/gitsigns/cache.lua	/^CacheEntry.new = function(o)$/;"	f	unknown:CacheEntry
new	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.new = function(file)$/;"	f	unknown:Obj
new	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Repo.new = function(dir)$/;"	f	unknown:Repo
new	plugged/lualine.nvim/lua/lualine/utils/class.lua	/^function Object:new(...)$/;"	f	unknown:Object
new	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^function lru.new(max_size, max_bytes)$/;"	f	unknown:lru
new	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^    function creator:new(config, handler)$/;"	f	unknown:creator
new	plugged/nvim-spectre/lua/spectre/search/base.lua	/^    function creator:new(config, handler)$/;"	f	unknown:creator
new	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.new(buf, start_row, start_col, end_row, end_col)$/;"	f	unknown:TSRange
new	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:new(it, base_dir, buf_opts)$/;"	f	unknown:Runner
new	plugged/plenary.nvim/lua/luassert/mock.lua	/^  new = function(object, dostub, func, self, key)$/;"	f
new	plugged/plenary.nvim/lua/luassert/spy.lua	/^  new = function(callback)$/;"	f
new	plugged/plenary.nvim/lua/luassert/stub.lua	/^function stub.new(object, key, ...)$/;"	f	unknown:stub
new	plugged/plenary.nvim/lua/plenary/async/control.lua	/^function Condvar.new()$/;"	f	unknown:Condvar
new	plugged/plenary.nvim/lua/plenary/async/control.lua	/^function Semaphore.new(initial_permits)$/;"	f	unknown:Semaphore
new	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque.new()$/;"	f	unknown:Deque
new	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque.new()$/;"	f	unknown:Deque
new	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^function Condvar.new()$/;"	f	unknown:Condvar
new	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^function Semaphore.new(initial_permits)$/;"	f	unknown:Semaphore
new	plugged/plenary.nvim/lua/plenary/class.lua	/^function Object:new() end$/;"	f	unknown:Object
new	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List.new(tbl)$/;"	f	unknown:List
new	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:new(o)$/;"	f	unknown:Job
new	plugged/plenary.nvim/lua/plenary/log.lua	/^log.new = function(config, standalone)$/;"	f	unknown:log
new	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:new(...)$/;"	f	unknown:Path
new	plugged/plenary.nvim/lua/plenary/window/border.lua	/^function Border:new(content_bufnr, content_win_id, content_win_options, border_win_options)$/;"	f	unknown:Border
new	plugged/plenary.nvim/scratch/_reference_count.lua	/^function List.new ()$/;"	f	unknown:List
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function AsyncJob.new(opts)$/;"	f	unknown:AsyncJob
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function BasePipe:new()$/;"	f	unknown:BasePipe
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function ChunkPipe:new()$/;"	f	unknown:ChunkPipe
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function ErrorPipe:new()$/;"	f	unknown:ErrorPipe
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function LinesPipe:new()$/;"	f	unknown:LinesPipe
new	plugged/telescope.nvim/lua/telescope/_.lua	/^function NullPipe:new()$/;"	f	unknown:NullPipe
new	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.History:new(opts)$/;"	f	unknown:histories.History
new	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.new(...)$/;"	f	unknown:histories
new	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:new(opts)$/;"	f	unknown:LinkedList
new	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:new(max_results, set_entry, info)$/;"	f	unknown:EntryManager
new	plugged/telescope.nvim/lua/telescope/finders.lua	/^function DynamicFinder:new(opts)$/;"	f	unknown:DynamicFinder
new	plugged/telescope.nvim/lua/telescope/finders.lua	/^function JobFinder:new(opts)$/;"	f	unknown:JobFinder
new	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:new(opts)$/;"	f	unknown:Picker
new	plugged/telescope.nvim/lua/telescope/pickers.lua	/^pickers.new = function(opts, defaults)$/;"	f	unknown:pickers
new	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^function Highlighter:new(picker)$/;"	f	unknown:Highlighter
new	plugged/telescope.nvim/lua/telescope/pickers/highlights.lua	/^highlights.new = function(...)$/;"	f	unknown:highlights
new	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:new()$/;"	f	unknown:MultiSelect
new	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    new = function(opts)$/;"	f
new	plugged/telescope.nvim/lua/telescope/previewers/init.lua	/^previewers.new = function(...)$/;"	f	unknown:previewers
new	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:new(opts)$/;"	f	unknown:Previewer
new	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:new(opts)$/;"	f	unknown:Sorter
new	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function sorters.new(...)$/;"	f	unknown:sorters
new	plugged/telescope.nvim/lua/telescope/utils.lua	/^    new = function(opts)$/;"	f
new	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:new(term)$/;"	f	unknown:Terminal
new	plugged/which-key.nvim/lua/which-key/layout.lua	/^function Layout:new(mappings, options)$/;"	f	unknown:Layout
new	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text:new()$/;"	f	unknown:Text
new	plugged/which-key.nvim/lua/which-key/tree.lua	/^function Tree:new()$/;"	f	unknown:Tree
newItem	plugged/fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f	package:fzf	typeref:typename:*Item
newItems	plugged/fzf/src/terminal_test.go	/^func newItems(str ...string) []*Item {$/;"	f	package:fzf	typeref:typename:[]*Item
newRange	plugged/fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f	package:fzf	typeref:typename:Range
newUri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4aff00.e.a
newVariant	plugged/plenary.nvim/lua/plenary/enum.lua	/^  local function newVariant(i)$/;"	f
new_async_job	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders.new_async_job = function(opts)$/;"	f	unknown:finders
new_buffer_previewer	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.new_buffer_previewer = function(opts)$/;"	f	unknown:previewers
new_deque	plugged/plenary.nvim/tests/plenary/async/deque_spec.lua	/^local function new_deque()$/;"	f
new_dynamic	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders.new_dynamic = function(t)$/;"	f	unknown:finders
new_job	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders.new_job = function(command_generator, entry_maker, _, cwd)$/;"	f	unknown:finders
new_line	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:new_line(file, spec, title)$/;"	f	unknown:Runner
new_oneshot_job	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders.new_oneshot_job = function(command_list, opts)$/;"	f	unknown:finders
new_picker	plugged/telescope.nvim/lua/tests/automated/telescope_spec.lua	/^      local new_picker = function(a, b)$/;"	f
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
new_table	plugged/telescope.nvim/lua/telescope/finders.lua	/^finders.new_table = function(t)$/;"	f	unknown:finders
new_termopen_previewer	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^previewers.new_termopen_previewer = function(opts)$/;"	f	unknown:previewers
next	plugged/fzf/src/history.go	/^func (h *History) next() string {$/;"	f	struct:fzf.History	typeref:typename:string
nextAnsiEscapeSequence	plugged/fzf/src/ansi.go	/^func nextAnsiEscapeSequence(s string) (int, int) {$/;"	f	package:fzf	typeref:typename:(int, int)
nextId	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
nextInt	plugged/fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f	package:fzf	typeref:typename:int
nextString	plugged/fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f	package:fzf	typeref:typename:string
next_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.next_hunk = function(opts)$/;"	f	unknown:M
next_id	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function next_id()$/;"	f
next_node	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^  local next_node = queries.find_best_match(bufnr, query_string, "textobjects", filter_function,/;"	f
next_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.next_scope(node)$/;"	f	unknown:M
next_sibling	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  next_sibling = function(node) lib.sibling(node, 1) end,$/;"	f
next_textobject	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^function M.next_textobject(node, query_string, same_parent, overlapping_range_ok, bufnr)$/;"	f	unknown:M
next_value	plugged/telescope.nvim/lua/telescope/_.lua	/^  next_value = function()$/;"	f
nf	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
nf_finder	plugged/plenary.nvim/scratch/new_line_finder.lua	/^local nf_finder = function(data)$/;"	f
ng	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
nge	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
ngram_highlighter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local ngram_highlighter = function(ngram_len, prompt, display)$/;"	f
nh	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
ni	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
nice-try	plugged/coc.nvim/package-lock.json	/^            "nice-try": "^1.0.4",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
nice-try	plugged/coc.nvim/package-lock.json	/^    "nice-try": {$/;"	o	object:dependencies
nightfly	plugged/lualine.nvim/THEMES.md	/^### nightfly$/;"	S	chapter:Available themes
nil_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local nil_gen = function(_param, _state)$/;"	f
nil_maker	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      nil_maker = function()$/;"	f
nix	plugged/nvim-treesitter/lockfile.json	/^  "nix": {$/;"	o
nj	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
nk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
nl	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text:nl()$/;"	f	unknown:Text
nle	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
nme	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
noInfoLine	plugged/fzf/src/terminal.go	/^func (t *Terminal) noInfoLine() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
noautocmd	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function noautocmd(f)$/;"	f
node	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
node	plugged/coc.nvim/package.json	/^    "node": ">=8.10.0"$/;"	s	object:engines
node-int64	plugged/coc.nvim/package-lock.json	/^        "node-int64": "^0.4.0"$/;"	s	object:dependencies.bser.requires
node-int64	plugged/coc.nvim/package-lock.json	/^    "node-int64": {$/;"	o	object:dependencies
node-modules-regexp	plugged/coc.nvim/package-lock.json	/^        "node-modules-regexp": "^1.0.0"$/;"	s	object:dependencies.pirates.requires
node-modules-regexp	plugged/coc.nvim/package-lock.json	/^    "node-modules-regexp": {$/;"	o	object:dependencies
node-notifier	plugged/coc.nvim/package-lock.json	/^        "node-notifier": "^8.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
node-notifier	plugged/coc.nvim/package-lock.json	/^    "node-notifier": {$/;"	o	object:dependencies
node-releases	plugged/coc.nvim/package-lock.json	/^        "node-releases": "^1.1.71"$/;"	s	object:dependencies.browserslist.requires
node-releases	plugged/coc.nvim/package-lock.json	/^    "node-releases": {$/;"	o	object:dependencies
node_	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
node_comparator	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function node_comparator(a, b)$/;"	f
node_decremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.node_decremental()$/;"	f	unknown:M
node_fmt	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local function node_fmt(node)$/;"	f
node_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.node_incremental = select_incremental(function(node)$/;"	f	unknown:M
node_length	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_length(node)$/;"	f	unknown:M
node_to_lsp_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_to_lsp_range(node)$/;"	f	unknown:M
none	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^  none = function(c) return c end$/;"	f
none	plugged/plenary.nvim/lua/luassert/matchers/composite.lua	/^local function none(state, arguments, level)$/;"	f
nonleaf	plugged/plenary.nvim/tests/plenary/async/util_spec.lua	/^      local nonleaf = function()$/;"	f
nord	plugged/lualine.nvim/THEMES.md	/^### nord$/;"	S	chapter:Available themes
normal	plugged/fzf/src/tui/tcell.go	/^	normal      ColorPair$/;"	m	struct:tui.TcellWindow	typeref:typename:ColorPair
normalize	plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
normalize	plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.term	typeref:typename:bool
normalize	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:normalize(cwd)$/;"	f	unknown:Path
normalize-package-data	plugged/coc.nvim/package-lock.json	/^        "normalize-package-data": "^2.5.0",$/;"	s	object:dependencies.read-pkg.requires
normalize-package-data	plugged/coc.nvim/package-lock.json	/^    "normalize-package-data": {$/;"	o	object:dependencies
normalize-path	plugged/coc.nvim/package-lock.json	/^            "normalize-path": "^2.1.1"$/;"	s	object:dependencies.sane.dependencies.anymatch.requires
normalize-path	plugged/coc.nvim/package-lock.json	/^        "normalize-path": "^3.0.0",$/;"	s	object:dependencies.anymatch.requires
normalize-path	plugged/coc.nvim/package-lock.json	/^        "normalize-path": "~3.0.0",$/;"	s	object:dependencies.chokidar.requires
normalize-path	plugged/coc.nvim/package-lock.json	/^        "normalize-path": {$/;"	o	object:dependencies.sane.dependencies
normalize-path	plugged/coc.nvim/package-lock.json	/^    "normalize-path": {$/;"	o	object:dependencies
normalizeRune	plugged/fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f	package:algo	typeref:typename:rune
normalized	plugged/fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v	package:algo	typeref:typename:map[rune]rune
not_	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester.not_ = function(val)$/;"	f	unknown:tester
not_implemented	plugged/bufferline.nvim/lua/bufferline/models.lua	/^local function not_implemented(field)$/;"	f
notice_message_startup	plugged/lualine.nvim/lua/lualine/utils/notices.lua	/^function M.notice_message_startup()$/;"	f	unknown:M
notification.highlightGroup	plugged/coc.nvim/data/schema.json	/^    "notification.highlightGroup": {$/;"	o	object:properties
notification.marginRight	plugged/coc.nvim/data/schema.json	/^    "notification.marginRight": {$/;"	o	object:properties
notification.marginTop	plugged/coc.nvim/data/schema.json	/^    "notification.marginTop": {$/;"	o	object:properties
notification.maxHeight	plugged/coc.nvim/data/schema.json	/^    "notification.maxHeight": {$/;"	o	object:properties
notification.maxWidth	plugged/coc.nvim/data/schema.json	/^    "notification.maxWidth": {$/;"	o	object:properties
notification.minProgressWidth	plugged/coc.nvim/data/schema.json	/^    "notification.minProgressWidth": {$/;"	o	object:properties
notify	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.notify(msg, log_level, opts)$/;"	f	unknown:M
notify	plugged/toggleterm.nvim/lua/toggleterm/utils.lua	/^function M.notify(msg, level)$/;"	f	unknown:M
notifyOnCont	plugged/fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnCont	plugged/fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	plugged/fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	plugged/fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyStop	plugged/fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
notifyStop	plugged/fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
notify_all	plugged/plenary.nvim/lua/plenary/async/control.lua	/^function Condvar:notify_all()$/;"	f	unknown:Condvar
notify_all	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^function Condvar:notify_all()$/;"	f	unknown:Condvar
notify_one	plugged/plenary.nvim/lua/plenary/async/control.lua	/^function Condvar:notify_one()$/;"	f	unknown:Condvar
notify_one	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^function Condvar:notify_one()$/;"	f	unknown:Condvar
notify_theme_error	plugged/lualine.nvim/lua/lualine.lua	/^local function notify_theme_error(theme_name)$/;"	f
now	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function now(){$/;"	f
now	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^   local pre, now = unpack(vim.tbl_map(function(s)$/;"	f
np	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
npm-run-path	plugged/coc.nvim/package-lock.json	/^            "npm-run-path": "^4.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
npm-run-path	plugged/coc.nvim/package-lock.json	/^        "npm-run-path": "^2.0.0",$/;"	s	object:dependencies.execa.requires
npm-run-path	plugged/coc.nvim/package-lock.json	/^        "npm-run-path": {$/;"	o	object:dependencies.jest-changed-files.dependencies
npm-run-path	plugged/coc.nvim/package-lock.json	/^    "npm-run-path": {$/;"	o	object:dependencies
npm.binPath	plugged/coc.nvim/data/schema.json	/^    "npm.binPath": {$/;"	o	object:properties
nr	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
ns	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
nt	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
nth	plugged/fzf/src/pattern.go	/^	nth           []Range$/;"	m	struct:fzf.Pattern	typeref:typename:[]Range
num	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function num(elem, prop) {$/;"	f
numLines	plugged/fzf/src/terminal.go	/^	numLines int$/;"	m	struct:fzf.previewed	typeref:typename:int
numPartitionsMultiplier	plugged/fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c	package:fzf
num_results	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^function EntryManager:num_results()$/;"	f	unknown:EntryManager
numargs	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local numargs = function(...)$/;"	f
number	plugged/fzf/src/terminal.go	/^	number        bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
numbers_func	plugged/bufferline.nvim/tests/numbers_spec.lua	/^    local function numbers_func(opts)$/;"	f
nv	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
nvim	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^  nvim = function()$/;"	f
nvim-spectre	plugged/nvim-spectre/README.md	/^# nvim-spectre$/;"	c
nvim-treesitter-textobjects	plugged/nvim-treesitter-textobjects/README.md	/^# nvim-treesitter-textobjects$/;"	c
nvim-ts-autotag	plugged/nvim-ts-autotag/README.md	/^# nvim-ts-autotag$/;"	c
nvim_bufferline	plugged/bufferline.nvim/lua/bufferline.lua	/^function _G.nvim_bufferline()$/;"	f	unknown:_G
nvim_bufferline#handle_click	plugged/bufferline.nvim/autoload/nvim_bufferline.vim	/^function! nvim_bufferline#handle_click(minwid, clicks, btn, modifiers) abort$/;"	f
nvim_bufferline#handle_close_buffer	plugged/bufferline.nvim/autoload/nvim_bufferline.vim	/^function! nvim_bufferline#handle_close_buffer(minwid, clicks, btn, modifiers) abort$/;"	f
nvim_bufferline#handle_group_click	plugged/bufferline.nvim/autoload/nvim_bufferline.vim	/^function! nvim_bufferline#handle_group_click(minwid, clicks, btn, modifiers) abort$/;"	f
nvim_feed	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local nvim_feed = function(text, feed_opts)$/;"	f
nvim_lsp	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^  nvim_lsp = function()$/;"	f
nvim_lsp	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^  nvim_lsp = function()$/;"	f
nvim_tree_callback	plugged/nvim-tree.lua/lua/nvim-tree/config.lua	/^function M.nvim_tree_callback(callback_name)$/;"	f	unknown:M
nvim_tree_callback	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.nvim_tree_callback(callback_name)$/;"	f	unknown:M
nvim_treesitter#available_modules	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#available_modules(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#available_query_groups	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#available_query_groups(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#foldexpr	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#foldexpr() abort$/;"	f
nvim_treesitter#indent	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#indent() abort$/;"	f
nvim_treesitter#installable_parsers	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installable_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#installed_parsers	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installed_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#statusline	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#statusline(...) abort$/;"	f
nvim_treesitter_textobjects#available_textobjects	plugged/nvim-treesitter-textobjects/autoload/nvim_treesitter_textobjects.vim	/^function! nvim_treesitter_textobjects#available_textobjects(arglead, cmdline, cursorpos) abort$/;"	f
nw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
nwsapi	plugged/coc.nvim/package-lock.json	/^        "nwsapi": "^2.2.0",$/;"	s	object:dependencies.jsdom.requires
nwsapi	plugged/coc.nvim/package-lock.json	/^    "nwsapi": {$/;"	o	object:dependencies
nx	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
ny	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
o	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionaf1e5c4a1e100
o	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
o	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
o	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
o	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a10000.e
o	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a11b00.e
o	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12400.e
o	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4afa00.e
o	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4afe00.e
o	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
o	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00
o	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
o	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
o	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Uz
o	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionaf1e5c4a2c800.AnonymousFunctionaf1e5c4a2c900
o	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunctionaf1e5c4a2c000
o	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:pQ
o	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:tee
o	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:q0
o	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:fB
o	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f	function:gY
o	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:dY
o	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
o	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> o           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
o	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> o           :call b:buffergator_catalog_viewer.visit_targe/;"	m
o	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> o           :call b:buffergator_catalog_viewer.visit_target()</;"	m
o$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
o4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
o5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
o6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
o7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
o8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
o9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
oA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
oB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
oC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
oD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
oDe	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
oG	plugged/coc.nvim/build/index.js	/^`)==-1}var oG=R(()=>{});function Xme(r,e,t){let i=r.split(\/\\r?\\n\/),n=t.insertSpaces?" ".repe/;"	v
oH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
oJ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
oK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
oN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
oQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
oTe	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
oU	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
oV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
oW	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
oZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
o_	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
oa	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
oae	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
object-copy	plugged/coc.nvim/package-lock.json	/^        "object-copy": "^0.1.0"$/;"	s	object:dependencies.static-extend.requires
object-copy	plugged/coc.nvim/package-lock.json	/^    "object-copy": {$/;"	o	object:dependencies
object-inspect	plugged/coc.nvim/package-lock.json	/^        "object-inspect": "^1.10.3",$/;"	s	object:dependencies.es-abstract.requires
object-inspect	plugged/coc.nvim/package-lock.json	/^        "object-inspect": "^1.9.0"$/;"	s	object:dependencies.side-channel.requires
object-inspect	plugged/coc.nvim/package-lock.json	/^    "object-inspect": {$/;"	o	object:dependencies
object-keys	plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.0.12"$/;"	s	object:dependencies.define-properties.requires
object-keys	plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.1.1"$/;"	s	object:dependencies.object.assign.requires
object-keys	plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
object-keys	plugged/coc.nvim/package-lock.json	/^    "object-keys": {$/;"	o	object:dependencies
object-visit	plugged/coc.nvim/package-lock.json	/^        "object-visit": "^1.0.0"$/;"	s	object:dependencies.collection-visit.requires
object-visit	plugged/coc.nvim/package-lock.json	/^        "object-visit": "^1.0.0"$/;"	s	object:dependencies.map-visit.requires
object-visit	plugged/coc.nvim/package-lock.json	/^    "object-visit": {$/;"	o	object:dependencies
object.assign	plugged/coc.nvim/package-lock.json	/^        "object.assign": "^4.1.2",$/;"	s	object:dependencies.es-abstract.requires
object.assign	plugged/coc.nvim/package-lock.json	/^    "object.assign": {$/;"	o	object:dependencies
object.pick	plugged/coc.nvim/package-lock.json	/^            "object.pick": "^1.3.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
object.pick	plugged/coc.nvim/package-lock.json	/^        "object.pick": "^1.3.0",$/;"	s	object:dependencies.nanomatch.requires
object.pick	plugged/coc.nvim/package-lock.json	/^    "object.pick": {$/;"	o	object:dependencies
object[key]	plugged/plenary.nvim/lua/luassert/stub.lua	/^  object[key] = stubfunc          -- set the stubfunction$/;"	f
oc	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ocaml	plugged/nvim-treesitter/lockfile.json	/^  "ocaml": {$/;"	o
ocaml_interface	plugged/nvim-treesitter/lockfile.json	/^  "ocaml_interface": {$/;"	o
ocamllex	plugged/nvim-treesitter/lockfile.json	/^  "ocamllex": {$/;"	o
odds	plugged/plenary.nvim/tests/plenary/py_list_spec.lua	/^    local evens, odds = l:iter():partition(function(e)$/;"	f
oe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
oee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
of	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
off	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionaf1e5c4a7400.t
offset	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
offset	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
offset	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.offset = function() {$/;"	f	function:jQuery.fn
offset	plugged/fzf/src/ansi.go	/^	offset [2]int32$/;"	m	struct:fzf.ansiOffset	typeref:typename:[2]int32
offset	plugged/fzf/src/result.go	/^	offset [2]int32$/;"	m	struct:fzf.colorOffset	typeref:typename:[2]int32
offset	plugged/fzf/src/terminal.go	/^	offset       int$/;"	m	struct:fzf.Terminal	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset     int$/;"	m	struct:fzf.previewer	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset   int$/;"	m	struct:fzf.previewed	typeref:typename:int
offset	plugged/fzf/src/terminal.go	/^	offset  int$/;"	m	struct:fzf.previewResult	typeref:typename:int
offsetAt	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
offsetAt	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
offsetChild	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetChild  = elem,$/;"	v
offsetComponentRegex	plugged/fzf/src/terminal.go	/^var offsetComponentRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
offsetParent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetParent = elem.offsetParent,$/;"	v
offsetPollTries	plugged/fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c	package:tui
offsetRegexp	plugged/fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetRegexpBegin	plugged/fzf/src/tui/light.go	/^var offsetRegexpBegin *regexp.Regexp = regexp.MustCompile("^\\x1b\\\\[[0-9]+;[0-9]+R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetTrimCharsRegex	plugged/fzf/src/terminal.go	/^var offsetTrimCharsRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
oge	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	f
oh	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
oj	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
oldUri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4aff00.e.a
old_nf_finder	plugged/plenary.nvim/scratch/new_line_finder.lua	/^local old_nf_finder = function(data) -- {{{$/;"	f
oldfiles	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.oldfiles = function(opts)$/;"	f	unknown:internal
om	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
ome	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
on	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionaf1e5c4a7400.t
on	plugged/plenary.nvim/lua/luassert/spy.lua	/^  on = function(target_table, target_key)$/;"	f
onArrayBegin	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onArrayBegin	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onArrayEnd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onArrayEnd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onColorScheme	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.onColorScheme()$/;"	f	unknown:util
onColorScheme	plugged/material.nvim/lua/material/util.lua	/^function util.onColorScheme()$/;"	f	unknown:util
onColorScheme	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.onColorScheme()$/;"	f	unknown:util
onDebugHook	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^local onDebugHook = function(hookType)$/;"	f
onError	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onError	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onLiteralValue	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onLiteralValue	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:fB.a
onObjectBegin	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectBegin	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onObjectEnd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectEnd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onObjectProperty	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectProperty	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onSeparator	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
on_attach	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^        on_attach = function(bufnr)$/;"	f
on_attach	plugged/gitsigns.nvim/test/gitsigns_spec.lua	/^        config.on_attach = function()$/;"	f	unknown:config
on_call_with	plugged/plenary.nvim/lua/luassert/stub.lua	/^  s.on_call_with = function(...)$/;"	f	unknown:s
on_choice	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^        on_choice = { on_choice, "function", false },$/;"	f
on_close	plugged/nvim-spectre/lua/spectre/init.lua	/^M.on_close = function()$/;"	f	unknown:M
on_close	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.on_close()$/;"	f	unknown:M
on_close_prompt	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function pickers.on_close_prompt(prompt_bufnr)$/;"	f	unknown:pickers
on_detach	plugged/gitsigns.nvim/lua/gitsigns.lua	/^      on_detach = function(_, buf)$/;"	f
on_detach	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^        on_detach = function()$/;"	f
on_detach	plugged/telescope.nvim/lua/telescope/pickers.lua	/^    on_detach = function()$/;"	f
on_enter	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.on_enter(opts)$/;"	f	unknown:M
on_error	plugged/nvim-spectre/lua/spectre/actions.lua	/^            on_error = function(result)$/;"	f
on_error	plugged/nvim-spectre/lua/spectre/init.lua	/^        on_error = function (error_msg)$/;"	f
on_error	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^            on_error = function()$/;"	f
on_error	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^base.on_error = function (self, value, ref)$/;"	f	unknown:base
on_error	plugged/nvim-spectre/lua/spectre/search/base.lua	/^            on_error = function()$/;"	f
on_error	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.on_error = function (self, output_text)$/;"	f	unknown:base
on_error	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            on_error = function()$/;"	f
on_exit	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^    on_exit = function()$/;"	f
on_exit	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^base.on_exit = function(self, value, ref)$/;"	f	unknown:base
on_exit	plugged/nvim-spectre/lua/spectre/replace/sed.lua	/^        on_exit = function(_, v) self:on_exit(v, value) end$/;"	f
on_exit	plugged/nvim-spectre/lua/spectre/search/base.lua	/^        on_exit = function(_, value) self:on_exit(value) end$/;"	f
on_exit	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.on_exit = function(self, value)$/;"	f	unknown:base
on_exit	plugged/plenary.nvim/lua/plenary/curl.lua	/^    on_exit = function(j, code)$/;"	f
on_exit	plugged/plenary.nvim/lua/plenary/scandir.lua	/^  opts_copy.on_exit = function(data)$/;"	f	unknown:opts_copy
on_exit	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^      on_exit = vim.schedule_wrap(function(j_self, _, _)$/;"	f
on_exit	plugged/plenary.nvim/scratch/job_memory_leaker.lua	/^    on_exit = function()$/;"	f
on_exit	plugged/plenary.nvim/tests/plenary/job_spec.lua	/^        on_exit = function(...)$/;"	f
on_exit	plugged/telescope.nvim/lua/telescope/finders.lua	/^    on_exit = function()$/;"	f
on_exit	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^          on_exit = vim.schedule_wrap(function(data, sections)$/;"	f
on_exit	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^        on_exit = vim.schedule_wrap(function(j)$/;"	f
on_file_created	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_file_created(handler)$/;"	f	unknown:M
on_file_removed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_file_removed(handler)$/;"	f	unknown:M
on_finish	plugged/nvim-spectre/lua/spectre/actions.lua	/^            on_finish = function(result)$/;"	f
on_finish	plugged/nvim-spectre/lua/spectre/init.lua	/^        on_finish = function()$/;"	f
on_finish	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^            on_finish = function()$/;"	f
on_finish	plugged/nvim-spectre/lua/spectre/search/base.lua	/^            on_finish = function()$/;"	f
on_finish	plugged/nvim-spectre/tests/helper.lua	/^        on_finish = function()$/;"	f
on_finish	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            on_finish = function()$/;"	f
on_finish	plugged/nvim-spectre/tests/search/rg_spec.lua	/^            on_finish = function()$/;"	f
on_folder_created	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_folder_created(handler)$/;"	f	unknown:M
on_folder_removed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_folder_removed(handler)$/;"	f	unknown:M
on_insert	plugged/plenary.nvim/lua/plenary/path.lua	/^      on_insert = function(file)$/;"	f
on_insert	plugged/plenary.nvim/tests/plenary/scandir_spec.lua	/^        on_insert = function()$/;"	f
on_insert	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^        on_insert = function(entry, typ)$/;"	f
on_insert_enter	plugged/nvim-spectre/lua/spectre/init.lua	/^M.on_insert_enter = function ()$/;"	f	unknown:M
on_insert_leave	plugged/nvim-spectre/lua/spectre/init.lua	/^M.on_insert_leave = function ()$/;"	f	unknown:M
on_keypress	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.on_keypress(mode)$/;"	f	unknown:M
on_keys	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.on_keys(opts)$/;"	f	unknown:M
on_leave	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.on_leave()$/;"	f	unknown:M
on_line	plugged/gitsigns.nvim/lua/gitsigns.lua	/^      on_line = function(_, _, bufnr, row)$/;"	f
on_lines	plugged/gitsigns.nvim/lua/gitsigns.lua	/^      on_lines = function(_, buf, _, first, last_orig, last_new, byte_count)$/;"	f
on_lines	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^M.on_lines = function(buf, last_orig, last_new)$/;"	f	unknown:M
on_lines	plugged/telescope.nvim/lua/telescope/pickers.lua	/^    on_lines = function(...)$/;"	f
on_node_renamed	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_node_renamed(handler)$/;"	f	unknown:M
on_nvim_tree_ready	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^function M.on_nvim_tree_ready(handler)$/;"	f	unknown:M
on_output	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^base.on_output = function(self, value)$/;"	f	unknown:base
on_output	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.on_output = function(self, output_text)$/;"	f	unknown:base
on_output	plugged/plenary.nvim/lua/plenary/job.lua	/^local on_output = function(self, result_key, cb)$/;"	f
on_output	plugged/plenary.nvim/scratch/term_open_checker.lua	/^local on_output = function(err, data)$/;"	f
on_output	plugged/telescope.nvim/lua/telescope/finders.lua	/^  local on_output = function(_, line, _)$/;"	f
on_reload	plugged/gitsigns.nvim/lua/gitsigns.lua	/^      on_reload = function(_, bufnr)$/;"	f
on_resize_window	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function pickers.on_resize_window(prompt_bufnr)$/;"	f	unknown:pickers
on_result	plugged/nvim-spectre/lua/spectre/init.lua	/^        on_result = function (item)$/;"	f
on_result	plugged/nvim-spectre/lua/spectre/search/base.lua	/^            on_result = function()$/;"	f
on_result	plugged/nvim-spectre/tests/search/rg_spec.lua	/^            on_result = function(item)$/;"	f
on_start	plugged/nvim-spectre/lua/spectre/init.lua	/^        on_start = function()$/;"	f
on_start	plugged/nvim-spectre/lua/spectre/replace/base.lua	/^            on_start = function()$/;"	f
on_start	plugged/nvim-spectre/lua/spectre/search/base.lua	/^            on_start = function()$/;"	f
on_stderr	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^    on_stderr = function(_, data)$/;"	f
on_stderr	plugged/nvim-spectre/lua/spectre/replace/sed.lua	/^        on_stderr = function(_, v) self:on_error(v, value) end,$/;"	f
on_stderr	plugged/nvim-spectre/lua/spectre/search/base.lua	/^        on_stderr = function(_, value) self:on_error(value) end,$/;"	f
on_stderr	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^      on_stderr = function(_, data)$/;"	f
on_stderr	plugged/telescope.nvim/lua/telescope/utils.lua	/^      on_stderr = function(_, data)$/;"	f
on_stdout	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^    on_stdout = function(_, data)$/;"	f
on_stdout	plugged/nvim-spectre/lua/spectre/replace/sed.lua	/^        on_stdout = function(_, v) self:on_output(v, value) end,$/;"	f
on_stdout	plugged/nvim-spectre/lua/spectre/search/base.lua	/^        on_stdout = function(_, value) self:on_output(value) end,$/;"	f
on_stdout	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^      on_stdout = function(_, data)$/;"	f
on_stdout	plugged/plenary.nvim/tests/manual/large_job_spec.lua	/^  on_stdout = function(_, data)$/;"	f
on_stdout	plugged/plenary.nvim/tests/plenary/job_spec.lua	/^        on_stdout = function()$/;"	f
on_stdout	plugged/plenary.nvim/tests/plenary/job_spec.lua	/^        on_stdout = function(_, data)$/;"	f
on_stdout	plugged/plenary.nvim/tests/plenary/job_spec.lua	/^        on_stdout = function(_, line)$/;"	f
on_term_open	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.on_term_open()$/;"	f	unknown:M
on_win	plugged/gitsigns.nvim/lua/gitsigns.lua	/^      on_win = function(_, _, bufnr, top, bot)$/;"	f
on_write	plugged/nvim-spectre/lua/spectre/init.lua	/^M.on_write = function ()$/;"	f	unknown:M
once	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionaf1e5c4a7400.t
once	plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.glob.requires
once	plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.inflight.requires
once	plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.1"$/;"	s	object:dependencies.pump.requires
once	plugged/coc.nvim/package-lock.json	/^        "once": "^1.4.0"$/;"	s	object:dependencies.end-of-stream.requires
once	plugged/coc.nvim/package-lock.json	/^    "once": {$/;"	o	object:dependencies
one	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						one = elem.type == "select-one";$/;"	v
oneOf	plugged/coc.nvim/data/schema.json	/^          "oneOf": [$/;"	a	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$
onedark	plugged/lualine.nvim/THEMES.md	/^### onedark$/;"	S	chapter:Available themes
onelight	plugged/lualine.nvim/THEMES.md	/^### onelight$/;"	S	chapter:Available themes
ones	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local ones = function()$/;"	f
oneshot	plugged/plenary.nvim/lua/plenary/async/control.lua	/^M.channel.oneshot = function()$/;"	f	unknown:M.channel
oneshot	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.channel.oneshot = function()$/;"	f	unknown:M.channel
onetime	plugged/coc.nvim/package-lock.json	/^            "onetime": "^5.1.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
onetime	plugged/coc.nvim/package-lock.json	/^    "onetime": {$/;"	o	object:dependencies
onread	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function onread(handle, is_stderr)$/;"	f
onreadystatechange	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var onreadystatechange = function(isTimeout){$/;"	f	function:AnonymousFunctionc5b93c5ca100
ooe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
op	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
op2	plugged/plenary.nvim/lua/plenary/bit.lua	/^  local op2 = memoize(function(a)$/;"	f
open	plugged/JABS.nvim/lua/jabs.lua	/^function M.open()$/;"	f	unknown:M
open	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e
open	plugged/nvim-spectre/lua/spectre/init.lua	/^M.open = function (opts)$/;"	f	unknown:M
open	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.open()$/;"	f	unknown:M
open	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.open()$/;"	f	unknown:M
open	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.open(options)$/;"	f	unknown:M
open	plugged/plenary.nvim/lua/plenary/context_manager.lua	/^function context_manager.open(filename, mode)$/;"	f	unknown:context_manager
open	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:open() end$/;"	f	unknown:Path
open	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:open(size, direction, is_new)$/;"	f	unknown:Terminal
open	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.open(keys, opts)$/;"	f	unknown:M
openTtyIn	plugged/fzf/src/tui/light_unix.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
openTtyIn	plugged/fzf/src/tui/light_windows.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
open_file	plugged/nvim-spectre/lua/spectre/actions.lua	/^local open_file = function(filename, lnum, col, winid)$/;"	f
open_file	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.open_file(mode, filename)$/;"	f	unknown:M
open_file_in_tab	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.open_file_in_tab(filename)$/;"	f	unknown:M
open_file_search	plugged/nvim-spectre/lua/spectre/init.lua	/^M.open_file_search = function()$/;"	f	unknown:M
open_float	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.open_float(term)$/;"	f	unknown:M
open_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.open_loclist = function(_)$/;"	f	unknown:actions
open_on_directory	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.open_on_directory()$/;"	f	unknown:M
open_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.open_qflist = function(_)$/;"	f	unknown:actions
open_split	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.open_split(size, term)$/;"	f	unknown:M
open_tab	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.open_tab(term)$/;"	f	unknown:M
open_test_panel	plugged/bufferline.nvim/tests/offset_spec.lua	/^local function open_test_panel(direction, ft, on_open)$/;"	f
open_visual	plugged/nvim-spectre/lua/spectre/init.lua	/^M.open_visual = function(opts)$/;"	f	unknown:M
open_window	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function open_window()$/;"	f
opener	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function opener(size, term)$/;"	f
opera	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	opera: \/opera\/.test( userAgent ),$/;"	p	class:jQuery.browser
operator	plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
opt	plugged/github-nvim-theme/lua/github-theme/config.lua	/^local function opt(key, default)$/;"	f
opt	plugged/tokyonight.nvim/lua/tokyonight/config.lua	/^local function opt(key, default)$/;"	f
optString	plugged/fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
option	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						var option = options[ i ];$/;"	v
option_deprecatation_notice	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^local function option_deprecatation_notice(component)$/;"	f
optional	plugged/coc.nvim/package-lock.json	/^          "optional": true$/;"	b	object:dependencies.node-notifier.dependencies.uuid
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.fsevents
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.growly
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.is-docker
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.shellwords
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true,$/;"	b	object:dependencies.is-wsl
optional	plugged/coc.nvim/package-lock.json	/^      "optional": true,$/;"	b	object:dependencies.node-notifier
optionalNextString	plugged/fzf/src/options.go	/^func optionalNextString(args []string, i *int) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
optionalNumeric	plugged/fzf/src/options.go	/^func optionalNumeric(args []string, i *int, defaultValue int) int {$/;"	f	package:fzf	typeref:typename:int
optionalRunes	plugged/fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
optionator	plugged/coc.nvim/package-lock.json	/^        "optionator": "^0.8.1",$/;"	s	object:dependencies.escodegen.requires
optionator	plugged/coc.nvim/package-lock.json	/^        "optionator": "^0.9.1",$/;"	s	object:dependencies.eslint.requires
optionator	plugged/coc.nvim/package-lock.json	/^        "optionator": {$/;"	o	object:dependencies.escodegen.dependencies
optionator	plugged/coc.nvim/package-lock.json	/^    "optionator": {$/;"	o	object:dependencies
options	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						options = elem.options,$/;"	v
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var options = name;$/;"	v
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
options	plugged/telescope.nvim/lua/telescope/deprecated.lua	/^deprecated.options = function(opts)$/;"	f	unknown:deprecated
opts.sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
opts.sinklist	plugged/fzf/plugin/fzf.vim	/^    function! opts.sinklist(lines) abort$/;"	f
optsFor	plugged/fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f	package:fzf	typeref:typename:*Options
opts[1]	plugged/lualine.nvim/lua/tests/helpers.lua	/^    opts[1] = function()$/;"	f
oq	plugged/coc.nvim/build/index.js	/^`?t[1].slice(0,-1):t[1]}}text(e){let t=this.rules.block.text.exec(e);if(t)return{type:"text",raw/;"	v
or	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
ordinal	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      execute_keys.ordinal = function(t)$/;"	f	unknown:execute_keys
ordinal	plugged/telescope.nvim/lua/tests/automated/telescope_spec.lua	/^        return sorter:score(prompt, { ordinal = line }, function(val)$/;"	f
origState	plugged/fzf/src/tui/light.go	/^	origState     *term.State$/;"	m	struct:tui.LightRenderer	typeref:typename:*term.State
origStateInput	plugged/fzf/src/tui/light.go	/^	origStateInput  uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origStateOutput	plugged/fzf/src/tui/light.go	/^	origStateOutput uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origText	plugged/fzf/src/item.go	/^	origText    *[]byte       \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]byte
origin	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f	struct:tui.LightRenderer
originalEvent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = { originalEvent: originalEvent };$/;"	p	class:event
originalEvent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var originalEvent = event;$/;"	v
os	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
ot	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
other	plugged/which-key.nvim/lua/which-key/keys.lua	/^  local other = vim.api.nvim_buf_call(buf, function()$/;"	f
ou	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
out	plugged/gitsigns.nvim/gen_help.lua	/^local function out(line)$/;"	f
outHandle	plugged/fzf/src/tui/light.go	/^	outHandle       uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
outdated_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function outdated_parsers()$/;"	f
outfile	plugged/plenary.nvim/lua/plenary/log.lua	/^  local outfile = string.format("%s\/%s.log", vim.api.nvim_call_function("stdpath", { "cache" })/;"	f
outline.checkBufferSwitch	plugged/coc.nvim/data/schema.json	/^    "outline.checkBufferSwitch": {$/;"	o	object:properties
outline.codeActionKinds	plugged/coc.nvim/data/schema.json	/^    "outline.codeActionKinds": {$/;"	o	object:properties
outline.expandLevel	plugged/coc.nvim/data/schema.json	/^    "outline.expandLevel": {$/;"	o	object:properties
outline.followCursor	plugged/coc.nvim/data/schema.json	/^    "outline.followCursor": {$/;"	o	object:properties
outline.keepWindow	plugged/coc.nvim/data/schema.json	/^    "outline.keepWindow": {$/;"	o	object:properties
outline.showLineNumber	plugged/coc.nvim/data/schema.json	/^    "outline.showLineNumber": {$/;"	o	object:properties
outline.sortBy	plugged/coc.nvim/data/schema.json	/^    "outline.sortBy": {$/;"	o	object:properties
outline.splitCommand	plugged/coc.nvim/data/schema.json	/^    "outline.splitCommand": {$/;"	o	object:properties
output	plugged/fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
output	plugged/fzf/src/terminal_test.go	/^	output string \/\/ literal output$/;"	m	struct:fzf.want	typeref:typename:string
ov	plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
overflow	plugged/fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
overflow32	plugged/fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c	package:util	typeref:typename:uint32
overflow64	plugged/fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c	package:util	typeref:typename:uint64
overlapping_ngrams	plugged/telescope.nvim/lua/telescope/sorters.lua	/^  local function overlapping_ngrams(s, n)$/;"	f
overline	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
override	plugged/fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f	struct:fzf.History
override	plugged/plenary.nvim/lua/plenary/lsp/override.lua	/^function M.override(method, new_function)$/;"	f	unknown:M
ow	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
oy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
p	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
p	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
p	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
p	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
p	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:a
p	plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
p	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
p	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
p	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Yae
p	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.p(str)$/;"	f	unknown:M
p$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
p-each-series	plugged/coc.nvim/package-lock.json	/^        "p-each-series": "^2.1.0",$/;"	s	object:dependencies.@jest/core.requires
p-each-series	plugged/coc.nvim/package-lock.json	/^    "p-each-series": {$/;"	o	object:dependencies
p-finally	plugged/coc.nvim/package-lock.json	/^        "p-finally": "^1.0.0",$/;"	s	object:dependencies.execa.requires
p-finally	plugged/coc.nvim/package-lock.json	/^    "p-finally": {$/;"	o	object:dependencies
p-limit	plugged/coc.nvim/package-lock.json	/^        "p-limit": "^2.2.0"$/;"	s	object:dependencies.p-locate.requires
p-limit	plugged/coc.nvim/package-lock.json	/^    "p-limit": {$/;"	o	object:dependencies
p-locate	plugged/coc.nvim/package-lock.json	/^        "p-locate": "^4.1.0"$/;"	s	object:dependencies.locate-path.requires
p-locate	plugged/coc.nvim/package-lock.json	/^    "p-locate": {$/;"	o	object:dependencies
p-try	plugged/coc.nvim/package-lock.json	/^        "p-try": "^2.0.0"$/;"	s	object:dependencies.p-limit.requires
p-try	plugged/coc.nvim/package-lock.json	/^    "p-try": {$/;"	o	object:dependencies
p0	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
p5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
p6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
p7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
p8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
p9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
pB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
pC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
pD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pE	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
pG	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
pI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
pJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
pK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
pM	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	v
pP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
pQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
pV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
pX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
pZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
pa	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
pack	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List.pack(...)$/;"	f	unknown:List
pack	plugged/plenary.nvim/lua/plenary/tbl.lua	/^function tbl.pack(...)$/;"	f	unknown:tbl
pack	plugged/vim-bbye/Makefile	/^pack:$/;"	t
packer	plugged/github-nvim-theme/LUALINE.md	/^### packer$/;"	S
pad	plugged/bufferline.nvim/lua/bufferline.lua	/^local function pad(opts)$/;"	f
padding	plugged/fzf/src/terminal.go	/^	padding      [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
pae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
pager	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local pager = utils.get_lazy_default(opts.PAGER, function()$/;"	f
palenight	plugged/lualine.nvim/THEMES.md	/^### palenight$/;"	S	chapter:Available themes
papercolor_dark	plugged/lualine.nvim/THEMES.md	/^### papercolor_dark$/;"	S	chapter:Available themes
papercolor_light	plugged/lualine.nvim/THEMES.md	/^### papercolor_light$/;"	S	chapter:Available themes
parent	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
parent	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
parent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var parent       = elem.parentNode,$/;"	v
parent	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:parent()$/;"	f	unknown:TSRange
parent	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:parent()$/;"	f	unknown:Path
parent-module	plugged/coc.nvim/package-lock.json	/^        "parent-module": "^1.0.0",$/;"	s	object:dependencies.import-fresh.requires
parent-module	plugged/coc.nvim/package-lock.json	/^    "parent-module": {$/;"	o	object:dependencies
parent_node	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.parent_node(node, should_close)$/;"	f	unknown:M
parents	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:parents()$/;"	f	unknown:Path
parse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
parse	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	m	class:AnonymousFunctionaf1e5c4a0a00.t
parse	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  local parse = function(t)$/;"	f
parse	plugged/toggleterm.nvim/lua/toggleterm/commandline.lua	/^function M.parse(args)$/;"	f	unknown:M
parse-json	plugged/coc.nvim/package-lock.json	/^        "parse-json": "^5.0.0",$/;"	s	object:dependencies.read-pkg.requires
parse-json	plugged/coc.nvim/package-lock.json	/^    "parse-json": {$/;"	o	object:dependencies
parse5	plugged/coc.nvim/package-lock.json	/^        "parse5": "6.0.1",$/;"	s	object:dependencies.jsdom.requires
parse5	plugged/coc.nvim/package-lock.json	/^    "parse5": {$/;"	o	object:dependencies
parseAlgo	plugged/fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f	package:fzf	typeref:typename:algo.Algo
parseAnsiCode	plugged/fzf/src/ansi.go	/^func parseAnsiCode(s string) (int, string) {$/;"	f	package:fzf	typeref:typename:(int, string)
parseBorder	plugged/fzf/src/options.go	/^func parseBorder(str string, optional bool) tui.BorderShape {$/;"	f	package:fzf	typeref:typename:tui.BorderShape
parseHeight	plugged/fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseInfoStyle	plugged/fzf/src/options.go	/^func parseInfoStyle(str string) infoStyle {$/;"	f	package:fzf	typeref:typename:infoStyle
parseKeyChords	plugged/fzf/src/options.go	/^func parseKeyChords(str string, message string) map[tui.Event]string {$/;"	f	package:fzf	typeref:typename:map[tui.Event]string
parseKeymap	plugged/fzf/src/options.go	/^func parseKeymap(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parseLayout	plugged/fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f	package:fzf	typeref:typename:layoutType
parseLs	plugged/JABS.nvim/lua/jabs.lua	/^function M.parseLs(buf)$/;"	f	unknown:M
parseMargin	plugged/fzf/src/options.go	/^func parseMargin(opt string, margin string) [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
parseOptions	plugged/fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f	package:fzf
parsePlaceholder	plugged/fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f	package:fzf	typeref:typename:(bool, string, placeholderFlags)
parsePreviewWindow	plugged/fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f	package:fzf
parsePrompt	plugged/fzf/src/terminal.go	/^func (t *Terminal) parsePrompt(prompt string) (func(), int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(func(), int)
parseSize	plugged/fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseTerms	plugged/fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f	package:fzf	typeref:typename:[]termSet
parseTheme	plugged/fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
parseTiebreak	plugged/fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f	package:fzf	typeref:typename:[]criterion
parseToggleSort	plugged/fzf/src/options.go	/^func parseToggleSort(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parse_args_to_lua	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local function parse_args_to_lua(...)$/;"	f
parse_diff_line	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.parse_diff_line(line)$/;"	f	unknown:M
parse_file	plugged/plenary.nvim/scripts/update_filetypes_from_github.lua	/^local parse_file = function()$/;"	f
parse_keys	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.parse_keys(keystr)$/;"	f	unknown:M
parse_line	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^  local parse_line = function(line)$/;"	f
parse_line_grep	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.parse_line_grep = function(query)$/;"	f	unknown:M
parse_mappings	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.parse_mappings(mappings, value, prefix)$/;"	f	unknown:M
parse_sections	plugged/lualine.nvim/lua/lualine/config.lua	/^  local function parse_sections(section_group_name)$/;"	f
parse_version	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^local function parse_version(version)$/;"	f
parsed	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionaf1e5c4a31800.t
partial	plugged/plenary.nvim/lua/plenary/curl.lua	/^  local partial = function(method)$/;"	f
partial	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.partial(fun, ...)$/;"	f	unknown:f
partialResult	plugged/fzf/src/matcher.go	/^type partialResult struct {$/;"	s	package:fzf
partition	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^local function partition(self, predicate)$/;"	f
partitions	plugged/fzf/src/matcher.go	/^	partitions     int$/;"	m	struct:fzf.Matcher	typeref:typename:int
parts	plugged/coc.nvim/build/index.js	/^  var parts = v.slice(1).split('.')$/;"	v
parts	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var parts = key.split(".");$/;"	v
pascalcase	plugged/coc.nvim/package-lock.json	/^        "pascalcase": "^0.1.1"$/;"	s	object:dependencies.base.requires
pascalcase	plugged/coc.nvim/package-lock.json	/^    "pascalcase": {$/;"	o	object:dependencies
paste	plugged/fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
paste	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.paste(node)$/;"	f	unknown:M
paste_register	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.paste_register = function(prompt_bufnr)$/;"	f	unknown:actions
patch_lines	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.patch_lines(hunk)$/;"	f	unknown:M
path	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
path	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
path	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
path	plugged/fzf/src/history.go	/^	path     string$/;"	m	struct:fzf.History	typeref:typename:string
path	plugged/telescope.nvim/lua/telescope/from_entry.lua	/^function from_entry.path(entry, validate)$/;"	f	unknown:from_entry
path	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      path = function(t)$/;"	f
path	plugged/which-key.nvim/lua/which-key/tree.lua	/^function Tree:path(prefix)$/;"	f	unknown:Tree
path-exists	plugged/coc.nvim/package-lock.json	/^        "path-exists": "^4.0.0"$/;"	s	object:dependencies.find-up.requires
path-exists	plugged/coc.nvim/package-lock.json	/^    "path-exists": {$/;"	o	object:dependencies
path-is-absolute	plugged/coc.nvim/package-lock.json	/^        "path-is-absolute": "^1.0.0"$/;"	s	object:dependencies.glob.requires
path-is-absolute	plugged/coc.nvim/package-lock.json	/^    "path-is-absolute": {$/;"	o	object:dependencies
path-key	plugged/coc.nvim/package-lock.json	/^            "path-key": "^2.0.1",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
path-key	plugged/coc.nvim/package-lock.json	/^            "path-key": "^3.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path.requires
path-key	plugged/coc.nvim/package-lock.json	/^        "path-key": "^2.0.0"$/;"	s	object:dependencies.npm-run-path.requires
path-key	plugged/coc.nvim/package-lock.json	/^        "path-key": "^3.1.0",$/;"	s	object:dependencies.cross-spawn.requires
path-key	plugged/coc.nvim/package-lock.json	/^        "path-key": {$/;"	o	object:dependencies.execa.dependencies
path-key	plugged/coc.nvim/package-lock.json	/^        "path-key": {$/;"	o	object:dependencies.npm-run-path.dependencies
path-key	plugged/coc.nvim/package-lock.json	/^    "path-key": {$/;"	o	object:dependencies
path-parse	plugged/coc.nvim/package-lock.json	/^        "path-parse": "^1.0.6"$/;"	s	object:dependencies.resolve.requires
path-parse	plugged/coc.nvim/package-lock.json	/^    "path-parse": {$/;"	o	object:dependencies
path-type	plugged/coc.nvim/package-lock.json	/^        "path-type": "^4.0.0"$/;"	s	object:dependencies.dir-glob.requires
path-type	plugged/coc.nvim/package-lock.json	/^    "path-type": {$/;"	o	object:dependencies
path_add_trailing	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_add_trailing(path)$/;"	f	unknown:M
path_basename	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_basename(path)$/;"	f	unknown:M
path_display	plugged/telescope.nvim/lua/telescope/config.lua	/^      path_display = function(opts, path)$/;"	f
path_exists	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.path_exists(path)$/;"	f	unknown:M
path_join	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_join(paths)$/;"	f	unknown:M
path_relative	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_relative(path, relative_to)$/;"	f	unknown:M
path_remove_trailing	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_remove_trailing(path)$/;"	f	unknown:M
path_sep	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^M.path_sep = (function()$/;"	f	unknown:M
path_smart	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.path_smart = (function()$/;"	f	unknown:utils
path_split	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_split(path)$/;"	f	unknown:M
path_tail	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.path_tail = (function()$/;"	f	unknown:utils
path_to_matching_str	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.path_to_matching_str(path)$/;"	f	unknown:M
pathname	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
pattern	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionaf1e5c4a31400.c
pattern	plugged/coc.nvim/data/schema.json	/^      "pattern": "^https?:\/\/([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?\/?$|^$/;"	s	object:properties.http.proxy
pattern	plugged/fzf/src/matcher.go	/^	pattern    *Pattern$/;"	m	struct:fzf.MatchRequest	typeref:typename:*Pattern
pattern	plugged/fzf/src/merger.go	/^	pattern *Pattern$/;"	m	struct:fzf.Merger	typeref:typename:*Pattern
patternBuilder	plugged/fzf/src/matcher.go	/^	patternBuilder func([]rune) *Pattern$/;"	m	struct:fzf.Matcher	typeref:typename:func([]rune) *Pattern
patternProperties	plugged/coc.nvim/data/schema.json	/^      "patternProperties": {$/;"	o	object:properties.languageserver
paused	plugged/fzf/src/terminal.go	/^	paused       bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
pborder	plugged/fzf/src/terminal.go	/^	pborder      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pc	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
pcall_wrap	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^local pcall_wrap = function(func)$/;"	f
peek	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
peek_definition_code	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^function M.peek_definition_code(textobject, lsp_request, context)$/;"	f	unknown:M
pending	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.pending = function(desc, func)$/;"	f	unknown:mod
percent	plugged/fzf/src/options.go	/^	percent bool$/;"	m	struct:fzf.sizeSpec	typeref:typename:bool
percentage_range_window	plugged/plenary.nvim/lua/plenary/window/float.lua	/^function win_float.percentage_range_window(col_range, row_range, win_opts, border_opts)$/;"	f	unknown:win_float
perl	plugged/nvim-treesitter/lockfile.json	/^  "perl": {$/;"	o
pfe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
pg	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
pge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
php	coc-settings.json	/^        "php": "html", $/;"	s	object:emmet.includeLanguages
php	plugged/nvim-treesitter/lockfile.json	/^  "php": {$/;"	o
php-cs-fixer.rules	coc-settings.json	/^    "php-cs-fixer.rules": "@PSR12,ordered_imports,no_unused_imports",$/;"	s
phpls.path	coc-settings.json	/^    "phpls.path": "\/usr\/bin\/intelephense",$/;"	s
pi	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pi          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
pick_buffer	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.pick_buffer()$/;"	f	unknown:M
pick_window	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.pick_window()$/;"	f	unknown:M
picker_feed	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester.picker_feed = function(input, test_cases)$/;"	f	unknown:tester
pickers	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.pickers = function(opts)$/;"	f	unknown:internal
pickers	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.pickers = defaulter(function(_)$/;"	f	unknown:previewers
picomatch	plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.0.4"$/;"	s	object:dependencies.anymatch.requires
picomatch	plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.1"$/;"	s	object:dependencies.fast-glob.requires
picomatch	plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.1"$/;"	s	object:dependencies.readdirp.requires
picomatch	plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.3"$/;"	s	object:dependencies.micromatch.requires
picomatch	plugged/coc.nvim/package-lock.json	/^    "picomatch": {$/;"	o	object:dependencies
pid	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:pid()$/;"	f	unknown:Job
pie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
pill	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.separator.pill(group, hls, count)$/;"	f	unknown:M.separator
pioasm	plugged/nvim-treesitter/lockfile.json	/^  "pioasm": {$/;"	o
pirates	plugged/coc.nvim/package-lock.json	/^        "pirates": "^4.0.1",$/;"	s	object:dependencies.@jest/transform.requires
pirates	plugged/coc.nvim/package-lock.json	/^    "pirates": {$/;"	o	object:dependencies
pkg-dir	plugged/coc.nvim/package-lock.json	/^        "pkg-dir": "^4.2.0",$/;"	s	object:dependencies.import-local.requires
pkg-dir	plugged/coc.nvim/package-lock.json	/^    "pkg-dir": {$/;"	o	object:dependencies
placeCursor	plugged/fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f	struct:fzf.Terminal
place_after	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:place_after(index, node, item)$/;"	f	unknown:LinkedList
place_before	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:place_before(index, node, item)$/;"	f	unknown:LinkedList
place_cursor_on_node	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.place_cursor_on_node()$/;"	f	unknown:M
placeholder	plugged/fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
placeholderFlags	plugged/fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	s	package:fzf
planets	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.planets = function(opts)$/;"	f	unknown:internal
plenary.async	plugged/plenary.nvim/README.md	/^### plenary.async$/;"	S	section:plenary.nvim""Modules
plenary.async_lib	plugged/plenary.nvim/README.md	/^### plenary.async_lib$/;"	S	section:plenary.nvim""Modules
plenary.collections	plugged/plenary.nvim/README.md	/^### plenary.collections$/;"	S	section:plenary.nvim""Modules
plenary.context_manager	plugged/plenary.nvim/README.md	/^### plenary.context_manager$/;"	S	section:plenary.nvim""Modules
plenary.filetype	plugged/plenary.nvim/README.md	/^### plenary.filetype$/;"	S	section:plenary.nvim""Modules
plenary.job	plugged/plenary.nvim/README.md	/^### plenary.job$/;"	S	section:plenary.nvim""Modules
plenary.neorocks	plugged/plenary.nvim/README.md	/^### plenary.neorocks$/;"	S	section:plenary.nvim""Modules
plenary.nvim	plugged/plenary.nvim/README.md	/^# plenary.nvim$/;"	c
plenary.path	plugged/plenary.nvim/README.md	/^### plenary.path$/;"	S	section:plenary.nvim""Modules
plenary.popup	plugged/plenary.nvim/README.md	/^### plenary.popup$/;"	S	section:plenary.nvim""Modules
plenary.profile	plugged/plenary.nvim/README.md	/^### plenary.profile$/;"	S	section:plenary.nvim""Modules
plenary.scandir	plugged/plenary.nvim/README.md	/^### plenary.scandir$/;"	S	section:plenary.nvim""Modules
plenary.strings	plugged/plenary.nvim/README.md	/^### plenary.strings$/;"	S	section:plenary.nvim""Modules
plenary.test_harness	plugged/plenary.nvim/README.md	/^### plenary.test_harness$/;"	S	section:plenary.nvim""Modules
plenary.window	plugged/plenary.nvim/README.md	/^### plenary.window$/;"	S	section:plenary.nvim""Modules
plug#end	plugged/lualine.nvim/scripts/nvim_isolated_conf.sh	/^call plug#end()$/;"	f
plus	plugged/fzf/src/terminal.go	/^	plus          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pme	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
pn	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
po	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
po	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> po          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
po	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> po          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pointer	plugged/fzf/src/terminal.go	/^	pointer      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerEmpty	plugged/fzf/src/terminal.go	/^	pointerEmpty string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerLen	plugged/fzf/src/terminal.go	/^	pointerLen   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
points	plugged/fzf/src/result.go	/^	points [4]uint16$/;"	m	struct:fzf.Result	typeref:typename:[4]uint16
pop	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:r
pop	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:pop()$/;"	f	unknown:List
pop	plugged/plenary.nvim/scratch/_reference_count.lua	/^function List.pop (list)	$/;"	f	unknown:List
pop_description	plugged/plenary.nvim/lua/plenary/busted.lua	/^local pop_description = function()$/;"	f
popleft	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:popleft()$/;"	f	unknown:Deque
popleft	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:popleft()$/;"	f	unknown:Deque
popright	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:popright()$/;"	f	unknown:Deque
popright	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:popright()$/;"	f	unknown:Deque
populate	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^function M.populate(entries, cwd, parent_node)$/;"	f	unknown:M
port	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
port	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
port	plugged/coc.nvim/data/schema.json	/^        "port": {$/;"	o	object:definitions.languageServerSocket.properties
posArray	plugged/fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f	package:algo	typeref:typename:*[]int
posDown	plugged/fzf/src/options.go	/^	posDown$/;"	c	package:fzf
posLeft	plugged/fzf/src/options.go	/^	posLeft$/;"	c	package:fzf
posRight	plugged/fzf/src/options.go	/^	posRight$/;"	c	package:fzf
posUp	plugged/fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c	package:fzf	typeref:type:windowPosition
position	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
position	plugged/fzf/src/options.go	/^	position    windowPosition$/;"	m	struct:fzf.previewOpts	typeref:typename:windowPosition
positionAt	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
positionAt	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
positions	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.positions(needle, haystack)$/;"	f	unknown:fzy
positions	plugged/telescope.nvim/lua/tests/automated/telescope_spec.lua	/^      local function positions(prompt, line)$/;"	f
posix-character-classes	plugged/coc.nvim/package-lock.json	/^        "posix-character-classes": "^0.1.0",$/;"	s	object:dependencies.expand-brackets.requires
posix-character-classes	plugged/coc.nvim/package-lock.json	/^    "posix-character-classes": {$/;"	o	object:dependencies
post	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
post	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^        post = function()$/;"	f
post	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^        post = function()$/;"	f
post	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      post = function()$/;"	f
postProcessOptions	plugged/fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f	package:fzf
posx	plugged/fzf/src/tui/light.go	/^	posx     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
posy	plugged/fzf/src/tui/light.go	/^	posy     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
pow	plugged/plenary.nvim/lua/plenary/operators.lua	/^  pow = function(a, b)$/;"	f
powerline	plugged/lualine.nvim/THEMES.md	/^### powerline$/;"	S	chapter:Available themes
powerline_dark	plugged/lualine.nvim/THEMES.md	/^### powerline_dark$/;"	S	chapter:Available themes
pp	plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
pr	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
pre	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
pre	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  pre = function(prompt_bufnr)$/;"	f
pre	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      pre = function()$/;"	f
pre.code	plugged/emmet-vim/docs/static/css/style-sites.css	/^pre.code {$/;"	c
precommit_check	plugged/lualine.nvim/Makefile	/^precommit_check: docgen format test lint$/;"	t
precompute_bonus	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^local function precompute_bonus(haystack)$/;"	f
prefilter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^sorters.prefilter = function(opts)$/;"	f	unknown:sorters
prefix	plugged/bufferline.nvim/lua/bufferline/numbers.lua	/^local function prefix(buffer, numbers, numbers_style)$/;"	f
prefixLength	plugged/fzf/src/tokenizer.go	/^	prefixLength int32$/;"	m	struct:fzf.Token	typeref:typename:int32
prelude-ls	plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2"$/;"	s	object:dependencies.escodegen.dependencies.type-check.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.levn.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1"$/;"	s	object:dependencies.type-check.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.levn.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.optionator.requires
prelude-ls	plugged/coc.nvim/package-lock.json	/^        "prelude-ls": {$/;"	o	object:dependencies.escodegen.dependencies
prelude-ls	plugged/coc.nvim/package-lock.json	/^    "prelude-ls": {$/;"	o	object:dependencies
prepare	plugged/fzf/test/test_go.rb	/^  def prepare$/;"	f	class:Tmux
prepare_match	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^local function prepare_match(entry, kind)$/;"	f
prepend	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:prepend(item)$/;"	f	unknown:LinkedList
preprocess_diag	plugged/telescope.nvim/lua/telescope/utils.lua	/^  local preprocess_diag = function(diag, bufnr)$/;"	f
preserveSpace	plugged/fzf/src/terminal.go	/^	preserveSpace bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pressed	plugged/fzf/src/terminal.go	/^	pressed      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.0.0"$/;"	s	object:dependencies.@types/jest.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-config.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-diff.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-each.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-leak-detector.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-matcher-utils.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-validate.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-message-util.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
pretty-format	plugged/coc.nvim/package-lock.json	/^    "pretty-format": {$/;"	o	object:dependencies
prevDownTime	plugged/fzf/src/tui/light.go	/^	prevDownTime  time.Time$/;"	m	struct:tui.LightRenderer	typeref:typename:time.Time
prevDownTime	plugged/fzf/src/tui/tui.go	/^	prevDownTime time.Time$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:time.Time
prevLines	plugged/fzf/src/terminal.go	/^	prevLines    []itemLine$/;"	m	struct:fzf.Terminal	typeref:typename:[]itemLine
prev_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.prev_hunk = function(opts)$/;"	f	unknown:M
prev_nf_finder	plugged/plenary.nvim/scratch/new_line_finder.lua	/^local prev_nf_finder = function(data) -- {{{$/;"	f
prev_sibling	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  prev_sibling = function(node) lib.sibling(node, -1) end,$/;"	f
preventDefault	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event.preventDefault = function() {$/;"	f	function:event
preview	plugged/fzf/src/tui/light.go	/^	preview  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
preview	plugged/fzf/src/tui/tcell.go	/^	preview     bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
preview	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  preview = function(node)$/;"	f
preview	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:preview(entry, status)$/;"	f	unknown:Previewer
previewBox	plugged/fzf/src/terminal.go	/^	previewBox   *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
previewBuf	plugged/JABS.nvim/lua/jabs.lua	/^function M.previewBuf()$/;"	f	unknown:M
previewCancelWait	plugged/fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c	package:fzf
previewChunkDelay	plugged/fzf/src/constants.go	/^	previewChunkDelay = 100 * time.Millisecond$/;"	c	package:fzf
previewDelayed	plugged/fzf/src/constants.go	/^	previewDelayed    = 500 * time.Millisecond$/;"	c	package:fzf
previewOpts	plugged/fzf/src/options.go	/^type previewOpts struct {$/;"	s	package:fzf
previewOpts	plugged/fzf/src/terminal.go	/^	previewOpts  previewOpts$/;"	m	struct:fzf.Terminal	typeref:typename:previewOpts
previewRequest	plugged/fzf/src/terminal.go	/^type previewRequest struct {$/;"	s	package:fzf
previewResult	plugged/fzf/src/terminal.go	/^type previewResult struct {$/;"	s	package:fzf
preview_fn	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^        preview_fn = function(_, entry, status)$/;"	f
preview_fn	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  function opts.preview_fn(self, entry, status)$/;"	f	unknown:opts
preview_fn	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  function opts.preview_fn(self, entry, status)$/;"	f	unknown:opts
preview_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.preview_hunk = noautocmd(function()$/;"	f	unknown:M
preview_location	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^function M.preview_location(location, context)$/;"	f	unknown:M
preview_scrolling_down	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.preview_scrolling_down(prompt_bufnr)$/;"	f	unknown:actions
preview_scrolling_up	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.preview_scrolling_up(prompt_bufnr)$/;"	f	unknown:actions
previewed	plugged/fzf/src/terminal.go	/^	previewed    previewed$/;"	m	struct:fzf.Terminal	typeref:typename:previewed
previewed	plugged/fzf/src/terminal.go	/^type previewed struct {$/;"	s	package:fzf
previewer	plugged/fzf/src/terminal.go	/^	previewer    previewer$/;"	m	struct:fzf.Terminal	typeref:typename:previewer
previewer	plugged/fzf/src/terminal.go	/^type previewer struct {$/;"	s	package:fzf
previous	plugged/fzf/src/history.go	/^func (h *History) previous() string {$/;"	f	struct:fzf.History	typeref:typename:string
previous_node	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^  local previous_node = queries.find_best_match(bufnr, query_string, "textobjects", filter_funct/;"	f
previous_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.previous_scope(node)$/;"	f	unknown:M
previous_textobject	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^function M.previous_textobject(node, query_string, same_parent, overlapping_range_ok, bufnr)$/;"	f	unknown:M
print	plugged/plenary.nvim/lua/plenary/busted.lua	/^local print = function(...)$/;"	f
printAll	plugged/fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f	struct:fzf.Terminal
printHeader	plugged/fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f	struct:fzf.Terminal
printHighlighted	plugged/fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, colBase tui.ColorPair, colMatch tui.ColorPair/;"	f	struct:fzf.Terminal	typeref:typename:int
printInfo	plugged/fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f	struct:fzf.Terminal
printItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f	struct:fzf.Terminal
printList	plugged/fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f	struct:fzf.Terminal
printPreview	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f	struct:fzf.Terminal
printPreviewDelayed	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreviewDelayed() {$/;"	f	struct:fzf.Terminal
printPrompt	plugged/fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f	struct:fzf.Terminal
printQuery	plugged/fzf/src/terminal.go	/^	printQuery   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
printString	plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair) {$/;"	f	struct:tui.TcellWindow
print_clipboard	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.print_clipboard()$/;"	f	unknown:M
print_clipboard	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.print_clipboard()$/;"	f	unknown:M
print_info_modules	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function print_info_modules(parserlist, module)$/;"	f
print_output	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^local print_output = vim.schedule_wrap(function(_, ...)$/;"	f
print_warning	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.print_warning(text)$/;"	f	unknown:M
printer	plugged/fzf/src/terminal.go	/^	printer      func(string)$/;"	m	struct:fzf.Terminal	typeref:typename:func(string)
printpath	plugged/plenary.nvim/scratch/_reference_count.lua	/^	local function printpath(to)$/;"	f
printsep	plugged/fzf/src/terminal.go	/^	printsep     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
procFun	plugged/fzf/src/pattern.go	/^	procFun       map[termType]algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:map[termType]algo.Algo
process	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^   process = function(raw_item, path)$/;"	f
process	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^  print(vim.inspect(config, { process = process_function }))$/;"	f
process	plugged/telescope.nvim/lua/tests/helpers.lua	/^        process = function(item)$/;"	f
processTabs	plugged/fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(string, int)
process_abbrev_head	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^local function process_abbrev_head(gitdir, head_str, path, cmd)$/;"	f
process_diff	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^local function process_diff(data)$/;"	f
process_hunks	plugged/gitsigns.nvim/lua/gitsigns/hunks.lua	/^function M.process_hunks(hunks)$/;"	f	unknown:M
process_item	plugged/plenary.nvim/lua/plenary/scandir.lua	/^local process_item = function(opts, name, typ, current_dir, next_dir, bp, data, giti, msp)$/;"	f
process_motions	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.process_motions(ret, mode, prefix, buf)$/;"	f	unknown:M
process_nav_opts	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function process_nav_opts(opts)$/;"	f
process_one_opt	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^  local process_one_opt = function(o)$/;"	f
prof_annotate	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function prof_annotate(count1, samples)$/;"	f
prof_cb	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function prof_cb(th, samples, vmmode)$/;"	f
prof_finish	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function prof_finish()$/;"	f
prof_start	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function prof_start(mode)$/;"	f
prof_top	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function prof_top(count1, count2, samples, indent)$/;"	f
progress	plugged/coc.nvim/package-lock.json	/^        "progress": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
progress	plugged/coc.nvim/package-lock.json	/^    "progress": {$/;"	o	object:dependencies
progress	plugged/fzf/src/terminal.go	/^	progress     int$/;"	m	struct:fzf.Terminal	typeref:typename:int
progress	plugged/lualine.nvim/lua/lualine/components/progress.lua	/^local function progress()$/;"	f
progressMinDuration	plugged/fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c	package:fzf
progressOnInitialization	plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {$/;"	o	object:definitions.languageServerBase.properties
progressOnInitialization	plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerCommand.properties
progressOnInitialization	plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerModule.properties
progressOnInitialization	plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerSocket.properties
projects	plugged/coc.nvim/package.json	/^    "projects": [$/;"	a	object:jest
promise.prototype.finally	plugged/coc.nvim/package-lock.json	/^    "promise.prototype.finally": {$/;"	o	object:dependencies
prompt	plugged/fzf/src/terminal.go	/^	prompt       func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
prompt	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    vim.ui.select(files, { prompt = "Select a file:" }, function(file)$/;"	f
prompt	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    vim.ui.select({ "Yes", "No" }, { prompt = '"' .. folder .. '" does not exist. Create it?' },/;"	f
prompt	plugged/telescope.nvim/lua/telescope/sorters.lua	/^    filter_score, prompt = self:filter_function(prompt, entry)$/;"	f
promptLen	plugged/fzf/src/terminal.go	/^	promptLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
promptLine	plugged/fzf/src/terminal.go	/^func (t *Terminal) promptLine() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
prompts	plugged/coc.nvim/package-lock.json	/^            "prompts": "^2.0.1",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
prompts	plugged/coc.nvim/package-lock.json	/^    "prompts": {$/;"	o	object:dependencies
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.float
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerBase
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerCommand
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerModule
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerSocket
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.diagnostic.floatConfig
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.hover.floatConfig
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.signature.floatConfig
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.completionItemKindLabels
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.floatConfig
properties	plugged/coc.nvim/data/schema.json	/^  "properties": {$/;"	o
property	plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
props	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	c	class:AnonymousFunctionc5b93c5c2700
props	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var props = "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctr/;"	v
protected	plugged/plenary.nvim/lua/plenary/async/util.lua	/^function M.protected(async_fn)$/;"	f	unknown:M
protected	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.protected = async(function(future)$/;"	f	unknown:M
protected_non_leaf	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.protected_non_leaf = async(function(future)$/;"	f	unknown:M
protector	plugged/fzf/src/protector/protector.go	/^package protector$/;"	p
protector	plugged/fzf/src/protector/protector_openbsd.go	/^package protector$/;"	p
protocol	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	G	class:AnonymousFunctionaf1e5c4a33e00.e
protocol	plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	S	class:AnonymousFunctionaf1e5c4a33e00.e
protocol	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
proxyAuthorization	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
proxyCA	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
proxyUrl	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
ps	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
ps	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ps          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
ps	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ps          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
psl	plugged/coc.nvim/package-lock.json	/^        "psl": "^1.1.33",$/;"	s	object:dependencies.tough-cookie.requires
psl	plugged/coc.nvim/package-lock.json	/^    "psl": {$/;"	o	object:dependencies
pt	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pt	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pt          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
pt	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pt          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pu	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
publish	plugged/vim-bbye/Makefile	/^publish:$/;"	t
pump	plugged/coc.nvim/package-lock.json	/^            "pump": "^3.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream.requires
pump	plugged/coc.nvim/package-lock.json	/^        "pump": "^3.0.0"$/;"	s	object:dependencies.get-stream.requires
pump	plugged/coc.nvim/package-lock.json	/^    "pump": {$/;"	o	object:dependencies
punycode	plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.0"$/;"	s	object:dependencies.uri-js.requires
punycode	plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.1"$/;"	s	object:dependencies.tr46.requires
punycode	plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.1",$/;"	s	object:dependencies.tough-cookie.requires
punycode	plugged/coc.nvim/package-lock.json	/^    "punycode": {$/;"	o	object:dependencies
push	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	m	class:Array
push	plugged/fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
push	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:push(other)$/;"	f	unknown:List
push	plugged/plenary.nvim/scratch/_reference_count.lua	/^function List.push (list, value)$/;"	f	unknown:List
pusher	plugged/fzf/src/reader.go	/^	pusher   func([]byte) bool$/;"	m	struct:fzf.Reader	typeref:typename:func([]byte) bool
pushleft	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:pushleft(value)$/;"	f	unknown:Deque
pushleft	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:pushleft(value)$/;"	f	unknown:Deque
pushright	plugged/plenary.nvim/lua/plenary/async/structs.lua	/^function Deque:pushright(value)$/;"	f	unknown:Deque
pushright	plugged/plenary.nvim/lua/plenary/async_lib/structs.lua	/^function Deque:pushright(value)$/;"	f	unknown:Deque
put	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^    put = function(cache, params, result)$/;"	f
pv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
pv	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pv          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pw	plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
pwe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
pwindow	plugged/fzf/src/terminal.go	/^	pwindow      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pwindow	plugged/fzf/src/terminal.go	/^	pwindow  tui.Window$/;"	m	struct:fzf.previewRequest	typeref:typename:tui.Window
px	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
py	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
python	plugged/nvim-treesitter/lockfile.json	/^  "python": {$/;"	o
pywal	plugged/lualine.nvim/THEMES.md	/^### pywal$/;"	S	chapter:Available themes
q	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
q	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
q	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> q           :call b:buffergator_catalog_viewer.close(1)<CR/;"	m
q	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> q           :call b:buffergator_catalog_viewer.close(1)<CR>$/;"	m
q$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
q0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
q5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
q6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
q8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
q9	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
qD	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
qG	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
qJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
qM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
qT	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
qU	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
qUe	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
qV	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
qX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
qY	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
qae	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
qb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
qc	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
qd	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
qe	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qf	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
qflist	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^previewers.qflist = defaulter(function(opts)$/;"	f	unknown:previewers
qg	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
qj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
qk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
ql	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
ql	plugged/nvim-treesitter/lockfile.json	/^  "ql": {$/;"	o
qme	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
qn	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
qq	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
qse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qt	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
qu	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
query	plugged/fzf/src/terminal.go	/^	query         bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
query	plugged/fzf/src/terminal_test.go	/^	query    string$/;"	m	struct:fzf.give	typeref:typename:string
query	plugged/nvim-treesitter/lockfile.json	/^  "query": {$/;"	o
queryCache	plugged/fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t	package:fzf	typeref:typename:map[string][]Result
queryCacheMax	plugged/fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c	package:fzf	typeref:typename:int
queryLen	plugged/fzf/src/terminal.go	/^	queryLen     [2]int$/;"	m	struct:fzf.Terminal	typeref:typename:[2]int
queryLen	plugged/fzf/src/terminal.go	/^	queryLen int$/;"	m	struct:fzf.itemLine	typeref:typename:int
query_status	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function query_status(lang, query_group)$/;"	f
queue	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var queue = function( elem, type, array ) {$/;"	f
queue-microtask	plugged/coc.nvim/package-lock.json	/^        "queue-microtask": "^1.2.2"$/;"	s	object:dependencies.run-parallel.requires
queue-microtask	plugged/coc.nvim/package-lock.json	/^    "queue-microtask": {$/;"	o	object:dependencies
queued	plugged/fzf/src/tui/light.go	/^	queued        strings.Builder$/;"	m	struct:tui.LightRenderer	typeref:typename:strings.Builder
quickClass	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	quickClass = new RegExp("^([#.]?)(" + chars + "*)");$/;"	v
quickExpr	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var quickExpr = \/^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$\/,$/;"	v
quickfix	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.quickfix = function(opts)$/;"	f	unknown:internal
quickfix_items_to_entries	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.quickfix_items_to_entries = function(locations)$/;"	f	unknown:utils
quoteEntry	plugged/fzf/src/terminal_unix.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
quoteEntry	plugged/fzf/src/terminal_windows.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
qw	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
qy	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
r	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunctionaf1e5c4a35300
r	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunctionaf1e5c4a35500
r	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunctionaf1e5c4a35600
r	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunctionaf1e5c4a35700
r	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunctionaf1e5c4a35800
r	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
r	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f	function:AnonymousFunctionaf1e5c4a26c00
r	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a1c500
r	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a1c700
r	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c
r	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a10300
r	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a10400
r	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a10600
r	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	g
r	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f	function:AnonymousFunctionaf1e5c4a35100
r	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f	function:AnonymousFunctionaf1e5c4a35200
r	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
r	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f	function:AnonymousFunctionaf1e5c4a35900
r	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	c	class:AnonymousFunctionaf1e5c4a12b00
r	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	c	class:AnonymousFunctionaf1e5c4a21000
r	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:see
r	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
r	plugged/nvim-treesitter/lockfile.json	/^  "r": {$/;"	o
r	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> r           :call b:buffergator_catalog_viewer.rebuild_cat/;"	m
r	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> r           :call b:buffergator_catalog_viewer.rebuild_catalog/;"	m
r$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
r0	plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
r4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
r5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
r6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
r7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
r8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
r9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
rB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
rC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
rD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rG	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
rI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
rL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rO	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
rQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
rS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
rV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rW	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
rZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
r_	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ra	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
racket	coc-settings.json	/^        "racket": {$/;"	o	object:languageserver
rae	plugged/coc.nvim/build/index.js	/^`)}function iae(r,e,t){return p$(e,r)?{num:t+1,line:e.replace(d0,g$(t+1))}:{num:t,line:m$(g$(t))/;"	f
randResult	plugged/fzf/src/merger_test.go	/^func randResult() Result {$/;"	f	package:fzf	typeref:typename:Result
random	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.random()$/;"	f	unknown:util
random	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.random()$/;"	f	unknown:util
randomColor	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.randomColor(color)$/;"	f	unknown:util
randomColor	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.randomColor(color)$/;"	f	unknown:util
rands	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local rands = function(n, m)$/;"	f
rands_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local rands_gen = function(param_x, _state_x)$/;"	f
rands_nil_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local rands_nil_gen = function(_param_x, _state_x)$/;"	f
range	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a11d00.e.n
range	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12000.e.a.location
range	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12100.e.c
range	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12500.e.s
range	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af700.e.c
range	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:range()$/;"	f	unknown:TSRange
range	plugged/nvim-treesitter/tests/unit/ts_utils_spec.lua	/^      range = function()$/;"	f
range	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local range = function(start, stop, step)$/;"	f
rangeEllipsis	plugged/fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c	package:fzf
range_code_actions	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.range_code_actions = function(opts)$/;"	f	unknown:lsp
range_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local range_gen = function(param, state)$/;"	f
range_matches	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function range_matches(node)$/;"	f
range_rev_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local range_rev_gen = function(param, state)$/;"	f
raw_body	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.raw_body = function(xs)$/;"	f	unknown:parse
rawiter	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local rawiter = function(obj, param, state)$/;"	f
rc	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
rc	plugged/coc.nvim/package-lock.json	/^    "rc": {$/;"	o	object:dependencies
re	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
react-is	plugged/coc.nvim/package-lock.json	/^        "react-is": "^17.0.1"$/;"	s	object:dependencies.pretty-format.requires
react-is	plugged/coc.nvim/package-lock.json	/^    "react-is": {$/;"	o	object:dependencies
read	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
read	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:read(callback)$/;"	f	unknown:Path
read	plugged/telescope.nvim/lua/telescope/_.lua	/^function ChunkPipe:read()$/;"	f	unknown:ChunkPipe
read	plugged/telescope.nvim/lua/telescope/_.lua	/^function LinesPipe:read()$/;"	f	unknown:LinesPipe
read-pkg	plugged/coc.nvim/package-lock.json	/^        "read-pkg": "^5.2.0",$/;"	s	object:dependencies.read-pkg-up.requires
read-pkg	plugged/coc.nvim/package-lock.json	/^    "read-pkg": {$/;"	o	object:dependencies
read-pkg-up	plugged/coc.nvim/package-lock.json	/^        "read-pkg-up": "^7.0.1",$/;"	s	object:dependencies.jest-resolve.requires
read-pkg-up	plugged/coc.nvim/package-lock.json	/^    "read-pkg-up": {$/;"	o	object:dependencies
readFile	plugged/fzf/src/terminal_test.go	/^func readFile(path string) ([]byte, error) {$/;"	f	package:fzf	typeref:typename:([]byte, error)
readFiles	plugged/fzf/src/reader.go	/^func (r *Reader) readFiles() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromCommand	plugged/fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell *string, command string) bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromStdin	plugged/fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
read_and_api	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^  local read_and_api = async(function()$/;"	f
read_dir	plugged/plenary.nvim/lua/plenary/scandir.lua	/^  read_dir = function(err, fd)$/;"	f
read_file	plugged/gitsigns.nvim/gen_help.lua	/^local function read_file(path)$/;"	f
read_file	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.read_file(path)$/;"	f	unknown:M
read_file	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^local read_file = async(function(path)$/;"	f
read_file_lines	plugged/gitsigns.nvim/gen_help.lua	/^local function read_file_lines(path)$/;"	f
read_file_other	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^local read_file_other = function(path, callback)$/;"	f
read_pending	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.read_pending()$/;"	f	unknown:M
read_start	plugged/telescope.nvim/lua/telescope/_.lua	/^  self.read_start = function() end$/;"	f	unknown:self
readdirp	plugged/coc.nvim/package-lock.json	/^        "readdirp": "~3.5.0"$/;"	s	object:dependencies.chokidar.requires
readdirp	plugged/coc.nvim/package-lock.json	/^    "readdirp": {$/;"	o	object:dependencies
readerBufferSize	plugged/fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c	package:fzf
readerPollIntervalMax	plugged/fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalMin	plugged/fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalStep	plugged/fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c	package:fzf
reading	plugged/fzf/src/terminal.go	/^	reading      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
readline	plugged/coc.nvim/bin/prompt.js	/^const readline = require("readline")$/;"	C
readlines	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:readlines()$/;"	f	unknown:Path
readonce	plugged/fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
readyBound	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var readyBound = false;$/;"	v
reattach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.reattach_module(mod_name, bufnr, lang)$/;"	f	unknown:M
recalculate_layout	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:recalculate_layout()$/;"	f	unknown:Picker
receiver	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  local receiver = a.wrap(function(callback)$/;"	f
receiver	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  local receiver = a.wrap(function(callback)$/;"	f
recurse	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^  local function recurse(i, ...)$/;"	f
recurse_local_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.recurse_local_nodes(local_def, accumulator, full_match, last_match)$/;"	f	unknown:M
recurse_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function recurse_modules(accumulator, root, path)$/;"	f
recv	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  Receiver.recv = function()$/;"	f	unknown:Receiver
recv	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  Receiver.recv = async(function()$/;"	f	unknown:Receiver
red	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
redBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
redraw	plugged/fzf/src/terminal.go	/^func (t *Terminal) redraw() {$/;"	f	struct:fzf.Terminal
redraw	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.redraw()$/;"	f	unknown:M
ref	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function ref(state, arguments, level)$/;"	f
refactor.afterContext	plugged/coc.nvim/data/schema.json	/^    "refactor.afterContext": {$/;"	o	object:properties
refactor.beforeContext	plugged/coc.nvim/data/schema.json	/^    "refactor.beforeContext": {$/;"	o	object:properties
refactor.openCommand	plugged/coc.nvim/data/schema.json	/^    "refactor.openCommand": {$/;"	o	object:properties
refactor.saveToFile	plugged/coc.nvim/data/schema.json	/^    "refactor.saveToFile": {$/;"	o	object:properties
reference	plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
references	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.references = function(opts)$/;"	f	unknown:lsp
refresh	plugged/JABS.nvim/lua/jabs.lua	/^function M.refresh(buf)$/;"	f	unknown:M
refresh	plugged/bufferline.nvim/lua/bufferline.lua	/^local function refresh()$/;"	f
refresh	plugged/fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f	struct:fzf.Terminal
refresh	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.refresh = void(function()$/;"	f	unknown:M
refresh	plugged/indent-blankline.nvim/lua/indent_blankline/commands.lua	/^M.refresh = function(bang, scroll)$/;"	f	unknown:M
refresh	plugged/indent-blankline.nvim/lua/indent_blankline/init.lua	/^M.refresh = function(scroll)$/;"	f	unknown:M
refresh	plugged/indent-blankline.nvim/lua/indent_blankline/init.lua	/^local refresh = function(scroll)$/;"	f
refresh	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.refresh()$/;"	f	unknown:M
refresh	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:refresh(finder, opts)$/;"	f	unknown:Picker
refresh_cb	plugged/bufferline.nvim/lua/bufferline/diagnostics.lua	/^    local function refresh_cb(err, res)$/;"	f
refresh_entries	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^function M.refresh_entries(entries, cwd, parent_node)$/;"	f	unknown:M
refresh_git	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^local function refresh_git(node)$/;"	f
refresh_nodes	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^local function refresh_nodes(node)$/;"	f
refresh_previewer	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:refresh_previewer()$/;"	f	unknown:Picker
refresh_tree	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.refresh_tree(disable_clock)$/;"	f	unknown:M
regex	plugged/fzf/src/tokenizer.go	/^	regex *regexp.Regexp$/;"	m	struct:fzf.Delimiter	typeref:typename:*regexp.Regexp
regex	plugged/nvim-treesitter/lockfile.json	/^  "regex": {$/;"	o
regex-not	plugged/coc.nvim/package-lock.json	/^            "regex-not": "^1.0.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
regex-not	plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.expand-brackets.requires
regex-not	plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.extglob.requires
regex-not	plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.nanomatch.requires
regex-not	plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.2",$/;"	s	object:dependencies.to-regex.requires
regex-not	plugged/coc.nvim/package-lock.json	/^    "regex-not": {$/;"	o	object:dependencies
regex_highlighter	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.regex_highlighter = function(bufnr, ft)$/;"	f	unknown:utils
regexp.prototype.flags	plugged/coc.nvim/package-lock.json	/^        "regexp.prototype.flags": "^1.3.0",$/;"	s	object:dependencies.string.prototype.matchall.requires
regexp.prototype.flags	plugged/coc.nvim/package-lock.json	/^    "regexp.prototype.flags": {$/;"	o	object:dependencies
regexpp	plugged/coc.nvim/package-lock.json	/^        "regexpp": "^3.0.0",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
regexpp	plugged/coc.nvim/package-lock.json	/^        "regexpp": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
regexpp	plugged/coc.nvim/package-lock.json	/^    "regexpp": {$/;"	o	object:dependencies
regextras	plugged/coc.nvim/package-lock.json	/^        "regextras": "^0.7.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
regextras	plugged/coc.nvim/package-lock.json	/^    "regextras": {$/;"	o	object:dependencies
register	plugged/plenary.nvim/lua/luassert/assert.lua	/^  register = function(self, nspace, name, callback, positive_message, negative_message)$/;"	f
register	plugged/telescope.nvim/lua/telescope/_extensions/init.lua	/^extensions.register = function(mod)$/;"	f	unknown:extensions
register	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.register(mappings, opts)$/;"	f	unknown:M
register	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.register(mappings, opts)$/;"	f	unknown:M
register_completion_callback	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:register_completion_callback(cb)$/;"	f	unknown:Picker
register_extension	plugged/telescope.nvim/lua/telescope/init.lua	/^function telescope.register_extension(mod)$/;"	f	unknown:telescope
register_handler	plugged/nvim-tree.lua/lua/nvim-tree/events.lua	/^local function register_handler(event_name, handler)$/;"	f
register_keyword	plugged/telescope.nvim/lua/telescope/command.lua	/^function command.register_keyword(keyword)$/;"	f	unknown:command
registers	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.registers = function(opts)$/;"	f	unknown:internal
rejectUnauthorized	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
rejectUnauthorized	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
release	plugged/emmet-vim/Makefile	/^release: emmet-vim.zip$/;"	t
release	plugged/fzf/Makefile	/^release:$/;"	t
reload_module	plugged/plenary.nvim/lua/plenary/reload.lua	/^reload.reload_module = function(module_name, starts_with_only)$/;"	f	unknown:reload
reload_package	plugged/telescope.nvim/lua/telescope/WIP.lua	/^      local reload_package = function()$/;"	f
reload_padding_function	plugged/nvim-tree.lua/lua/nvim-tree/renderer/padding.lua	/^function M.reload_padding_function()$/;"	f	unknown:M
reload_roots	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^function M.reload_roots()$/;"	f	unknown:M
reloader	plugged/telescope.nvim/lua/telescope/WIP.lua	/^WIP.reloader = function(opts)$/;"	f	unknown:WIP
reloader	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.reloader = function(opts)$/;"	f	unknown:internal
remove	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
remove	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function(elem, types, handler) {$/;"	m	class:jQuery.event
remove	plugged/fzf/uninstall	/^remove() {$/;"	f
remove	plugged/gitsigns.nvim/lua/gitsigns/signs.lua	/^function M.remove(bufnr, lnum)$/;"	f	unknown:M
remove	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.remove(node)$/;"	f	unknown:M
remove	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.remove(type_name, bufnr)$/;"	f	unknown:cache
remove	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:remove(idx)$/;"	f	unknown:List
remove-trailing-separator	plugged/coc.nvim/package-lock.json	/^            "remove-trailing-separator": "^1.0.1"$/;"	s	object:dependencies.sane.dependencies.normalize-path.requires
remove-trailing-separator	plugged/coc.nvim/package-lock.json	/^    "remove-trailing-separator": {$/;"	o	object:dependencies
remove-zip	plugged/emmet-vim/Makefile	/^remove-zip:$/;"	t
remove_dir	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function remove_dir(cwd)$/;"	f
remove_formatter	plugged/plenary.nvim/lua/luassert/assert.lua	/^  remove_formatter = function(self, fmtr)$/;"	f
remove_formatter	plugged/plenary.nvim/lua/luassert/state.lua	/^state.remove_formatter = function(callback, s)$/;"	f	unknown:state
remove_highlight	plugged/bufferline.nvim/tests/offset_spec.lua	/^local function remove_highlight(str)$/;"	f
remove_line	plugged/fzf/uninstall	/^remove_line() {$/;"	f
remove_selected_picker	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.remove_selected_picker = function(prompt_bufnr)$/;"	f	unknown:actions
remove_selection	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.remove_selection(prompt_bufnr)$/;"	f	unknown:actions
remove_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:remove_selection(row)$/;"	f	unknown:Picker
rename	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^function M.rename(with_sub)$/;"	f	unknown:M
rename	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:rename(opts)$/;"	f	unknown:Path
renameFile	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
rename_end_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function rename_end_tag()$/;"	f
rename_loaded_buffers	plugged/nvim-tree.lua/lua/nvim-tree/fs.lua	/^local function rename_loaded_buffers(old_name, new_name)$/;"	f
rename_start_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function rename_start_tag()$/;"	f
rename_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.rename_tag = function ()$/;"	f	unknown:M
render	plugged/bufferline.nvim/lua/bufferline.lua	/^local function render(components, tabpages, config)$/;"	f
render	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.render(components, sorter)$/;"	f	unknown:M
render	plugged/bufferline.nvim/lua/bufferline/tabpages.lua	/^local function render(tabpage, is_active, style, highlights)$/;"	f
render	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:render()$/;"	f	unknown:Buffer
render	plugged/lualine.nvim/lua/lualine/components/tabs/tab.lua	/^function Tab:render()$/;"	f	unknown:Tab
render	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.render(text)$/;"	f	unknown:M
renderPreviewArea	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewArea(unchanged bool) {$/;"	f	struct:fzf.Terminal
renderPreviewSpinner	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewSpinner() {$/;"	f	struct:fzf.Terminal
renderPreviewText	plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewText(height int, lines []string, lineNo int, unchanged bool) {$/;"	f	struct:fzf.Terminal
render_buffer	plugged/bufferline.nvim/lua/bufferline.lua	/^local function render_buffer(config, buffer)$/;"	f
render_filename	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.render_filename = function (bufnr, namespace, line, entry)$/;"	f	unknown:M
render_fn	plugged/bufferline.nvim/lua/bufferline.lua	/^  local function render_fn(index, next_item)$/;"	f
render_header	plugged/nvim-spectre/lua/spectre/ui.lua	/^function M.render_header(opts)$/;"	f	unknown:M
render_hl	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^function M.render_hl(bufnr)$/;"	f	unknown:M
render_line	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.render_line = function($/;"	f	unknown:M
render_search_ui	plugged/nvim-spectre/lua/spectre/ui.lua	/^function M.render_search_ui()$/;"	f	unknown:M
renderer	plugged/fzf/src/tui/light.go	/^	renderer *LightRenderer$/;"	m	struct:tui.LightWindow	typeref:typename:*LightRenderer
repeat	plugged/fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f	package:tui	typeref:typename:string
repeat-element	plugged/coc.nvim/package-lock.json	/^            "repeat-element": "^1.1.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
repeat-element	plugged/coc.nvim/package-lock.json	/^    "repeat-element": {$/;"	o	object:dependencies
repeat-string	plugged/coc.nvim/package-lock.json	/^            "repeat-string": "^1.6.1"$/;"	s	object:dependencies.sane.dependencies.to-regex-range.requires
repeat-string	plugged/coc.nvim/package-lock.json	/^            "repeat-string": "^1.6.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
repeat-string	plugged/coc.nvim/package-lock.json	/^    "repeat-string": {$/;"	o	object:dependencies
repeat_action	plugged/gitsigns.nvim/lua/gitsigns/repeat.lua	/^function M.repeat_action()$/;"	f	unknown:M
repeat_fn	plugged/gitsigns.nvim/lua/gitsigns/repeat.lua	/^      repeat_fn = function()$/;"	f
repeated_table	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.repeated_table = function(n, val)$/;"	f	unknown:utils
replace	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	p	class:Zse.t
replace	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
replace	plugged/nvim-spectre/lua/spectre/replace/sed.lua	/^sed.replace = function(self, value)$/;"	f	unknown:sed
replace	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.replace(n, v, field, width) -- Lua5.2 inspired$/;"	f	unknown:M
replace	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^  function mt:replace(v)$/;"	f	unknown:mt
replacePlaceholder	plugged/fzf/src/terminal.go	/^func (t *Terminal) replacePlaceholder(template string, forcePlus bool, input string, list []*Ite/;"	f	struct:fzf.Terminal	typeref:typename:string
replacePlaceholder	plugged/fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, printsep string, f/;"	f	package:fzf	typeref:typename:string
replace_cmd	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.replace_cmd = function()$/;"	f	unknown:M
replace_if	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^  function mt:replace_if(condition, replacement)$/;"	f	unknown:mt
replace_map	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^  function mt:replace_map(tbl)$/;"	f	unknown:mt
replace_terms	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local replace_terms = function(input)$/;"	f
replace_text	plugged/nvim-spectre/tests/line_render_spec.lua	/^        replace_text = "    test  function abcd(nono)",$/;"	f
replace_text	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            replace_text = [[function abcde\\1]],$/;"	f
replace_text_node	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function replace_text_node(node, tag_name)$/;"	f
replace_window	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.replace_window()$/;"	f	unknown:M
repo	plugged/emmet-vim/docs/index.html	/^			<article id="repo">$/;"	I
report	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^function module.report(filename)$/;"	f	unknown:module
repository	plugged/coc.nvim/package.json	/^  "repository": {$/;"	o
reqBox	plugged/fzf/src/matcher.go	/^	reqBox         *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
reqBox	plugged/fzf/src/terminal.go	/^	reqBox       *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
reqClose	plugged/fzf/src/terminal.go	/^	reqClose$/;"	c	package:fzf
reqHeader	plugged/fzf/src/terminal.go	/^	reqHeader$/;"	c	package:fzf
reqInfo	plugged/fzf/src/terminal.go	/^	reqInfo$/;"	c	package:fzf
reqJump	plugged/fzf/src/terminal.go	/^	reqJump$/;"	c	package:fzf
reqList	plugged/fzf/src/terminal.go	/^	reqList$/;"	c	package:fzf
reqPreviewDelayed	plugged/fzf/src/terminal.go	/^	reqPreviewDelayed$/;"	c	package:fzf
reqPreviewDisplay	plugged/fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c	package:fzf
reqPreviewEnqueue	plugged/fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c	package:fzf
reqPreviewRefresh	plugged/fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c	package:fzf
reqPrintQuery	plugged/fzf/src/terminal.go	/^	reqPrintQuery$/;"	c	package:fzf
reqPrompt	plugged/fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
reqQuit	plugged/fzf/src/terminal.go	/^	reqQuit$/;"	c	package:fzf
reqRedraw	plugged/fzf/src/terminal.go	/^	reqRedraw$/;"	c	package:fzf
reqRefresh	plugged/fzf/src/terminal.go	/^	reqRefresh$/;"	c	package:fzf
reqReinit	plugged/fzf/src/terminal.go	/^	reqReinit$/;"	c	package:fzf
reqReset	plugged/fzf/src/matcher.go	/^	reqReset$/;"	c	package:fzf
reqRetry	plugged/fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
request	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.request = function(opts)$/;"	f	unknown:parse
request	plugged/plenary.nvim/lua/plenary/curl.lua	/^request = function(specs)$/;"	f
require	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f	function:i
require	plugged/lualine.nvim/lua/lualine_require.lua	/^function M.require(module)$/;"	f	unknown:M
require	plugged/nvim-spectre/lua/spectre/init.lua	/^        _G.require = function(path)$/;"	f	unknown:_G
require-directory	plugged/coc.nvim/package-lock.json	/^        "require-directory": "^2.1.1",$/;"	s	object:dependencies.yargs.requires
require-directory	plugged/coc.nvim/package-lock.json	/^    "require-directory": {$/;"	o	object:dependencies
require-main-filename	plugged/coc.nvim/package-lock.json	/^        "require-main-filename": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
require-main-filename	plugged/coc.nvim/package-lock.json	/^    "require-main-filename": {$/;"	o	object:dependencies
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {$/;"	o	object:definitions.languageServerBase.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerCommand.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerModule.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerSocket.properties
require_on_exported_call	plugged/telescope.nvim/lua/telescope/builtin/init.lua	/^local function require_on_exported_call(mod)$/;"	f
required	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	a	object:definitions.languageServerCommand
required	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	a	object:definitions.languageServerModule
required	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	a	object:definitions.languageServerSocket
requiredExtraSize	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionaf1e5c4a31400.c
requires	plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.chalk
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.color-convert
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.supports-color
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-accessor-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-data-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.chalk.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.class-utils.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.chalk
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.color-convert
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.supports-color
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-accessor-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-data-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.levn
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.optionator
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.type-check
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.cross-spawn
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.shebang-command
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.which
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.debug
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expect.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extend-shallow.dependencies.is-extendable
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-accessor-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-data-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.has-values.dependencies.is-number
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.has-values.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.is-accessor-descriptor.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.is-data-descriptor.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.execa
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.get-stream
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.npm-run-path
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest.dependencies.jest-cli
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.mixin-deep.dependencies.is-extendable
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.object-copy.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.object-copy.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.pretty-format.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.anymatch
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.braces
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.fill-range
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.is-number
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.micromatch
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.normalize-path
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.to-regex-range
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.set-value.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.slice-ansi.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.slice-ansi.dependencies.color-convert
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-descriptor
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-util.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.debug
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.static-extend.dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.streamroller.dependencies.fs-extra
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.streamroller.dependencies.jsonfile
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.table.dependencies.string-width
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.table.dependencies.strip-ansi
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.to-object-path.dependencies.kind-of
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.unset-value.dependencies.has-value
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.unzip-stream.dependencies.mkdirp
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
requires	plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.wrap-ansi.dependencies.ansi-styles
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/code-frame
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/core
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/generator
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-compilation-targets
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-function-name
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-get-function-arity
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-member-expression-to-functions
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-module-imports
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-module-transforms
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-optimise-call-expression
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-replace-supers
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-simple-access
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-split-export-declaration
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helpers
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/highlight
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-async-generators
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-bigint
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-class-properties
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-import-meta
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-json-strings
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-numeric-separator
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-object-rest-spread
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-optional-catch-binding
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-optional-chaining
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-top-level-await
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/template
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/traverse
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/types
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@chemzqm/neovim
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@cnakazawa/watch
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@eslint/eslintrc
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/console
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/core
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/environment
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/fake-timers
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/globals
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/reporters
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/source-map
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/test-result
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/test-sequencer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/transform
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/types
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@nodelib/fs.scandir
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@nodelib/fs.walk
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@sinonjs/commons
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@sinonjs/fake-timers
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__core
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__generator
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__template
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__traverse
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/fb-watchman
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/fs-extra
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/glob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/graceful-fs
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/istanbul-lib-report
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/istanbul-reports
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/minipass
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/mkdirp
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/tar
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/yargs
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/eslint-plugin
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/experimental-utils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/parser
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/scope-manager
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/typescript-estree
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/visitor-keys
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.acorn-globals
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.agent-base
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ajv
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ansi-escapes
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.anymatch
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.argparse
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-plugin-istanbul
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-plugin-jest-hoist
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-preset-current-node-syntax
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-preset-jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.base
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.binary
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.brace-expansion
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.braces
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.browserslist
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.bs-logger
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.bser
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cache-base
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.call-bind
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.capture-exit
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chainsaw
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chalk
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chokidar
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.class-utils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cli-table
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cliui
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.collection-visit
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.color-convert
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.combined-stream
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.content-disposition
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.convert-source-map
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cross-spawn
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cssstyle
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.data-urls
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.debug
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.decompress-response
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.define-properties
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.define-property
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.dir-glob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.doctrine
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.domexception
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.end-of-stream
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.enquirer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.error-ex
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es-abstract
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es-to-primitive
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.escodegen
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-plugin-jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-scope
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-utils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.espree
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esquery
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esrecurse
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.execa
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.expand-brackets
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.expect
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.extend-shallow
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.extglob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fast-glob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fastq
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fb-watchman
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.file-entry-cache
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fill-range
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.find-up
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.flat-cache
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.form-data
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fragment-cache
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fs-extra
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fs-minipass
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.get-intrinsic
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.get-stream
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob-parent
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globals
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globby
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has-value
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has-values
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.html-encoding-sniffer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.http-proxy-agent
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.https-proxy-agent
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.iconv-lite
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.import-fresh
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.import-local
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.inflight
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.internal-slot
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-accessor-descriptor
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-binary-path
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-boolean-object
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-ci
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-core-module
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-data-descriptor
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-descriptor
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-glob
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-plain-object
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-regex
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-symbol
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-wsl
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-instrument
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-report
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-source-maps
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-reports
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.isuri
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-changed-files
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-config
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-diff
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-docblock
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-each
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-environment-jsdom
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-environment-node
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-haste-map
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-jasmine2
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-leak-detector
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-matcher-utils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-message-util
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-mock
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-resolve
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-resolve-dependencies
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-runner
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-runtime
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-serializer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-snapshot
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-util
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-validate
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-watcher
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-worker
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.js-yaml
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jsdom
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.json5
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jsonfile
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.levn
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.locate-path
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.log4js
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.lru-cache
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.make-dir
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.makeerror
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.map-visit
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.micromatch
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mime-types
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minimatch
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minipass
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minizlib
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mixin-deep
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.msgpack-lite
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.nanomatch
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.node-notifier
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.normalize-package-data
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.npm-run-path
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object-copy
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object-visit
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object.assign
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object.pick
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.once
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.onetime
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.optionator
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-limit
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-locate
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parent-module
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parse-json
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pirates
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pkg-dir
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pretty-format
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.promise.prototype.finally
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.prompts
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pump
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rc
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.read-pkg
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.read-pkg-up
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.readdirp
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.regex-not
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.regexp.prototype.flags
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.resolve
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.resolve-cwd
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rimraf
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.run-parallel
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.safe-regex
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.sane
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.saxes
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.set-value
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.shebang-command
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.side-channel
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.slice-ansi
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon-node
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon-util
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.source-map-resolve
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.source-map-support
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.spdx-correct
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.spdx-expression-parse
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.split-string
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.stack-utils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.static-extend
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.streamroller
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-length
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-width
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.matchall
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.trimend
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.trimstart
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.strip-ansi
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.supports-color
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.supports-hyperlinks
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.table
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tar
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.terminal-link
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.test-exclude
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-object-path
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-regex
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-regex-range
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tough-cookie
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tr46
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ts-jest
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tsutils
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.type-check
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.typedarray-to-buffer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unbox-primitive
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.union-value
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unset-value
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unzip-stream
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.uri-js
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.v8-to-istanbul
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.validate-npm-package-license
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.vscode-languageserver
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.vscode-languageserver-protocol
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.w3c-hr-time
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.w3c-xmlserializer
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.walker
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.whatwg-encoding
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.whatwg-url
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.which
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.which-boxed-primitive
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.wrap-ansi
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.write-file-atomic
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.yargs
requires	plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.yargs-parser
requires	plugged/coc.nvim/package-lock.json	/^  "requires": true,$/;"	b
reset	plugged/bufferline.nvim/lua/bufferline/duplicates.lua	/^function M.reset()$/;"	f	unknown:M
reset	plugged/bufferline.nvim/lua/bufferline/pick.lua	/^function M.reset()$/;"	f	unknown:M
reset	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
reset	plugged/gitsigns.nvim/lua/gitsigns/current_line_blame.lua	/^M.reset = function(bufnr)$/;"	f	unknown:M
reset	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^    reset = function(self)$/;"	f
reset	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^function histories.History:reset()$/;"	f	unknown:histories.History
reset	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.reset()$/;"	f	unknown:M
reset_base	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.reset_base = function(global)$/;"	f	unknown:M
reset_buffer	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.reset_buffer = function()$/;"	f	unknown:M
reset_buffer_index	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.reset_buffer_index = void(function()$/;"	f	unknown:M
reset_cache	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.reset_cache()$/;"	f	unknown:M
reset_highlight	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.reset_highlight()$/;"	f	unknown:M
reset_highlights	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.reset_highlights(highlights)$/;"	f	unknown:M
reset_highlights	plugged/indent-blankline.nvim/lua/indent_blankline/utils.lua	/^M.reset_highlights = function()$/;"	f	unknown:M
reset_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.reset_hunk = mk_repeatable(function(range)$/;"	f	unknown:M
reset_lualine	plugged/lualine.nvim/lua/lualine.lua	/^local function reset_lualine()$/;"	f
reset_progress_counter	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function reset_progress_counter()$/;"	f
reset_prompt	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:reset_prompt(text)$/;"	f	unknown:Picker
reset_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:reset_selection()$/;"	f	unknown:Picker
resize	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.resize(size)$/;"	f	unknown:M
resize	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.resize()$/;"	f	unknown:M
resize	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:resize(size)$/;"	f	unknown:Terminal
resizeWindows	plugged/fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f	struct:fzf.Terminal
resize_split	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.resize_split(term, size)$/;"	f	unknown:M
resolve	plugged/coc.nvim/package-lock.json	/^        "resolve": "^1.10.0",$/;"	s	object:dependencies.normalize-package-data.requires
resolve	plugged/coc.nvim/package-lock.json	/^        "resolve": "^1.18.1",$/;"	s	object:dependencies.jest-resolve.requires
resolve	plugged/coc.nvim/package-lock.json	/^    "resolve": {$/;"	o	object:dependencies
resolve	plugged/telescope.nvim/lua/telescope/pickers/entry_display.lua	/^entry_display.resolve = function(self, entry)$/;"	f	unknown:entry_display
resolve-cwd	plugged/coc.nvim/package-lock.json	/^        "resolve-cwd": "^3.0.0"$/;"	s	object:dependencies.import-local.requires
resolve-cwd	plugged/coc.nvim/package-lock.json	/^    "resolve-cwd": {$/;"	o	object:dependencies
resolve-from	plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^4.0.0"$/;"	s	object:dependencies.import-fresh.requires
resolve-from	plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^5.0.0"$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
resolve-from	plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^5.0.0"$/;"	s	object:dependencies.resolve-cwd.requires
resolve-from	plugged/coc.nvim/package-lock.json	/^        "resolve-from": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config.dependencies
resolve-from	plugged/coc.nvim/package-lock.json	/^        "resolve-from": {$/;"	o	object:dependencies.resolve-cwd.dependencies
resolve-from	plugged/coc.nvim/package-lock.json	/^    "resolve-from": {$/;"	o	object:dependencies
resolve-url	plugged/coc.nvim/package-lock.json	/^        "resolve-url": "^0.2.1",$/;"	s	object:dependencies.source-map-resolve.requires
resolve-url	plugged/coc.nvim/package-lock.json	/^    "resolve-url": {$/;"	o	object:dependencies
resolve_default	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^local function resolve_default(v)$/;"	f
resolve_height	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^resolver.resolve_height = function(val)$/;"	f	unknown:resolver
resolve_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function resolve_module(mod_name)$/;"	f
resolve_pad	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^  local resolve_pad = function(value)$/;"	f
resolve_table_opts	plugged/telescope.nvim/lua/telescope/config.lua	/^local resolve_table_opts = function(priority, base)$/;"	f
resolve_width	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^resolver.resolve_width = function(val)$/;"	f	unknown:resolver
resolved	plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/isobject\/-\/isobject-2.1.0.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
resolved	plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-8.3.0.tgz",$/;"	s	object:dependencies.jsdom.dependencies.acorn
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-4.1.0.tgz",$/;"	s	object:dependencies.table.dependencies.ansi-regex
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.expect.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/anymatch\/-\/anymatch-2.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.anymatch
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/braces\/-\/braces-2.3.2.tgz",$/;"	s	object:dependencies.sane.dependencies.braces
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz",$/;"	s	object:dependencies.jest-validate.dependencies.camelcase
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz",$/;"	s	object:dependencies.cli-table.dependencies.chalk
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.cli-table.dependencies.color-convert
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.cli-table.dependencies.color-name
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/cross-spawn\/-\/cross-spawn-6.0.5.tgz",$/;"	s	object:dependencies.execa.dependencies.cross-spawn
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/cssom\/-\/cssom-0.3.8.tgz",$/;"	s	object:dependencies.cssstyle.dependencies.cssom
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/date-format\/-\/date-format-2.1.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.date-format
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz",$/;"	s	object:dependencies.expand-brackets.dependencies.debug
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.debug
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.class-utils.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.expand-brackets.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.object-copy.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.snapdragon.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.static-extend.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.base.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.extglob.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/emoji-regex\/-\/emoji-regex-7.0.3.tgz",$/;"	s	object:dependencies.table.dependencies.emoji-regex
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-rege/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.escodegen.dependencies.estraverse
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.esquery.dependencies.estraverse
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/execa\/-\/execa-4.1.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.extglob.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.set-value.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/fill-range\/-\/fill-range-4.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.fill-range
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/flatted\/-\/flatted-3.1.1.tgz",$/;"	s	object:dependencies.flat-cache.dependencies.flatted
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/fs-extra\/-\/fs-extra-8.1.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/get-stream\/-\/get-stream-5.2.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/globals\/-\/globals-11.12.0.tgz",$/;"	s	object:dependencies.@babel/traverse.dependencies.globals
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz",$/;"	s	object:dependencies.cli-table.dependencies.has-flag
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-value\/-\/has-value-0.3.1.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-value
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-values\/-\/has-values-0.1.4.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-values
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-4.0.6.tgz",$/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-4.0.6.tgz",$/;"	s	object:dependencies.eslint.dependencies.ignore
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.base.dependencies.is-data-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.base.dependencies.is-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-1.0.1.tgz",$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-1.0.1.tgz",$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-co/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-3.0.0.tgz",$/;"	s	object:dependencies.has-values.dependencies.is-number
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-3.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.is-number
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-stream\/-\/is-stream-2.0.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/jest-cli\/-\/jest-cli-26.6.3.tgz",$/;"	s	object:dependencies.jest.dependencies.jest-cli
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-4.0.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-4.0.0.tgz",$/;"	s	object:dependencies.has-values.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-5.1.0.tgz",$/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/levn\/-\/levn-0.3.0.tgz",$/;"	s	object:dependencies.escodegen.dependencies.levn
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/micromatch\/-\/micromatch-3.1.10.tgz",$/;"	s	object:dependencies.sane.dependencies.micromatch
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/mkdirp\/-\/mkdirp-0.5.5.tgz",$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.ms
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/normalize-path\/-\/normalize-path-2.1.1.tgz/;"	s	object:dependencies.sane.dependencies.normalize-path
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/npm-run-path\/-\/npm-run-path-4.0.1.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/optionator\/-\/optionator-0.8.3.tgz",$/;"	s	object:dependencies.escodegen.dependencies.optionator
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-2.0.1.tgz",$/;"	s	object:dependencies.execa.dependencies.path-key
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-2.0.1.tgz",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/prelude-ls\/-\/prelude-ls-1.1.2.tgz",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-5.0.0.tgz",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-5.0.0.tgz",$/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-5.7.1.tgz",$/;"	s	object:dependencies.execa.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-5.7.1.tgz",$/;"	s	object:dependencies.normalize-package-data.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.@babel/core.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.make-dir.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-7.3.5.tgz",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/shebang-command\/-\/shebang-command-1.2.0.t/;"	s	object:dependencies.execa.dependencies.shebang-command
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/shebang-regex\/-\/shebang-regex-1.0.0.tgz",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.7.3.tgz",$/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-3.1.0.tgz",$/;"	s	object:dependencies.table.dependencies.string-width
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-5.2.0.tgz",$/;"	s	object:dependencies.table.dependencies.strip-ansi
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/strip-json-comments\/-\/strip-json-comments/;"	s	object:dependencies.rc.dependencies.strip-json-comments
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz/;"	s	object:dependencies.cli-table.dependencies.supports-color
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/to-regex-range\/-\/to-regex-range-2.1.1.tgz/;"	s	object:dependencies.sane.dependencies.to-regex-range
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/tslib\/-\/tslib-1.14.1.tgz",$/;"	s	object:dependencies.tsutils.dependencies.tslib
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-check\/-\/type-check-0.3.2.tgz",$/;"	s	object:dependencies.escodegen.dependencies.type-check
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.21.3.tgz",$/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.6.0.tgz",$/;"	s	object:dependencies.read-pkg.dependencies.type-fest
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-0.1.2.tgz",$/;"	s	object:dependencies.streamroller.dependencies.universalify
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-0.1.2.tgz",$/;"	s	object:dependencies.tough-cookie.dependencies.universalify
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-2.0.0.tgz",$/;"	s	object:dependencies.jsonfile.dependencies.universalify
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/uuid\/-\/uuid-8.3.2.tgz",$/;"	s	object:dependencies.node-notifier.dependencies.uuid
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-jsonrpc\/-\/vscode-jsonrpc-6.1.0-nex/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-protocol\/-\/vscode-l/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-types\/-\/vscode-lang/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/webidl-conversions\/-\/webidl-conversions-5/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/which\/-\/which-1.3.1.tgz",$/;"	s	object:dependencies.execa.dependencies.which
resolved	plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-20.2.7.tgz",$/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/code-frame\/-\/code-frame-7.12.13.tgz",$/;"	s	object:dependencies.@babel/code-frame
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/compat-data\/-\/compat-data-7.14.4.tgz"/;"	s	object:dependencies.@babel/compat-data
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/core\/-\/core-7.14.3.tgz",$/;"	s	object:dependencies.@babel/core
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/generator\/-\/generator-7.14.3.tgz",$/;"	s	object:dependencies.@babel/generator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-compilation-targets\/-\/helper-c/;"	s	object:dependencies.@babel/helper-compilation-targets
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-function-name\/-\/helper-functio/;"	s	object:dependencies.@babel/helper-function-name
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-get-function-arity\/-\/helper-ge/;"	s	object:dependencies.@babel/helper-get-function-arity
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-member-expression-to-functions\//;"	s	object:dependencies.@babel/helper-member-expression-to-functions
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-module-imports\/-\/helper-module/;"	s	object:dependencies.@babel/helper-module-imports
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-module-transforms\/-\/helper-mod/;"	s	object:dependencies.@babel/helper-module-transforms
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-optimise-call-expression\/-\/hel/;"	s	object:dependencies.@babel/helper-optimise-call-expression
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-plugin-utils\/-\/helper-plugin-u/;"	s	object:dependencies.@babel/helper-plugin-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-replace-supers\/-\/helper-replac/;"	s	object:dependencies.@babel/helper-replace-supers
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-simple-access\/-\/helper-simple-/;"	s	object:dependencies.@babel/helper-simple-access
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-split-export-declaration\/-\/hel/;"	s	object:dependencies.@babel/helper-split-export-declaration
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-validator-identifier\/-\/helper-/;"	s	object:dependencies.@babel/helper-validator-identifier
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-validator-option\/-\/helper-vali/;"	s	object:dependencies.@babel/helper-validator-option
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helpers\/-\/helpers-7.14.0.tgz",$/;"	s	object:dependencies.@babel/helpers
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/highlight\/-\/highlight-7.14.0.tgz",$/;"	s	object:dependencies.@babel/highlight
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/parser\/-\/parser-7.14.4.tgz",$/;"	s	object:dependencies.@babel/parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-async-generators\/-\/plug/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-bigint\/-\/plugin-syntax-/;"	s	object:dependencies.@babel/plugin-syntax-bigint
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-class-properties\/-\/plug/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-import-meta\/-\/plugin-sy/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-json-strings\/-\/plugin-s/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-logical-assignment-operat/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-nullish-coalescing-operat/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-numeric-separator\/-\/plu/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-object-rest-spread\/-\/pl/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-optional-catch-binding\/-/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-optional-chaining\/-\/plu/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-top-level-await\/-\/plugi/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/template\/-\/template-7.12.13.tgz",$/;"	s	object:dependencies.@babel/template
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/traverse\/-\/traverse-7.14.2.tgz",$/;"	s	object:dependencies.@babel/traverse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/types\/-\/types-7.14.4.tgz",$/;"	s	object:dependencies.@babel/types
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@bcoe\/v8-coverage\/-\/v8-coverage-0.2.3.tgz",$/;"	s	object:dependencies.@bcoe/v8-coverage
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@chemzqm\/neovim\/-\/neovim-5.2.12.tgz",$/;"	s	object:dependencies.@chemzqm/neovim
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@cnakazawa\/watch\/-\/watch-1.0.4.tgz",$/;"	s	object:dependencies.@cnakazawa/watch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@eslint\/eslintrc\/-\/eslintrc-0.2.2.tgz",$/;"	s	object:dependencies.@eslint/eslintrc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@istanbuljs\/load-nyc-config\/-\/load-nyc-confi/;"	s	object:dependencies.@istanbuljs/load-nyc-config
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@istanbuljs\/schema\/-\/schema-0.1.3.tgz",$/;"	s	object:dependencies.@istanbuljs/schema
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/console\/-\/console-26.6.2.tgz",$/;"	s	object:dependencies.@jest/console
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/core\/-\/core-26.6.3.tgz",$/;"	s	object:dependencies.@jest/core
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/environment\/-\/environment-26.6.2.tgz",$/;"	s	object:dependencies.@jest/environment
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/fake-timers\/-\/fake-timers-26.6.2.tgz",$/;"	s	object:dependencies.@jest/fake-timers
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/globals\/-\/globals-26.6.2.tgz",$/;"	s	object:dependencies.@jest/globals
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/reporters\/-\/reporters-26.6.2.tgz",$/;"	s	object:dependencies.@jest/reporters
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/source-map\/-\/source-map-26.6.2.tgz",$/;"	s	object:dependencies.@jest/source-map
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/test-result\/-\/test-result-26.6.2.tgz",$/;"	s	object:dependencies.@jest/test-result
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/test-sequencer\/-\/test-sequencer-26.6.3/;"	s	object:dependencies.@jest/test-sequencer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/transform\/-\/transform-26.6.2.tgz",$/;"	s	object:dependencies.@jest/transform
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/types\/-\/types-26.6.2.tgz",$/;"	s	object:dependencies.@jest/types
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.scandir\/-\/fs.scandir-2.1.5.tgz",$/;"	s	object:dependencies.@nodelib/fs.scandir
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.stat\/-\/fs.stat-2.0.5.tgz",$/;"	s	object:dependencies.@nodelib/fs.stat
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.walk\/-\/fs.walk-1.2.7.tgz",$/;"	s	object:dependencies.@nodelib/fs.walk
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@sinonjs\/commons\/-\/commons-1.8.3.tgz",$/;"	s	object:dependencies.@sinonjs/commons
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@sinonjs\/fake-timers\/-\/fake-timers-6.0.1.tgz/;"	s	object:dependencies.@sinonjs/fake-timers
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@tootallnate\/once\/-\/once-1.1.2.tgz",$/;"	s	object:dependencies.@tootallnate/once
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__core\/-\/babel__core-7.1.14.tgz"/;"	s	object:dependencies.@types/babel__core
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__generator\/-\/babel__generator-7/;"	s	object:dependencies.@types/babel__generator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__template\/-\/babel__template-7.4/;"	s	object:dependencies.@types/babel__template
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__traverse\/-\/babel__traverse-7.1/;"	s	object:dependencies.@types/babel__traverse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/cli-table\/-\/cli-table-0.3.0.tgz",$/;"	s	object:dependencies.@types/cli-table
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/debounce\/-\/debounce-3.0.0.tgz",$/;"	s	object:dependencies.@types/debounce
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/events\/-\/events-3.0.0.tgz",$/;"	s	object:dependencies.@types/events
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/fb-watchman\/-\/fb-watchman-2.0.0.tgz",$/;"	s	object:dependencies.@types/fb-watchman
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/fs-extra\/-\/fs-extra-9.0.6.tgz",$/;"	s	object:dependencies.@types/fs-extra
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/glob\/-\/glob-7.1.3.tgz",$/;"	s	object:dependencies.@types/glob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/graceful-fs\/-\/graceful-fs-4.1.5.tgz",$/;"	s	object:dependencies.@types/graceful-fs
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-lib-coverage\/-\/istanbul-lib-/;"	s	object:dependencies.@types/istanbul-lib-coverage
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-lib-report\/-\/istanbul-lib-re/;"	s	object:dependencies.@types/istanbul-lib-report
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-reports\/-\/istanbul-reports-3/;"	s	object:dependencies.@types/istanbul-reports
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/jest\/-\/jest-26.0.18.tgz",$/;"	s	object:dependencies.@types/jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/json-schema\/-\/json-schema-7.0.7.tgz",$/;"	s	object:dependencies.@types/json-schema
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/marked\/-\/marked-1.2.1.tgz",$/;"	s	object:dependencies.@types/marked
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/minimatch\/-\/minimatch-3.0.3.tgz",$/;"	s	object:dependencies.@types/minimatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/minipass\/-\/minipass-2.2.0.tgz",$/;"	s	object:dependencies.@types/minipass
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/mkdirp\/-\/mkdirp-1.0.1.tgz",$/;"	s	object:dependencies.@types/mkdirp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/node\/-\/node-10.17.35.tgz",$/;"	s	object:dependencies.@types/node
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/normalize-package-data\/-\/normalize-pa/;"	s	object:dependencies.@types/normalize-package-data
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/prettier\/-\/prettier-2.2.3.tgz",$/;"	s	object:dependencies.@types/prettier
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/semver\/-\/semver-7.3.4.tgz",$/;"	s	object:dependencies.@types/semver
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/stack-utils\/-\/stack-utils-2.0.0.tgz",$/;"	s	object:dependencies.@types/stack-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/tar\/-\/tar-4.0.4.tgz",$/;"	s	object:dependencies.@types/tar
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/uuid\/-\/uuid-8.3.0.tgz",$/;"	s	object:dependencies.@types/uuid
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/which\/-\/which-1.3.2.tgz",$/;"	s	object:dependencies.@types/which
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/yargs-parser\/-\/yargs-parser-20.2.0.tg/;"	s	object:dependencies.@types/yargs-parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/yargs\/-\/yargs-15.0.13.tgz",$/;"	s	object:dependencies.@types/yargs
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/eslint-plugin\/-\/eslint-pl/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/experimental-utils\/-\/expe/;"	s	object:dependencies.@typescript-eslint/experimental-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/parser\/-\/parser-4.11.1.tg/;"	s	object:dependencies.@typescript-eslint/parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/scope-manager\/-\/scope-man/;"	s	object:dependencies.@typescript-eslint/scope-manager
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/types\/-\/types-4.11.1.tgz"/;"	s	object:dependencies.@typescript-eslint/types
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/typescript-estree\/-\/types/;"	s	object:dependencies.@typescript-eslint/typescript-estree
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/visitor-keys\/-\/visitor-ke/;"	s	object:dependencies.@typescript-eslint/visitor-keys
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/abab\/-\/abab-2.0.5.tgz",$/;"	s	object:dependencies.abab
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-globals\/-\/acorn-globals-6.0.0.tgz",$/;"	s	object:dependencies.acorn-globals
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-jsx\/-\/acorn-jsx-5.3.1.tgz",$/;"	s	object:dependencies.acorn-jsx
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-walk\/-\/acorn-walk-7.2.0.tgz",$/;"	s	object:dependencies.acorn-walk
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-7.4.1.tgz",$/;"	s	object:dependencies.acorn
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/agent-base\/-\/agent-base-6.0.2.tgz",$/;"	s	object:dependencies.agent-base
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.12.6.tgz",$/;"	s	object:dependencies.ajv
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-colors\/-\/ansi-colors-4.1.1.tgz",$/;"	s	object:dependencies.ansi-colors
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-escapes\/-\/ansi-escapes-4.3.2.tgz",$/;"	s	object:dependencies.ansi-escapes
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz",$/;"	s	object:dependencies.ansi-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-5.0.0.tgz",$/;"	s	object:dependencies.ansi-styles
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/anymatch\/-\/anymatch-3.1.2.tgz",$/;"	s	object:dependencies.anymatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/argparse\/-\/argparse-1.0.10.tgz",$/;"	s	object:dependencies.argparse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-diff\/-\/arr-diff-4.0.0.tgz",$/;"	s	object:dependencies.arr-diff
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-flatten\/-\/arr-flatten-1.1.0.tgz",$/;"	s	object:dependencies.arr-flatten
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-union\/-\/arr-union-3.1.0.tgz",$/;"	s	object:dependencies.arr-union
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-union\/-\/array-union-2.1.0.tgz",$/;"	s	object:dependencies.array-union
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-unique\/-\/array-unique-0.3.2.tgz",$/;"	s	object:dependencies.array-unique
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/assign-symbols\/-\/assign-symbols-1.0.0.tgz",$/;"	s	object:dependencies.assign-symbols
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/astral-regex\/-\/astral-regex-1.0.0.tgz",$/;"	s	object:dependencies.astral-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/asynckit\/-\/asynckit-0.4.0.tgz",$/;"	s	object:dependencies.asynckit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/at-least-node\/-\/at-least-node-1.0.0.tgz",$/;"	s	object:dependencies.at-least-node
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/atob\/-\/atob-2.1.2.tgz",$/;"	s	object:dependencies.atob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-jest\/-\/babel-jest-26.6.3.tgz",$/;"	s	object:dependencies.babel-jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-plugin-istanbul\/-\/babel-plugin-istanbul/;"	s	object:dependencies.babel-plugin-istanbul
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-plugin-jest-hoist\/-\/babel-plugin-jest-h/;"	s	object:dependencies.babel-plugin-jest-hoist
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-preset-current-node-syntax\/-\/babel-pres/;"	s	object:dependencies.babel-preset-current-node-syntax
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-preset-jest\/-\/babel-preset-jest-26.6.2./;"	s	object:dependencies.babel-preset-jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-1.0.2.tgz",$/;"	s	object:dependencies.balanced-match
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/base\/-\/base-0.11.2.tgz",$/;"	s	object:dependencies.base
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/binary-extensions\/-\/binary-extensions-2.2.0.t/;"	s	object:dependencies.binary-extensions
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/binary\/-\/binary-0.3.0.tgz",$/;"	s	object:dependencies.binary
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.11.tgz"/;"	s	object:dependencies.brace-expansion
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/braces\/-\/braces-3.0.2.tgz",$/;"	s	object:dependencies.braces
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/browser-process-hrtime\/-\/browser-process-hrti/;"	s	object:dependencies.browser-process-hrtime
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/browserslist\/-\/browserslist-4.16.6.tgz",$/;"	s	object:dependencies.browserslist
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bs-logger\/-\/bs-logger-0.2.6.tgz",$/;"	s	object:dependencies.bs-logger
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bser\/-\/bser-2.1.1.tgz",$/;"	s	object:dependencies.bser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/buffer-from\/-\/buffer-from-1.1.1.tgz",$/;"	s	object:dependencies.buffer-from
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/buffers\/-\/buffers-0.1.1.tgz",$/;"	s	object:dependencies.buffers
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bytes\/-\/bytes-3.1.0.tgz",$/;"	s	object:dependencies.bytes
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cache-base\/-\/cache-base-1.0.1.tgz",$/;"	s	object:dependencies.cache-base
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/call-bind\/-\/call-bind-1.0.2.tgz",$/;"	s	object:dependencies.call-bind
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/callsites\/-\/callsites-3.1.0.tgz",$/;"	s	object:dependencies.callsites
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-5.3.1.tgz",$/;"	s	object:dependencies.camelcase
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/caniuse-lite\/-\/caniuse-lite-1.0.30001235.tgz"/;"	s	object:dependencies.caniuse-lite
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/capture-exit\/-\/capture-exit-2.0.0.tgz",$/;"	s	object:dependencies.capture-exit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chainsaw\/-\/chainsaw-0.1.0.tgz",$/;"	s	object:dependencies.chainsaw
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz",$/;"	s	object:dependencies.chalk
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/char-regex\/-\/char-regex-1.0.2.tgz",$/;"	s	object:dependencies.char-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chokidar\/-\/chokidar-3.4.3.tgz",$/;"	s	object:dependencies.chokidar
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chownr\/-\/chownr-2.0.0.tgz",$/;"	s	object:dependencies.chownr
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ci-info\/-\/ci-info-2.0.0.tgz",$/;"	s	object:dependencies.ci-info
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cjs-module-lexer\/-\/cjs-module-lexer-0.6.0.tgz/;"	s	object:dependencies.cjs-module-lexer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/class-utils\/-\/class-utils-0.3.6.tgz",$/;"	s	object:dependencies.class-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cli-table\/-\/cli-table-0.3.4.tgz",$/;"	s	object:dependencies.cli-table
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cliui\/-\/cliui-6.0.0.tgz",$/;"	s	object:dependencies.cliui
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/co\/-\/co-4.6.0.tgz",$/;"	s	object:dependencies.co
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/collect-v8-coverage\/-\/collect-v8-coverage-1.0/;"	s	object:dependencies.collect-v8-coverage
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/collection-visit\/-\/collection-visit-1.0.0.tgz/;"	s	object:dependencies.collection-visit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz",$/;"	s	object:dependencies.color-convert
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz",$/;"	s	object:dependencies.color-name
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/colorette\/-\/colorette-1.2.2.tgz",$/;"	s	object:dependencies.colorette
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/colors\/-\/colors-1.4.0.tgz",$/;"	s	object:dependencies.colors
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.8.tgz",$/;"	s	object:dependencies.combined-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/comment-parser\/-\/comment-parser-0.7.6.tgz",$/;"	s	object:dependencies.comment-parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/component-emitter\/-\/component-emitter-1.3.0.t/;"	s	object:dependencies.component-emitter
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/concat-map\/-\/concat-map-0.0.1.tgz",$/;"	s	object:dependencies.concat-map
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/content-disposition\/-\/content-disposition-0.5/;"	s	object:dependencies.content-disposition
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/convert-source-map\/-\/convert-source-map-1.7.0/;"	s	object:dependencies.convert-source-map
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/copy-descriptor\/-\/copy-descriptor-0.1.1.tgz",$/;"	s	object:dependencies.copy-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cross-spawn\/-\/cross-spawn-7.0.3.tgz",$/;"	s	object:dependencies.cross-spawn
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cssom\/-\/cssom-0.4.4.tgz",$/;"	s	object:dependencies.cssom
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cssstyle\/-\/cssstyle-2.3.0.tgz",$/;"	s	object:dependencies.cssstyle
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/data-urls\/-\/data-urls-2.0.0.tgz",$/;"	s	object:dependencies.data-urls
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/date-format\/-\/date-format-3.0.0.tgz",$/;"	s	object:dependencies.date-format
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/debounce\/-\/debounce-1.2.0.tgz",$/;"	s	object:dependencies.debounce
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-4.1.1.tgz",$/;"	s	object:dependencies.debug
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-1.2.0.tgz",$/;"	s	object:dependencies.decamelize
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decimal.js\/-\/decimal.js-10.2.1.tgz",$/;"	s	object:dependencies.decimal.js
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decode-uri-component\/-\/decode-uri-component-0/;"	s	object:dependencies.decode-uri-component
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decompress-response\/-\/decompress-response-6.0/;"	s	object:dependencies.decompress-response
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deep-extend\/-\/deep-extend-0.6.0.tgz",$/;"	s	object:dependencies.deep-extend
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deep-is\/-\/deep-is-0.1.3.tgz",$/;"	s	object:dependencies.deep-is
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deepmerge\/-\/deepmerge-4.2.2.tgz",$/;"	s	object:dependencies.deepmerge
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/define-properties\/-\/define-properties-1.1.3.t/;"	s	object:dependencies.define-properties
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-2.0.2.tgz",$/;"	s	object:dependencies.define-property
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/delayed-stream\/-\/delayed-stream-1.0.0.tgz",$/;"	s	object:dependencies.delayed-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/detect-newline\/-\/detect-newline-3.1.0.tgz",$/;"	s	object:dependencies.detect-newline
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/diff-sequences\/-\/diff-sequences-26.6.2.tgz",$/;"	s	object:dependencies.diff-sequences
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/dir-glob\/-\/dir-glob-3.0.1.tgz",$/;"	s	object:dependencies.dir-glob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/doctrine\/-\/doctrine-3.0.0.tgz",$/;"	s	object:dependencies.doctrine
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/domexception\/-\/domexception-2.0.1.tgz",$/;"	s	object:dependencies.domexception
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/electron-to-chromium\/-\/electron-to-chromium-1/;"	s	object:dependencies.electron-to-chromium
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/emittery\/-\/emittery-0.7.2.tgz",$/;"	s	object:dependencies.emittery
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/emoji-regex\/-\/emoji-regex-8.0.0.tgz",$/;"	s	object:dependencies.emoji-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/end-of-stream\/-\/end-of-stream-1.4.4.tgz",$/;"	s	object:dependencies.end-of-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/enquirer\/-\/enquirer-2.3.6.tgz",$/;"	s	object:dependencies.enquirer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/error-ex\/-\/error-ex-1.3.2.tgz",$/;"	s	object:dependencies.error-ex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es-abstract\/-\/es-abstract-1.18.3.tgz",$/;"	s	object:dependencies.es-abstract
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es-to-primitive\/-\/es-to-primitive-1.2.1.tgz",$/;"	s	object:dependencies.es-to-primitive
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.7.tgz",$/;"	s	object:dependencies.esbuild
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escalade\/-\/escalade-3.1.1.tgz",$/;"	s	object:dependencies.escalade
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1/;"	s	object:dependencies.escape-string-regexp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escodegen\/-\/escodegen-2.0.0.tgz",$/;"	s	object:dependencies.escodegen
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-plugin-jest\/-\/eslint-plugin-jest-24.1./;"	s	object:dependencies.eslint-plugin-jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-plugin-jsdoc\/-\/eslint-plugin-jsdoc-30./;"	s	object:dependencies.eslint-plugin-jsdoc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-scope\/-\/eslint-scope-5.1.1.tgz",$/;"	s	object:dependencies.eslint-scope
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-utils\/-\/eslint-utils-2.1.0.tgz",$/;"	s	object:dependencies.eslint-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys-2.1/;"	s	object:dependencies.eslint-visitor-keys
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint\/-\/eslint-7.15.0.tgz",$/;"	s	object:dependencies.eslint
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/espree\/-\/espree-7.3.1.tgz",$/;"	s	object:dependencies.espree
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esprima\/-\/esprima-4.0.1.tgz",$/;"	s	object:dependencies.esprima
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esquery\/-\/esquery-1.4.0.tgz",$/;"	s	object:dependencies.esquery
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esrecurse\/-\/esrecurse-4.3.0.tgz",$/;"	s	object:dependencies.esrecurse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-4.3.0.tgz",$/;"	s	object:dependencies.estraverse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esutils\/-\/esutils-2.0.3.tgz",$/;"	s	object:dependencies.esutils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/event-lite\/-\/event-lite-0.1.2.tgz",$/;"	s	object:dependencies.event-lite
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exec-sh\/-\/exec-sh-0.3.6.tgz",$/;"	s	object:dependencies.exec-sh
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/execa\/-\/execa-1.0.0.tgz",$/;"	s	object:dependencies.execa
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exit\/-\/exit-0.1.2.tgz",$/;"	s	object:dependencies.exit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/expand-brackets\/-\/expand-brackets-2.1.4.tgz",$/;"	s	object:dependencies.expand-brackets
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/expect\/-\/expect-26.6.2.tgz",$/;"	s	object:dependencies.expect
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-3.0.2.tgz",$/;"	s	object:dependencies.extend-shallow
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/extglob\/-\/extglob-2.0.4.tgz",$/;"	s	object:dependencies.extglob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-3.1.3.tgz",$/;"	s	object:dependencies.fast-deep-equal
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-diff\/-\/fast-diff-1.2.0.tgz",$/;"	s	object:dependencies.fast-diff
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-glob\/-\/fast-glob-3.2.5.tgz",$/;"	s	object:dependencies.fast-glob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable/;"	s	object:dependencies.fast-json-stable-stringify
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-levenshtein\/-\/fast-levenshtein-2.0.6.tgz/;"	s	object:dependencies.fast-levenshtein
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fastq\/-\/fastq-1.11.0.tgz",$/;"	s	object:dependencies.fastq
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fb-watchman\/-\/fb-watchman-2.0.1.tgz",$/;"	s	object:dependencies.fb-watchman
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/file-entry-cache\/-\/file-entry-cache-6.0.1.tgz/;"	s	object:dependencies.file-entry-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fill-range\/-\/fill-range-7.0.1.tgz",$/;"	s	object:dependencies.fill-range
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/find-up\/-\/find-up-4.1.0.tgz",$/;"	s	object:dependencies.find-up
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/flat-cache\/-\/flat-cache-3.0.4.tgz",$/;"	s	object:dependencies.flat-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/flatted\/-\/flatted-2.0.2.tgz",$/;"	s	object:dependencies.flatted
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/follow-redirects\/-\/follow-redirects-1.13.0.tg/;"	s	object:dependencies.follow-redirects
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/for-in\/-\/for-in-1.0.2.tgz",$/;"	s	object:dependencies.for-in
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/form-data\/-\/form-data-3.0.1.tgz",$/;"	s	object:dependencies.form-data
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fragment-cache\/-\/fragment-cache-0.2.1.tgz",$/;"	s	object:dependencies.fragment-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs-extra\/-\/fs-extra-9.0.1.tgz",$/;"	s	object:dependencies.fs-extra
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs-minipass\/-\/fs-minipass-2.1.0.tgz",$/;"	s	object:dependencies.fs-minipass
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs.realpath\/-\/fs.realpath-1.0.0.tgz",$/;"	s	object:dependencies.fs.realpath
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fsevents\/-\/fsevents-2.1.3.tgz",$/;"	s	object:dependencies.fsevents
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/function-bind\/-\/function-bind-1.1.1.tgz",$/;"	s	object:dependencies.function-bind
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/functional-red-black-tree\/-\/functional-red-bl/;"	s	object:dependencies.functional-red-black-tree
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/gensync\/-\/gensync-1.0.0-beta.2.tgz",$/;"	s	object:dependencies.gensync
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-caller-file\/-\/get-caller-file-2.0.5.tgz",$/;"	s	object:dependencies.get-caller-file
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-intrinsic\/-\/get-intrinsic-1.1.1.tgz",$/;"	s	object:dependencies.get-intrinsic
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-package-type\/-\/get-package-type-0.1.0.tgz/;"	s	object:dependencies.get-package-type
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-stream\/-\/get-stream-4.1.0.tgz",$/;"	s	object:dependencies.get-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-value\/-\/get-value-2.0.6.tgz",$/;"	s	object:dependencies.get-value
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/glob-parent\/-\/glob-parent-5.1.2.tgz",$/;"	s	object:dependencies.glob-parent
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/glob\/-\/glob-7.1.6.tgz",$/;"	s	object:dependencies.glob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globals\/-\/globals-12.4.0.tgz",$/;"	s	object:dependencies.globals
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globby\/-\/globby-11.0.3.tgz",$/;"	s	object:dependencies.globby
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.2.4.tgz",$/;"	s	object:dependencies.graceful-fs
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/growly\/-\/growly-1.3.0.tgz",$/;"	s	object:dependencies.growly
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-bigints\/-\/has-bigints-1.0.1.tgz",$/;"	s	object:dependencies.has-bigints
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz",$/;"	s	object:dependencies.has-flag
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-symbols\/-\/has-symbols-1.0.2.tgz",$/;"	s	object:dependencies.has-symbols
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-value\/-\/has-value-1.0.0.tgz",$/;"	s	object:dependencies.has-value
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-values\/-\/has-values-1.0.0.tgz",$/;"	s	object:dependencies.has-values
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has\/-\/has-1.0.3.tgz",$/;"	s	object:dependencies.has
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/hosted-git-info\/-\/hosted-git-info-2.8.9.tgz",$/;"	s	object:dependencies.hosted-git-info
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/html-encoding-sniffer\/-\/html-encoding-sniffer/;"	s	object:dependencies.html-encoding-sniffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/html-escaper\/-\/html-escaper-2.0.2.tgz",$/;"	s	object:dependencies.html-escaper
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/http-proxy-agent\/-\/http-proxy-agent-4.0.1.tgz/;"	s	object:dependencies.http-proxy-agent
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/https-proxy-agent\/-\/https-proxy-agent-5.0.0.t/;"	s	object:dependencies.https-proxy-agent
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/human-signals\/-\/human-signals-1.1.1.tgz",$/;"	s	object:dependencies.human-signals
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/iconv-lite\/-\/iconv-lite-0.4.24.tgz",$/;"	s	object:dependencies.iconv-lite
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ieee754\/-\/ieee754-1.2.1.tgz",$/;"	s	object:dependencies.ieee754
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-5.1.8.tgz",$/;"	s	object:dependencies.ignore
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/import-fresh\/-\/import-fresh-3.3.0.tgz",$/;"	s	object:dependencies.import-fresh
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/import-local\/-\/import-local-3.0.2.tgz",$/;"	s	object:dependencies.import-local
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/imurmurhash\/-\/imurmurhash-0.1.4.tgz",$/;"	s	object:dependencies.imurmurhash
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inflight\/-\/inflight-1.0.6.tgz",$/;"	s	object:dependencies.inflight
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz",$/;"	s	object:dependencies.inherits
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ini\/-\/ini-1.3.8.tgz",$/;"	s	object:dependencies.ini
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/int64-buffer\/-\/int64-buffer-0.1.10.tgz",$/;"	s	object:dependencies.int64-buffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/internal-slot\/-\/internal-slot-1.0.3.tgz",$/;"	s	object:dependencies.internal-slot
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-descript/;"	s	object:dependencies.is-accessor-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-arrayish\/-\/is-arrayish-0.2.1.tgz",$/;"	s	object:dependencies.is-arrayish
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-bigint\/-\/is-bigint-1.0.2.tgz",$/;"	s	object:dependencies.is-bigint
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-binary-path\/-\/is-binary-path-2.1.0.tgz",$/;"	s	object:dependencies.is-binary-path
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-boolean-object\/-\/is-boolean-object-1.1.1.t/;"	s	object:dependencies.is-boolean-object
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-buffer\/-\/is-buffer-1.1.6.tgz",$/;"	s	object:dependencies.is-buffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-callable\/-\/is-callable-1.2.3.tgz",$/;"	s	object:dependencies.is-callable
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-ci\/-\/is-ci-2.0.0.tgz",$/;"	s	object:dependencies.is-ci
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-core-module\/-\/is-core-module-2.4.0.tgz",$/;"	s	object:dependencies.is-core-module
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-0.1.4/;"	s	object:dependencies.is-data-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-date-object\/-\/is-date-object-1.0.4.tgz",$/;"	s	object:dependencies.is-date-object
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-0.1.6.tgz",$/;"	s	object:dependencies.is-descriptor
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-docker\/-\/is-docker-2.2.1.tgz",$/;"	s	object:dependencies.is-docker
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-0.1.1.tgz",$/;"	s	object:dependencies.is-extendable
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-extglob\/-\/is-extglob-2.1.1.tgz",$/;"	s	object:dependencies.is-extglob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-p/;"	s	object:dependencies.is-fullwidth-code-point
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-generator-fn\/-\/is-generator-fn-2.1.0.tgz",$/;"	s	object:dependencies.is-generator-fn
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-glob\/-\/is-glob-4.0.1.tgz",$/;"	s	object:dependencies.is-glob
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-negative-zero\/-\/is-negative-zero-2.0.1.tgz/;"	s	object:dependencies.is-negative-zero
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-number-object\/-\/is-number-object-1.0.5.tgz/;"	s	object:dependencies.is-number-object
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-7.0.0.tgz",$/;"	s	object:dependencies.is-number
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-plain-object\/-\/is-plain-object-2.0.4.tgz",$/;"	s	object:dependencies.is-plain-object
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-potential-custom-element-name\/-\/is-potenti/;"	s	object:dependencies.is-potential-custom-element-name
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-regex\/-\/is-regex-1.1.3.tgz",$/;"	s	object:dependencies.is-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-stream\/-\/is-stream-1.1.0.tgz",$/;"	s	object:dependencies.is-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-string\/-\/is-string-1.0.6.tgz",$/;"	s	object:dependencies.is-string
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-symbol\/-\/is-symbol-1.0.4.tgz",$/;"	s	object:dependencies.is-symbol
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-typedarray\/-\/is-typedarray-1.0.0.tgz",$/;"	s	object:dependencies.is-typedarray
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-windows\/-\/is-windows-1.0.2.tgz",$/;"	s	object:dependencies.is-windows
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-wsl\/-\/is-wsl-2.2.0.tgz",$/;"	s	object:dependencies.is-wsl
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isarray\/-\/isarray-1.0.0.tgz",$/;"	s	object:dependencies.isarray
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isexe\/-\/isexe-2.0.0.tgz",$/;"	s	object:dependencies.isexe
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isobject\/-\/isobject-3.0.1.tgz",$/;"	s	object:dependencies.isobject
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-coverage\/-\/istanbul-lib-coverage/;"	s	object:dependencies.istanbul-lib-coverage
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-instrument\/-\/istanbul-lib-instru/;"	s	object:dependencies.istanbul-lib-instrument
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-report\/-\/istanbul-lib-report-3.0/;"	s	object:dependencies.istanbul-lib-report
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-source-maps\/-\/istanbul-lib-sourc/;"	s	object:dependencies.istanbul-lib-source-maps
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-reports\/-\/istanbul-reports-3.0.2.tgz/;"	s	object:dependencies.istanbul-reports
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isuri\/-\/isuri-2.0.3.tgz",$/;"	s	object:dependencies.isuri
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-changed-files\/-\/jest-changed-files-26.6./;"	s	object:dependencies.jest-changed-files
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-config\/-\/jest-config-26.6.3.tgz",$/;"	s	object:dependencies.jest-config
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-diff\/-\/jest-diff-26.6.2.tgz",$/;"	s	object:dependencies.jest-diff
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-docblock\/-\/jest-docblock-26.0.0.tgz",$/;"	s	object:dependencies.jest-docblock
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-each\/-\/jest-each-26.6.2.tgz",$/;"	s	object:dependencies.jest-each
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-environment-jsdom\/-\/jest-environment-jsd/;"	s	object:dependencies.jest-environment-jsdom
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-environment-node\/-\/jest-environment-node/;"	s	object:dependencies.jest-environment-node
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-get-type\/-\/jest-get-type-26.3.0.tgz",$/;"	s	object:dependencies.jest-get-type
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-haste-map\/-\/jest-haste-map-26.6.2.tgz",$/;"	s	object:dependencies.jest-haste-map
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-jasmine2\/-\/jest-jasmine2-26.6.3.tgz",$/;"	s	object:dependencies.jest-jasmine2
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-leak-detector\/-\/jest-leak-detector-26.6./;"	s	object:dependencies.jest-leak-detector
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-matcher-utils\/-\/jest-matcher-utils-26.6./;"	s	object:dependencies.jest-matcher-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-message-util\/-\/jest-message-util-26.6.2./;"	s	object:dependencies.jest-message-util
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-mock\/-\/jest-mock-26.6.2.tgz",$/;"	s	object:dependencies.jest-mock
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-pnp-resolver\/-\/jest-pnp-resolver-1.2.2.t/;"	s	object:dependencies.jest-pnp-resolver
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-regex-util\/-\/jest-regex-util-26.0.0.tgz"/;"	s	object:dependencies.jest-regex-util
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-resolve-dependencies\/-\/jest-resolve-depe/;"	s	object:dependencies.jest-resolve-dependencies
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-resolve\/-\/jest-resolve-26.6.2.tgz",$/;"	s	object:dependencies.jest-resolve
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-runner\/-\/jest-runner-26.6.3.tgz",$/;"	s	object:dependencies.jest-runner
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-runtime\/-\/jest-runtime-26.6.3.tgz",$/;"	s	object:dependencies.jest-runtime
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-serializer\/-\/jest-serializer-26.6.2.tgz"/;"	s	object:dependencies.jest-serializer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-snapshot\/-\/jest-snapshot-26.6.2.tgz",$/;"	s	object:dependencies.jest-snapshot
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-util\/-\/jest-util-26.6.2.tgz",$/;"	s	object:dependencies.jest-util
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-validate\/-\/jest-validate-26.6.2.tgz",$/;"	s	object:dependencies.jest-validate
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-watcher\/-\/jest-watcher-26.6.2.tgz",$/;"	s	object:dependencies.jest-watcher
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-worker\/-\/jest-worker-26.6.2.tgz",$/;"	s	object:dependencies.jest-worker
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest\/-\/jest-26.6.3.tgz",$/;"	s	object:dependencies.jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/js-tokens\/-\/js-tokens-4.0.0.tgz",$/;"	s	object:dependencies.js-tokens
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-3.14.1.tgz",$/;"	s	object:dependencies.js-yaml
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsdoctypeparser\/-\/jsdoctypeparser-9.0.0.tgz",$/;"	s	object:dependencies.jsdoctypeparser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsdom\/-\/jsdom-16.6.0.tgz",$/;"	s	object:dependencies.jsdom
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsesc\/-\/jsesc-2.5.2.tgz",$/;"	s	object:dependencies.jsesc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-parse-even-better-errors\/-\/json-parse-ev/;"	s	object:dependencies.json-parse-even-better-errors
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-schema-traverse\/-\/json-schema-traverse-0/;"	s	object:dependencies.json-schema-traverse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-stable-stringify-without-jsonify\/-\/json-/;"	s	object:dependencies.json-stable-stringify-without-jsonify
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json5\/-\/json5-2.2.0.tgz",$/;"	s	object:dependencies.json5
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonc-parser\/-\/jsonc-parser-2.3.1.tgz",$/;"	s	object:dependencies.jsonc-parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-6.1.0.tgz",$/;"	s	object:dependencies.jsonfile
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-6.0.3.tgz",$/;"	s	object:dependencies.kind-of
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/kleur\/-\/kleur-3.0.3.tgz",$/;"	s	object:dependencies.kleur
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/leven\/-\/leven-3.1.0.tgz",$/;"	s	object:dependencies.leven
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/levn\/-\/levn-0.4.1.tgz",$/;"	s	object:dependencies.levn
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lines-and-columns\/-\/lines-and-columns-1.1.6.t/;"	s	object:dependencies.lines-and-columns
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/locate-path\/-\/locate-path-5.0.0.tgz",$/;"	s	object:dependencies.locate-path
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lodash.memoize\/-\/lodash.memoize-4.1.2.tgz",$/;"	s	object:dependencies.lodash.memoize
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lodash\/-\/lodash-4.17.21.tgz",$/;"	s	object:dependencies.lodash
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/log4js\/-\/log4js-6.3.0.tgz",$/;"	s	object:dependencies.log4js
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lru-cache\/-\/lru-cache-6.0.0.tgz",$/;"	s	object:dependencies.lru-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/make-dir\/-\/make-dir-3.1.0.tgz",$/;"	s	object:dependencies.make-dir
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/make-error\/-\/make-error-1.3.6.tgz",$/;"	s	object:dependencies.make-error
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/makeerror\/-\/makeerror-1.0.11.tgz",$/;"	s	object:dependencies.makeerror
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/map-cache\/-\/map-cache-0.2.2.tgz",$/;"	s	object:dependencies.map-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/map-visit\/-\/map-visit-1.0.0.tgz",$/;"	s	object:dependencies.map-visit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/marked\/-\/marked-1.2.5.tgz",$/;"	s	object:dependencies.marked
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/merge-stream\/-\/merge-stream-2.0.0.tgz",$/;"	s	object:dependencies.merge-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/merge2\/-\/merge2-1.4.1.tgz",$/;"	s	object:dependencies.merge2
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/micromatch\/-\/micromatch-4.0.4.tgz",$/;"	s	object:dependencies.micromatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.48.0.tgz",$/;"	s	object:dependencies.mime-db
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.31.tgz",$/;"	s	object:dependencies.mime-types
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mimic-fn\/-\/mimic-fn-2.1.0.tgz",$/;"	s	object:dependencies.mimic-fn
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mimic-response\/-\/mimic-response-3.1.0.tgz",$/;"	s	object:dependencies.mimic-response
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimatch\/-\/minimatch-3.0.4.tgz",$/;"	s	object:dependencies.minimatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimist\/-\/minimist-1.2.5.tgz",$/;"	s	object:dependencies.minimist
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minipass\/-\/minipass-3.1.3.tgz",$/;"	s	object:dependencies.minipass
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minizlib\/-\/minizlib-2.1.2.tgz",$/;"	s	object:dependencies.minizlib
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mixin-deep\/-\/mixin-deep-1.3.2.tgz",$/;"	s	object:dependencies.mixin-deep
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mkdirp\/-\/mkdirp-1.0.4.tgz",$/;"	s	object:dependencies.mkdirp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz",$/;"	s	object:dependencies.ms
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/msgpack-lite\/-\/msgpack-lite-0.1.26.tgz",$/;"	s	object:dependencies.msgpack-lite
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nanomatch\/-\/nanomatch-1.2.13.tgz",$/;"	s	object:dependencies.nanomatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/natural-compare\/-\/natural-compare-1.4.0.tgz",$/;"	s	object:dependencies.natural-compare
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nice-try\/-\/nice-try-1.0.5.tgz",$/;"	s	object:dependencies.nice-try
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-int64\/-\/node-int64-0.4.0.tgz",$/;"	s	object:dependencies.node-int64
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-modules-regexp\/-\/node-modules-regexp-1.0/;"	s	object:dependencies.node-modules-regexp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-notifier\/-\/node-notifier-8.0.2.tgz",$/;"	s	object:dependencies.node-notifier
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-releases\/-\/node-releases-1.1.73.tgz",$/;"	s	object:dependencies.node-releases
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/normalize-package-data\/-\/normalize-package-da/;"	s	object:dependencies.normalize-package-data
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/normalize-path\/-\/normalize-path-3.0.0.tgz",$/;"	s	object:dependencies.normalize-path
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/npm-run-path\/-\/npm-run-path-2.0.2.tgz",$/;"	s	object:dependencies.npm-run-path
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nwsapi\/-\/nwsapi-2.2.0.tgz",$/;"	s	object:dependencies.nwsapi
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-copy\/-\/object-copy-0.1.0.tgz",$/;"	s	object:dependencies.object-copy
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-inspect\/-\/object-inspect-1.10.3.tgz",$/;"	s	object:dependencies.object-inspect
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-keys\/-\/object-keys-1.1.1.tgz",$/;"	s	object:dependencies.object-keys
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-visit\/-\/object-visit-1.0.1.tgz",$/;"	s	object:dependencies.object-visit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object.assign\/-\/object.assign-4.1.2.tgz",$/;"	s	object:dependencies.object.assign
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object.pick\/-\/object.pick-1.3.0.tgz",$/;"	s	object:dependencies.object.pick
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/once\/-\/once-1.4.0.tgz",$/;"	s	object:dependencies.once
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/onetime\/-\/onetime-5.1.2.tgz",$/;"	s	object:dependencies.onetime
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/optionator\/-\/optionator-0.9.1.tgz",$/;"	s	object:dependencies.optionator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-each-series\/-\/p-each-series-2.2.0.tgz",$/;"	s	object:dependencies.p-each-series
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-finally\/-\/p-finally-1.0.0.tgz",$/;"	s	object:dependencies.p-finally
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-limit\/-\/p-limit-2.3.0.tgz",$/;"	s	object:dependencies.p-limit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-locate\/-\/p-locate-4.1.0.tgz",$/;"	s	object:dependencies.p-locate
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-try\/-\/p-try-2.2.0.tgz",$/;"	s	object:dependencies.p-try
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parent-module\/-\/parent-module-1.0.1.tgz",$/;"	s	object:dependencies.parent-module
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parse-json\/-\/parse-json-5.2.0.tgz",$/;"	s	object:dependencies.parse-json
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parse5\/-\/parse5-6.0.1.tgz",$/;"	s	object:dependencies.parse5
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pascalcase\/-\/pascalcase-0.1.1.tgz",$/;"	s	object:dependencies.pascalcase
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-exists\/-\/path-exists-4.0.0.tgz",$/;"	s	object:dependencies.path-exists
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-is-absolute\/-\/path-is-absolute-1.0.1.tgz/;"	s	object:dependencies.path-is-absolute
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-3.1.1.tgz",$/;"	s	object:dependencies.path-key
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-parse\/-\/path-parse-1.0.7.tgz",$/;"	s	object:dependencies.path-parse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-type\/-\/path-type-4.0.0.tgz",$/;"	s	object:dependencies.path-type
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/picomatch\/-\/picomatch-2.3.0.tgz",$/;"	s	object:dependencies.picomatch
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pirates\/-\/pirates-4.0.1.tgz",$/;"	s	object:dependencies.pirates
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pkg-dir\/-\/pkg-dir-4.2.0.tgz",$/;"	s	object:dependencies.pkg-dir
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/posix-character-classes\/-\/posix-character-cla/;"	s	object:dependencies.posix-character-classes
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/prelude-ls\/-\/prelude-ls-1.2.1.tgz",$/;"	s	object:dependencies.prelude-ls
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pretty-format\/-\/pretty-format-26.6.2.tgz",$/;"	s	object:dependencies.pretty-format
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/progress\/-\/progress-2.0.3.tgz",$/;"	s	object:dependencies.progress
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/promise.prototype.finally\/-\/promise.prototype/;"	s	object:dependencies.promise.prototype.finally
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/prompts\/-\/prompts-2.4.1.tgz",$/;"	s	object:dependencies.prompts
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/psl\/-\/psl-1.8.0.tgz",$/;"	s	object:dependencies.psl
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pump\/-\/pump-3.0.0.tgz",$/;"	s	object:dependencies.pump
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz",$/;"	s	object:dependencies.punycode
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/queue-microtask\/-\/queue-microtask-1.2.3.tgz",$/;"	s	object:dependencies.queue-microtask
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rc\/-\/rc-1.2.8.tgz",$/;"	s	object:dependencies.rc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/react-is\/-\/react-is-17.0.2.tgz",$/;"	s	object:dependencies.react-is
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/read-pkg-up\/-\/read-pkg-up-7.0.1.tgz",$/;"	s	object:dependencies.read-pkg-up
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/read-pkg\/-\/read-pkg-5.2.0.tgz",$/;"	s	object:dependencies.read-pkg
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/readdirp\/-\/readdirp-3.5.0.tgz",$/;"	s	object:dependencies.readdirp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regex-not\/-\/regex-not-1.0.2.tgz",$/;"	s	object:dependencies.regex-not
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regexp.prototype.flags\/-\/regexp.prototype.fla/;"	s	object:dependencies.regexp.prototype.flags
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regexpp\/-\/regexpp-3.1.0.tgz",$/;"	s	object:dependencies.regexpp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regextras\/-\/regextras-0.7.1.tgz",$/;"	s	object:dependencies.regextras
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/remove-trailing-separator\/-\/remove-trailing-s/;"	s	object:dependencies.remove-trailing-separator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/repeat-element\/-\/repeat-element-1.1.4.tgz",$/;"	s	object:dependencies.repeat-element
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/repeat-string\/-\/repeat-string-1.6.1.tgz",$/;"	s	object:dependencies.repeat-string
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/require-directory\/-\/require-directory-2.1.1.t/;"	s	object:dependencies.require-directory
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/require-main-filename\/-\/require-main-filename/;"	s	object:dependencies.require-main-filename
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-cwd\/-\/resolve-cwd-3.0.0.tgz",$/;"	s	object:dependencies.resolve-cwd
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-4.0.0.tgz",$/;"	s	object:dependencies.resolve-from
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-url\/-\/resolve-url-0.2.1.tgz",$/;"	s	object:dependencies.resolve-url
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve\/-\/resolve-1.20.0.tgz",$/;"	s	object:dependencies.resolve
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ret\/-\/ret-0.1.15.tgz",$/;"	s	object:dependencies.ret
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/reusify\/-\/reusify-1.0.4.tgz",$/;"	s	object:dependencies.reusify
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rfc-3986\/-\/rfc-3986-1.0.1.tgz",$/;"	s	object:dependencies.rfc-3986
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rfdc\/-\/rfdc-1.3.0.tgz",$/;"	s	object:dependencies.rfdc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rimraf\/-\/rimraf-3.0.2.tgz",$/;"	s	object:dependencies.rimraf
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rsvp\/-\/rsvp-4.8.5.tgz",$/;"	s	object:dependencies.rsvp
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/run-parallel\/-\/run-parallel-1.2.0.tgz",$/;"	s	object:dependencies.run-parallel
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safe-buffer\/-\/safe-buffer-5.1.2.tgz",$/;"	s	object:dependencies.safe-buffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safe-regex\/-\/safe-regex-1.1.0.tgz",$/;"	s	object:dependencies.safe-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safer-buffer\/-\/safer-buffer-2.1.2.tgz",$/;"	s	object:dependencies.safer-buffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sane\/-\/sane-4.1.0.tgz",$/;"	s	object:dependencies.sane
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/saxes\/-\/saxes-5.0.1.tgz",$/;"	s	object:dependencies.saxes
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-7.3.2.tgz",$/;"	s	object:dependencies.semver
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/set-blocking\/-\/set-blocking-2.0.0.tgz",$/;"	s	object:dependencies.set-blocking
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/set-value\/-\/set-value-2.0.1.tgz",$/;"	s	object:dependencies.set-value
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shebang-command\/-\/shebang-command-2.0.0.tgz",$/;"	s	object:dependencies.shebang-command
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shebang-regex\/-\/shebang-regex-3.0.0.tgz",$/;"	s	object:dependencies.shebang-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shellwords\/-\/shellwords-0.1.1.tgz",$/;"	s	object:dependencies.shellwords
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/side-channel\/-\/side-channel-1.0.4.tgz",$/;"	s	object:dependencies.side-channel
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/signal-exit\/-\/signal-exit-3.0.3.tgz",$/;"	s	object:dependencies.signal-exit
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sisteransi\/-\/sisteransi-1.0.5.tgz",$/;"	s	object:dependencies.sisteransi
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/slash\/-\/slash-3.0.0.tgz",$/;"	s	object:dependencies.slash
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/slice-ansi\/-\/slice-ansi-2.1.0.tgz",$/;"	s	object:dependencies.slice-ansi
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon-node\/-\/snapdragon-node-2.1.1.tgz",$/;"	s	object:dependencies.snapdragon-node
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon-util\/-\/snapdragon-util-3.0.1.tgz",$/;"	s	object:dependencies.snapdragon-util
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon\/-\/snapdragon-0.8.2.tgz",$/;"	s	object:dependencies.snapdragon
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-resolve\/-\/source-map-resolve-0.5.3/;"	s	object:dependencies.source-map-resolve
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-support\/-\/source-map-support-0.5.1/;"	s	object:dependencies.source-map-support
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-url\/-\/source-map-url-0.4.1.tgz",$/;"	s	object:dependencies.source-map-url
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.6.1.tgz",$/;"	s	object:dependencies.source-map
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-correct\/-\/spdx-correct-3.1.1.tgz",$/;"	s	object:dependencies.spdx-correct
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-exceptions\/-\/spdx-exceptions-2.3.0.tgz",$/;"	s	object:dependencies.spdx-exceptions
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-expression-parse\/-\/spdx-expression-parse/;"	s	object:dependencies.spdx-expression-parse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-license-ids\/-\/spdx-license-ids-3.0.9.tgz/;"	s	object:dependencies.spdx-license-ids
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/split-string\/-\/split-string-3.1.0.tgz",$/;"	s	object:dependencies.split-string
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sprintf-js\/-\/sprintf-js-1.0.3.tgz",$/;"	s	object:dependencies.sprintf-js
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/stack-utils\/-\/stack-utils-2.0.3.tgz",$/;"	s	object:dependencies.stack-utils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/static-extend\/-\/static-extend-0.1.2.tgz",$/;"	s	object:dependencies.static-extend
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/streamroller\/-\/streamroller-2.2.4.tgz",$/;"	s	object:dependencies.streamroller
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string-length\/-\/string-length-4.0.2.tgz",$/;"	s	object:dependencies.string-length
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.0.tgz",$/;"	s	object:dependencies.string-width
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.matchall\/-\/string.prototype./;"	s	object:dependencies.string.prototype.matchall
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.trimend\/-\/string.prototype.t/;"	s	object:dependencies.string.prototype.trimend
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.trimstart\/-\/string.prototype/;"	s	object:dependencies.string.prototype.trimstart
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz",$/;"	s	object:dependencies.strip-ansi
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-bom\/-\/strip-bom-4.0.0.tgz",$/;"	s	object:dependencies.strip-bom
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-eof\/-\/strip-eof-1.0.0.tgz",$/;"	s	object:dependencies.strip-eof
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-final-newline\/-\/strip-final-newline-2.0/;"	s	object:dependencies.strip-final-newline
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-json-comments\/-\/strip-json-comments-3.1/;"	s	object:dependencies.strip-json-comments
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz",$/;"	s	object:dependencies.supports-color
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/supports-hyperlinks\/-\/supports-hyperlinks-2.2/;"	s	object:dependencies.supports-hyperlinks
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/symbol-tree\/-\/symbol-tree-3.2.4.tgz",$/;"	s	object:dependencies.symbol-tree
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/table\/-\/table-5.4.6.tgz",$/;"	s	object:dependencies.table
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tar\/-\/tar-6.0.5.tgz",$/;"	s	object:dependencies.tar
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/terminal-link\/-\/terminal-link-2.1.1.tgz",$/;"	s	object:dependencies.terminal-link
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/test-exclude\/-\/test-exclude-6.0.0.tgz",$/;"	s	object:dependencies.test-exclude
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/text-table\/-\/text-table-0.2.0.tgz",$/;"	s	object:dependencies.text-table
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/throat\/-\/throat-5.0.0.tgz",$/;"	s	object:dependencies.throat
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tmpl\/-\/tmpl-1.0.4.tgz",$/;"	s	object:dependencies.tmpl
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-fast-properties\/-\/to-fast-properties-2.0.0/;"	s	object:dependencies.to-fast-properties
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-object-path\/-\/to-object-path-0.3.0.tgz",$/;"	s	object:dependencies.to-object-path
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-regex-range\/-\/to-regex-range-5.0.1.tgz",$/;"	s	object:dependencies.to-regex-range
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-regex\/-\/to-regex-3.0.2.tgz",$/;"	s	object:dependencies.to-regex
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-4.0.0.tgz",$/;"	s	object:dependencies.tough-cookie
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tr46\/-\/tr46-2.1.0.tgz",$/;"	s	object:dependencies.tr46
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/traverse\/-\/traverse-0.3.9.tgz",$/;"	s	object:dependencies.traverse
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ts-jest\/-\/ts-jest-26.4.4.tgz",$/;"	s	object:dependencies.ts-jest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tslib\/-\/tslib-2.0.3.tgz",$/;"	s	object:dependencies.tslib
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tsutils\/-\/tsutils-3.21.0.tgz",$/;"	s	object:dependencies.tsutils
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-check\/-\/type-check-0.4.0.tgz",$/;"	s	object:dependencies.type-check
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-detect\/-\/type-detect-4.0.8.tgz",$/;"	s	object:dependencies.type-detect
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.8.1.tgz",$/;"	s	object:dependencies.type-fest
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/typedarray-to-buffer\/-\/typedarray-to-buffer-3/;"	s	object:dependencies.typedarray-to-buffer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/typescript\/-\/typescript-4.1.2.tgz",$/;"	s	object:dependencies.typescript
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unbox-primitive\/-\/unbox-primitive-1.0.1.tgz",$/;"	s	object:dependencies.unbox-primitive
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/union-value\/-\/union-value-1.0.1.tgz",$/;"	s	object:dependencies.union-value
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-1.0.0.tgz",$/;"	s	object:dependencies.universalify
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unset-value\/-\/unset-value-1.0.0.tgz",$/;"	s	object:dependencies.unset-value
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unzip-stream\/-\/unzip-stream-0.3.1.tgz",$/;"	s	object:dependencies.unzip-stream
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.4.1.tgz",$/;"	s	object:dependencies.uri-js
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/urix\/-\/urix-0.1.0.tgz",$/;"	s	object:dependencies.urix
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/use\/-\/use-3.1.1.tgz",$/;"	s	object:dependencies.use
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/uuid\/-\/uuid-7.0.3.tgz",$/;"	s	object:dependencies.uuid
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/v8-compile-cache\/-\/v8-compile-cache-2.3.0.tgz/;"	s	object:dependencies.v8-compile-cache
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/v8-to-istanbul\/-\/v8-to-istanbul-7.1.2.tgz",$/;"	s	object:dependencies.v8-to-istanbul
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/validate-npm-package-license\/-\/validate-npm-p/;"	s	object:dependencies.validate-npm-package-license
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-jsonrpc\/-\/vscode-jsonrpc-5.0.1.tgz",$/;"	s	object:dependencies.vscode-jsonrpc
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-protocol\/-\/vscode-langu/;"	s	object:dependencies.vscode-languageserver-protocol
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-textdocument\/-\/vscode-l/;"	s	object:dependencies.vscode-languageserver-textdocument
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-types\/-\/vscode-language/;"	s	object:dependencies.vscode-languageserver-types
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver\/-\/vscode-languageserver/;"	s	object:dependencies.vscode-languageserver
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-uri\/-\/vscode-uri-2.1.2.tgz",$/;"	s	object:dependencies.vscode-uri
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/w3c-hr-time\/-\/w3c-hr-time-1.0.2.tgz",$/;"	s	object:dependencies.w3c-hr-time
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/w3c-xmlserializer\/-\/w3c-xmlserializer-2.0.0.t/;"	s	object:dependencies.w3c-xmlserializer
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/walker\/-\/walker-1.0.7.tgz",$/;"	s	object:dependencies.walker
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/webidl-conversions\/-\/webidl-conversions-6.1.0/;"	s	object:dependencies.webidl-conversions
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-encoding\/-\/whatwg-encoding-1.0.5.tgz",$/;"	s	object:dependencies.whatwg-encoding
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-mimetype\/-\/whatwg-mimetype-2.3.0.tgz",$/;"	s	object:dependencies.whatwg-mimetype
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-url\/-\/whatwg-url-8.5.0.tgz",$/;"	s	object:dependencies.whatwg-url
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which-boxed-primitive\/-\/which-boxed-primitive/;"	s	object:dependencies.which-boxed-primitive
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which-module\/-\/which-module-2.0.0.tgz",$/;"	s	object:dependencies.which-module
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which\/-\/which-2.0.2.tgz",$/;"	s	object:dependencies.which
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/word-wrap\/-\/word-wrap-1.2.3.tgz",$/;"	s	object:dependencies.word-wrap
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wrap-ansi\/-\/wrap-ansi-6.2.0.tgz",$/;"	s	object:dependencies.wrap-ansi
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wrappy\/-\/wrappy-1.0.2.tgz",$/;"	s	object:dependencies.wrappy
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/write-file-atomic\/-\/write-file-atomic-3.0.3.t/;"	s	object:dependencies.write-file-atomic
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ws\/-\/ws-7.4.6.tgz",$/;"	s	object:dependencies.ws
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xml-name-validator\/-\/xml-name-validator-3.0.0/;"	s	object:dependencies.xml-name-validator
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xmlchars\/-\/xmlchars-2.2.0.tgz",$/;"	s	object:dependencies.xmlchars
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/y18n\/-\/y18n-4.0.3.tgz",$/;"	s	object:dependencies.y18n
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yallist\/-\/yallist-4.0.0.tgz",$/;"	s	object:dependencies.yallist
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-18.1.3.tgz",$/;"	s	object:dependencies.yargs-parser
resolved	plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yargs\/-\/yargs-15.4.1.tgz",$/;"	s	object:dependencies.yargs
response	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.response = function(lines, dump_path, code)$/;"	f	unknown:parse
restart	plugged/fzf/src/reader.go	/^func (r *Reader) restart(command string) {$/;"	f	struct:fzf.Reader
restoreTerminal	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) restoreTerminal() {$/;"	f	unknown:tui.LightRenderer
restoreTerminal	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) restoreTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
restore_positions	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.restore_positions()$/;"	f	unknown:M
result	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^  local result = utils.fold({ ungrouped_seen = false, list = {} }, function(accum, group, index)$/;"	f
result	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
result	plugged/fzf/src/terminal.go	/^	result   Result$/;"	m	struct:fzf.itemLine	typeref:typename:Result
result	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:result()$/;"	f	unknown:Job
result	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^  local result = with(co, function(obj)$/;"	f
result	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^  local result = with(obj_manager, function(obj)$/;"	f
result	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^  local result = with(open(README_STR_PATH), function(reader)$/;"	f
result	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^  local result = with(open(p), function(reader)$/;"	f
result[k]	plugged/telescope.nvim/lua/telescope/pickers.lua	/^        result[k] = function(...)$/;"	f
results	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	c
results	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^      results = (function()$/;"	f
results	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^    results = vim.tbl_filter(function(file)$/;"	f
results	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^      local results = vim.tbl_filter(function(x)$/;"	f
resume	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.resume = function(opts)$/;"	f	unknown:internal
ret	plugged/coc.nvim/package-lock.json	/^        "ret": "~0.1.10"$/;"	s	object:dependencies.safe-regex.requires
ret	plugged/coc.nvim/package-lock.json	/^    "ret": {$/;"	o	object:dependencies
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = "";$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = -1;$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = jQuery( elems );$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
ret	plugged/nvim-spectre/lua/spectre/utils.lua	/^  local stdout, ret = Job:new({ command = command, args = cmd, cwd = cwd, on_stderr = function(_/;"	f
return_if_not_empty	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local return_if_not_empty = function(state_x, ...)$/;"	f
return_val	plugged/lualine.nvim/lua/lualine/components/special/eval_func_component.lua	/^  local ok, return_val = pcall(vim.api.nvim_call_function, name, {})$/;"	f
returned_arguments	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function returned_arguments(state, arguments, level)$/;"	f
returned_with	plugged/plenary.nvim/lua/luassert/spy.lua	/^      returned_with = function(self, args)$/;"	f
returned_with	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function returned_with(state, arguments, level)$/;"	f
returns	plugged/plenary.nvim/lua/luassert/stub.lua	/^      returns = function(...)$/;"	f
returns	plugged/plenary.nvim/lua/luassert/stub.lua	/^  s.returns = function(...)$/;"	f	unknown:s
reusify	plugged/coc.nvim/package-lock.json	/^        "reusify": "^1.0.4"$/;"	s	object:dependencies.fastq.requires
reusify	plugged/coc.nvim/package-lock.json	/^    "reusify": {$/;"	o	object:dependencies
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {$/;"	o	object:definitions.languageServerBase.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerCommand.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerModule.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerSocket.properties
reverse	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:reverse()$/;"	f	unknown:List
reverseStringArray	plugged/fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f	package:fzf	typeref:typename:[]string
reversed_ipairs	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.reversed_ipairs = function(t)$/;"	f	unknown:utils
reversedipairsiter	plugged/telescope.nvim/lua/telescope/utils.lua	/^local function reversedipairsiter(t, i)$/;"	f
revert	plugged/plenary.nvim/lua/luassert/mock.lua	/^  revert = function(object)$/;"	f
revert	plugged/plenary.nvim/lua/luassert/spy.lua	/^      revert = function(self)$/;"	f
revert	plugged/plenary.nvim/lua/luassert/state.lua	/^state.revert = function(self)$/;"	f	unknown:state
revert	plugged/plenary.nvim/lua/luassert/stub.lua	/^  s.revert = function(self)       -- wrap revert function to restore original element$/;"	f	unknown:s
revision	plugged/fzf/main.go	/^var revision string = "devel"$/;"	v	package:main	typeref:typename:string
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "007f7fc125ef7a07716c5162738ed2d5f92aa2a7"$/;"	s	object:r
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02b01653c8a1c198ae7287d566efa86a135b30d5"$/;"	s	object:jsonc
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02e6ecbe05633bc9a82c2a56a86a1c2fcb3c4725"$/;"	s	object:commonlisp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02fa3b79b3ff9a296066da6277adfc3f26cbc9e0"$/;"	s	object:hjson
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "04e54ab6585dfd4fee6ddfe5849af56f101b6d4f"$/;"	s	object:fish
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "05f949d3c1c15e3261473a244d3ce87777374dec"$/;"	s	object:sparql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "085437f5cb117703b7f520dd92161140a684f092"$/;"	s	object:turtle
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0a3dd53a7fc4b352a538397d054380aaa28be54c"$/;"	s	object:scala
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0ac2c6da562c7a2c26ed7e8691d4a590f7e8b90a"$/;"	s	object:perl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0cdeb0e51411a3ba5493662952c3039de08939ca"$/;"	s	object:ledger
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0e36bed171768908f331ff7dff9d956bae016efb"$/;"	s	object:yaml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "12ea597262125fc22fd2e91aa953ac69b19c26ca"$/;"	s	object:julia
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "161a92474a7bb2e9e830e48e76426f38299d99d1"$/;"	s	object:html
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "189a6a4829beb9cdbe837260653b4a3dfb0cc3db"$/;"	s	object:jsdoc
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "1d23679256edb241ebed8da1247e340bf9e0c0ad"$/;"	s	object:vim
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "1fedb2a117f89b7df05550255a022f6e25bb7975"$/;"	s	object:ruby
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "203e239408d642be83edde8988d6e7b20a19f0e8"$/;"	s	object:json
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "21b7676859c1187645a27ff301f76738af5dfd44"$/;"	s	object:surface
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "23d419ba45789c5a47d31448061557716b02750a"$/;"	s	object:ocaml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "23d419ba45789c5a47d31448061557716b02750a"$/;"	s	object:ocaml_interface
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "26bbaf5d07356cacbf21defa9316988bc732c8b3"$/;"	s	object:tlaplus
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "274640841387e70c90ce2ff0f1b0d010d2aa8957"$/;"	s	object:cuda
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "2c0d03a36ee979bc697f6a9dd119174cf0ef15e0"$/;"	s	object:latex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "2dfd6b7d3a4cfedc52e5eaa3cc497f419e628ebb"$/;"	s	object:gomod
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "39bf0977d223879436c1425fe6bfeb3bcfd86f92"$/;"	s	object:clojure
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "3cb7fc28247efbcb2973b97e71c78838ad98a583"$/;"	s	object:hcl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "4094e3a0405aabb1314c0c41f29e38e70af86fa5"$/;"	s	object:bash
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "435fa00006c0d1515c37fbb4dd6a9de284af75ab"$/;"	s	object:php
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "59e7e41e186d3759592e9938291f69055200783f"$/;"	s	object:gdscript
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5dd3c62f1bbe378b220fe16b317b85247898639e"$/;"	s	object:comment
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5dd5cdc418d9659682556b6adca2dd9ace0ac6d2"$/;"	s	object:json5
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5e66e961eee421786bdda8495ed1db045e06b5fe"$/;"	s	object:graphql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "625a721ac38d9dd23d4f2b08eceb6700a2e670d5"$/;"	s	object:heex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "632596b1fe5816315cafa90cdf8f8000e30c93e4"$/;"	s	object:rst
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "63e8a11f1858c7351a299223b231c8134ed61612"$/;"	s	object:zig
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "67ecede8fc5f2e342a7f0516b87d0476b36035ac"$/;"	s	object:supercollider
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "6a25376685d1d47968c2cef06d4db8d84a70025e"$/;"	s	object:dart
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "6f5d40190ec8a0aa8c8410699353d820f4f7d7a6"$/;"	s	object:lua
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "79ae7c1f2654a2a6936b0f37bf754e5ff59c9186"$/;"	s	object:beancount
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "7b97502cfc3ffa7110f6b68bb39fb259c9a0500c"$/;"	s	object:regex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "7ef899bf5a3ff5725d05cfeb6b7491cdbcb5399f"$/;"	s	object:elm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "7f6bfd0161b2fe97f03564edad3287ebea0494a3"$/;"	s	object:go
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "83ee5993560bf15854c69b77d92e34456f8fb655"$/;"	s	object:nix
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8600d7fadf5a51b9396eacbc6d105d0649b4c6f6"$/;"	s	object:python
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "88408ffc5e27abcffced7010fc77396ae3636d7e"$/;"	s	object:glsl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8bd2056818b21860e3d756b5a58c4f6e05fb744e"$/;"	s	object:toml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8de07e47ea073d4c99195d8a4dadaf00fdee9f2f"$/;"	s	object:c_sharp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8e7fd7e638d4a0ec7a792ee16b19dbc6407aa810"$/;"	s	object:ql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8e9d175982afcefa3dac8ca20d40d1643accd2bd"$/;"	s	object:yang
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8f6b1f357d1231c420404b5f7a368a73c25adfa2"$/;"	s	object:verilog
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "91fe2754796cd8fba5f229505a23fa08f3546c06"$/;"	s	object:vue
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "924aadaf5dea2a6074d72027b064f939acf32e20"$/;"	s	object:pioasm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "92877bac7033e409ccfb3f07fe28ef1dfd359457"$/;"	s	object:dot
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "98274d94ec33e994e8354d9ddfdef58cca471294"$/;"	s	object:svelte
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9a2ccff9f672f1f3d320cf925b8e5acc89b27055"$/;"	s	object:query
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9d5fd0c329280a156bf7614a49dc5e8c58cc037c"$/;"	s	object:erlang
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9da7c979c010c350c28ad2235893103db4622c10"$/;"	s	object:scss
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a03f1d2d1dfbf6f8e0fdca5f9ff030228241eb57"$/;"	s	object:css
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a22fa5e19bae50098e2252ea96cba3aba43f4c58"$/;"	s	object:swift
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ac1d5957e719d49bd6acd27439b79843e4daf8ed"$/;"	s	object:ocamllex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "bf7d643b494b7c7eed909ed7fbd8447231152cb0"$/;"	s	object:haskell
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "c2fbf21bd3aa45495fe13247e040ad5815250032"$/;"	s	object:d
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "c611dd49e838efe25567dece14cf6353710f6d98"$/;"	s	object:godotResource
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "cc745b774e3986aa3a7dfd6b7a0fc01ddc853bf8"$/;"	s	object:tsx
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "cc745b774e3986aa3a7dfd6b7a0fc01ddc853bf8"$/;"	s	object:typescript
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "cc7bdd3e6d14677e8aa77da64f6a3f57b6f8b00a"$/;"	s	object:rust
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ccfd77db0ed799b6c22c214fe9d2937f47bc8b34"$/;"	s	object:bibtex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "d4f61bed8ecb632addcd5e088c4f4cb9c1bf1c5b"$/;"	s	object:llvm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "dd39c2ef457baa79ced8e99fd2508d15de301e86"$/;"	s	object:glimmer
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "de3ec57591aebf451e710fc9c984cf601258baf5"$/;"	s	object:elixir
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "e348e8ec5efd3aac020020e4af53d2ff18f393a9"$/;"	s	object:c
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "e8dcc9d2b404c542fd236ea5f7208f90be8a6e89"$/;"	s	object:cpp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ed3a87f750b1d1d533f15ab93fef3e1f5a46e234"$/;"	s	object:java
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ef3e43522c29a1abbc75313e26a82705eebeef13"$/;"	s	object:kotlin
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f0b8e6748238ac0a6ba10e360db5b712039db895"$/;"	s	object:dockerfile
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f0f2f100952a353e64e26b0fa710b4c296d7af13"$/;"	s	object:fortran
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f6616f1e417ee8b62daf251aa1daa5d73781c596"$/;"	s	object:cmake
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fa70098cd70393f84785f85cdc6a45299b59cd5b"$/;"	s	object:devicetree
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fcc5f6f4d194dede4e676834ff28a506e39e17b4"$/;"	s	object:teal
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fce4331731a960077ff5f98939bc675179f1908a"$/;"	s	object:fennel
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fdeb68ac8d2bd5a78b943528bb68ceda3aade2eb"$/;"	s	object:javascript
revive	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
rf	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
rfc-3986	plugged/coc.nvim/package-lock.json	/^        "rfc-3986": "1.0.1"$/;"	s	object:dependencies.isuri.requires
rfc-3986	plugged/coc.nvim/package-lock.json	/^    "rfc-3986": {$/;"	o	object:dependencies
rfdc	plugged/coc.nvim/package-lock.json	/^        "rfdc": "^1.1.4",$/;"	s	object:dependencies.log4js.requires
rfdc	plugged/coc.nvim/package-lock.json	/^    "rfdc": {$/;"	o	object:dependencies
rg	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
rgb	plugged/github-nvim-theme/lua/github-theme/extra/iterm.lua	/^local rgb = function(hex)$/;"	f
rgb2cterm	plugged/lualine.nvim/lua/lualine/utils/color_utils.lua	/^function M.rgb2cterm(hex_color)$/;"	f	unknown:M
rgb_num2str	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function rgb_num2str(rgb_color_num)$/;"	f
rgb_str2num	plugged/lualine.nvim/lua/lualine/themes/auto.lua	/^local function rgb_str2num(rgb_color_str)$/;"	f
rgb_to_hex	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.rgb_to_hex = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hex	plugged/nvcode-color-schemes.vim/generate	/^def rgb_to_hex(red, green, blue)$/;"	f
rgb_to_hex	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.rgb_to_hex = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hex	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.rgb_to_hex = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hpluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.rgb_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hpluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.rgb_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hpluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.rgb_to_hpluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hsluv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.rgb_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hsluv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.rgb_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_hsluv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.rgb_to_hsluv = function(tuple)$/;"	f	unknown:hsluv
rgb_to_lch	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.rgb_to_lch = function(tuple)$/;"	f	unknown:hsluv
rgb_to_lch	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.rgb_to_lch = function(tuple)$/;"	f	unknown:hsluv
rgb_to_lch	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.rgb_to_lch = function(tuple)$/;"	f	unknown:hsluv
rgb_to_x256	plugged/nvcode-color-schemes.vim/generate	/^def rgb_to_x256(*orig)$/;"	f
rgb_to_xyz	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.rgb_to_xyz = function(tuple)$/;"	f	unknown:hsluv
rgb_to_xyz	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.rgb_to_xyz = function(tuple)$/;"	f	unknown:hsluv
rgb_to_xyz	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.rgb_to_xyz = function(tuple)$/;"	f	unknown:hsluv
rge	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
rh	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ri	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
right	plugged/bufferline.nvim/tests/custom_area_spec.lua	/^          right = function ()$/;"	f
rimraf	plugged/coc.nvim/package-lock.json	/^        "rimraf": "^3.0.0",$/;"	s	object:dependencies.@jest/core.requires
rimraf	plugged/coc.nvim/package-lock.json	/^        "rimraf": "^3.0.2"$/;"	s	object:dependencies.flat-cache.requires
rimraf	plugged/coc.nvim/package-lock.json	/^    "rimraf": {$/;"	o	object:dependencies
riter	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:riter()$/;"	f	unknown:List
rj	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
rk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
rl	plugged/coc.nvim/bin/prompt.js	/^const rl = readline.createInterface({$/;"	C
rle	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
rm	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:rm(opts)$/;"	f	unknown:Path
rmcup	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f	struct:tui.LightRenderer
rmdir	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:rmdir()$/;"	f	unknown:Path
rme	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
rol	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.rol(x, n)$/;"	f	unknown:M.bit
root	plugged/plenary.nvim/lua/plenary/path.lua	/^path.root = (function()$/;"	f	unknown:path
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {$/;"	o	object:definitions.languageServerBase.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerCommand.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerModule.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerSocket.properties
ror	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.ror(x, n)$/;"	f	unknown:M.bit
rotate	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^local function rotate(nargs, ...)$/;"	f
rotate	plugged/plenary.nvim/scripts/vararg/rotate.lua	/^local function rotate(nargs, ...)$/;"	f
rotate_lookup[0]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[0] = function()$/;"	f
rotate_lookup[10]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[10] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)$/;"	f
rotate_lookup[11]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[11] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)$/;"	f
rotate_lookup[12]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[12] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)$/;"	f
rotate_lookup[13]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[13] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)$/;"	f
rotate_lookup[14]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[14] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)$/;"	f
rotate_lookup[15]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[15] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)$/;"	f
rotate_lookup[1]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[1] = function(A0)$/;"	f
rotate_lookup[2]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[2] = function(A0, A1)$/;"	f
rotate_lookup[3]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[3] = function(A0, A1, A2)$/;"	f
rotate_lookup[4]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[4] = function(A0, A1, A2, A3)$/;"	f
rotate_lookup[5]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[5] = function(A0, A1, A2, A3, A4)$/;"	f
rotate_lookup[6]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[6] = function(A0, A1, A2, A3, A4, A5)$/;"	f
rotate_lookup[7]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[7] = function(A0, A1, A2, A3, A4, A5, A6)$/;"	f
rotate_lookup[8]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[8] = function(A0, A1, A2, A3, A4, A5, A6, A7)$/;"	f
rotate_lookup[9]	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^rotate_lookup[9] = function(A0, A1, A2, A3, A4, A5, A6, A7, A8)$/;"	f
rotate_lookup[{{n}}]	plugged/plenary.nvim/scripts/vararg/rotate.lua	/^  rotate_lookup[{{n}}] = function ({% for n in range(n) %} A{{n}} {{ ", " if not loop.last else /;"	f
rotate_n	plugged/plenary.nvim/lua/plenary/vararg/rotate.lua	/^local function rotate_n(first, ...)$/;"	f
rotate_n	plugged/plenary.nvim/scratch/rotate_bench.lua	/^local function rotate_n(first, ...)$/;"	f
rotate_n	plugged/plenary.nvim/scripts/vararg/rotate.lua	/^local function rotate_n(first, ...)$/;"	f
round	plugged/plenary.nvim/lua/plenary/log.lua	/^  local round = function(x, increment)$/;"	f
rp	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rq	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
rrotate	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.rrotate(x, disp)  -- Lua5.2 inspired$/;"	f	unknown:M
rs	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
rshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.rshift(x, n)$/;"	f	unknown:M.bit
rshift	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.rshift(a,disp) -- Lua5.2 insipred$/;"	f	unknown:M
rst	plugged/nvim-treesitter/lockfile.json	/^  "rst": {$/;"	o
rsvp	plugged/coc.nvim/package-lock.json	/^        "rsvp": "^4.8.4"$/;"	s	object:dependencies.capture-exit.requires
rsvp	plugged/coc.nvim/package-lock.json	/^    "rsvp": {$/;"	o	object:dependencies
rubout	plugged/fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f	struct:fzf.Terminal
ruby	plugged/nvim-treesitter/lockfile.json	/^  "ruby": {$/;"	o
run	plugged/nvim-treesitter/scripts/run_tests.sh	/^run() {$/;"	f
run	plugged/plenary.nvim/lua/plenary/async/async.lua	/^M.run = function(async_function, callback)$/;"	f	unknown:M
run	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.run = function(future, callback)$/;"	f	unknown:M
run	plugged/plenary.nvim/lua/plenary/busted.lua	/^mod.run = function(file)$/;"	f	unknown:mod
run	plugged/which-key.nvim/lua/which-key/plugins/marks.lua	/^function M.run(_trigger, _mode, buf)$/;"	f	unknown:M
run	plugged/which-key.nvim/lua/which-key/plugins/registers.lua	/^function M.run(_trigger, _mode, _buf)$/;"	f	unknown:M
run	plugged/which-key.nvim/lua/which-key/plugins/spelling.lua	/^function M.run(_trigger, _mode, _buf)$/;"	f	unknown:M
run-parallel	plugged/coc.nvim/package-lock.json	/^        "run-parallel": "^1.1.9"$/;"	s	object:dependencies.@nodelib/fs.scandir.requires
run-parallel	plugged/coc.nvim/package-lock.json	/^    "run-parallel": {$/;"	o	object:dependencies
run_all	plugged/plenary.nvim/lua/plenary/async/util.lua	/^M.run_all = function(async_fns, callback)$/;"	f	unknown:M
run_all	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.run_all = function(futures, callback)$/;"	f	unknown:M
run_blame	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.run_blame = function(self, lines, lnum)$/;"	f	unknown:Obj
run_builtin	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.run_builtin = function(prompt_bufnr)$/;"	f	unknown:actions
run_command	plugged/telescope.nvim/lua/telescope/command.lua	/^local function run_command(args)$/;"	f
run_diff	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function run_diff(a, b)$/;"	f
run_diff	plugged/gitsigns.nvim/lua/gitsigns/diff_ext.lua	/^M.run_diff = function($/;"	f	unknown:M
run_diff	plugged/gitsigns.nvim/lua/gitsigns/diff_int.lua	/^function M.run_diff(fa, fb, diff_algo, indent_heuristic)$/;"	f	unknown:M
run_diff_xdl	plugged/gitsigns.nvim/lua/gitsigns/diff_int.lua	/^   run_diff_xdl = function(fa, fb, algorithm, indent_heuristic)$/;"	f
run_diff_xdl	plugged/gitsigns.nvim/lua/gitsigns/diff_int/xdl_diff_ffi.lua	/^local function run_diff_xdl(fa, fb, diff_algo)$/;"	f
run_each	plugged/plenary.nvim/lua/plenary/busted.lua	/^local run_each = function(tbl)$/;"	f
run_file	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester.run_file = function(filename)$/;"	f	unknown:tester
run_first	plugged/plenary.nvim/lua/plenary/async/util.lua	/^M.run_first = a.wrap(function(async_funs, step)$/;"	f	unknown:M
run_indent_test	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.run_indent_test(file, runner, opts)$/;"	f	unknown:M
run_install	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function run_install(cache_folder, install_folder, lang, repo, with_sync, generate_from_gr/;"	f
run_job	plugged/gitsigns.nvim/lua/gitsigns/subprocess.lua	/^function M.run_job(obj, callback)$/;"	f	unknown:M
run_os_cmd	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.run_os_cmd = function(cmd, cwd)$/;"	f	unknown:M
run_replace	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.run_replace = function()$/;"	f	unknown:M
run_replace_or_original	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^local run_replace_or_original = function(replacements, original_func, ...)$/;"	f
run_string	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^tester.run_string = function(contents)$/;"	f	unknown:tester
run_word_diff	plugged/gitsigns.nvim/lua/gitsigns/diff_int.lua	/^function M.run_word_diff(removed, added)$/;"	f	unknown:M
runner	plugged/plenary.nvim/scratch/term_open_checker.lua	/^local runner = function()$/;"	f
running	plugged/fzf/src/terminal.go	/^	running      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
runtime	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
runtime	plugged/coc.nvim/data/schema.json	/^        "runtime": {$/;"	o	object:definitions.languageServerModule.properties
runtime_queries	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function runtime_queries(lang, query_name)$/;"	f
rust	plugged/nvim-treesitter/lockfile.json	/^  "rust": {$/;"	o
rv	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
rw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
ry	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
s	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
s	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
s	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12300.e
s	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunctionaf1e5c4a12500.e
s	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:r.getTextEditChange
s	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
s	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunctionaf1e5c4a25900
s	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunctionaf1e5c4a0a00
s	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
s	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
s	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
s	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400
s	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a32000
s	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:$T
s	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunctionaf1e5c4a29d00
s	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a2b900
s	plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f	function:be
s	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionaf1e5c4a7400
s	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:pQ
s	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
s	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:q0
s	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
s	plugged/plenary.nvim/lua/luassert/stub.lua	/^  local s = spy.on(object, key)   -- create a spy on top of the stub function$/;"	f
s	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> s           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
s	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> s           :call b:buffergator_catalog_viewer.cycle_sort_/;"	m
s	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> s             :call startify#set_mark('S')<cr>$/;"	m
s$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
s3e	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
s5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
s6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
s7	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
s8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
s9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
s:AddAnsiGroups	plugged/coc.nvim/plugin/coc.vim	/^function! s:AddAnsiGroups() abort$/;"	f
s:Array	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^function! s:Array(fg, bg, ...)$/;"	f
s:AsEmpty	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:AsEmpty()$/;"	f
s:Assert	plugged/vim-devicons/test/filetype.vim	/^function! s:Assert(filename, icon)$/;"	f
s:AsyncRequest	plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
s:AuNohlsearch	plugged/vim-cool/plugin/cool.vim	/^    function! s:AuNohlsearch()$/;"	f
s:AutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
s:Autocmd	plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
s:AvoidOtherSigns	RltvNmbr.vim	/^fun! s:AvoidOtherSigns()$/;"	f
s:CP1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:CP1 = s:Array('base6', 'base2', '')$/;"	v
s:CP2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:CP2 = s:Array('base6', 'blue', '')$/;"	v
s:CP3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:CP3 = s:Array('base7', 'green', 'bold')$/;"	v
s:Call	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
s:Cb	plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:Cb() closure$/;"	f
s:ChangeFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
s:ChannelSet	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
s:CheckExCtagsVersion	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
s:CheckFTCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
s:CheckForExCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
s:CheckMouseClick	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
s:CloseFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
s:CloseIt	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:CloseIt()$/;"	f
s:CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
s:CodeActionFromSelected	plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
s:ColorschemeLoaded	RltvNmbr.vim	/^fun! s:ColorschemeLoaded()$/;"	f
s:CommandList	plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
s:CorrectFocusOnStartup	plugged/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
s:CreateAutocommands	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
s:CtagsErrMsg	plugged/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
s:CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:CursorRangeFromSelected	plugged/coc.nvim/plugin/coc.vim	/^function! s:CursorRangeFromSelected(type, ...) abort$/;"	f
s:Declare	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Declare(var, def)$/;"	f
s:DetectFiletype	plugged/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
s:DevIconsGetArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
s:Disable	plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
s:Enable	plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable(initialize)$/;"	f
s:EscapeCtagsCmd	plugged/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
s:ExecuteCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
s:ExecuteCtagsOnFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
s:ExpandMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
s:ExtensionList	plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
s:FindTag	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:FindTag()$/;"	f
s:FormatFromSelected	plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
s:GetFileWinnr	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
s:GetNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(request, forcecurrent, ...) abort$/;"	f
s:GetSupportedFiletypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
s:GetTagInfo	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
s:GlobalChange	plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:GotoFileWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
s:GotoNextFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
s:GotoNextToplevelTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
s:GotoPrevFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
s:HandleBufDelete	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
s:HandleBufWrite	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
s:HandleOnlyWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
s:Handler	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Handler(xml_tag, isHtml)$/;"	f
s:HasOpenFileWindows	plugged/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
s:HaveAtt	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:HaveAtt()$/;"	f
s:Hi	plugged/coc.nvim/plugin/coc.vim	/^function! s:Hi() abort$/;"	f
s:HighlightTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
s:I1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:I1 = s:Array('base2', 'yellow')$/;"	v
s:I1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:I1 = s:Array('base2', 'green')$/;"	v
s:I2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:I2 = s:Array('base6', 'base3')$/;"	v
s:I2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:I2 = s:Array('orange', 'base3')$/;"	v
s:I3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:I3 = s:Array('blue', 'base1')$/;"	v
s:IA1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:IA1 = s:Array('blue', 'base2')$/;"	v
s:IA2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:IA2 = s:Array('blue', 'base1')$/;"	v
s:IA3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:IA3 = s:Array('blue', 'base0')$/;"	v
s:IAError	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IAError = [s:nord0_gui, s:nord11_gui, s:nord1_term, s:nord11_term]$/;"	v
s:IAMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IAMain = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IAMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^  let s:IAMiddle = [s:nord5_gui, s:nord1_gui, s:nord5_term, s:nord1_term]$/;"	v
s:IAMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^  let s:IAMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IARight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IARight = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IAWarn	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IAWarn = [s:nord1_gui, s:nord13_gui, s:nord3_term, s:nord13_term]$/;"	v
s:IError	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IError = [s:nord0_gui, s:nord11_gui, s:nord1_term, s:nord11_term]$/;"	v
s:IMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IMain = [s:nord1_gui, s:nord14_gui, s:nord1_term, s:nord6_term]$/;"	v
s:IMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:IWarn	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IWarn = [s:nord1_gui, s:nord13_gui, s:nord3_term, s:nord13_term]$/;"	v
s:InValidRegion	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:InValidRegion()$/;"	f
s:Init	plugged/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
s:InitBuf	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:InitBuf()$/;"	f
s:InitTypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
s:InitWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
s:Initial	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Initial()$/;"	f
s:InstallOptions	plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
s:IsLineVisible	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsLineVisible(line) abort$/;"	f
s:IsStartingDelimiter	plugged/vim-blade/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
s:IsValidFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
s:JumpToNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToNearbyTag(direction, request, flags) abort$/;"	f
s:JumpToTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar, ...) abort$/;"	f
s:Left	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:LoadUserTypeDefs	plugged/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
s:LoadedExtensions	plugged/coc.nvim/plugin/coc.vim	/^function! s:LoadedExtensions(...) abort$/;"	f
s:MapKeys	plugged/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
s:MinimizeMaxFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
s:N1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:N1 = s:Array('base6', 'blue')$/;"	v
s:N2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:N2 = s:Array('base5', 'base2')$/;"	v
s:N3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:N3 = s:Array('blue', 'base1')$/;"	v
s:NError	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NError = [s:nord0_gui, s:nord11_gui, s:nord1_term, s:nord11_term]$/;"	v
s:NMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NMain = [s:nord1_gui, s:nord8_gui, s:nord1_term, s:nord8_term]$/;"	v
s:NMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:NRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:NWarn	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NWarn = [s:nord1_gui, s:nord13_gui, s:nord3_term, s:nord13_term]$/;"	v
s:NeedsVitalityRedraw	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:NeedsVitalityRedraw()$/;"	f
s:NewBufferCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewBufferCatalogViewer()$/;"	f
s:NewCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewCatalogViewer(name, title)$/;"	f
s:NewMessenger	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewMessenger(name)$/;"	f
s:NewTabCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewTabCatalogViewer()$/;"	f
s:OnExit	plugged/coc.nvim/autoload/coc/terminal.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OnExit	plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OpenConfig	plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
s:OpenDiagnostics	plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenDiagnostics(...) abort$/;"	f
s:OpenFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
s:OpenParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
s:OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
s:ParseTagline	plugged/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
s:PlayItCool	plugged/vim-cool/plugin/cool.vim	/^function! s:PlayItCool(old, new)$/;"	f
s:PrintHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
s:PrintKinds	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
s:PrintTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
s:ProcessFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
s:ProcessTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
s:QuickpickFilter	plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickFilter(id, key) closure$/;"	f
s:QuickpickHandler	plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickHandler(id, result) closure$/;"	f
s:R1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:R1 = s:Array('base2', 'orange')$/;"	v
s:R2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:R2 = s:Array('base6', 'base3')$/;"	v
s:R2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:R2 = s:Array('orange', 'base3')$/;"	v
s:R3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:R3 = s:Array('blue', 'base1')$/;"	v
s:RError	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RError = [s:nord0_gui, s:nord11_gui, s:nord1_term, s:nord11_term]$/;"	v
s:RLTVNMBR	RltvNmbr.vim	/^let s:RLTVNMBR= 2683$/;"	v
s:RMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RMain = [s:nord1_gui, s:nord14_gui, s:nord1_term, s:nord14_term]$/;"	v
s:RMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:RRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:RWarn	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RWarn = [s:nord1_gui, s:nord13_gui, s:nord3_term, s:nord13_term]$/;"	v
s:Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:RenderContent	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
s:RenderKeepView	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
s:ReopenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
s:RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
s:Right	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:RltvNmbr	RltvNmbr.vim	/^fun! s:RltvNmbr(mode,...)$/;"	f
s:SavePos	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:SavePos()$/;"	f
s:SearchOptions	plugged/coc.nvim/plugin/coc.vim	/^function! s:SearchOptions(...) abort$/;"	f
s:SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
s:SetFoldLevelRecursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
s:SetStatusLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine() abort$/;"	f
s:SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:ShouldForwardNavigationBackToTmux	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:ShouldForwardNavigationBackToTmux(tmux_last_pane, at_tab_page_edge)$/;"	f
s:ShowInPreviewWin	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
s:ShowInfo	plugged/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
s:ShowPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
s:ShrinkIfExpanded	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
s:StartHL	plugged/vim-cool/plugin/cool.vim	/^function! s:StartHL()$/;"	f
s:State	plugged/tagbar/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:State.New	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
s:State.getCurrent	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
s:State.setCurrentFile	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
s:State.setPaused	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
s:StopHL	plugged/vim-cool/plugin/cool.vim	/^function! s:StopHL()$/;"	f
s:SyncAutocmd	plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
s:TYPE	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TagName	plugged/vim-closetag/plugin/closetag.vim	/^fun! s:TagName(from)$/;"	f
s:TagbarBufName	plugged/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
s:TmuxAwareNavigate	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxAwareNavigate(direction)$/;"	f
s:TmuxCommand	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxCommand(args)$/;"	f
s:TmuxNavigatorProcessList	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxNavigatorProcessList()$/;"	f
s:TmuxOrTmateExecutable	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxOrTmateExecutable()$/;"	f
s:TmuxSocket	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxSocket()$/;"	f
s:TmuxVimPaneIsZoomed	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxVimPaneIsZoomed()$/;"	f
s:ToggleAutoclose	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
s:ToggleCaseInsensitive	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
s:ToggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
s:ToggleHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
s:ToggleHideNonPublicTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
s:TogglePause	plugged/tagbar/autoload/tagbar.vim	/^function! s:TogglePause() abort$/;"	f
s:ToggleSort	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
s:ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
s:TransformUserTypeDef	plugged/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
s:V1	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:V1 = s:Array('base2', 'magenta')$/;"	v
s:V2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:V2 = s:Array('base6', 'base3')$/;"	v
s:V2	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:V2 = s:Array('orange', 'base3')$/;"	v
s:V3	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:V3 = s:N3$/;"	v
s:VError	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VError = [s:nord0_gui, s:nord11_gui, s:nord1_term, s:nord11_term]$/;"	v
s:VMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VMain = [s:nord1_gui, s:nord7_gui, s:nord1_term, s:nord7_term]$/;"	v
s:VMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:VRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:VWarn	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VWarn = [s:nord1_gui, s:nord13_gui, s:nord3_term, s:nord13_term]$/;"	v
s:VimNavigate	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:VimNavigate(direction)$/;"	f
s:ZoomWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
s:_buffergator_messenger	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_buffergator_messenger = s:NewMessenger("")$/;"	v
s:_catalog_viewer	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_catalog_viewer = s:NewBufferCatalogViewer()$/;"	v
s:_compare_dicts_by_basename	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_basename(m1, m2)$/;"	f
s:_compare_dicts_by_bufname	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_bufname(m1, m2)$/;"	f
s:_compare_dicts_by_bufnum	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_bufnum(m1, m2)$/;"	f
s:_compare_dicts_by_extension	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_extension(m1, m2)$/;"	f
s:_compare_dicts_by_filepath	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_filepath(m1, m2)$/;"	f
s:_compare_dicts_by_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_mru(m1, m2)$/;"	f
s:_compare_dicts_by_value	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_value(m1, m2, key)$/;"	f
s:_detect_filetype	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_detect_filetype(fname)$/;"	f
s:_find_buffers_with_var	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_find_buffers_with_var(varname, expr)$/;"	f
s:_find_mru_bufnr	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_find_mru_bufnr(dir, buffergator_mru)$/;"	f
s:_format_align_left	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_align_left(text, width, fill_char)$/;"	f
s:_format_align_right	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_align_right(text, width, fill_char)$/;"	f
s:_format_escaped_filename	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_escaped_filename(file)$/;"	f
s:_format_filled	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_filled(str, width, align, trunc)$/;"	f
s:_format_time	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_time(secs)$/;"	f
s:_format_truncated	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_truncated(str, max_len, trunc)$/;"	f
s:_getPrefix	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
s:_get_split_mode	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_get_split_mode()$/;"	f
s:_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_is_full_height_window	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_is_full_height_window(win_num)$/;"	f
s:_is_full_width_window	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_is_full_width_window(win_num)$/;"	f
s:_tab_catalog_viewer	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_tab_catalog_viewer = s:NewTabCatalogViewer()$/;"	v
s:action_for	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:activate	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	plugged/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activated	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:activated = 0$/;"	v
s:addChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
s:addTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
s:add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_highlights	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_highlights(winid, config, create) abort$/;"	f
s:add_related	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_related(winid, target) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_tag_recursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:adjust_win_row	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:adjust_win_row(winid, changed) abort$/;"	f
s:ag_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
s:align_lists	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm2"$/;"	v
s:aquarium_vim_version	plugged/aquarium-vim/colors/aquarium.vim	/^let s:aquarium_vim_version="0.3.5"$/;"	v
s:assert	plugged/vim-devicons/test/default_setting.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/fileformat.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/filetype.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:autocommands_done	plugged/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:ayucolor	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:ayucolor = get(g:, 'ayucolor', 'dark')$/;"	v
s:b	plugged/ayu-vim/colors/ayu.vim	/^let s:b      = ",bold"$/;"	v
s:b64encode	plugged/emmet-vim/autoload/emmet/util.vim	/^function! s:b64encode(bytes, table, pad)$/;"	f
s:backspace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
s:base_dir	plugged/fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:batchmode	plugged/vim-startify/autoload/startify.vim	/^let s:batchmode = ''$/;"	v
s:bdelete	plugged/vim-bbye/plugin/bbye.vim	/^function! s:bdelete(action, bang, buffer_name)$/;"	f
s:beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg = {}$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.contrast   = {'dark': '#E6B450', 'light': '#FF9940', 'mirage': '#FFCC66'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.insert     = {'dark': '#39BAE6', 'light': '#55B4D4', 'mirage': '#5CCFE6'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.normal     = {'dark': '#01060E', 'light': '#D3D5D7', 'mirage': '#141925'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.primary    = {'dark': '#161F2A', 'light': '#DEE8F1', 'mirage': '#2A3546'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.replace    = {'dark': '#FF8F40', 'light': '#FA8D3E', 'mirage': '#FFA759'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.secondary  = {'dark': '#14191F', 'light': '#F0F0F0', 'mirage': '#232838'}[s:style]$/;"	v
s:bg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:bg.visual     = {'dark': '#A37ACC', 'light': '#A37ACC', 'mirage': '#D4BFFF'}[s:style]$/;"	v
s:bg0	plugged/aquarium-vim/colors/aquarium.vim	/^let s:bg0 = { 'ctermbg': '60', 'guibg': s:gui00 }$/;"	v
s:bg_none	plugged/ayu-vim/colors/ayu.vim	/^let s:bg_none = ' guibg=NONE ctermbg=NONE'$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bold	plugged/aquarium-vim/colors/aquarium.vim	/^  let s:bold = ""$/;"	v
s:bold	plugged/aquarium-vim/colors/aquarium.vim	/^let s:bold = "bold,"$/;"	v
s:bold	plugged/nord-vim/colors/nord.vim	/^  let s:bold = ""$/;"	v
s:bold	plugged/nord-vim/colors/nord.vim	/^let s:bold = "bold,"$/;"	v
s:border_opt	plugged/fzf/plugin/fzf.vim	/^function! s:border_opt(window)$/;"	f
s:borderchars	plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderchars = get(g:, 'coc_borderchars', ['─', '│', '─', '│', '┌', '┐', '┘',/;"	v
s:borderjoinchars	plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderjoinchars = get(g:, 'coc_border_joinchars', ['┬', '┤', '┴', '├'])$/;"	v
s:btags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_line_count	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
s:buff	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:buff = "NONE"$/;"	v
s:buff	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:buff = s:gui00$/;"	v
s:buffer_line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buffer_seqno	plugged/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:buffergator_buffer_line_symbols	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_buffer_line_symbols = {$/;"	v
s:buffergator_buffer_line_symbols_order	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_buffer_line_symbols_order = [$/;"	v
s:buffergator_catalog_display_regime_desc	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_display_regime_desc = {$/;"	v
s:buffergator_catalog_display_regimes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_display_regimes = ['basename', 'parentdir', 'filepath', 'bufname']$/;"	v
s:buffergator_catalog_sort_regime_desc	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_sort_regime_desc = {$/;"	v
s:buffergator_catalog_sort_regimes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_sort_regimes = ['basename', 'filepath', 'extension', 'bufnum', 'mru']$/;"	v
s:buffergator_default_catalog_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_default_catalog_sort_regime = "bufnum"$/;"	v
s:buffergator_default_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_default_display_regime = "basename"$/;"	v
s:buffergator_viewport_split_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_viewport_split_modes = {$/;"	v
s:buffergator_viewport_split_modes_cycle_list	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_viewport_split_modes_cycle_list = ["L", "T", "R", "B"]$/;"	v
s:buflisted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufopen	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:build_prim	plugged/ayu-vim/colors/ayu.vim	/^function! s:build_prim(hi_elem, field)$/;"	f
s:bx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base0 = { 'gui': '#151a1e', 'cterm': 0 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base0 = { 'gui': '#EAEAEA', 'cterm': 0 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base1 = { 'gui': '#1c2328', 'cterm': 8 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base1 = { 'gui': '#FAFAFA', 'cterm': 8 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base2 = { 'gui': '#232b32', 'cterm': 10 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base2 = { 'gui': '#FAFAFA', 'cterm': 10 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base3 = { 'gui': '#2a343c', 'cterm': 12 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base3 = { 'gui': '#FAFAFA', 'cterm': 12 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base4 = { 'gui': '#313d46', 'cterm': 11 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base5 = { 'gui': '#384550', 'cterm': 14 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base5 = { 'gui': '#EF7E46', 'cterm': 14 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base6 = { 'gui': '#3f4e5a', 'cterm': 7 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base6 = { 'gui': '#FAFAFA', 'cterm': 7 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.base7 = { 'gui': '#465764', 'cterm': 15 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.blue    = { 'gui': '#36A3D9', 'cterm': 4  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.cyan    = { 'gui': '#95E6CB', 'cterm': 6  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.green   = { 'gui': '#B8CC52', 'cterm': 2  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.magenta = { 'gui': '#F07178', 'cterm': 13 }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.orange  = { 'gui': '#FF7733', 'cterm': 9  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.red     = { 'gui': '#FF3333', 'cterm': 1  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.violet  = { 'gui': '#A37ACC', 'cterm': 5  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^  let s:c.yellow  = { 'gui': '#E7C547', 'cterm': 3  }$/;"	v
s:c	plugged/ayu-vim/autoload/airline/themes/ayu.vim	/^let s:c = {}$/;"	v
s:c	plugged/ayu-vim/colors/ayu.vim	/^let s:c      = ",undercurl"$/;"	v
s:cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:calc_size	plugged/fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
s:callback	plugged/fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
s:callbacks	plugged/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:cd_cmd	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_cmd() abort$/;"	f
s:cd_to_vcs_root	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
s:changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
s:channel_map	plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:channel_map = {}$/;"	v
s:char_bottom_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][g:startify_fortune_use_unicode]$/;"	v
s:char_bottom_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][g:startify_fortune_use_unicode]$/;"	v
s:char_map	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:char_map = {$/;"	v
s:char_sides	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_bottom	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][g:startify_fortune_use_unicode]$/;"	v
s:char_top_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][g:startify_fortune_use_unicode]$/;"	v
s:checkAutocmd	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
s:checkCommand	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
s:checkEnvironment	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
s:checkInitailize	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
s:checkVersion	plugged/coc.nvim/plugin/coc.vim	/^function! s:checkVersion() abort$/;"	f
s:check_back_space	init.vim	/^function! s:check_back_space() abort$/;"	f
s:check_requirements	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:check_user_options	plugged/vim-startify/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
s:checked	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:checked	plugged/fzf/plugin/fzf.vim	/^let s:checked = {}$/;"	v
s:checked_ctags	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:chomp	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:clap_matches	plugged/nord-vim/colors/nord.vim	/^let s:clap_matches = [$/;"	v
s:clearOldFolds	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
s:clear_match_by_id	plugged/coc.nvim/autoload/coc/util.vim	/^let s:clear_match_by_id = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:clear_match_by_window	plugged/coc.nvim/autoload/coc/highlight.vim	/^    let s:clear_match_by_window = 0$/;"	v
s:clear_match_by_window	plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:clear_match_by_window = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:client	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:close	plugged/vim-startify/autoload/startify.vim	/^function! s:close() abort$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
s:close_win	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:close_win(winid) abort$/;"	f
s:closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
s:cmd	plugged/fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
s:cmd_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:collect	plugged/fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
s:colour	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:colour(r, g, b)$/;"	f
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) abort "{{{$/;"	f
s:column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context) abort$/;"	f
s:column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context) abort$/;"	f
s:command_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(range, buffer_local, args)$/;"	f
s:commits_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_sink	plugged/fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
s:compare_binary_versions	plugged/fzf/plugin/fzf.vim	/^function! s:compare_binary_versions(a, b)$/;"	f
s:compare_by_index	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_index(foo, bar)$/;"	f
s:compare_by_key_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_key_len(foo, bar)$/;"	f
s:compare_by_kind	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
s:compare_by_line	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
s:compare_by_val_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
s:compare_typeinfo	plugged/tagbar/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compare_versions	plugged/fzf/plugin/fzf.vim	/^function! s:compare_versions(a, b)$/;"	f
s:complete_insert	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:configuration	plugged/aquarium-vim/colors/aquarium.vim	/^let s:configuration = {}$/;"	v
s:configuration	plugged/aquarium-vim/colors/aquarium.vim	/^let s:configuration.style = get(g:, 'aquarium_style', 'dark')$/;"	v
s:context	plugged/vim-easy-replace/autoload/easy_replace.vim	/^let s:context = {}$/;"	v
s:convert_config_nvim	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:convert_config_nvim(config) abort$/;"	f
s:cow	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:createKinddict	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
s:create_btns_buffer	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:create_btns_buffer(bufnr, width, buttons, borderbottom) abort$/;"	f
s:create_last_session_link	plugged/vim-startify/autoload/startify.vim	/^function! s:create_last_session_link(session_path)$/;"	f
s:create_popup	plugged/fzf/plugin/fzf.vim	/^  function s:create_popup(hl, opts) abort$/;"	f
s:create_popup	plugged/fzf/plugin/fzf.vim	/^  function! s:create_popup(hl, opts) abort$/;"	f
s:create_pseudotag	plugged/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
s:csi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:ctags_is_uctags	plugged/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:cterm00	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm00        = "00"$/;"	v
s:cterm00	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm00        = "00"$/;"	v
s:cterm01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm01        = "10"$/;"	v
s:cterm01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm01        = "18"$/;"	v
s:cterm01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm01        = "10"$/;"	v
s:cterm01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm01        = "18"$/;"	v
s:cterm02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm02        = "11"$/;"	v
s:cterm02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm02        = "19"$/;"	v
s:cterm02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm02        = "11"$/;"	v
s:cterm02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm02        = "19"$/;"	v
s:cterm03	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm03        = "08"$/;"	v
s:cterm03	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm03        = "08"$/;"	v
s:cterm04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm04        = "12"$/;"	v
s:cterm04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm04        = "20"$/;"	v
s:cterm04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm04        = "12"$/;"	v
s:cterm04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm04        = "20"$/;"	v
s:cterm05	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm05        = "07"$/;"	v
s:cterm05	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm05        = "07"$/;"	v
s:cterm06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm06        = "13"$/;"	v
s:cterm06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm06        = "21"$/;"	v
s:cterm06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm06        = "13"$/;"	v
s:cterm06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm06        = "21"$/;"	v
s:cterm07	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm07        = "15"$/;"	v
s:cterm07	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm07        = "15"$/;"	v
s:cterm08	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm08        = "01"$/;"	v
s:cterm08	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm08        = "01"$/;"	v
s:cterm09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm09        = "09"$/;"	v
s:cterm09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm09        = "16"$/;"	v
s:cterm09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm09        = "09"$/;"	v
s:cterm09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm09        = "16"$/;"	v
s:cterm0A	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm0A        = "03"$/;"	v
s:cterm0A	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm0A        = "03"$/;"	v
s:cterm0B	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm0B        = "02"$/;"	v
s:cterm0B	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm0B        = "02"$/;"	v
s:cterm0C	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm0C        = "06"$/;"	v
s:cterm0C	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm0C        = "06"$/;"	v
s:cterm0D	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm0D        = "04"$/;"	v
s:cterm0D	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm0D        = "04"$/;"	v
s:cterm0E	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:cterm0E        = "05"$/;"	v
s:cterm0E	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:cterm0E        = "05"$/;"	v
s:cterm0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm0F        = "14"$/;"	v
s:cterm0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^	let s:cterm0F        = "17"$/;"	v
s:cterm0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm0F        = "14"$/;"	v
s:cterm0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^	let s:cterm0F        = "17"$/;"	v
s:current_session	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:current_session() abort$/;"	f
s:cursor_bg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:cursor_bg = "#AFB5C6"$/;"	v
s:cursor_bg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:cursor_bg = s:gui02$/;"	v
s:debug_enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:default_action	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	plugged/fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_launch_cword_in_visual_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^const s:default_launch_cword_in_visual_key = '<Leader>rc'$/;"	C
s:default_launch_cword_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^const s:default_launch_cword_key = '<Leader>rc'$/;"	C
s:default_launch_in_visual_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^const s:default_launch_in_visual_key = '<Leader>ra'$/;"	C
s:default_launch_key	plugged/vim-easy-replace/plugin/easy_replace.vim	/^const s:default_launch_key = '<Leader>ra'$/;"	C
s:default_layout	plugged/fzf/plugin/fzf.vim	/^function! s:default_layout()$/;"	f
s:defaults	plugged/fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
s:defs	plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delayed_update_files	plugged/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:delete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:directives_end	plugged/vim-blade/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-blade/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-blade/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	plugged/vim-blade/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasS/;"	v
s:display_by_path	plugged/vim-startify/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
s:do_delayed_update	plugged/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
s:do_tests	plugged/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
s:dollar_add	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
s:dopopd	plugged/fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
s:dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
s:draw_box	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
s:echo_signature	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
s:emmet_settings	plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:emmet_unittest_complete	plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
s:empty_border	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:empty_border(border) abort$/;"	f
s:enc_to_cp	plugged/fzf/plugin/fzf.vim	/^  function! s:enc_to_cp(str)$/;"	f
s:err_remain_text	plugged/coc.nvim/autoload/coc/task.vim	/^let s:err_remain_text = {}$/;"	v
s:error	plugged/fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
s:error	plugged/vim-bbye/plugin/bbye.vim	/^function! s:error(msg)$/;"	f
s:error_sign	plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:escape	plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
s:escape	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape	plugged/fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
s:eval	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:evaluate_opts	plugged/fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
s:excmds	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:execute	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
s:execute	plugged/fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
s:execute_term	plugged/fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
s:execute_tmux	plugged/fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
s:exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exit_handler	plugged/fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
s:expand_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:extend	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
s:extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg = {}$/;"	v
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg.contrast   = {'dark': '#C2D94C', 'light': '#86B300', 'mirage': '#BAE67E'}[s:style]$/;"	v
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg.error      = {'dark': '#FF3333', 'light': '#FFF333', 'mirage': '#FF3333'}[s:style]$/;"	v
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg.primary    = {'dark': '#E6E1CF', 'light': '#5C6773', 'mirage': '#D9D7CE'}[s:style]$/;"	v
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg.secondary  = {'dark': '#14191F', 'light': '#F0F0F0', 'mirage': '#232838'}[s:style]$/;"	v
s:fg	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:fg.warning    = {'dark': '#FFBD54', 'light': '#F2AE49', 'mirage': '#FFDF80'}[s:style]$/;"	v
s:fg_none	plugged/ayu-vim/colors/ayu.vim	/^let s:fg_none = ' guifg=NONE ctermfg=NONE'$/;"	v
s:file_options	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filetype_map	plugged/coc.nvim/autoload/coc/list.vim	/^let s:filetype_map = {$/;"	v
s:fill_quickfix	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filter	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:filter(list, id) abort$/;"	f
s:filter_oldfiles	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
s:filter_oldfiles_unsafe	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
s:filtermx	plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]/;"	v
s:filters.filter	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^  function! s:filters.filter(candidates, context) abort$/;"	f
s:find_open_window	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:first_line	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:fixed_column	plugged/vim-startify/autoload/startify.vim	/^let s:fixed_column = g:startify_padding_left + 2$/;"	v
s:fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
s:float_supported	plugged/coc.nvim/autoload/coc/float.vim	/^let s:float_supported = exists('*nvim_open_win') || has('patch-8.1.1719')$/;"	v
s:fmt_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fold_col	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:fold_col = "NONE"$/;"	v
s:fold_col	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:fold_col = s:gui00$/;"	v
s:folded	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:folded = "NONE"$/;"	v
s:folded	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:folded = s:gui07$/;"	v
s:format_cmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_mark	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:funcs	plugged/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:funcs.buf_add_highlight	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_add_highlight(bufnr, srcId, hlGroup, line, colStart, colEnd) abort$/;"	f
s:funcs.buf_attach	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
s:funcs.buf_clear_namespace	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_clear_namespace(bufnr, srcId, startLine, endLine) abort$/;"	f
s:funcs.buf_del_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
s:funcs.buf_detach	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
s:funcs.buf_get_changedtick	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
s:funcs.buf_get_lines	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
s:funcs.buf_get_mark	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
s:funcs.buf_get_name	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
s:funcs.buf_get_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
s:funcs.buf_get_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
s:funcs.buf_is_valid	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
s:funcs.buf_line_count	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
s:funcs.buf_set_lines	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
s:funcs.buf_set_name	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
s:funcs.buf_set_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
s:funcs.buf_set_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
s:funcs.call_atomic	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
s:funcs.call_dict_function	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
s:funcs.call_function	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
s:funcs.command	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
s:funcs.command_output	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
s:funcs.create_namespace	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_namespace(name) abort$/;"	f
s:funcs.del_current_line	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line(line)$/;"	f
s:funcs.del_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
s:funcs.err_write	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
s:funcs.err_writeln	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
s:funcs.eval	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
s:funcs.feedkeys	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
s:funcs.get_api_info	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
s:funcs.get_current_buf	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
s:funcs.get_current_line	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
s:funcs.get_current_tabpage	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
s:funcs.get_current_win	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
s:funcs.get_mode	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
s:funcs.get_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
s:funcs.get_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
s:funcs.get_vvar	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
s:funcs.list_bufs	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
s:funcs.list_runtime_paths	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
s:funcs.list_tabpages	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
s:funcs.list_wins	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
s:funcs.out_write	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
s:funcs.set_client_info	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
s:funcs.set_current_buf	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
s:funcs.set_current_dir	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
s:funcs.set_current_line	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
s:funcs.set_current_tabpage	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tabnr) abort$/;"	f
s:funcs.set_current_win	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(win_id) abort$/;"	f
s:funcs.set_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
s:funcs.set_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
s:funcs.strwidth	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
s:funcs.subscribe	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
s:funcs.tabpage_del_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_number	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(id)$/;"	f
s:funcs.tabpage_get_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_win	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tabnr)$/;"	f
s:funcs.tabpage_is_valid	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tabnr)$/;"	f
s:funcs.tabpage_list_wins	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tabnr)$/;"	f
s:funcs.tabpage_set_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tabnr, name, value)$/;"	f
s:funcs.unsubscribe	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
s:funcs.win_close	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_close(win_id, ...) abort$/;"	f
s:funcs.win_del_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(win_id, name) abort$/;"	f
s:funcs.win_get_buf	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
s:funcs.win_get_cursor	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(win_id) abort$/;"	f
s:funcs.win_get_height	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(win_id) abort$/;"	f
s:funcs.win_get_number	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(win_id) abort$/;"	f
s:funcs.win_get_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(win_id, name) abort$/;"	f
s:funcs.win_get_position	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(win_id) abort$/;"	f
s:funcs.win_get_tabpage	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(win_id) abort$/;"	f
s:funcs.win_get_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(win_id, name) abort$/;"	f
s:funcs.win_get_width	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(win_id) abort$/;"	f
s:funcs.win_is_valid	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(win_id) abort$/;"	f
s:funcs.win_set_buf	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_buf(win_id, buf_id) abort$/;"	f
s:funcs.win_set_cursor	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(win_id, pos) abort$/;"	f
s:funcs.win_set_height	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(win_id, height) abort$/;"	f
s:funcs.win_set_option	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(win_id, name, value) abort$/;"	f
s:funcs.win_set_var	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(win_id, name, value) abort$/;"	f
s:funcs.win_set_width	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(win_id, width) abort$/;"	f
s:function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:fzf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_call	plugged/fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
s:fzf_expand	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
s:fzf_fnamemodify	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
s:fzf_getcwd	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
s:fzf_go	plugged/fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_restore_colors	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_tempname	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
s:fzf_tmux	plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
s:fzf_tmux	plugged/fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:fzf_vim_term	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:gen_filter_keys	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:gen_filter_keys(line) abort$/;"	f
s:generate_wildignore_options	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
s:getChildren	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
s:getChildrenByName	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
s:getClosedParentTline	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
s:getDataType	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getDataType	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getDistro	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:getDistro()$/;"	f
s:getKind	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
s:getTagsByName	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
s:get_color	plugged/coc.nvim/plugin/coc.vim	/^function! s:get_color(item, fallback) abort$/;"	f
s:get_color	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color	plugged/fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_current_word	plugged/vim-easy-replace/plugin/easy_replace.vim	/^fun! s:get_current_word()$/;"	f
s:get_cursorline	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
s:get_git_root	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_height	plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_height(lines, config) abort$/;"	f
s:get_index_as_string	plugged/vim-startify/autoload/startify.vim	/^function! s:get_index_as_string() abort$/;"	f
s:get_line	plugged/vim-easy-replace/plugin/easy_replace.vim	/^fun! s:get_line()$/;"	f
s:get_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
s:get_map_str	plugged/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
s:get_options	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_options(winid) abort$/;"	f
s:get_random_offset	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
s:get_tabnr	plugged/coc.nvim/autoload/coc/api.vim	/^function! s:get_tabnr(winid) abort$/;"	f
s:get_topline	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
s:get_version	plugged/fzf/plugin/fzf.vim	/^function s:get_version(bin)$/;"	f
s:get_win_opts	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_win_opts(winid) abort$/;"	f
s:getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
s:getline	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
s:getpos	plugged/fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
s:gettime	plugged/tagbar/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
s:given_range	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:given_range(line1, line2)$/;"	f
s:go	plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
s:goto_markedwin	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
s:goto_tagbar	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
s:goto_win	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
s:grey_colour	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_colour(n)$/;"	f
s:grey_level	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_level(n)$/;"	f
s:grey_number	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_number(x)$/;"	f
s:gui	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:gui = has('gui_running') || has('nvim')$/;"	v
s:gui00	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui00 = '#20202A' " Default Background$/;"	v
s:gui00	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui00 = '#E6E6F1' " Default Background$/;"	v
s:gui00	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui00 = ['#20202A', 235] " Default Background$/;"	v
s:gui00	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui00 = ['#E6E6F1', 254]$/;"	v
s:gui00	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui00     = "#20202A"$/;"	v
s:gui00	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui00     = "#292B2F"$/;"	v
s:gui00	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui00     = "#E6E6F1"$/;"	v
s:gui01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui01 = '#2C2E3E' " Lighter Background (Used for status bars, line number and folding mark/;"	v
s:gui01	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui01 = '#D5D4E0' " Lighter Background (Used for status bars, line number and folding mark/;"	v
s:gui01	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui01 = ['#2C2E3E', 237] " Lighter Background (Used for status bars, line number and f/;"	v
s:gui01	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui01 = ['#D5D4E0', 253]$/;"	v
s:gui01	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui01     = "#2C2E3E"$/;"	v
s:gui01	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui01     = "#36393F"$/;"	v
s:gui01	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui01     = "#D5D4E0"$/;"	v
s:gui02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui02 = '#A7B7D6' " Selection Background$/;"	v
s:gui02	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui02 = '#E1E1EC' " Selection Background$/;"	v
s:gui02	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui02 = ['#A7B7D6', 252] " Selection Background$/;"	v
s:gui02	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui02 = ['#E1E1EC', 255]$/;"	v
s:gui02	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui02     = "#97A1AF"$/;"	v
s:gui02	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui02     = "#A7B7D6"$/;"	v
s:gui02	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui02     = "#E1E1EC"$/;"	v
s:gui03	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui03 = '#3D4059' " Comments, Invisibles, Line Highlighting$/;"	v
s:gui03	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui03 = '#CCCBD9' " Comments, Invisibles, Line Highlighting$/;"	v
s:gui03	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui03 = ['#3D4059', 238] " Comments, Invisibles, Line Highlighting$/;"	v
s:gui03	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui03 = ['#CCCBD9', 195]$/;"	v
s:gui03	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui03     = "#3D4059"$/;"	v
s:gui03	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui03     = "#4D5664"$/;"	v
s:gui03	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui03     = "#CCCBD9"$/;"	v
s:gui04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui04 = '#C6D0E9' " Dark Foreground (Used for status bars)$/;"	v
s:gui04	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui04 = '#7F8E9D' " Dark Foreground (Used for status bars)$/;"	v
s:gui04	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui04 = ['#7F8E9D', 246]$/;"	v
s:gui04	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui04 = ['#C6D0E9', 254] " Dark Foreground (Used for status bars)$/;"	v
s:gui04	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui04     = "#7F8E9D"$/;"	v
s:gui04	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui04     = "#C6D0E9"$/;"	v
s:gui04	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui04     = "#C8D0DA"$/;"	v
s:gui05	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui05 = '#63718B' " Default Foreground, Caret, Delimiters, Operators$/;"	v
s:gui05	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui05 = '#708190' " Default Foreground, Caret, Delimiters, Operators$/;"	v
s:gui05	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui05 = ['#63718B', 179] " Default Foreground, Caret, Delimiters, Operators$/;"	v
s:gui05	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui05 = ['#708190', 243]$/;"	v
s:gui05	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui05     = "#63718B"$/;"	v
s:gui05	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui05     = "#708190"$/;"	v
s:gui05	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui05     = "#DCE4EE"$/;"	v
s:gui06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui06 = '#313449' " Light Foreground (Not often used)$/;"	v
s:gui06	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui06 = '#9CA6B9' " Light Foreground (Not often used)$/;"	v
s:gui06	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui06 = ['#313449', 107] " Light Foreground (Not often used)$/;"	v
s:gui06	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui06 = ['#9CA6B9', 248]$/;"	v
s:gui06	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui06     = "#313449"$/;"	v
s:gui06	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui06     = "#44484F"$/;"	v
s:gui06	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui06     = "#9CA6B9"$/;"	v
s:gui07	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui07 = '#1A1A24' " Light Background (Not often used)$/;"	v
s:gui07	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui07 = '#D7D7E2' " Light Background (Not often used)$/;"	v
s:gui07	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui07 = ['#1A1A24', 234] " Light Background (Not often used)$/;"	v
s:gui07	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui07 = ['#D7D7E2', 252]$/;"	v
s:gui07	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui07     = "#1A1A24"$/;"	v
s:gui07	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui07     = "#1F2025"$/;"	v
s:gui07	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui07     = "#D7D7E2"$/;"	v
s:gui08	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui08 = '#EBB9B9' " Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted (red/;"	v
s:gui08	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui08 = '#C34864' " Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted (red/;"	v
s:gui08	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui08 = ['#C34864', 197]$/;"	v
s:gui08	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui08 = ['#EBB9B9', 217] " Variables, XML Tags, Markup Link Text, Markup Lists, Diff D/;"	v
s:gui08	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui08     = "#C34864"$/;"	v
s:gui08	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui08     = "#EBB9B9"$/;"	v
s:gui09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui09 = '#E8CCA7' " Integers, Boolean, Constants, XML Attributes, Markup Link Url (orange)$/;"	v
s:gui09	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui09 = '#D66652' " Integers, Boolean, Constants, XML Attributes, Markup Link Url (orange)$/;"	v
s:gui09	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui09 = ['#D66652', 202]$/;"	v
s:gui09	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui09 = ['#E8CCA7', 222] " Integers, Boolean, Constants, XML Attributes, Markup Link U/;"	v
s:gui09	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui09     = "#D66652"$/;"	v
s:gui09	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui09     = "#E8CCA7"$/;"	v
s:gui09	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui09     = "#EBD1B9"$/;"	v
s:gui0A	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0A = '#E6DFB8' " Classes, Markup Bold, Search Text Background (yellow)$/;"	v
s:gui0A	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0A = '#DE956F' " Classes, Markup Bold, Search Text Background (yellow)$/;"	v
s:gui0A	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0A = ['#DE956F', 172]$/;"	v
s:gui0A	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0A = ['#E6DFB8', 229] " Classes, Markup Bold, Search Text Background (yellow)$/;"	v
s:gui0A	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0A     = "#DE956F"$/;"	v
s:gui0A	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0A     = "#E6DFB8"$/;"	v
s:gui0A	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0A     = "#EBE3B9"$/;"	v
s:gui0B	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0B = '#B1DBA4' " Strings, Inherited Class, Markup Code, Diff Inserted (green)$/;"	v
s:gui0B	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0B = '#7D9685' " Strings, Inherited Class, Markup Code, Diff Inserted (green)$/;"	v
s:gui0B	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0B = ['#7D9685', 65]$/;"	v
s:gui0B	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0B = ['#B1DBA4', 114] " Strings, Inherited Class, Markup Code, Diff Inserted (green/;"	v
s:gui0B	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0B     = "#7D9685"$/;"	v
s:gui0B	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0B     = "#B1DBA4"$/;"	v
s:gui0B	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0B     = "#C2EBB9"$/;"	v
s:gui0C	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0C = '#B8DCEB' " Support, Regular Expressions, Escape Characters, Markup Quotes (cyan)$/;"	v
s:gui0C	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0C = '#829FB0' " Support, Regular Expressions, Escape Characters, Markup Quotes (cyan)$/;"	v
s:gui0C	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0C = ['#829FB0', 67]$/;"	v
s:gui0C	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0C = ['#B8DCEB', 117] " Support, Regular Expressions, Escape Characters, Markup Quo/;"	v
s:gui0C	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0C     = "#829FB0"$/;"	v
s:gui0C	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0C     = "#B8DEEB"$/;"	v
s:gui0C	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0C     = "#B9DEEB"$/;"	v
s:gui0D	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0D = '#A3B8EF' " Functions, Methods, Attribute IDs, Headings (blue)$/;"	v
s:gui0D	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0D = '#6A8CBC' " Functions, Methods, Attribute IDs, Headings (blue)$/;"	v
s:gui0D	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0D = ['#6A8CBC', 105]$/;"	v
s:gui0D	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0D = ['#A3B8EF', 111] " Functions, Methods, Attribute IDs, Headings (blue)$/;"	v
s:gui0D	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0D     = "#6A8CBC"$/;"	v
s:gui0D	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0D     = "#B9CAEB"$/;"	v
s:gui0D	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0D     = "#CDDBF9"$/;"	v
s:gui0E	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0E = '#F6BBE7' " Keywords, Storage, Selector, Markup Italic, Diff Changed (magenta)$/;"	v
s:gui0E	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0E = '#8787BF' " Keywords, Storage, Selector, Markup Italic, Diff Changed (magenta)$/;"	v
s:gui0E	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0E = ['#8787BF', 98]$/;"	v
s:gui0E	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0E = ['#F6BBE7', 219] " Keywords, Storage, Selector, Markup Italic, Diff Changed (m/;"	v
s:gui0E	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0E     = "#8787BF"$/;"	v
s:gui0E	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0E     = "#D9B9EB"$/;"	v
s:gui0E	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0E     = "#F6BBE7"$/;"	v
s:gui0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:gui0F = '#EAC1C1' " Deprecated, Opening\/Closing Embedded Language Tags, e.g. `<?php ?>` (/;"	v
s:gui0F	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:gui0F = '#E06B6B' " Deprecated, Opening\/Closing Embedded Language Tags, e.g. `<?php ?>` (/;"	v
s:gui0F	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0F = ['#E06B6B', 100]$/;"	v
s:gui0F	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^    let s:gui0F = ['#EAC1C1', 210] " Deprecated, Opening\/Closing Embedded Language Tags, e.g. `/;"	v
s:gui0F	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0F     = "#E06B6B"$/;"	v
s:gui0F	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0F     = "#EAC1C1"$/;"	v
s:gui0F	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:gui0F     = "#EBB9D9"$/;"	v
s:hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:has_any	plugged/fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
s:has_attr	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^function s:has_attr(attr, mode)$/;"	f
s:helptag_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hi	plugged/aquarium-vim/colors/aquarium.vim	/^function! s:hi(group, guifg, guibg, ctermfg, ctermbg, attr, guisp)$/;"	f
s:hi	plugged/nord-vim/colors/nord.vim	/^function! s:hi(group, guifg, guibg, ctermfg, ctermbg, attr, guisp)$/;"	f
s:hide_endofbuffer_markers	plugged/vim-startify/autoload/startify.vim	/^function! s:hide_endofbuffer_markers()$/;"	f
s:highlight_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:history	plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:htmlindent	plugged/vim-blade/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:i	plugged/ayu-vim/colors/ayu.vim	/^let s:i      = ",italic"$/;"	v
s:ics	plugged/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:initFoldState	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
s:init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:init_env	plugged/vim-startify/autoload/startify.vim	/^function! s:init_env()$/;"	f
s:init_var	plugged/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
s:initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:inject_snippet	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
s:inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
s:insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
s:inspect_type	plugged/coc.nvim/autoload/coc/api.vim	/^function s:inspect_type(v) abort$/;"	f
s:install_plugin	plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
s:isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:is_blocking	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:is_blocking() abort$/;"	f
s:is_buffergator_buffers_open	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:is_buffergator_buffers_open = 0$/;"	v
s:is_buffergator_tabs_open	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:is_buffergator_tabs_open = 0$/;"	v
s:is_gvim	plugged/coc.nvim/plugin/coc.vim	/^let s:is_gvim = get(v:, 'progname', '') ==# 'gvim'$/;"	v
s:is_in_skiplist	plugged/vim-startify/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
s:is_maximized	plugged/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/compat.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/float.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:italic	plugged/nord-vim/colors/nord.vim	/^  let s:italic = ""$/;"	v
s:italic	plugged/nord-vim/colors/nord.vim	/^let s:italic = "italic,"$/;"	v
s:italicize_comments	plugged/nord-vim/colors/nord.vim	/^    let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	plugged/nord-vim/colors/nord.vim	/^let s:italicize_comments = ""$/;"	v
s:itemno	plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
s:jump	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:keepcpo	RltvNmbr.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	RltvNmbrPlugin.vim	/^let s:keepcpo= &cpo$/;"	v
s:key_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:known_files	plugged/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_files.get	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
s:known_files.has	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
s:known_files.put	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
s:known_files.rm	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_alt_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_highlight_tline	plugged/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_wildignores	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:launcher	plugged/fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	plugged/fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	plugged/fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'tmux', 'up', 'down', 'left', 'right']$/;"	v
s:left	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
s:leftmouse	plugged/vim-startify/autoload/startify.vim	/^  function! s:leftmouse()$/;"	f
s:leftpad	plugged/vim-startify/autoload/startify.vim	/^let s:leftpad = repeat(' ', g:startify_padding_left)$/;"	v
s:line	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:line = s:gui07$/;"	v
s:line	plugged/aquarium-vim/colors/aquarium.vim	/^let s:line = "NONE"$/;"	v
s:line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:linenr_bg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:linenr_bg = ""$/;"	v
s:linenr_bg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:linenr_bg = s:gui01$/;"	v
s:linenr_bg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:linenr_bg = s:gui07$/;"	v
s:linenr_fg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:linenr_fg = "#414560"$/;"	v
s:linenr_fg	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:linenr_fg = s:gui02$/;"	v
s:load_buffer	plugged/coc.nvim/autoload/coc/list.vim	/^function! s:load_buffer(name) abort$/;"	f
s:localvar	plugged/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
s:log	plugged/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
s:logWarning	plugged/nord-vim/colors/nord.vim	/^function! s:logWarning(msg)$/;"	f
s:logfile	plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = resolve($NODE_CLIENT_LOG_FILE)$/;"	v
s:logfile	plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = tempname()$/;"	v
s:logging	plugged/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:logn	plugged/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
s:manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map_next	plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:mark_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:mark_window	plugged/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
s:matchbegin	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
s:matchend	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
s:max_firstline	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
s:maybe_map_scope	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:maybe_map_scope(scopestr) abort$/;"	f
s:merge_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:min_btns_width	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:min_btns_width(buttons) abort$/;"	f
s:min_version	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:mode_pattern	plugged/vim-easy-replace/autoload/easy_replace.vim	/^const s:mode_pattern = 'pattern'$/;"	C
s:mode_replace	plugged/vim-easy-replace/autoload/easy_replace.vim	/^const s:mode_replace = 'replace'$/;"	C
s:mx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}'$/;"	v
s:n	plugged/ayu-vim/colors/ayu.vim	/^let s:n      = "NONE"$/;"	v
s:name	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:namespace_cache	plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_cache = {}$/;"	v
s:namespace_id	plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_id = 1$/;"	v
s:namespace_map	plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:namespace_map = {}$/;"	v
s:nbs	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nearby_disabled	plugged/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:new	plugged/vim-bbye/plugin/bbye.vim	/^function! s:new(bang)$/;"	f
s:new_window	plugged/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:none	plugged/ayu-vim/colors/ayu.vim	/^let s:none   = "NONE"$/;"	v
s:nord0	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord0_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord0_gui = "#2E3440"$/;"	v
s:nord0_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord0_gui = "#2E3440"$/;"	v
s:nord0_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord0_term = "NONE"$/;"	v
s:nord1	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord10_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord10_gui = "#5E81AC"$/;"	v
s:nord10_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord10_gui = "#5E81AC"$/;"	v
s:nord10_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord10_term = "12"$/;"	v
s:nord10_term	plugged/nord-vim/colors/nord.vim	/^let s:nord10_term = "12"$/;"	v
s:nord11	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord11_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord11_gui = "#BF616A"$/;"	v
s:nord11_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord11_gui = "#BF616A"$/;"	v
s:nord11_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord11_term = "1"$/;"	v
s:nord11_term	plugged/nord-vim/colors/nord.vim	/^let s:nord11_term = "1"$/;"	v
s:nord12	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord12_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord12_gui = "#D08770"$/;"	v
s:nord12_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord12_gui = "#D08770"$/;"	v
s:nord12_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord12_term = "11"$/;"	v
s:nord12_term	plugged/nord-vim/colors/nord.vim	/^let s:nord12_term = "11"$/;"	v
s:nord13	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord13_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord13_gui = "#EBCB8B"$/;"	v
s:nord13_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord13_gui = "#EBCB8B"$/;"	v
s:nord13_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord13_term = "3"$/;"	v
s:nord13_term	plugged/nord-vim/colors/nord.vim	/^let s:nord13_term = "3"$/;"	v
s:nord14	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord14_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord14_gui = "#A3BE8C"$/;"	v
s:nord14_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord14_gui = "#A3BE8C"$/;"	v
s:nord14_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord14_term = "2"$/;"	v
s:nord14_term	plugged/nord-vim/colors/nord.vim	/^let s:nord14_term = "2"$/;"	v
s:nord15	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord15_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord15_gui = "#B48EAD"$/;"	v
s:nord15_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord15_gui = "#B48EAD"$/;"	v
s:nord15_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord15_term = "5"$/;"	v
s:nord15_term	plugged/nord-vim/colors/nord.vim	/^let s:nord15_term = "5"$/;"	v
s:nord1_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord1_gui = "#3B4252"$/;"	v
s:nord1_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord1_gui = "#3B4252"$/;"	v
s:nord1_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord1_term = "0"$/;"	v
s:nord1_term	plugged/nord-vim/colors/nord.vim	/^let s:nord1_term = "0"$/;"	v
s:nord2	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord2_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord2_gui = "#434C5E"$/;"	v
s:nord2_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord2_gui = "#434C5E"$/;"	v
s:nord2_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord2_term = "NONE"$/;"	v
s:nord3	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord3_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord3_gui = "#4C566A"$/;"	v
s:nord3_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui = "#4C566A"$/;"	v
s:nord3_gui_bright	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui_bright = "#616E88"$/;"	v
s:nord3_gui_brightened	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui_brightened = [$/;"	v
s:nord3_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord3_term = "8"$/;"	v
s:nord3_term	plugged/nord-vim/colors/nord.vim	/^let s:nord3_term = "8"$/;"	v
s:nord4	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord4_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord4_gui = "#D8DEE9"$/;"	v
s:nord4_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord4_gui = "#D8DEE9"$/;"	v
s:nord4_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord4_term = "NONE"$/;"	v
s:nord5	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord5_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord5_gui = "#E5E9F0"$/;"	v
s:nord5_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord5_gui = "#E5E9F0"$/;"	v
s:nord5_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord5_term = "7"$/;"	v
s:nord5_term	plugged/nord-vim/colors/nord.vim	/^let s:nord5_term = "7"$/;"	v
s:nord6	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord6_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord6_gui = "#ECEFF4"$/;"	v
s:nord6_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord6_gui = "#ECEFF4"$/;"	v
s:nord6_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord6_term = "15"$/;"	v
s:nord6_term	plugged/nord-vim/colors/nord.vim	/^let s:nord6_term = "15"$/;"	v
s:nord7	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord7_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord7_gui = "#8FBCBB"$/;"	v
s:nord7_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord7_gui = "#8FBCBB"$/;"	v
s:nord7_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord7_term = "14"$/;"	v
s:nord7_term	plugged/nord-vim/colors/nord.vim	/^let s:nord7_term = "14"$/;"	v
s:nord8	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord8_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord8_gui = "#88C0D0"$/;"	v
s:nord8_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord8_gui = "#88C0D0"$/;"	v
s:nord8_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord8_term = "6"$/;"	v
s:nord8_term	plugged/nord-vim/colors/nord.vim	/^let s:nord8_term = "6"$/;"	v
s:nord9	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nord9_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord9_gui = "#81A1C1"$/;"	v
s:nord9_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord9_gui = "#81A1C1"$/;"	v
s:nord9_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord9_term = "4"$/;"	v
s:nord9_term	plugged/nord-vim/colors/nord.vim	/^let s:nord9_term = "4"$/;"	v
s:nord_vim_version	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord_vim_version="0.18.0"$/;"	v
s:nord_vim_version	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord_vim_version="0.18.0"$/;"	v
s:nord_vim_version	plugged/nord-vim/colors/nord.vim	/^let s:nord_vim_version="0.18.0"$/;"	v
s:normal	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:normal = "NONE"$/;"	v
s:normal	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:normal = s:gui00$/;"	v
s:notify	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
s:ns_id	plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:ns_id = 1$/;"	v
s:nvim_create_keymap	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_create_keymap(winid) abort$/;"	f
s:nvim_get_botline	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_get_botline(topline, height, width, bufnr) abort$/;"	f
s:nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:on_async_response	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
s:on_exit	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
s:on_exit	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
s:on_stderr	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
s:on_stderr	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
s:on_stdout	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
s:on_vimenter	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
s:on_vimleavepre	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
s:open	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	plugged/fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
s:openKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
s:openParents	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
s:open_buffer	plugged/vim-startify/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
s:opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
s:opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
s:osascript	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
s:out_remain_text	plugged/coc.nvim/autoload/coc/task.vim	/^let s:out_remain_text = {}$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.inactive.left = [ [ s:gui04, s:gui06 ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.inactive.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.inactive.right = [ [ s:gui04, s:gui06 ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.insert.left = [ [ s:gui00, s:gui0B ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.insert.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.insert.right = [ [ s:gui00, s:gui0B ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.normal.error = [ [ s:gui00, s:gui0F ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.normal.left = [ [ s:gui00, s:gui0D ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.normal.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.normal.right = [ [ s:gui00, s:gui0D ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.normal.warning = [ [ s:gui00, s:gui0A ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.replace.left = [ [ s:gui00, s:gui0C ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.replace.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.replace.right = [ [ s:gui00, s:gui0C ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.tabline.left = [ [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.tabline.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.tabline.right = [ [ s:gui08, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.tabline.tabsel = [ [ s:gui00, s:gui08 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.visual.left = [ [ s:gui00, s:gui0E ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.visual.middle = [ [ s:gui04, s:gui01 ] ]$/;"	v
s:p	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:p.visual.right = [ [ s:gui00, s:gui0E ], [ s:gui04, s:gui06 ] ]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.inactive.left   = [[s:fg.primary, s:bg.secondary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.inactive.middle = [[s:fg.primary, s:bg.secondary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.inactive.right  = [[s:fg.primary, s:bg.secondary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.insert.left     = [[s:fg.secondary, s:bg.insert], [s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.normal.error    = [[s:fg.error, s:bg.primary, 'bold']]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.normal.left     = [[s:fg.primary, s:bg.normal], [s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.normal.middle   = [[s:fg.contrast, s:bg.secondary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.normal.right    = [[s:fg.primary, s:bg.primary], [s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.normal.warning  = [[s:fg.warning, s:bg.primary, 'bold']]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.replace.left    = [[s:fg.secondary, s:bg.replace], [s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.tabline.left    = [[s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.tabline.tabsel  = [[s:fg.secondary, s:bg.contrast]]$/;"	v
s:p	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:p.visual.left     = [[s:fg.secondary, s:bg.visual], [s:fg.primary, s:bg.primary]]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = g:nord_uniform_status_lines == 0 ? [ [ s:nord5, s:nord1 ] ] : [ [ s:no/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:padding_left	plugged/vim-startify/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette = {}$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.current_selection = { 'ctermbg': '236', 'guibg': s:gui01, 'cterm': s:bold, 'gui': /;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.current_selection_sign = s:palette.selected_sign$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.display = { 'ctermbg': '0', 'guibg': 'gui01' }$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.indicator = extend({ 'ctermfg': '238', 'guifg': s:gui01 }, s:bg0)$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.input = s:bg0$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.preview = { 'ctermbg': '238', 'guibg': s:gui00 }$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.search_text = extend({ 'ctermfg': '4', 'guifg': s:gui0D, 'cterm': s:bold, 'gui': s/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.selected = { 'ctermfg': '81', 'guifg': s:gui0C, 'cterm': 'bold,underline', 'gui': /;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.selected_sign = { 'ctermfg': '196', 'guifg': s:gui0A }$/;"	v
s:palette	plugged/aquarium-vim/colors/aquarium.vim	/^let s:palette.spinner = extend({ 'ctermfg': '11', 'guifg': s:gui0A, 'cterm': s:bold, 'gui': s:bo/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette = {}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.accent    = {'dark': "#F29718",  'light': "#FF6A00",  'mirage': "#FFCC66"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.bg        = {'dark': "#0F1419",  'light': "#FAFAFA",  'mirage': "#212733"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.comment   = {'dark': "#5C6773",  'light': "#ABB0B6",  'mirage': "#5C6773"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.constant  = {'dark': "#FFEE99",  'light': "#A37ACC",  'mirage': "#D4BFFF"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.error     = {'dark': "#FF3333",  'light': "#FF3333",  'mirage': "#FF3333"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.fg        = {'dark': "#E6E1CF",  'light': "#5C6773",  'mirage': "#D9D7CE"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.fg_idle   = {'dark': "#3E4B59",  'light': "#828C99",  'mirage': "#607080"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.function  = {'dark': "#FFB454",  'light': "#F29718",  'mirage': "#FFD57F"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.guide     = {'dark': "#2D3640",  'light': "#D9D8D7",  'mirage': "#3D4751"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.keyword   = {'dark': "#FF7733",  'light': "#FF7733",  'mirage': "#FFAE57"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.line      = {'dark': "#151A1E",  'light': "#F3F3F3",  'mirage': "#242B38"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.markup    = {'dark': "#F07178",  'light': "#F07178",  'mirage': "#F07178"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.operator  = {'dark': "#E7C547",  'light': "#E7C547",  'mirage': "#80D4FF"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.panel     = {'dark': "#14191F",  'light': "#FFFFFF",  'mirage': "#272D38"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.regexp    = {'dark': "#95E6CB",  'light': "#4CBF99",  'mirage': "#95E6CB"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.selection = {'dark': "#253340",  'light': "#F0EEE4",  'mirage': "#343F4C"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.special   = {'dark': "#E6B673",  'light': "#E6B673",  'mirage': "#FFC44C"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.string    = {'dark': "#B8CC52",  'light': "#86B300",  'mirage': "#BBE67E"}$/;"	v
s:palette	plugged/ayu-vim/colors/ayu.vim	/^let s:palette.tag       = {'dark': "#36A3D9",  'light': "#36A3D9",  'mirage': "#5CCFE6"}$/;"	v
s:palette	plugged/tokyonight.nvim/autoload/lightline/colorscheme/tokyonight.vim	/^let s:palette = v:lua.require('lightline.colorscheme.tokyonight')$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? /;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	plugged/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:phpindent	plugged/vim-blade/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pluck	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:popup	plugged/fzf/plugin/fzf.vim	/^function! s:popup(opts) abort$/;"	f
s:popup_cursor	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_cursor(n) abort$/;"	f
s:popup_list	plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list = []$/;"	v
s:popup_list_api	plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list_api = exists('*popup_list')$/;"	v
s:popup_position	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_position(config) abort$/;"	f
s:popup_support	plugged/fzf/plugin/fzf.vim	/^function! s:popup_support()$/;"	f
s:popup_visible	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_visible(id) abort$/;"	f
s:predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prefix	plugged/coc.nvim/autoload/coc/list.vim	/^let s:prefix = '[List Preview]'$/;"	v
s:prepend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:present	plugged/fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
s:print_section_header	plugged/vim-startify/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
s:process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
s:process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:progresschars	plugged/coc.nvim/autoload/coc/float.vim	/^let s:progresschars = get(g:, 'coc_progress_chars', ['░', '▇'])$/;"	v
s:prompt_win_bufnr	plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_bufnr = 0$/;"	v
s:prompt_win_width	plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_width = get(g:, 'coc_prompt_win_width', 32)$/;"	v
s:prop_offset	plugged/coc.nvim/autoload/coc/api.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:prop_offset	plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:prop_type_hlgroup	plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:prop_type_hlgroup(type) abort$/;"	f
s:pushd	plugged/fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
s:pwin_by_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:quit	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	plugged/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:r	plugged/ayu-vim/colors/ayu.vim	/^let s:r      = ",reverse"$/;"	v
s:redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
s:reduce_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:register	plugged/vim-startify/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
s:reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
s:reload	plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
s:removeChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
s:removeTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
s:remove_layout	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:replaceWord	plugged/vim-easy-replace/plugin/easy_replace.vim	/^fun! s:replaceWord(...)$/;"	f
s:request	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
s:request_async	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
s:reset	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:reset() abort$/;"	f
s:reset	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
s:reverse_list	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:rgb_colour	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_level(n)$/;"	f
s:rgb_number	plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_number(x)$/;"	f
s:right	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
s:root	plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/autoload/coc/float.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:run_system	plugged/tagbar/autoload/tagbar.vim	/^function! s:run_system(cmd, version) abort$/;"	f
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:running_task	plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:s	plugged/ayu-vim/colors/ayu.vim	/^let s:s      = ",standout"$/;"	v
s:save_cpo	plugged/aquarium-vim/colors/aquarium.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/nvim-web-devicons/plugin/nvim-web-devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-buffergator/plugin/buffergator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-cool/plugin/cool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easy-replace/autoload/easy_replace.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easy-replace/plugin/easy_replace.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_cursor	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_ve	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_ve = &t_ve$/;"	v
s:saveh	plugged/vim-cool/plugin/cool.vim	/^    let s:saveh = &highlight$/;"	v
s:scheme_slug	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_dark.vim	/^let s:scheme_slug = substitute("aquarium_dark", "-", "_", "g")$/;"	v
s:scheme_slug	plugged/aquarium-vim/autoload/airline/themes/base16_aquarium_light.vim	/^let s:scheme_slug = substitute("aquarium_light", "-", "_", "g")$/;"	v
s:search_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:seed	plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:select_api	plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:sep	plugged/vim-startify/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	plugged/vim-startify/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:session_dir	plugged/vim-startify/autoload/startify.vim	/^let s:session_dir = startify#get_session_path()$/;"	v
s:session_names	plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:session_names = []$/;"	v
s:set	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
s:setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_cursor	plugged/vim-startify/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
s:set_custom_section	plugged/vim-startify/autoload/startify.vim	/^function! s:set_custom_section(section) abort$/;"	f
s:set_mappings	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
s:setup_keymaps	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
s:setup_options	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
s:setup_styledEmmetAbbreviation	plugged/emmet-vim/plugin/emmet.vim	/^function! s:setup_styledEmmetAbbreviation() abort$/;"	f
s:sfile	plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:shellesc_cmd	plugged/fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:short_help	plugged/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:shortpath	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:shortpath	plugged/fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
s:shouldFt	plugged/nvim-treesitter/ftdetect/query.vim	/^function! s:shouldFt(path)$/;"	f
s:show_bookmarks	plugged/vim-startify/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
s:show_category	plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
s:show_commands	plugged/vim-startify/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
s:show_dir	plugged/vim-startify/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
s:show_documentation	init.vim	/^function! s:show_documentation()$/;"	f
s:show_done	plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
s:show_files	plugged/vim-startify/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
s:show_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
s:show_ng	plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
s:show_ok	plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
s:show_pass	plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
s:show_sessions	plugged/vim-startify/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
s:show_skip	plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
s:show_title	plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
s:show_type	plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
s:sign_col	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:sign_col = "NONE"$/;"	v
s:sign_col	plugged/aquarium-vim/colors/aquarium.vim	/^    let s:sign_col = s:gui00$/;"	v
s:singular_types	plugged/tagbar/autoload/tagbar.vim	/^let s:singular_types = {$/;"	v
s:softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:sortByLength	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
s:sortTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
s:sort_buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by_mtime	plugged/vim-startify/autoload/startify.vim	/^    function! s:sort_by_mtime(foo, bar)$/;"	f
s:sort_by_tick	plugged/vim-startify/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
s:split	plugged/fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
s:splittable	plugged/fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
s:start	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
s:start_prompt	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt()$/;"	f
s:start_prompt_vim	plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt_vim() abort$/;"	f
s:statusline_in_use	plugged/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:str	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
s:str2bufnr	plugged/vim-bbye/plugin/bbye.vim	/^function! s:str2bufnr(buffer)$/;"	f
s:str_compose	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:str_compose(line, idx, text) abort$/;"	f
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strip	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strip_white_space	plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:style	plugged/aquarium-vim/autoload/lightline/colorscheme/aquarium.vim	/^let s:style = get(g:, 'aquarium_style', 'dark')$/;"	v
s:style	plugged/ayu-vim/autoload/lightline/colorscheme/ayu.vim	/^let s:style = get(g:, 'ayucolor', 'dark')$/;"	v
s:style	plugged/ayu-vim/colors/ayu.vim	/^let s:style = get(g:, 'ayucolor', 'dark')$/;"	v
s:suite	plugged/vim-devicons/test/default_setting.vim	/^let s:suite = themis#suite('Webdevicons-default-value')$/;"	v
s:suite	plugged/vim-devicons/test/fileformat.vim	/^let s:suite = themis#suite('WebDevIconsGetFileFormatSymbol')$/;"	v
s:suite	plugged/vim-devicons/test/filetype.vim	/^let s:suite = themis#suite('WebDevIconsGetFileTypeSymbol')$/;"	v
s:suite.ConfigOptions	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ConfigOptions()$/;"	f
s:suite.DefaultIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.DefaultIcon()$/;"	f
s:suite.ExtensionConfig	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ExtensionConfig()$/;"	f
s:suite.MacIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.MacIcon()$/;"	f
s:suite.NoArgument_EditMKFile_GetGearIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditMKFile_GetGearIcon()$/;"	f
s:suite.NoArgument_EditPythonFile_GetPythonIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditPythonFile_GetPythonIcon()$/;"	f
s:suite.NoArgument_EditRustFile_GetRustIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditRustFile_GetRustIcon()$/;"	f
s:suite.NoArgument_EditVimFile_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditVimFile_GetVimIcon()$/;"	f
s:suite.NoArgument_EditjavaScriptFile_GetjavaScriptIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditjavaScriptFile_GetjavaScriptIcon()$/;"	f
s:suite.NoArgument_Editvimrc_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_Editvimrc_GetVimIcon()$/;"	f
s:suite.NoArgument_OverWriteFileType_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_OverWriteFileType_GetVimIcon()$/;"	f
s:suite.OneArgument_EditPythonFile_GetRubyIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_EditPythonFile_GetRubyIcon()$/;"	f
s:suite.OneArgument_GetCIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCIcon()$/;"	f
s:suite.OneArgument_GetCSSIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCSSIcon()$/;"	f
s:suite.OneArgument_GetCSharpIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCSharpIcon()$/;"	f
s:suite.OneArgument_GetDartIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetDartIcon()$/;"	f
s:suite.OneArgument_GetDropboxIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetDropboxIcon()$/;"	f
s:suite.OneArgument_GetElmIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetElmIcon()$/;"	f
s:suite.OneArgument_GetGoIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetGoIcon()$/;"	f
s:suite.OneArgument_GetJavaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetJavaIcon()$/;"	f
s:suite.OneArgument_GetLicenseIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetLicenseIcon()$/;"	f
s:suite.OneArgument_GetLuaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetLuaIcon()$/;"	f
s:suite.OneArgument_GetNodeModuleIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetNodeModuleIcon()$/;"	f
s:suite.OneArgument_GetPhpIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetPhpIcon()$/;"	f
s:suite.OneArgument_GetRIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetRIcon()$/;"	f
s:suite.OneArgument_GetRssIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetRssIcon()$/;"	f
s:suite.OneArgument_GetScalaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetScalaIcon()$/;"	f
s:suite.OneArgument_GetSolidityIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetSolidityIcon()$/;"	f
s:suite.OneArgument_GetTexIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetTexIcon()$/;"	f
s:suite.OneArgument_GetTypeScriptIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetTypeScriptIcon()$/;"	f
s:suite.OneArgument_GetVueIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetVueIcon()$/;"	f
s:suite.WindowsIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.WindowsIcon()$/;"	f
s:suite.__OneArgument_CppIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_CppIcon__()$/;"	f
s:suite.__OneArgument_DBIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_DBIcon__()$/;"	f
s:suite.__OneArgument_DockerIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_DockerIcon__()$/;"	f
s:suite.__OneArgument_ElixirIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ElixirIcon__()$/;"	f
s:suite.__OneArgument_ErlangIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ErlangIcon__()$/;"	f
s:suite.__OneArgument_FSharpIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_FSharpIcon__()$/;"	f
s:suite.__OneArgument_GearIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_GearIcon__()$/;"	f
s:suite.__OneArgument_HaskellIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_HaskellIcon__()$/;"	f
s:suite.__OneArgument_JavaScriptIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_JavaScriptIcon__()$/;"	f
s:suite.__OneArgument_JsonIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_JsonIcon__()$/;"	f
s:suite.__OneArgument_MarkDownIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_MarkDownIcon__()$/;"	f
s:suite.__OneArgument_PerlIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_PerlIcon__()$/;"	f
s:suite.__OneArgument_PythonIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_PythonIcon__()$/;"	f
s:suite.__OneArgument_ReactIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ReactIcon__()$/;"	f
s:suite.__OneArgument_RubyIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_RubyIcon__()$/;"	f
s:suite.__OneArgument_RustIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_RustIcon__()$/;"	f
s:suite.__OneArgument_ShellIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ShellIcon__()$/;"	f
s:suite.__OneArgument_SwiftIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_SwiftIcon__()$/;"	f
s:suite.__OneArgument_VimIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_VimIcon__()$/;"	f
s:surroundings	plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:system	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
s:t_none	plugged/ayu-vim/colors/ayu.vim	/^let s:t_none = "NONE"$/;"	v
s:tags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:telescope_complete	plugged/telescope.nvim/plugin/telescope.vim	/^function! s:telescope_complete(arg,line,pos)$/;"	f
s:term_marker	plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:test	plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
s:textobject	plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
s:tmux_enabled	plugged/fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
s:tmux_is_last_pane	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let s:tmux_is_last_pane = 0$/;"	v
s:toggleFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
s:transform	plugged/vim-startify/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
s:trim	plugged/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
s:try	plugged/indent-blankline.nvim/plugin/indent_blankline.vim	/^function s:try(cmd)$/;"	f
s:type_init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:u	plugged/ayu-vim/colors/ayu.vim	/^let s:u      = ",underline"$/;"	v
s:ulen	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
s:underline	plugged/nord-vim/colors/nord.vim	/^  let s:underline = "NONE,"$/;"	v
s:underline	plugged/nord-vim/colors/nord.vim	/^let s:underline = "underline,"$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_oldfiles	plugged/vim-startify/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
s:update_progress	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:update_progress(bufnr, width, ts) abort$/;"	f
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:use_sh	plugged/fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
s:uwu0_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu0_gui = "#1b2224" $/;"	v
s:uwu10_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu10_gui = "#8dc776" $/;"	v
s:uwu11_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu11_gui = "#e7ac7e" $/;"	v
s:uwu12_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu12_gui = "#6CBAD1"$/;"	v
s:uwu13_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu13_gui = "#E182E0" $/;"	v
s:uwu14_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu14_gui = "#6db0ad"$/;"	v
s:uwu15_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu15_gui = "#bfbfbf" $/;"	v
s:uwu1_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu1_gui = "#e74c4c"$/;"	v
s:uwu2_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu2_gui = "#6bb05d" $/;"	v
s:uwu3_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu3_gui = "#e59e67" $/;"	v
s:uwu4_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu4_gui = "#53A7BF" $/;"	v
s:uwu5_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu5_gui = "#CD69CC" $/;"	v
s:uwu6_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu6_gui = "#51a39f" $/;"	v
s:uwu7_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu7_gui = "#bcbcbc" $/;"	v
s:uwu8_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu8_gui = "#454c4e" $/;"	v
s:uwu9_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwu9_gui = "#c26f6f"$/;"	v
s:uwubg_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwubg_gui = "#131A1C"$/;"	v
s:uwufg_gui	plugged/uwu.vim/colors/uwu.vim	/^let s:uwufg_gui = "#C5C8C9" $/;"	v
s:validate_layout	plugged/fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
s:variables	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:variables(bufnr) abort$/;"	f
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.11.0'$/;"	v
s:versions	plugged/fzf/plugin/fzf.vim	/^let s:versions = {}$/;"	v
s:vim_api_version	plugged/coc.nvim/autoload/coc/util.vim	/^let s:vim_api_version = 10$/;"	v
s:vim_quitting	plugged/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:vimwiki_hcolor_ctermfg	plugged/nord-vim/colors/nord.vim	/^  let s:vimwiki_hcolor_ctermfg = [s:nord7_term, s:nord8_term, s:nord9_term, s:nord10_term, s:nor/;"	v
s:vimwiki_hcolor_guifg	plugged/nord-vim/colors/nord.vim	/^  let s:vimwiki_hcolor_guifg = [s:nord7_gui, s:nord8_gui, s:nord9_gui, s:nord10_gui, s:nord14_gu/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^    let s:visibility_symbols = g:tagbar_visibility_symbols$/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:warn	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	plugged/fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
s:warn	plugged/vim-startify/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
s:warned	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning	plugged/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
s:warning_sign	plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:warnings	plugged/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:watched_keys	plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:wide	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:wildignores_options_path	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win_execute	plugged/coc.nvim/autoload/coc/api.vim	/^  function! s:win_execute(win_id, cmd, ...) abort$/;"	f
s:win_setview	plugged/coc.nvim/autoload/coc/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
s:window_expanded	plugged/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugged/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:windows_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winrestcmd	plugged/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:wrap	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
s:wrap_cmds	plugged/fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
s:write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:xterm_launcher	plugged/fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
s:yank_to_register	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
sB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
sC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
sD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
sG	plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	f
sI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
sJ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
sK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
sL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
sM	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
sQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
sS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
sU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
sV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
sW	plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
sX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
sZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
s_	plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
sa	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
sae	plugged/coc.nvim/build/index.js	/^`}function sae(r){return r.replace(Woe,":")}function v$(r,e=null){if(!r)return[];e=e||Sn;let t=e/;"	f
safari	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	safari: \/webkit\/.test( userAgent ),$/;"	p	class:jQuery.browser
safari2	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    safari2      = safari && parseInt(version) < 522 && !\/adobeair\/i.test(userAgent),$/;"	v
safe-buffer	plugged/coc.nvim/package-lock.json	/^        "safe-buffer": "5.1.2"$/;"	s	object:dependencies.content-disposition.requires
safe-buffer	plugged/coc.nvim/package-lock.json	/^        "safe-buffer": "~5.1.1"$/;"	s	object:dependencies.convert-source-map.requires
safe-buffer	plugged/coc.nvim/package-lock.json	/^    "safe-buffer": {$/;"	o	object:dependencies
safe-regex	plugged/coc.nvim/package-lock.json	/^        "safe-regex": "^1.1.0"$/;"	s	object:dependencies.regex-not.requires
safe-regex	plugged/coc.nvim/package-lock.json	/^        "safe-regex": "^1.1.0"$/;"	s	object:dependencies.to-regex.requires
safe-regex	plugged/coc.nvim/package-lock.json	/^    "safe-regex": {$/;"	o	object:dependencies
safer-buffer	plugged/coc.nvim/package-lock.json	/^        "safer-buffer": ">= 2.1.2 < 3"$/;"	s	object:dependencies.iconv-lite.requires
safer-buffer	plugged/coc.nvim/package-lock.json	/^    "safer-buffer": {$/;"	o	object:dependencies
same	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function same(state, arguments, level)$/;"	f
same	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function same(state, arguments, level)$/;"	f
same_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function same_indent(state, arguments)$/;"	f
sane	plugged/coc.nvim/package-lock.json	/^        "sane": "^4.0.3",$/;"	s	object:dependencies.jest-haste-map.requires
sane	plugged/coc.nvim/package-lock.json	/^    "sane": {$/;"	o	object:dependencies
sanitize_color	plugged/lualine.nvim/lua/lualine/highlight.lua	/^local function sanitize_color(color)$/;"	f
save_direction_size	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.save_direction_size(direction, size)$/;"	f	unknown:M
save_positions	plugged/bufferline.nvim/lua/bufferline.lua	/^local function save_positions(bufs)$/;"	f
save_window_size	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.save_window_size(direction, window)$/;"	f	unknown:M
saxes	plugged/coc.nvim/package-lock.json	/^        "saxes": "^5.0.1",$/;"	s	object:dependencies.jsdom.requires
saxes	plugged/coc.nvim/package-lock.json	/^    "saxes": {$/;"	o	object:dependencies
sc	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
scala	plugged/nvim-treesitter/lockfile.json	/^  "scala": {$/;"	o
scan	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
scan	plugged/fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f	struct:fzf.Matcher	typeref:typename:(*Merger, bool)
scan_dir	plugged/plenary.nvim/lua/plenary/scandir.lua	/^m.scan_dir = function(path, opts)$/;"	f	unknown:m
scan_dir_async	plugged/plenary.nvim/lua/plenary/scandir.lua	/^m.scan_dir_async = function(path, opts)$/;"	f	unknown:m
scan_paths	plugged/nvim-spectre/lua/spectre/search/base.lua	/^local function scan_paths(s_path)$/;"	f
schedule_load	plugged/which-key.nvim/lua/which-key/init.lua	/^local function schedule_load()$/;"	f
schedule_sign	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^   local function schedule_sign(n, _)$/;"	f
scope	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.scope = function(func)$/;"	f	unknown:M
scope_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.scope_incremental = select_incremental(function(node)$/;"	f	unknown:M
score	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	p	class:c
score	plugged/telescope.nvim/lua/telescope/algos/fzy.lua	/^function fzy.score(needle, haystack)$/;"	f	unknown:fzy
score	plugged/telescope.nvim/lua/telescope/sorters.lua	/^  local score = self:scoring_function(prompt or "", ordinal, entry)$/;"	f
score	plugged/telescope.nvim/lua/telescope/sorters.lua	/^function Sorter:score(prompt, entry, cb_add, cb_filter)$/;"	f	unknown:Sorter
score	plugged/telescope.nvim/lua/tests/automated/telescope_spec.lua	/^      local function score(prompt, line)$/;"	f
scoreGapExtension	plugged/fzf/src/algo/algo.go	/^	scoreGapExtension = -1$/;"	c	package:algo
scoreGapStart	plugged/fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c	package:algo
scoreMatch	plugged/fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c	package:algo
scoring_function	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/move.lua	/^  local function scoring_function(match)$/;"	f
scoring_function	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^  local function scoring_function(match)$/;"	f
scripts	plugged/coc.nvim/package.json	/^  "scripts": {},$/;"	o
scroll	plugged/fzf/src/options.go	/^	scroll      string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
scroll	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.scroll(up)$/;"	f	unknown:M
scrollOff	plugged/fzf/src/terminal.go	/^	scrollOff    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
scroll_fn	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local scroll_fn = function(self, direction)$/;"	f
scroll_fn	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:scroll_fn(direction)$/;"	f	unknown:Previewer
scroll_fn	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^    function opts.scroll_fn(self, direction)$/;"	f	unknown:opts
scroll_previewer	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^action_set.scroll_previewer = function(prompt_bufnr, direction)$/;"	f	unknown:action_set
scroll_to_bottom	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.scroll_to_bottom()$/;"	f	unknown:M
scrollable	plugged/fzf/src/terminal.go	/^	scrollable bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
scss	plugged/nvim-treesitter/lockfile.json	/^  "scss": {$/;"	o
se	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
search	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
search	plugged/nvim-spectre/lua/spectre/init.lua	/^M.search = function(opts)$/;"	f	unknown:M
search	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.search = function(self, query)$/;"	f	unknown:base
searchRequest	plugged/fzf/src/terminal.go	/^type searchRequest struct {$/;"	s	package:fzf
search_cb_jump	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local search_cb_jump = function(self, bufnr, query)$/;"	f
search_handler	plugged/nvim-spectre/lua/spectre/init.lua	/^M.search_handler = function()$/;"	f	unknown:M
search_history	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.search_history = function(opts)$/;"	f	unknown:internal
search_pattern	plugged/plenary.nvim/tests/plenary/scandir_spec.lua	/^        search_pattern = function(entry)$/;"	f
search_teardown	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local search_teardown = function(self)$/;"	f
search_text	plugged/nvim-spectre/tests/line_render_spec.lua	/^        search_text = "    test  function abcd(no)",$/;"	f
search_text	plugged/nvim-spectre/tests/replace/sed_spec.lua	/^            search_text = [[function (new.*)]],$/;"	f
second	plugged/plenary.nvim/tests/plenary/async/condvar_spec.lua	/^    local second = function()$/;"	f
second_bench	plugged/plenary.nvim/tests/plenary/async/read_file_bench.lua	/^local second_bench = function()$/;"	f
section	plugged/emmet-vim/docs/static/css/style-sites.css	/^section {$/;"	s
section[2]	plugged/lualine.nvim/lua/tests/spec/utils_spec.lua	/^    section[2] = require 'lua.lualine.components.special.function_component'(opts_colored2)$/;"	f
section[2]	plugged/lualine.nvim/lua/tests/spec/utils_spec.lua	/^    section[2] = require 'lua.lualine.components.special.function_component'(opts_colored3)$/;"	f
see	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
selBufNum	plugged/JABS.nvim/lua/jabs.lua	/^function M.selBufNum(win, opt, count)$/;"	f	unknown:M
select	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    select = function(items, opts, on_choice)$/;"	f
select	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.select = M.wrap(function(futures, step)$/;"	f	unknown:M
select	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^action_set.select = function(prompt_bufnr, type)$/;"	f	unknown:action_set
selectItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
selectItemChanged	plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
select_all	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.select_all(prompt_bufnr)$/;"	f	unknown:actions
select_buffer_apply	plugged/bufferline.nvim/lua/bufferline.lua	/^local function select_buffer_apply(func)$/;"	f
select_colors	plugged/onedark.nvim/lua/onedark/colors.lua	/^local function select_colors()$/;"	f
select_compiler_args	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_compiler_args(repo, compiler)$/;"	f	unknown:M
select_count	plugged/fzf/test/test_go.rb	/^          def select_count$/;"	f	method:Tmux.until
select_download_commands	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_download_commands(repo, project_name, cache_folder, revision, prefer_git)$/;"	f	unknown:M
select_entry	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.select_entry = function()$/;"	f	unknown:M
select_executable	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_executable(executables)$/;"	f	unknown:M
select_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.select_hunk = function()$/;"	f	unknown:M
select_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function select_incremental(get_parent)$/;"	f
select_install_rm_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_install_rm_cmd(cache_folder, project_name)$/;"	f	unknown:M
select_key_to_edit_key	plugged/telescope.nvim/lua/telescope/actions/state.lua	/^function action_state.select_key_to_edit_key(type)$/;"	f	unknown:action_state
select_mkdir_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mkdir_cmd(directory, cwd, info_msg)$/;"	f	unknown:M
select_mv_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mv_cmd(from, to, cwd)$/;"	f	unknown:M
select_only	plugged/plenary.nvim/lua/plenary/functional.lua	/^function f.select_only(n)$/;"	f	unknown:f
select_rm_file_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_rm_file_cmd(file, info_msg)$/;"	f	unknown:M
select_textobject	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/select.lua	/^function M.select_textobject(query_string, keymap_mode)$/;"	f	unknown:M
selectable	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^  local selectable = vim.tbl_filter(function (id)$/;"	f
selected	plugged/fzf/src/terminal.go	/^	selected     map[int32]selectedItem$/;"	m	struct:fzf.Terminal	typeref:typename:map[int32]selectedItem
selected	plugged/fzf/src/terminal.go	/^	selected bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
selectedItem	plugged/fzf/src/terminal.go	/^type selectedItem struct {$/;"	s	package:fzf
selectionRange	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12100.e.c
semver	plugged/coc.nvim/package-lock.json	/^            "semver": "^5.5.0",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "2 || 3 || 4 || 5",$/;"	s	object:dependencies.normalize-package-data.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "7.x",$/;"	s	object:dependencies.ts-jest.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^6.0.0"$/;"	s	object:dependencies.make-dir.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0"$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0"$/;"	s	object:dependencies.istanbul-lib-instrument.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0",$/;"	s	object:dependencies.@babel/core.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.2.1",$/;"	s	object:dependencies.eslint.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2"$/;"	s	object:dependencies.jest-snapshot.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.node-notifier.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.4",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.@babel/core.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.@babel/helper-compilation-targets.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.execa.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.istanbul-lib-instrument.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.make-dir.dependencies
semver	plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.normalize-package-data.dependencies
semver	plugged/coc.nvim/package-lock.json	/^    "semver": {$/;"	o	object:dependencies
send	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  function Sender.send(...)$/;"	f	unknown:Sender
send	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  function Sender:send()$/;"	f	unknown:Sender
send	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  function Sender.send(...)$/;"	f	unknown:Sender
send	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  function Sender:send()$/;"	f	unknown:Sender
send	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:send(data)$/;"	f	unknown:Job
send	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:send(cmd, go_back)$/;"	f	unknown:Terminal
sendNotification	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:f
send_all_to_qf	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local send_all_to_qf = function(prompt_bufnr, mode, target)$/;"	f
send_input	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:send_input(input)$/;"	f	unknown:Previewer
send_input	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^    function opts.send_input(self, input)$/;"	f	unknown:opts
send_keys	plugged/fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
send_selected_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.send_selected_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
send_selected_to_qf	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local send_selected_to_qf = function(prompt_bufnr, mode, target)$/;"	f
send_selected_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.send_selected_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
send_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.send_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
send_to_qf	plugged/nvim-spectre/lua/spectre/actions.lua	/^M.send_to_qf = function ()$/;"	f	unknown:M
send_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.send_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
sender	plugged/plenary.nvim/lua/plenary/async/control.lua	/^  local sender = function(...)$/;"	f
sender	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  local sender = function(...)$/;"	f
seoul256	plugged/lualine.nvim/THEMES.md	/^### seoul256$/;"	S	chapter:Available themes
sep	plugged/plenary.nvim/lua/plenary/path.lua	/^path.sep = (function()$/;"	f	unknown:path
separator_after	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:separator_after()$/;"	f	unknown:Buffer
separator_after	plugged/lualine.nvim/lua/lualine/components/tabs/tab.lua	/^function Tab:separator_after()$/;"	f	unknown:Tab
separator_before	plugged/lualine.nvim/lua/lualine/components/buffers/buffer.lua	/^function Buffer:separator_before()$/;"	f	unknown:Buffer
separator_before	plugged/lualine.nvim/lua/lualine/components/tabs/tab.lua	/^function Tab:separator_before()$/;"	f	unknown:Tab
set	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function M.set(conf)$/;"	f	unknown:M
set	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function set(_, key, value, bytes)$/;"	f
set	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.set(type_name, bufnr, value)$/;"	f	unknown:cache
set	plugged/plenary.nvim/lua/say.lua	/^  set = function(self, key, value)$/;"	f
set	plugged/telescope.nvim/lua/telescope/config.lua	/^  local function set(name, default_val, description)$/;"	f
set	plugged/toggleterm.nvim/lua/toggleterm/config.lua	/^function M.set(user_conf)$/;"	f	unknown:M
set	plugged/which-key.nvim/lua/which-key/text.lua	/^function Text:set(row, col, str, group)$/;"	f	unknown:Text
set-blocking	plugged/coc.nvim/package-lock.json	/^        "set-blocking": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
set-blocking	plugged/coc.nvim/package-lock.json	/^    "set-blocking": {$/;"	o	object:dependencies
set-value	plugged/coc.nvim/package-lock.json	/^        "set-value": "^2.0.0",$/;"	s	object:dependencies.cache-base.requires
set-value	plugged/coc.nvim/package-lock.json	/^        "set-value": "^2.0.1"$/;"	s	object:dependencies.union-value.requires
set-value	plugged/coc.nvim/package-lock.json	/^    "set-value": {$/;"	o	object:dependencies
setBg	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f	struct:tui.LightWindow
setKeymaps	plugged/JABS.nvim/lua/jabs.lua	/^function M.setKeymaps(win, buf)$/;"	f	unknown:M
setNewest	plugged/nvim-spectre/lua/spectre/data/_lru.lua	/^    local function setNewest(tuple)$/;"	f
set_all	plugged/bufferline.nvim/lua/bufferline/highlights.lua	/^function M.set_all(user_colors)$/;"	f	unknown:M
set_buf_indent_opts	plugged/nvim-treesitter/tests/indent/common.lua	/^local function set_buf_indent_opts(opts)$/;"	f
set_bufname	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local function set_bufname(self, value)$/;"	f
set_bufnr	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  local function set_bufnr(self, value)$/;"	f
set_bufnr	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  local function set_bufnr(self, value)$/;"	f
set_command_line	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.set_command_line = function(prompt_bufnr)$/;"	f	unknown:actions
set_config	plugged/telescope.nvim/lua/telescope/_extensions/init.lua	/^extensions.set_config = function(extensions_config)$/;"	f	unknown:extensions
set_current_hl	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.set_current_hl(buffer, highlights, current_hl)$/;"	f	unknown:M
set_cursor	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.set_cursor(opts)$/;"	f	unknown:M
set_default_icon	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function set_default_icon(icon, color)$/;"	f
set_defaults	plugged/telescope.nvim/lua/telescope/config.lua	/^function config.set_defaults(user_defaults, tele_defaults)$/;"	f	unknown:config
set_entry	plugged/telescope.nvim/lua/telescope/entry_manager.lua	/^  set_entry = set_entry or function() end$/;"	f
set_errmsg	plugged/telescope.nvim/lua/telescope/pickers.lua	/^  local set_ok, set_errmsg = pcall(function()$/;"	f
set_failure_message	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function set_failure_message(state, message)$/;"	f
set_fallback	plugged/plenary.nvim/lua/say.lua	/^  set_fallback = function(self, namespace)$/;"	f
set_folder_hl	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^  set_folder_hl = function(line, depth, icon_len, name_len, hl_group)$/;"	f
set_folder_hl	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local set_folder_hl = function(line, depth, git_icon_len, _, hl_group)$/;"	f
set_global_key	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.set_global_key(key, value)$/;"	f	unknown:state
set_group_highlights	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function set_group_highlights(name, group, hls)$/;"	f
set_hidden	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.set_hidden(id, value)$/;"	f	unknown:M
set_highlights	plugged/toggleterm.nvim/lua/toggleterm/colors.lua	/^function M.set_highlights(amount)$/;"	f	unknown:M
set_icon	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function set_icon(user_icons)$/;"	f
set_id	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.set_id(buffer)$/;"	f	unknown:M
set_index_and_redraw	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.set_index_and_redraw(fname)$/;"	f	unknown:M
set_jump	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.set_jump()$/;"	f	unknown:M
set_local	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function set_local(opt, value)$/;"	f
set_message	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function set_message(state, arguments, level)$/;"	f
set_namespace	plugged/plenary.nvim/lua/say.lua	/^  set_namespace = function(self, namespace)$/;"	f
set_one	plugged/bufferline.nvim/lua/bufferline/highlights.lua	/^function M.set_one(name, opts)$/;"	f	unknown:M
set_options	plugged/onedarkpro.nvim/lua/onedarkpro/config.lua	/^function M.set_options(opts)$/;"	f	unknown:M
set_options	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.set_options(win, buf, term)$/;"	f	unknown:M
set_opts_cwd	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^local set_opts_cwd = function(opts)$/;"	f
set_or_create_color	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.set_or_create_color(colors, key, value)$/;"	f	unknown:utils
set_origin_window	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.set_origin_window()$/;"	f	unknown:M
set_parameter	plugged/plenary.nvim/lua/luassert/assert.lua	/^  set_parameter = function(self, name, value)$/;"	f
set_parameter	plugged/plenary.nvim/lua/luassert/state.lua	/^state.set_parameter = function(name, value)$/;"	f	unknown:state
set_pickers	plugged/telescope.nvim/lua/telescope/config.lua	/^function config.set_pickers(pickers)$/;"	f	unknown:config
set_preview_message	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.set_preview_message = function(bufnr, winid, message, fillchar)$/;"	f	unknown:utils
set_prompt	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:set_prompt(str)$/;"	f	unknown:Picker
set_search_line	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.set_search_line = function(prompt_bufnr)$/;"	f	unknown:actions
set_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:set_selection(row)$/;"	f	unknown:Picker
set_separator	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:set_separator()$/;"	f	unknown:M
set_spy	plugged/plenary.nvim/lua/luassert/spy.lua	/^local function set_spy(state, arguments, level)$/;"	f
set_status	plugged/telescope.nvim/lua/telescope/state.lua	/^function state.set_status(prompt_bufnr, status)$/;"	f	unknown:state
set_statusline	plugged/lualine.nvim/lua/lualine.lua	/^local function set_statusline()$/;"	f
set_stub	plugged/plenary.nvim/lua/luassert/stub.lua	/^local function set_stub(state, arguments)$/;"	f
set_syntax	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.set_syntax(highlight_groups)$/;"	f	unknown:utils
set_tabline	plugged/lualine.nvim/lua/lualine.lua	/^local function set_tabline()$/;"	f
set_target_win	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.set_target_win()$/;"	f	unknown:M
set_term_id	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  local function set_term_id(self, value)$/;"	f
set_title_highlights	plugged/plenary.nvim/lua/plenary/window/border.lua	/^local set_title_highlights = function(bufnr, ranges, hl)$/;"	f
set_up_highlight	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function set_up_highlight(icon_data)$/;"	f
set_up_highlights	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function set_up_highlights()$/;"	f
set_var	plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestFish
set_var	plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	module:TestShell
set_version	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^M.set_version = function(version)$/;"	f	unknown:M
setloclist	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.setloclist = function(nr, target)$/;"	f	unknown:M
setqflist	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.setqflist = void(function(target, opts)$/;"	f	unknown:M
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {$/;"	o	object:definitions.languageServerBase.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerCommand.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerModule.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerSocket.properties
setup	plugged/JABS.nvim/lua/jabs.lua	/^function M.setup(c)$/;"	f	unknown:M
setup	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	module:TestShell
setup	plugged/github-nvim-theme/lua/github-theme/colors.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/github-nvim-theme/lua/github-theme/init.lua	/^local function setup(user_config)$/;"	f
setup	plugged/github-nvim-theme/lua/github-theme/theme.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/gitsigns.nvim/lua/gitsigns.lua	/^M.setup = void(function(cfg)$/;"	f	unknown:M
setup	plugged/gitsigns.nvim/lua/gitsigns/current_line_blame.lua	/^M.setup = function()$/;"	f	unknown:M
setup	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^M.setup = function()$/;"	f	unknown:M
setup	plugged/indent-blankline.nvim/lua/indent_blankline/init.lua	/^M.setup = function(options)$/;"	f	unknown:M
setup	plugged/lualine.nvim/lua/lualine.lua	/^local function setup(user_config)$/;"	f
setup	plugged/material.nvim/lua/material/config.lua	/^Config.setup = function (options)$/;"	f	unknown:Config
setup	plugged/material.nvim/lua/material/init.lua	/^local setup = function (options)$/;"	f
setup	plugged/nvim-spectre/lua/spectre/init.lua	/^M.setup = function(cfg)$/;"	f	unknown:M
setup	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.setup(conf)$/;"	f	unknown:M
setup	plugged/nvim-tree.lua/lua/nvim-tree/colors.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.setup(user_data)$/;"	f	unknown:M
setup	plugged/nvim-ts-autotag/lua/nvim-ts-autotag.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^M.setup = function (opts)$/;"	f	unknown:M
setup	plugged/nvim-web-devicons/lua/nvim-web-devicons.lua	/^local function setup(opts)$/;"	f
setup	plugged/onedark.nvim/lua/onedark/highlights.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/onedark.nvim/lua/onedark/init.lua	/^function M.setup() colorscheme() end$/;"	f	unknown:M
setup	plugged/onedark.nvim/lua/onedark/terminal.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/onedarkpro.nvim/lua/onedark/init.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/onedarkpro.nvim/lua/onedarkpro/init.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	plugged/telescope.nvim/lua/telescope/init.lua	/^function telescope.setup(opts)$/;"	f	unknown:telescope
setup	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    setup = function()$/;"	f
setup	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  function opts.setup(self)$/;"	f	unknown:opts
setup	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  function opts.setup(self)$/;"	f	unknown:opts
setup	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.setup(user_prefs)$/;"	f	unknown:M
setup	plugged/tokyonight.nvim/lua/tokyonight/colors.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/tokyonight.nvim/lua/tokyonight/theme.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/colors.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/config.lua	/^function M.setup(options)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.setup(options)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/init.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/marks.lua	/^function M.setup(_wk, _config, options)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/presets/init.lua	/^function M.setup(wk, opts, config)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/presets/misc.lua	/^function M.setup(wk, config)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/registers.lua	/^function M.setup(_wk, _config, options)$/;"	f	unknown:M
setup	plugged/which-key.nvim/lua/which-key/plugins/spelling.lua	/^function M.setup(_wk, config, options)$/;"	f	unknown:M
setupTerminal	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) setupTerminal() {$/;"	f	unknown:tui.LightRenderer
setupTerminal	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) setupTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
setup_autocommands	plugged/bufferline.nvim/lua/bufferline.lua	/^local function setup_autocommands(config)$/;"	f
setup_autocommands	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function setup_autocommands(opts)$/;"	f
setup_buffer_autocommands	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function setup_buffer_autocommands(term)$/;"	f
setup_buffer_mappings	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function setup_buffer_mappings(bufnr)$/;"	f
setup_command	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local function setup_command()$/;"	f
setup_commands	plugged/bufferline.nvim/lua/bufferline.lua	/^local function setup_commands()$/;"	f
setup_commands	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.setup_commands(mod, commands)$/;"	f	unknown:M
setup_git	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.setup_git()$/;"	f	unknown:M
setup_gitsigns	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.setup_gitsigns(config, extra)$/;"	f	unknown:M
setup_global_mappings	plugged/toggleterm.nvim/lua/toggleterm.lua	/^local function setup_global_mappings()$/;"	f
setup_highlight	plugged/gitsigns.nvim/lua/gitsigns/highlight.lua	/^M.setup_highlight = function(hl_name)$/;"	f	unknown:M
setup_mmbuffer	plugged/gitsigns.nvim/lua/gitsigns/diff_int/xdl_diff_ffi.lua	/^local function setup_mmbuffer(lines)$/;"	f
setup_signs_and_highlights	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^M.setup_signs_and_highlights = function(redefine)$/;"	f	unknown:M
setup_test_repo	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.setup_test_repo(no_add)$/;"	f	unknown:M
setup_theme	plugged/lualine.nvim/lua/lualine.lua	/^local function setup_theme()$/;"	f
setup_ts_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local setup_ts_tag = function()$/;"	f
setup_vim_commands	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function setup_vim_commands()$/;"	f
sexpr	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:sexpr()$/;"	f	unknown:TSRange
sf	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
sge	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	f
sh	plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
shade_color	plugged/bufferline.nvim/lua/bufferline/colors.lua	/^function M.shade_color(color, percent)$/;"	f	unknown:M
shade_color	plugged/toggleterm.nvim/lua/toggleterm/colors.lua	/^local function shade_color(color, percent)$/;"	f
shadow	plugged/coc.nvim/data/schema.json	/^        "shadow": {$/;"	o	object:definitions.float.properties
shadow	plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.diagnostic.floatConfig.properties
shadow	plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.hover.floatConfig.properties
shadow	plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.signature.floatConfig.properties
shadow	plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.suggest.floatConfig.properties
shallowcopy	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.shallowcopy(t)$/;"	f	unknown:util
shape	plugged/fzf/src/tui/tui.go	/^	shape       BorderShape$/;"	m	struct:tui.BorderStyle	typeref:typename:BorderShape
shebang-command	plugged/coc.nvim/package-lock.json	/^            "shebang-command": "^1.2.0",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
shebang-command	plugged/coc.nvim/package-lock.json	/^        "shebang-command": "^2.0.0",$/;"	s	object:dependencies.cross-spawn.requires
shebang-command	plugged/coc.nvim/package-lock.json	/^        "shebang-command": {$/;"	o	object:dependencies.execa.dependencies
shebang-command	plugged/coc.nvim/package-lock.json	/^    "shebang-command": {$/;"	o	object:dependencies
shebang-regex	plugged/coc.nvim/package-lock.json	/^            "shebang-regex": "^1.0.0"$/;"	s	object:dependencies.execa.dependencies.shebang-command.requires
shebang-regex	plugged/coc.nvim/package-lock.json	/^        "shebang-regex": "^3.0.0"$/;"	s	object:dependencies.shebang-command.requires
shebang-regex	plugged/coc.nvim/package-lock.json	/^        "shebang-regex": {$/;"	o	object:dependencies.execa.dependencies
shebang-regex	plugged/coc.nvim/package-lock.json	/^    "shebang-regex": {$/;"	o	object:dependencies
shell	plugged/coc.nvim/data/schema.json	/^        "shell": {$/;"	o	object:definitions.languageServerCommand.properties
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestBash
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestFish
shell	plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestZsh
shellPath	plugged/fzf/src/util/util_windows.go	/^var shellPath atomic.Value$/;"	v	package:util	typeref:typename:atomic.Value
shellwords	plugged/coc.nvim/package-lock.json	/^        "shellwords": "^0.1.1",$/;"	s	object:dependencies.node-notifier.requires
shellwords	plugged/coc.nvim/package-lock.json	/^    "shellwords": {$/;"	o	object:dependencies
shift_selection	plugged/telescope.nvim/lua/telescope/actions/set.lua	/^action_set.shift_selection = function(prompt_bufnr, change)$/;"	f	unknown:action_set
short_desc	plugged/telescope.nvim/data/options/options.lua	/^      short_desc=N_("function for filetype-specific completion"),$/;"	f
short_desc	plugged/telescope.nvim/data/options/options.lua	/^      short_desc=N_("function to be called for |g@| operator"),$/;"	f
short_desc	plugged/telescope.nvim/data/options/options.lua	/^      short_desc=N_("function to be used for Insert mode completion"),$/;"	f
short_desc	plugged/telescope.nvim/data/options/options.lua	/^      short_desc=N_("function used to perform tag searches"),$/;"	f
short_desc	plugged/telescope.nvim/data/options/options.lua	/^      short_desc=N_("maximum recursive depth for user functions"),$/;"	f
shorten	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:shorten(len)$/;"	f	unknown:Path
shorten	plugged/plenary.nvim/lua/plenary/path.lua	/^local shorten = (function()$/;"	f
shorten_len	plugged/plenary.nvim/lua/plenary/path.lua	/^local function shorten_len(filename, len)$/;"	f
shorten_path	plugged/lualine.nvim/lua/lualine/components/filename.lua	/^local function shorten_path(path, sep)$/;"	f
should_fail	plugged/plenary.nvim/tests/plenary/enum_spec.lua	/^local function should_fail(fun)$/;"	f
should_fail	plugged/plenary.nvim/tests/plenary/tbl_spec.lua	/^local function should_fail(fun)$/;"	f
should_gitignore	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^function M.should_gitignore(path)$/;"	f	unknown:M
should_group	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function should_group(cwd, dirs, files, links)$/;"	f
should_ignore	plugged/nvim-tree.lua/lua/nvim-tree/populate.lua	/^local function should_ignore(path)$/;"	f
show	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(){$/;"	m	class:jQuery.fx
show	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.show(keys, opts)$/;"	f	unknown:M
show	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.show()$/;"	f	unknown:M
show_command	plugged/which-key.nvim/lua/which-key/init.lua	/^function M.show_command(keys, mode)$/;"	f	unknown:M
show_cursor	plugged/which-key.nvim/lua/which-key/view.lua	/^function M.show_cursor()$/;"	f	unknown:M
show_find_engine	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.show_find_engine = function ()$/;"	f	unknown:M
show_help	plugged/nvim-spectre/lua/spectre/init.lua	/^M.show_help = function()$/;"	f	unknown:M
show_help	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.show_help = function()$/;"	f	unknown:M
show_menu_options	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.show_menu_options = function (title, content)$/;"	f	unknown:M
show_notices	plugged/lualine.nvim/lua/lualine/utils/notices.lua	/^function M.show_notices()$/;"	f	unknown:M
show_options	plugged/nvim-spectre/lua/spectre/init.lua	/^M.show_options = function()$/;"	f	unknown:M
show_options	plugged/nvim-spectre/lua/spectre/ui.lua	/^M.show_options = function()$/;"	f	unknown:M
shutdown	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:o
shutdown	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:shutdown(code, signal)$/;"	f	unknown:Job
shutdown	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:shutdown()$/;"	f	unknown:Terminal
shutdown_factory	plugged/plenary.nvim/lua/plenary/job.lua	/^local shutdown_factory = function(child, options)$/;"	f
si	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
sibling	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.sibling(node, direction)$/;"	f	unknown:M
side-channel	plugged/coc.nvim/package-lock.json	/^        "side-channel": "^1.0.3"$/;"	s	object:dependencies.string.prototype.matchall.requires
side-channel	plugged/coc.nvim/package-lock.json	/^        "side-channel": "^1.0.4"$/;"	s	object:dependencies.internal-slot.requires
side-channel	plugged/coc.nvim/package-lock.json	/^    "side-channel": {$/;"	o	object:dependencies
sign	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^        local status, sign = pcall(function()$/;"	f
sign_get	plugged/gitsigns.nvim/lua/gitsigns/signs.lua	/^local function sign_get(name)$/;"	f
signal-exit	plugged/coc.nvim/package-lock.json	/^            "signal-exit": "^3.0.2",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
signal-exit	plugged/coc.nvim/package-lock.json	/^        "signal-exit": "^3.0.0",$/;"	s	object:dependencies.execa.requires
signal-exit	plugged/coc.nvim/package-lock.json	/^        "signal-exit": "^3.0.2",$/;"	s	object:dependencies.write-file-atomic.requires
signal-exit	plugged/coc.nvim/package-lock.json	/^    "signal-exit": {$/;"	o	object:dependencies
signature.enable	plugged/coc.nvim/data/schema.json	/^    "signature.enable": {$/;"	o	object:properties
signature.floatConfig	plugged/coc.nvim/data/schema.json	/^    "signature.floatConfig": {$/;"	o	object:properties
signature.hideOnTextChange	plugged/coc.nvim/data/schema.json	/^    "signature.hideOnTextChange": {$/;"	o	object:properties
signature.preferShownAbove	plugged/coc.nvim/data/schema.json	/^    "signature.preferShownAbove": {$/;"	o	object:properties
signature.target	plugged/coc.nvim/data/schema.json	/^    "signature.target": {$/;"	o	object:properties
signature.triggerSignatureWait	plugged/coc.nvim/data/schema.json	/^    "signature.triggerSignatureWait": {$/;"	o	object:properties
signature_handler	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/lsp_interop.lua	/^    signature_handler = function(err, result, handler_context)$/;"	f
sigstop	plugged/fzf/src/terminal.go	/^	sigstop      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
singleSearchReturn	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^local function singleSearchReturn(str, search)$/;"	f
sisteransi	plugged/coc.nvim/package-lock.json	/^        "sisteransi": "^1.0.5"$/;"	s	object:dependencies.prompts.requires
sisteransi	plugged/coc.nvim/package-lock.json	/^    "sisteransi": {$/;"	o	object:dependencies
size	plugged/fzf/src/options.go	/^	size        sizeSpec$/;"	m	struct:fzf.previewOpts	typeref:typename:sizeSpec
size	plugged/fzf/src/options.go	/^	size    float64$/;"	m	struct:fzf.sizeSpec	typeref:typename:float64
size2	plugged/toggleterm.nvim/tests/terminal_spec.lua	/^      local size2 = function(_t)$/;"	f
sizeSpec	plugged/fzf/src/options.go	/^type sizeSpec struct {$/;"	s	package:fzf
sj	plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
sk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
skip	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
skip	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionaf1e5c4a2f400.t.e
slab	plugged/fzf/src/matcher.go	/^	slab           []*util.Slab$/;"	m	struct:fzf.Matcher	typeref:typename:[]*util.Slab
slab	plugged/fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v	package:fzf	typeref:typename:*util.Slab
slab	plugged/fzf/src/terminal.go	/^	slab         *util.Slab$/;"	m	struct:fzf.Terminal	typeref:typename:*util.Slab
slab16Size	plugged/fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c	package:fzf	typeref:typename:int
slab32Size	plugged/fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c	package:fzf	typeref:typename:int
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.@jest/console.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.babel-jest.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.globby.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.jest-resolve.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/core.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/transform.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.jest-message-util.requires
slash	plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.jest-runtime.requires
slash	plugged/coc.nvim/package-lock.json	/^    "slash": {$/;"	o	object:dependencies
sle	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
sleep	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.sleep = a.wrap(function(ms, callback)$/;"	f	unknown:M
slice	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
slice	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Vf
slice	plugged/fzf/src/util/chars.go	/^	slice           []byte \/\/ or []rune$/;"	m	struct:util.Chars	typeref:typename:[]byte
slice	plugged/gitsigns.nvim/gen_help.lua	/^function table.slice(tbl, first, last, step)$/;"	f	unknown:table
slice	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:slice(a, b)$/;"	f	unknown:List
slice	plugged/plenary.nvim/lua/plenary/json.lua	/^local function slice(str, from, to)$/;"	f
slice-ansi	plugged/coc.nvim/package-lock.json	/^        "slice-ansi": "^2.1.0",$/;"	s	object:dependencies.table.requires
slice-ansi	plugged/coc.nvim/package-lock.json	/^    "slice-ansi": {$/;"	o	object:dependencies
sliceChunks	plugged/fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f	struct:fzf.Matcher	typeref:typename:[][]*Chunk
smart_add_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.smart_add_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
smart_add_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.smart_add_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
smart_send	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^local smart_send = function(prompt_bufnr, mode, target)$/;"	f
smart_send_to_loclist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.smart_send_to_loclist = function(prompt_bufnr)$/;"	f	unknown:actions
smart_send_to_qflist	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.smart_send_to_qflist = function(prompt_bufnr)$/;"	f	unknown:actions
smart_toggle	plugged/toggleterm.nvim/lua/toggleterm.lua	/^local function smart_toggle(_, size, dir, direction)$/;"	f
smarter_depth_2_extend	plugged/telescope.nvim/lua/telescope/config.lua	/^local smarter_depth_2_extend = function(priority, base)$/;"	f
smcup	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f	struct:tui.LightRenderer
sme	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
snapdragon	plugged/coc.nvim/package-lock.json	/^            "snapdragon": "^0.8.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
snapdragon	plugged/coc.nvim/package-lock.json	/^            "snapdragon": "^0.8.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
snapdragon	plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.expand-brackets.requires
snapdragon	plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.extglob.requires
snapdragon	plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.nanomatch.requires
snapdragon	plugged/coc.nvim/package-lock.json	/^    "snapdragon": {$/;"	o	object:dependencies
snapdragon-node	plugged/coc.nvim/package-lock.json	/^            "snapdragon-node": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
snapdragon-node	plugged/coc.nvim/package-lock.json	/^    "snapdragon-node": {$/;"	o	object:dependencies
snapdragon-util	plugged/coc.nvim/package-lock.json	/^        "snapdragon-util": "^3.0.1"$/;"	s	object:dependencies.snapdragon-node.requires
snapdragon-util	plugged/coc.nvim/package-lock.json	/^    "snapdragon-util": {$/;"	o	object:dependencies
snapshot	plugged/plenary.nvim/lua/luassert/assert.lua	/^  snapshot = function(self)$/;"	f
snapshot	plugged/plenary.nvim/lua/luassert/state.lua	/^state.snapshot = function()$/;"	f	unknown:state
snippet	plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
snippets.extends	coc-settings.json	/^    "snippets.extends": {$/;"	o
solarized_dark	plugged/lualine.nvim/THEMES.md	/^### solarized_dark$/;"	S	chapter:Available themes
solarized_light	plugged/lualine.nvim/THEMES.md	/^### solarized_light$/;"	S	chapter:Available themes
sort	plugged/fzf/src/matcher.go	/^	sort           bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
sort	plugged/fzf/src/matcher.go	/^	sort       bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
sort	plugged/fzf/src/terminal.go	/^	sort         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
sort	plugged/fzf/src/terminal.go	/^	sort    bool$/;"	m	struct:fzf.searchRequest	typeref:typename:bool
sortCriteria	plugged/fzf/src/result.go	/^var sortCriteria []criterion$/;"	v	package:fzf	typeref:typename:[]criterion
sortSelected	plugged/fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f	struct:fzf.Terminal	typeref:typename:[]selectedItem
sort_buffers	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^function M.sort_buffers(sort_by, buffers)$/;"	f	unknown:M
sort_buffers_by	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.sort_buffers_by(sort_by)$/;"	f	unknown:M
sort_by_directory	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function sort_by_directory(buf_a, buf_b)$/;"	f
sort_by_extension	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function sort_by_extension(buf_a, buf_b)$/;"	f
sort_by_groups	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^local function sort_by_groups(components)$/;"	f
sort_by_id	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function sort_by_id(buf_a, buf_b)$/;"	f
sort_by_relative_directory	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function sort_by_relative_directory(buf_a, buf_b)$/;"	f
sort_by_sorted	plugged/bufferline.nvim/lua/bufferline.lua	/^  local sort_by_sorted = function(buf_id_1, buf_id_2)$/;"	f
sort_by_tabs	plugged/bufferline.nvim/lua/bufferline/sorters.lua	/^local function sort_by_tabs(buf_a, buf_b)$/;"	f
sortable	plugged/fzf/src/pattern.go	/^	sortable      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
sorted	plugged/fzf/src/merger.go	/^	sorted  bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
sorter	plugged/bufferline.nvim/lua/bufferline.lua	/^local function sorter(list)$/;"	f
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.0"$/;"	s	object:dependencies.@babel/core.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.0"$/;"	s	object:dependencies.@babel/generator.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.6",$/;"	s	object:dependencies.snapdragon.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0"$/;"	s	object:dependencies.@jest/source-map.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0"$/;"	s	object:dependencies.source-map-support.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0",$/;"	s	object:dependencies.@jest/reporters.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.1"$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.1",$/;"	s	object:dependencies.@jest/transform.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.7.3"$/;"	s	object:dependencies.v8-to-istanbul.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": "~0.6.1"$/;"	s	object:dependencies.escodegen.requires
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.@babel/core.dependencies
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.@babel/generator.dependencies
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.snapdragon.dependencies
source-map	plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.v8-to-istanbul.dependencies
source-map	plugged/coc.nvim/package-lock.json	/^    "source-map": {$/;"	o	object:dependencies
source-map-resolve	plugged/coc.nvim/package-lock.json	/^        "source-map-resolve": "^0.5.0",$/;"	s	object:dependencies.snapdragon.requires
source-map-resolve	plugged/coc.nvim/package-lock.json	/^    "source-map-resolve": {$/;"	o	object:dependencies
source-map-support	plugged/coc.nvim/package-lock.json	/^        "source-map-support": "^0.5.6",$/;"	s	object:dependencies.jest-runner.requires
source-map-support	plugged/coc.nvim/package-lock.json	/^    "source-map-support": {$/;"	o	object:dependencies
source-map-url	plugged/coc.nvim/package-lock.json	/^        "source-map-url": "^0.4.0",$/;"	s	object:dependencies.source-map-resolve.requires
source-map-url	plugged/coc.nvim/package-lock.json	/^    "source-map-url": {$/;"	o	object:dependencies
sourced_filename	plugged/plenary.nvim/lua/plenary/debug_utils.lua	/^function debug_utils.sourced_filename()$/;"	f	unknown:debug_utils
sourced_filepath	plugged/plenary.nvim/lua/plenary/debug_utils.lua	/^function debug_utils.sourced_filepath()$/;"	f	unknown:debug_utils
sp	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
sparql	plugged/nvim-treesitter/lockfile.json	/^  "sparql": {$/;"	o
spawn	plugged/telescope.nvim/lua/telescope/_.lua	/^M.spawn = function(opts)$/;"	f	unknown:M
spdx-correct	plugged/coc.nvim/package-lock.json	/^        "spdx-correct": "^3.0.0",$/;"	s	object:dependencies.validate-npm-package-license.requires
spdx-correct	plugged/coc.nvim/package-lock.json	/^    "spdx-correct": {$/;"	o	object:dependencies
spdx-exceptions	plugged/coc.nvim/package-lock.json	/^        "spdx-exceptions": "^2.1.0",$/;"	s	object:dependencies.spdx-expression-parse.requires
spdx-exceptions	plugged/coc.nvim/package-lock.json	/^    "spdx-exceptions": {$/;"	o	object:dependencies
spdx-expression-parse	plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.0"$/;"	s	object:dependencies.validate-npm-package-license.requires
spdx-expression-parse	plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.0",$/;"	s	object:dependencies.spdx-correct.requires
spdx-expression-parse	plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.1"$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
spdx-expression-parse	plugged/coc.nvim/package-lock.json	/^    "spdx-expression-parse": {$/;"	o	object:dependencies
spdx-license-ids	plugged/coc.nvim/package-lock.json	/^        "spdx-license-ids": "^3.0.0"$/;"	s	object:dependencies.spdx-correct.requires
spdx-license-ids	plugged/coc.nvim/package-lock.json	/^        "spdx-license-ids": "^3.0.0"$/;"	s	object:dependencies.spdx-expression-parse.requires
spdx-license-ids	plugged/coc.nvim/package-lock.json	/^    "spdx-license-ids": {$/;"	o	object:dependencies
specifier:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  specifier: (sym_lit) @symbol)$/;"	f
spectre#foldexpr	plugged/nvim-spectre/autoload/spectre.vim	/^function! spectre#foldexpr() abort$/;"	f
speculate_signs	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^local function speculate_signs(buf, last_orig, last_new)$/;"	f
spell_suggest	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.spell_suggest = function(opts)$/;"	f	unknown:internal
spinner	plugged/fzf/src/terminal.go	/^	spinner      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
spinner	plugged/fzf/src/terminal.go	/^	spinner    string$/;"	m	struct:fzf.previewer	typeref:typename:string
spinner	plugged/fzf/src/terminal.go	/^	spinner string$/;"	m	struct:fzf.previewResult	typeref:typename:string
spinnerDuration	plugged/fzf/src/constants.go	/^	spinnerDuration   = 100 * time.Millisecond$/;"	c	package:fzf
split	plugged/JABS.nvim/lua/split.lua	/^function string:split(sep, plain)$/;"	f	unknown:string
split	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function split(string)$/;"	f
split	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local split = function(input, sep)$/;"	f
split	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^local function split(s, sep, plain, opts)$/;"	f
split-string	plugged/coc.nvim/package-lock.json	/^            "split-string": "^3.0.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
split-string	plugged/coc.nvim/package-lock.json	/^        "split-string": "^3.0.1"$/;"	s	object:dependencies.set-value.requires
split-string	plugged/coc.nvim/package-lock.json	/^    "split-string": {$/;"	o	object:dependencies
splitNth	plugged/fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f	package:fzf	typeref:typename:[]Range
split_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local split_gen = function(param, state)$/;"	f
split_merge	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^local function split_merge(t, first, last, comparator)$/;"	f
sprintf-js	plugged/coc.nvim/package-lock.json	/^        "sprintf-js": "~1.0.2"$/;"	s	object:dependencies.argparse.requires
sprintf-js	plugged/coc.nvim/package-lock.json	/^    "sprintf-js": {$/;"	o	object:dependencies
spy_revert	plugged/plenary.nvim/lua/luassert/stub.lua	/^  local spy_revert = s.revert     -- keep created revert function$/;"	f
sr	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
src	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var src = target[ name ], copy = options[ name ];$/;"	v
ss	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
stack-utils	plugged/coc.nvim/package-lock.json	/^        "stack-utils": "^2.0.2"$/;"	s	object:dependencies.jest-message-util.requires
stack-utils	plugged/coc.nvim/package-lock.json	/^    "stack-utils": {$/;"	o	object:dependencies
stage_buffer	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.stage_buffer = void(function()$/;"	f	unknown:M
stage_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.stage_hunk = mk_repeatable(void(function(range)$/;"	f	unknown:M
stage_hunks	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.stage_hunks = function(self, hunks, invert)$/;"	f	unknown:Obj
start	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:Lae.a
start	plugged/lualine.nvim/lua/lualine/utils/job.lua	/^  start = function(self)$/;"	f
start	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:start()$/;"	f	unknown:TSRange
start	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:start()$/;"	f	unknown:Job
start	plugged/plenary.nvim/lua/plenary/profile.lua	/^function profile.start(out, opts)$/;"	f	unknown:profile
start	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^function module.start()$/;"	f	unknown:module
start	plugged/plenary.nvim/lua/plenary/profile/p.lua	/^local function start(mode, outfile)$/;"	f
start	plugged/telescope.nvim/lua/telescope/_.lua	/^  self.start = function() end$/;"	f	unknown:self
start	plugged/telescope.nvim/lua/telescope/_.lua	/^function ErrorPipe:start()$/;"	f	unknown:ErrorPipe
startChan	plugged/fzf/src/terminal.go	/^	startChan    chan bool$/;"	m	struct:fzf.Terminal	typeref:typename:chan bool
startEventPoller	plugged/fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f	struct:fzf.Reader
startLine	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af200.e.l
start_shutdown_check	plugged/plenary.nvim/lua/plenary/job.lua	/^local start_shutdown_check = function(child, options, code, signal)$/;"	f
startify	plugged/vim-startify/plugin/startify.vim	/^augroup startify$/;"	a
startify#center	plugged/vim-startify/autoload/startify.vim	/^function! startify#center(lines) abort$/;"	f
startify#debug	plugged/vim-startify/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#get_session_path	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_session_path() abort$/;"	f
startify#insane_in_the_membrane	plugged/vim-startify/autoload/startify.vim	/^function! startify#insane_in_the_membrane(on_vimenter) abort$/;"	f
startify#open_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#pad	plugged/vim-startify/autoload/startify.vim	/^function! startify#pad(lines) abort$/;"	f
startify#session_close	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_load(source_last_session, ...) abort$/;"	f
startify#session_save	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_write(session_path)$/;"	f
startify#set_batchmode	plugged/vim-startify/autoload/startify.vim	/^function! startify#set_batchmode(batchmode) abort$/;"	f
startify#set_mark	plugged/vim-startify/autoload/startify.vim	/^function! startify#set_mark(type, ...) abort$/;"	f
startswith	plugged/gitsigns.nvim/gen_help.lua	/^local function startswith(str, start)$/;"	f
stash	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.stash = function(opts)$/;"	f	unknown:git
state	plugged/fzf/src/util/atomicbool.go	/^	state int32 \/\/ "1" is true, "0" is false$/;"	m	struct:util.AtomicBool	typeref:typename:int32
state	plugged/plenary.nvim/lua/luassert/assert.lua	/^  state = function() return setmetatable({mod=true, tokens={}}, __state_meta) end,$/;"	f
state	plugged/plenary.nvim/lua/luassert/match.lua	/^  state = function() return setmetatable({mod=true, tokens={}}, state_mt) end,$/;"	f
stateful	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:stateful()$/;"	f	unknown:Iterator
static-extend	plugged/coc.nvim/package-lock.json	/^        "static-extend": "^0.1.1"$/;"	s	object:dependencies.class-utils.requires
static-extend	plugged/coc.nvim/package-lock.json	/^    "static-extend": {$/;"	o	object:dependencies
status	plugged/lualine.nvim/lua/lualine/components/special/eval_func_component.lua	/^      status = M.vim_function(component)$/;"	f
status	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^git.status = function(opts)$/;"	f	unknown:git
status_dispatch	plugged/lualine.nvim/lua/lualine.lua	/^local function status_dispatch(focused)$/;"	f
status_line	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^M.status_line = function(opt)$/;"	f	unknown:M
statusline	plugged/lualine.nvim/lua/lualine.lua	/^local function statusline(sections, is_focused)$/;"	f
statusline	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.statusline(opts)$/;"	f	unknown:M
std_dev	plugged/plenary.nvim/lua/plenary/benchmark/stat.lua	/^stat.std_dev = function(t)$/;"	f	unknown:stat
stderr	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	plugged/fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f	struct:tui.LightWindow
stderr_result	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:stderr_result()$/;"	f	unknown:Job
stdio	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:s8.t
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {$/;"	o	object:definitions.languageServerBase.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerCommand.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerModule.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerSocket.properties
step	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	step: function(gotoEnd){$/;"	m	class:jQuery.fx
step	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  step = function(...)$/;"	f
step	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^  step = function(...)$/;"	f
stl	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^  stl = function(component)$/;"	f
stop	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
stop	plugged/lualine.nvim/lua/lualine/utils/job.lua	/^  stop = function(self)$/;"	f
stop	plugged/nvim-spectre/lua/spectre/init.lua	/^M.stop = function()$/;"	f	unknown:M
stop	plugged/nvim-spectre/lua/spectre/search/base.lua	/^base.stop = function(self)$/;"	f	unknown:base
stop	plugged/plenary.nvim/lua/plenary/profile/lua_profiler.lua	/^function module.stop()$/;"	f	unknown:module
stopPropagation	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event.stopPropagation = function() {$/;"	f	function:event
stopinsert	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.stopinsert()$/;"	f	unknown:M
str	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
str	plugged/fzf/src/tokenizer.go	/^	str   *string$/;"	m	struct:fzf.Delimiter	typeref:typename:*string
str	plugged/plenary.nvim/lua/plenary/curl.lua	/^    str = str:gsub("([^%w%-%.%_%~ ])", function(c)$/;"	f
strLines	plugged/fzf/src/options.go	/^func strLines(str string) []string {$/;"	f	package:fzf	typeref:typename:[]string
strcharpart	plugged/plenary.nvim/lua/plenary/strings.lua	/^M.strcharpart = (function()$/;"	f	unknown:M
strdisplaywidth	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.strdisplaywidth = (function()$/;"	f	unknown:M
strdisplaywidth	plugged/plenary.nvim/lua/plenary/strings.lua	/^M.strdisplaywidth = (function()$/;"	f	unknown:M
streamroller	plugged/coc.nvim/package-lock.json	/^        "streamroller": "^2.2.4"$/;"	s	object:dependencies.log4js.requires
streamroller	plugged/coc.nvim/package-lock.json	/^    "streamroller": {$/;"	o	object:dependencies
strictSSL	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
strikethrough	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
string-length	plugged/coc.nvim/package-lock.json	/^        "string-length": "^4.0.1"$/;"	s	object:dependencies.jest-watcher.requires
string-length	plugged/coc.nvim/package-lock.json	/^        "string-length": "^4.0.1",$/;"	s	object:dependencies.@jest/reporters.requires
string-length	plugged/coc.nvim/package-lock.json	/^    "string-length": {$/;"	o	object:dependencies
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": "^3.0.0"$/;"	s	object:dependencies.table.requires
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.1.0",$/;"	s	object:dependencies.wrap-ansi.requires
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0"$/;"	s	object:dependencies.cli-table.requires
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0",$/;"	s	object:dependencies.cliui.requires
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0",$/;"	s	object:dependencies.yargs.requires
string-width	plugged/coc.nvim/package-lock.json	/^        "string-width": {$/;"	o	object:dependencies.table.dependencies
string-width	plugged/coc.nvim/package-lock.json	/^    "string-width": {$/;"	o	object:dependencies
string.prototype.matchall	plugged/coc.nvim/package-lock.json	/^    "string.prototype.matchall": {$/;"	o	object:dependencies
string.prototype.trimend	plugged/coc.nvim/package-lock.json	/^        "string.prototype.trimend": "^1.0.4",$/;"	s	object:dependencies.es-abstract.requires
string.prototype.trimend	plugged/coc.nvim/package-lock.json	/^    "string.prototype.trimend": {$/;"	o	object:dependencies
string.prototype.trimstart	plugged/coc.nvim/package-lock.json	/^        "string.prototype.trimstart": "^1.0.4",$/;"	s	object:dependencies.es-abstract.requires
string.prototype.trimstart	plugged/coc.nvim/package-lock.json	/^    "string.prototype.trimstart": {$/;"	o	object:dependencies
string_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local string_gen = function(param, state)$/;"	f
stringify	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	m	class:AnonymousFunctionaf1e5c4a0a00.t
strings	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunctionaf1e5c4a29d00.t
strip-ansi	plugged/coc.nvim/package-lock.json	/^            "strip-ansi": "^5.1.0"$/;"	s	object:dependencies.table.dependencies.string-width.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.@jest/core.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.string-length.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.string-width.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.wrap-ansi.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0",$/;"	s	object:dependencies.cliui.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0",$/;"	s	object:dependencies.eslint.requires
strip-ansi	plugged/coc.nvim/package-lock.json	/^        "strip-ansi": {$/;"	o	object:dependencies.table.dependencies
strip-ansi	plugged/coc.nvim/package-lock.json	/^    "strip-ansi": {$/;"	o	object:dependencies
strip-bom	plugged/coc.nvim/package-lock.json	/^        "strip-bom": "^4.0.0",$/;"	s	object:dependencies.jest-runtime.requires
strip-bom	plugged/coc.nvim/package-lock.json	/^    "strip-bom": {$/;"	o	object:dependencies
strip-eof	plugged/coc.nvim/package-lock.json	/^        "strip-eof": "^1.0.0"$/;"	s	object:dependencies.execa.requires
strip-eof	plugged/coc.nvim/package-lock.json	/^    "strip-eof": {$/;"	o	object:dependencies
strip-final-newline	plugged/coc.nvim/package-lock.json	/^            "strip-final-newline": "^2.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
strip-final-newline	plugged/coc.nvim/package-lock.json	/^    "strip-final-newline": {$/;"	o	object:dependencies
strip-json-comments	plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
strip-json-comments	plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "^3.1.1"$/;"	s	object:dependencies.@eslint/eslintrc.requires
strip-json-comments	plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "~2.0.1"$/;"	s	object:dependencies.rc.requires
strip-json-comments	plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": {$/;"	o	object:dependencies.rc.dependencies
strip-json-comments	plugged/coc.nvim/package-lock.json	/^    "strip-json-comments": {$/;"	o	object:dependencies
stripWithWhitespace	plugged/plenary.nvim/lua/plenary/json.lua	/^local stripWithWhitespace = function(str, from, to)$/;"	f
stripWithoutWhitespace	plugged/plenary.nvim/lua/plenary/json.lua	/^local stripWithoutWhitespace = function()$/;"	f
strip_click_command	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_click_command(str)$/;"	f
strip_close	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_close(str)$/;"	f
strip_cr	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function strip_cr(xs0)$/;"	f
strip_dangling_modifier	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_dangling_modifier(str)$/;"	f
strip_hls	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_hls(str)$/;"	f
strip_modifier_digit	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_modifier_digit(str)$/;"	f
strip_parens	plugged/bufferline.nvim/tests/utils.lua	/^local function strip_parens(str)$/;"	f
strip_separator	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:strip_separator()$/;"	f	unknown:M
strong	plugged/fzf/src/terminal.go	/^	strong       tui.Attr$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Attr
struct	plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
stubfunc	plugged/plenary.nvim/lua/luassert/stub.lua	/^  local stubfunc = function(...)$/;"	f
style	plugged/fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f	unknown:tui.ColorPair	typeref:typename:tcell.Style
styleFloat	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var styleFloat = jQuery.browser.msie ?$/;"	v
sub	plugged/plenary.nvim/lua/plenary/operators.lua	/^  sub = function(a, b)$/;"	f
substr_highlighter	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local substr_highlighter = function(_, prompt, display)$/;"	f
substr_matcher	plugged/telescope.nvim/lua/telescope/sorters.lua	/^local substr_matcher = function(_, prompt, line, _)$/;"	f
success	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function success(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
suggest.acceptSuggestionOnCommitCharacter	plugged/coc.nvim/data/schema.json	/^    "suggest.acceptSuggestionOnCommitCharacter": {$/;"	o	object:properties
suggest.asciiCharactersOnly	plugged/coc.nvim/data/schema.json	/^    "suggest.asciiCharactersOnly": {$/;"	o	object:properties
suggest.autoTrigger	plugged/coc.nvim/data/schema.json	/^    "suggest.autoTrigger": {$/;"	o	object:properties
suggest.completionItemKindLabels	plugged/coc.nvim/data/schema.json	/^    "suggest.completionItemKindLabels": {$/;"	o	object:properties
suggest.defaultSortMethod	plugged/coc.nvim/data/schema.json	/^    "suggest.defaultSortMethod": {$/;"	o	object:properties
suggest.detailField	plugged/coc.nvim/data/schema.json	/^    "suggest.detailField": {$/;"	o	object:properties
suggest.detailMaxLength	plugged/coc.nvim/data/schema.json	/^    "suggest.detailMaxLength": {$/;"	o	object:properties
suggest.disableKind	plugged/coc.nvim/data/schema.json	/^    "suggest.disableKind": {$/;"	o	object:properties
suggest.disableMenu	plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenu": {$/;"	o	object:properties
suggest.disableMenuShortcut	plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenuShortcut": {$/;"	o	object:properties
suggest.echodocSupport	plugged/coc.nvim/data/schema.json	/^    "suggest.echodocSupport": {$/;"	o	object:properties
suggest.enablePreselect	plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreselect": {$/;"	o	object:properties
suggest.enablePreview	plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreview": {$/;"	o	object:properties
suggest.fixInsertedWord	plugged/coc.nvim/data/schema.json	/^    "suggest.fixInsertedWord": {$/;"	o	object:properties
suggest.floatConfig	plugged/coc.nvim/data/schema.json	/^    "suggest.floatConfig": {$/;"	o	object:properties
suggest.floatEnable	plugged/coc.nvim/data/schema.json	/^    "suggest.floatEnable": {$/;"	o	object:properties
suggest.highPrioritySourceLimit	plugged/coc.nvim/data/schema.json	/^    "suggest.highPrioritySourceLimit": {$/;"	o	object:properties
suggest.invalidInsertCharacters	plugged/coc.nvim/data/schema.json	/^    "suggest.invalidInsertCharacters": {$/;"	o	object:properties
suggest.keepCompleteopt	plugged/coc.nvim/data/schema.json	/^    "suggest.keepCompleteopt": {$/;"	o	object:properties
suggest.labelMaxLength	plugged/coc.nvim/data/schema.json	/^    "suggest.labelMaxLength": {$/;"	o	object:properties
suggest.languageSourcePriority	plugged/coc.nvim/data/schema.json	/^    "suggest.languageSourcePriority": {$/;"	o	object:properties
suggest.localityBonus	plugged/coc.nvim/data/schema.json	/^    "suggest.localityBonus": {$/;"	o	object:properties
suggest.lowPrioritySourceLimit	plugged/coc.nvim/data/schema.json	/^    "suggest.lowPrioritySourceLimit": {$/;"	o	object:properties
suggest.maxCompleteItemCount	plugged/coc.nvim/data/schema.json	/^    "suggest.maxCompleteItemCount": {$/;"	o	object:properties
suggest.minTriggerInputLength	plugged/coc.nvim/data/schema.json	/^    "suggest.minTriggerInputLength": {$/;"	o	object:properties
suggest.noselect	plugged/coc.nvim/data/schema.json	/^    "suggest.noselect": {$/;"	o	object:properties
suggest.numberSelect	plugged/coc.nvim/data/schema.json	/^    "suggest.numberSelect": {$/;"	o	object:properties
suggest.preferCompleteThanJumpPlaceholder	plugged/coc.nvim/data/schema.json	/^    "suggest.preferCompleteThanJumpPlaceholder": {$/;"	o	object:properties
suggest.removeDuplicateItems	plugged/coc.nvim/data/schema.json	/^    "suggest.removeDuplicateItems": {$/;"	o	object:properties
suggest.snippetIndicator	plugged/coc.nvim/data/schema.json	/^    "suggest.snippetIndicator": {$/;"	o	object:properties
suggest.snippetsSupport	plugged/coc.nvim/data/schema.json	/^    "suggest.snippetsSupport": {$/;"	o	object:properties
suggest.timeout	plugged/coc.nvim/data/schema.json	/^    "suggest.timeout": {$/;"	o	object:properties
suggest.triggerAfterInsertEnter	plugged/coc.nvim/data/schema.json	/^    "suggest.triggerAfterInsertEnter": {$/;"	o	object:properties
suggest.triggerCompletionWait	plugged/coc.nvim/data/schema.json	/^    "suggest.triggerCompletionWait": {$/;"	o	object:properties
sum	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.sum(...)$/;"	f	unknown:M
supercollider	plugged/nvim-treesitter/lockfile.json	/^  "supercollider": {$/;"	o
supports-color	plugged/coc.nvim/package-lock.json	/^            "supports-color": "^5.3.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
supports-color	plugged/coc.nvim/package-lock.json	/^            "supports-color": "^5.3.0"$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.0.0"$/;"	s	object:dependencies.jest-worker.requires
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.0.0"$/;"	s	object:dependencies.supports-hyperlinks.requires
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.1.0"$/;"	s	object:dependencies.chalk.requires
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.1.0"$/;"	s	object:dependencies.istanbul-lib-report.requires
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": {$/;"	o	object:dependencies.@babel/highlight.dependencies
supports-color	plugged/coc.nvim/package-lock.json	/^        "supports-color": {$/;"	o	object:dependencies.cli-table.dependencies
supports-color	plugged/coc.nvim/package-lock.json	/^    "supports-color": {$/;"	o	object:dependencies
supports-hyperlinks	plugged/coc.nvim/package-lock.json	/^        "supports-hyperlinks": "^2.0.0"$/;"	s	object:dependencies.terminal-link.requires
supports-hyperlinks	plugged/coc.nvim/package-lock.json	/^    "supports-hyperlinks": {$/;"	o	object:dependencies
suppress	plugged/fzf/src/terminal.go	/^	suppress     bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
surface	plugged/nvim-treesitter/lockfile.json	/^  "surface": {$/;"	o
surround.vim	plugged/vim-surround/README.markdown	/^# surround.vim$/;"	c
sv	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
svelte	plugged/nvim-treesitter/lockfile.json	/^  "svelte": {$/;"	o
sw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
swap_next	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/swap.lua	/^function M.swap_next(query_string)$/;"	f	unknown:M
swap_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.swap_nodes(node_or_range1, node_or_range2, bufnr, cursor_to_second)$/;"	f	unknown:M
swap_previous	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/swap.lua	/^function M.swap_previous(query_string)$/;"	f	unknown:M
swap_textobject	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/swap.lua	/^local function swap_textobject(query_string, direction)$/;"	f
swift	plugged/nvim-treesitter/lockfile.json	/^  "swift": {$/;"	o
switch_buf	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.switch_buf(buf)$/;"	f	unknown:M
sy	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
symbol	plugged/JABS.nvim/lua/jabs.lua	/^                local _, symbol = xpcall(function()$/;"	f
symbol	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:symbol()$/;"	f	unknown:TSRange
symbol-tree	plugged/coc.nvim/package-lock.json	/^        "symbol-tree": "^3.2.4",$/;"	s	object:dependencies.jsdom.requires
symbol-tree	plugged/coc.nvim/package-lock.json	/^    "symbol-tree": {$/;"	o	object:dependencies
symbols	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.symbols = function(opts)$/;"	f	unknown:internal
sync	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:sync(timeout, wait_interval)$/;"	f	unknown:Job
syntax	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.syntax(syntax)$/;"	f	unknown:util
syntax	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.syntax(syntax)$/;"	f	unknown:util
system_open	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^  system_open = function(node)$/;"	f
t	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f	function:j7
t	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f	function:XX
t	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	c	class:Zse
t	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw
t	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Uq
t	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
t	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c	class:e.toJSON
t	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
t	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a18400
t	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a19200
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:r.getTextEditChange
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10000
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10a00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10b00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10c00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a10d00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11400
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a11800
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12100
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12300
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12400
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12500
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12600
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12700
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4a12800
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aea00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aeb00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aec00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aed00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aee00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aef00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af000
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af200
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af300
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af700
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af800
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4af900
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afa00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afc00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afd00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4afe00
t	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunctionaf1e5c4aff00
t	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c	class:d8
t	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c	class:s8
t	plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	c	class:$c
t	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:AnonymousFunctionaf1e5c4a0a00
t	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
t	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionaf1e5c4a31800
t	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2cf00
t	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2de00
t	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a2f400
t	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33300
t	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
t	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunctionaf1e5c4a29d00
t	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:Rv
t	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:LK
t	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
t	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunctionaf1e5c4a12900
t	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunctionaf1e5c4aa600
t	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunctionaf1e5c4a21500
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:AnonymousFunctionaf1e5c4a7400
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:KQ
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Kee
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Vee
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:eee
t	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
t	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:AnonymousFunctionaf1e5c4a22000
t	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
t	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function t(gotoEnd){$/;"	f	function:jQuery.fx.custom
t	plugged/fzf/src/terminal.go	/^	t actionType$/;"	m	struct:fzf.action	typeref:typename:actionType
t	plugged/nvim-spectre/tests/helper.lua	/^M.t=function(cmd)$/;"	f	unknown:M
t	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> t           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
t	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> t           :call b:buffergator_catalog_viewer.visit_targe/;"	m
t	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> t             :call startify#set_mark('T')<cr>$/;"	m
t	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.t(str)$/;"	f	unknown:M
t$	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
t0	plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(e){let u="Infinite loop on byte: "+e.charCodeAt(0);if(this.optio/;"	v
t1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
t2	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
t4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
t5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
t6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
t8	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
t9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
tA	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
tB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
tC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
tD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
tG	plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
tL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
tN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
tP	plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
tR	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
tT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
tU	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
tV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
tW	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
tZ	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
t_	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ta	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
tab	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.separator.tab(name, group, hls, count)$/;"	f	unknown:M.separator
tab_change	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.tab_change()$/;"	f	unknown:M
tab_click_component	plugged/bufferline.nvim/lua/bufferline/tabpages.lua	/^local function tab_click_component(num)$/;"	f
tab_close_button	plugged/bufferline.nvim/lua/bufferline.lua	/^local function tab_close_button(icon)$/;"	f
table	plugged/coc.nvim/package-lock.json	/^        "table": "^5.2.3",$/;"	s	object:dependencies.eslint.requires
table	plugged/coc.nvim/package-lock.json	/^    "table": {$/;"	o	object:dependencies
tabline	plugged/lualine.nvim/lua/lualine.lua	/^local function tabline()$/;"	f
tabnine.priority	coc-settings.json	/^    "tabnine.priority": 2,$/;"	n
tabs component options	plugged/lualine.nvim/README.md	/^#### tabs component options$/;"	t	subsection:lualine.nvim""Usage and customization""Component options
tabstop	plugged/fzf/src/terminal.go	/^	tabstop      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
tabstop	plugged/fzf/src/tui/light.go	/^	tabstop       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
tabstop	plugged/fzf/src/tui/light.go	/^	tabstop  int$/;"	m	struct:tui.LightWindow	typeref:typename:int
tac	plugged/fzf/src/matcher.go	/^	tac            bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
tac	plugged/fzf/src/merger.go	/^	tac     bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
tae	plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
tag	plugged/vim-bbye/Makefile	/^tag:$/;"	t
tagbar#CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#ForceUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ForceUpdate() abort$/;"	f
tagbar#GetTagNearLine	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#GetTagNearLine(lnum, ...) abort$/;"	f
tagbar#IsOpen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#IsOpen() abort$/;"	f
tagbar#OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StopAutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#StopAutoUpdate() abort$/;"	f
tagbar#ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#Update	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#Update() abort$/;"	f
tagbar#autoopen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#currenttagtype	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttagtype(fmt, default) abort$/;"	f
tagbar#debug#enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#jump	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#jump() abort$/;"	f
tagbar#jumpToNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#jumpToNearbyTag(direction, ...) abort$/;"	f
tagbar#printfileinfo	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#printfileinfo() abort$/;"	f
tagbar#prototypes#basetag#new	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	plugged/tagbar/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	plugged/tagbar/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
tags	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.tags = function(opts)$/;"	f	unknown:files
tagstack	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.tagstack = function(opts)$/;"	f	unknown:internal
tail	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:tail(lines)$/;"	f	unknown:Path
tap	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
tap	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
tar	plugged/coc.nvim/package-lock.json	/^    "tar": {$/;"	o	object:dependencies
target	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
target/$(BINARY32)	plugged/fzf/Makefile	/^target\/$(BINARY32): $(SOURCES)$/;"	t
target/$(BINARY64)	plugged/fzf/Makefile	/^target\/$(BINARY64): $(SOURCES)$/;"	t
target/$(BINARYARM5)	plugged/fzf/Makefile	/^target\/$(BINARYARM5): $(SOURCES)$/;"	t
target/$(BINARYARM6)	plugged/fzf/Makefile	/^target\/$(BINARYARM6): $(SOURCES)$/;"	t
target/$(BINARYARM7)	plugged/fzf/Makefile	/^target\/$(BINARYARM7): $(SOURCES)$/;"	t
target/$(BINARYARM8)	plugged/fzf/Makefile	/^target\/$(BINARYARM8): $(SOURCES)$/;"	t
target/$(BINARYPPC64LE)	plugged/fzf/Makefile	/^target\/$(BINARYPPC64LE): $(SOURCES)$/;"	t
target/$(BINARYRISCV64)	plugged/fzf/Makefile	/^target\/$(BINARYRISCV64): $(SOURCES)$/;"	t
tbl_deep_extend	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.tbl_deep_extend(...)$/;"	f	unknown:utils
tbl_remove_dup	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.tbl_remove_dup = function (tbl)$/;"	f	unknown:M
tbl_reverse_lookup	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.tbl_reverse_lookup(tbl)$/;"	f	unknown:M
tbl_slice	plugged/nvim-tree.lua/lua/nvim-tree/utils.lua	/^function M.tbl_slice(t, first, last)$/;"	f	unknown:M
td_validate	plugged/telescope.nvim/lua/telescope/debounce.lua	/^local function td_validate(fn, ms)$/;"	f
teal	plugged/nvim-treesitter/lockfile.json	/^  "teal": {$/;"	o
teardown	plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	module:TestShell
teardown	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^    teardown = function(self)$/;"	f
teardown	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^  function opts.teardown(self)$/;"	f	unknown:opts
teardown	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:teardown()$/;"	f	unknown:Previewer
teardown	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^  function opts.teardown(self)$/;"	f	unknown:opts
tee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
telescope.nvim	plugged/telescope.nvim/README.md	/^# telescope.nvim$/;"	c
telescope_map	plugged/telescope.nvim/lua/telescope/mappings.lua	/^local telescope_map = function(prompt_bufnr, mode, key_bind, key_func, opts)$/;"	f
template	plugged/fzf/src/terminal.go	/^	template string$/;"	m	struct:fzf.previewRequest	typeref:typename:string
template	plugged/fzf/src/terminal_test.go	/^	template string$/;"	m	struct:fzf.give	typeref:typename:string
template	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.template(str, table)$/;"	f	unknown:util
template	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.template(str, table)$/;"	f	unknown:utils
template	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.template(str, table)$/;"	f	unknown:util
templateToString	plugged/fzf/src/terminal_test.go	/^func templateToString(format string, data interface{}) string {$/;"	f	package:fzf	typeref:typename:string
template_table	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.template_table(table, values)$/;"	f	unknown:utils
tempname	plugged/fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	plugged/fzf/src/pattern.go	/^type term struct {$/;"	s	package:fzf
termEqual	plugged/fzf/src/pattern.go	/^	termEqual$/;"	c	package:fzf
termExact	plugged/fzf/src/pattern.go	/^	termExact$/;"	c	package:fzf
termFuzzy	plugged/fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c	package:fzf	typeref:type:termType
termPrefix	plugged/fzf/src/pattern.go	/^	termPrefix$/;"	c	package:fzf
termSet	plugged/fzf/src/pattern.go	/^type termSet []term$/;"	t	package:fzf	typeref:typename:[]term
termSets	plugged/fzf/src/pattern.go	/^	termSets      []termSet$/;"	m	struct:fzf.Pattern	typeref:typename:[]termSet
termSuffix	plugged/fzf/src/pattern.go	/^	termSuffix$/;"	c	package:fzf
termType	plugged/fzf/src/pattern.go	/^type termType int$/;"	t	package:fzf	typeref:typename:int
term_has_open_win	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.term_has_open_win(term)$/;"	f	unknown:M
term_has_windows	plugged/toggleterm.nvim/tests/terminal_spec.lua	/^local function term_has_windows(term)$/;"	f
terminal	plugged/github-nvim-theme/lua/github-theme/util.lua	/^function util.terminal(colors)$/;"	f	unknown:util
terminal	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.terminal(theme)$/;"	f	unknown:utils
terminal	plugged/tokyonight.nvim/lua/tokyonight/util.lua	/^function util.terminal(colors)$/;"	f	unknown:util
terminal-link	plugged/coc.nvim/package-lock.json	/^        "terminal-link": "^2.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
terminal-link	plugged/coc.nvim/package-lock.json	/^    "terminal-link": {$/;"	o	object:dependencies
terminate	plugged/fzf/src/reader.go	/^func (r *Reader) terminate() {$/;"	f	struct:fzf.Reader
terminateTree	plugged/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
test	plugged/emmet-vim/Makefile	/^test:$/;"	t
test	plugged/fzf/Makefile	/^test: $(SOURCES)$/;"	t
test	plugged/gitsigns.nvim/Makefile	/^test: deps\/neovim deps\/plenary.nvim$/;"	t
test	plugged/lualine.nvim/Makefile	/^test:$/;"	t
test	plugged/nvim-spectre/Makefile	/^test:$/;"	t
test	plugged/nvim-ts-autotag/Makefile	/^test:$/;"	t
test	plugged/plenary.nvim/Makefile	/^test:$/;"	t
test	plugged/telescope.nvim/Makefile	/^test:$/;"	t
test	plugged/telescope.nvim/scripts/gendocs.lua	/^docs.test = function()$/;"	f	unknown:docs
test-exclude	plugged/coc.nvim/package-lock.json	/^        "test-exclude": "^6.0.0"$/;"	s	object:dependencies.babel-plugin-istanbul.requires
test-exclude	plugged/coc.nvim/package-lock.json	/^    "test-exclude": {$/;"	o	object:dependencies
testCase	plugged/fzf/src/terminal_test.go	/^type testCase struct {$/;"	s	package:fzf
testCommands	plugged/fzf/src/terminal_test.go	/^func testCommands(t *testing.T, tests []testCase) {$/;"	f	package:fzf
testDoesNotWorkWithCoroutineWithExtraYields	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^function TestContextManager:testDoesNotWorkWithCoroutineWithExtraYields()$/;"	f	unknown:TestContextManager
testEnvironment	plugged/coc.nvim/package.json	/^    "testEnvironment": "node",$/;"	s	object:jest
testOpenWorks	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^function TestContextManager:testOpenWorks()$/;"	f	unknown:TestContextManager
testOpenWorksWithPath	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^function TestContextManager:testOpenWorksWithPath()$/;"	f	unknown:TestContextManager
testParserReference	plugged/fzf/src/ansi_test.go	/^func testParserReference(t testing.TB, str string) {$/;"	f	package:fzf
testRegex	plugged/coc.nvim/package.json	/^    "testRegex": "src\/__tests__\/.*\\\\.(test|spec)\\\\.ts$",$/;"	s	object:jest
testWorksWithCoroutine	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^function TestContextManager:testWorksWithCoroutine()$/;"	f	unknown:TestContextManager
testWorksWithObj	plugged/plenary.nvim/tests/plenary/context_manager_spec.lua	/^function TestContextManager:testWorksWithObj()$/;"	f	unknown:TestContextManager
test_accept_non_empty	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestGoFZF
test_accept_non_empty_with_empty_list	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestGoFZF
test_accept_non_empty_with_multi_selection	plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestGoFZF
test_alt_c	plugged/fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	module:TestShell
test_alt_c_command	plugged/fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	module:TestShell
test_backward_delete_char_eof	plugged/fzf/test/test_go.rb	/^  def test_backward_delete_char_eof$/;"	f	class:TestGoFZF
test_backward_eof	plugged/fzf/test/test_go.rb	/^  def test_backward_eof$/;"	f	class:TestGoFZF
test_bind	plugged/fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	plugged/fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_bind_replace_query	plugged/fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestGoFZF
test_border	plugged/plenary.nvim/tests/plenary/popup_spec.lua	/^    local test_border = function(name, borderchars, expected)$/;"	f
test_cancel	plugged/fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_change_first_last	plugged/fzf/test/test_go.rb	/^  def test_change_first_last$/;"	f	class:TestGoFZF
test_change_prompt	plugged/fzf/test/test_go.rb	/^  def test_change_prompt$/;"	f	class:TestGoFZF
test_clear_list_when_header_lines_changed_due_to_reload	plugged/fzf/test/test_go.rb	/^  def test_clear_list_when_header_lines_changed_due_to_reload$/;"	f	class:TestGoFZF
test_clear_query	plugged/fzf/test/test_go.rb	/^  def test_clear_query$/;"	f	class:TestGoFZF
test_clear_selection	plugged/fzf/test/test_go.rb	/^  def test_clear_selection$/;"	f	class:TestGoFZF
test_close	plugged/fzf/test/test_go.rb	/^  def test_close$/;"	f	class:TestGoFZF
test_complete_quoted_command	plugged/fzf/test/test_go.rb	/^  def test_complete_quoted_command$/;"	f	class:TestZsh
test_ctrl_r	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	module:TestShell
test_ctrl_r_abort	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_abort$/;"	f	module:TestShell
test_ctrl_r_multiline	plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_multiline$/;"	f	module:TestShell
test_ctrl_t	plugged/fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	module:TestShell
test_ctrl_t_unicode	plugged/fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	module:TestShell
test_custom_completion	plugged/fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	module:CompletionTest
test_custom_completion_api	plugged/fzf/test/test_go.rb	/^  def test_custom_completion_api$/;"	f	module:CompletionTest
test_cycle	plugged/fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	plugged/fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestGoFZF
test_defaults_key	plugged/telescope.nvim/lua/tests/automated/layout_strategies_spec.lua	/^  local test_defaults_key = function(should, key, strat, output, ours, theirs, override)$/;"	f
test_defer	plugged/telescope.nvim/lua/telescope/debounce.lua	/^function M.test_defer(bouncer, ms, firstlast)$/;"	f	unknown:M
test_dir_completion	plugged/fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	module:CompletionTest
test_directory	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^function harness.test_directory(directory, opts)$/;"	f	unknown:harness
test_directory_command	plugged/plenary.nvim/lua/plenary/test_harness.lua	/^function harness.test_directory_command(command)$/;"	f	unknown:harness
test_disabled	plugged/fzf/test/test_go.rb	/^  def test_disabled$/;"	f	class:TestGoFZF
test_dynamic_completion_loader	plugged/fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBash
test_escaped_meta_characters	plugged/fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestGoFZF
test_exact	plugged/fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestGoFZF
test_execute	plugged/fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	plugged/fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_plus_flag	plugged/fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestGoFZF
test_execute_shell	plugged/fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	plugged/fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	plugged/fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	plugged/fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestGoFZF
test_expect	plugged/fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	plugged/fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	plugged/fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	plugged/fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	plugged/fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	module:CompletionTest
test_file_completion_root	plugged/fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	module:CompletionTest
test_file_completion_unicode	plugged/fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	module:CompletionTest
test_file_word	plugged/fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestGoFZF
test_filter_exitstatus	plugged/fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_fzf_default_command_failure	plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestGoFZF
test_header	plugged/fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_first	plugged/fzf/test/test_go.rb	/^  def test_header_first$/;"	f	class:TestGoFZF
test_header_first_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_first_reverse$/;"	f	class:TestGoFZF
test_header_lines	plugged/fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	plugged/fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_lines_with_nth	plugged/fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	plugged/fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_header_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestGoFZF
test_height	plugged/telescope.nvim/lua/tests/automated/layout_strategies_spec.lua	/^  local test_height = function(should, output, input, opts)$/;"	f
test_history	plugged/fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	plugged/fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestGoFZF
test_info_hidden	plugged/fzf/test/test_go.rb	/^  def test_info_hidden$/;"	f	class:TestGoFZF
test_interrupt_execute	plugged/fzf/test/test_go.rb	/^  def test_interrupt_execute$/;"	f	class:TestGoFZF
test_invalid_cache	plugged/fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_cache_query_type	plugged/fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestGoFZF
test_invalid_option	plugged/fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_inverse_only_search_should_not_sort_the_result	plugged/fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestGoFZF
test_is_in_node_range	plugged/nvim-treesitter/tests/unit/ts_utils_spec.lua	/^  local function test_is_in_node_range(line, col)$/;"	f
test_item_index_reset_on_reload	plugged/fzf/test/test_go.rb	/^  def test_item_index_reset_on_reload$/;"	f	class:TestGoFZF
test_jump	plugged/fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestGoFZF
test_jump_accept	plugged/fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestGoFZF
test_keep_right	plugged/fzf/test/test_go.rb	/^  def test_keep_right$/;"	f	class:TestGoFZF
test_key_bindings	plugged/fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_kill_default_command_on_abort	plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_abort$/;"	f	class:TestGoFZF
test_kill_default_command_on_accept	plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_accept$/;"	f	class:TestGoFZF
test_kill_reload_command_on_abort	plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_abort$/;"	f	class:TestGoFZF
test_kill_reload_command_on_accept	plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_accept$/;"	f	class:TestGoFZF
test_long_line	plugged/fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	plugged/fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	plugged/fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_margin_reverse_list	plugged/fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestGoFZF
test_marker	plugged/fzf/test/test_go.rb	/^  def test_marker$/;"	f	class:TestGoFZF
test_multi_max	plugged/fzf/test/test_go.rb	/^  def test_multi_max$/;"	f	class:TestGoFZF
test_multi_order	plugged/fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_no_clear	plugged/fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestGoFZF
test_normalized_match	plugged/fzf/test/test_go.rb	/^  def test_normalized_match$/;"	f	class:TestGoFZF
test_or_operator	plugged/fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestGoFZF
test_parse	plugged/telescope.nvim/lua/tests/automated/command_spec.lua	/^  local test_parse = function(should, input, output)$/;"	f
test_partial_caching	plugged/fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestGoFZF
test_pointer	plugged/fzf/test/test_go.rb	/^  def test_pointer$/;"	f	class:TestGoFZF
test_pointer_with_jump	plugged/fzf/test/test_go.rb	/^  def test_pointer_with_jump$/;"	f	class:TestGoFZF
test_preview	plugged/fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestGoFZF
test_preview_bindings_with_default_preview	plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_with_default_preview$/;"	f	class:TestGoFZF
test_preview_bindings_without_default_preview	plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_without_default_preview$/;"	f	class:TestGoFZF
test_preview_clear_screen	plugged/fzf/test/test_go.rb	/^  def test_preview_clear_screen$/;"	f	class:TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	plugged/fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestGoFZF
test_preview_file	plugged/fzf/test/test_go.rb	/^  def test_preview_file$/;"	f	class:TestGoFZF
test_preview_flags	plugged/fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestGoFZF
test_preview_header	plugged/fzf/test/test_go.rb	/^  def test_preview_header$/;"	f	class:TestGoFZF
test_preview_hidden	plugged/fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestGoFZF
test_preview_q_no_match	plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestGoFZF
test_preview_q_no_match_with_initial_query	plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestGoFZF
test_preview_scroll_begin_and_offset	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_and_offset$/;"	f	class:TestGoFZF
test_preview_scroll_begin_constant	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_constant$/;"	f	class:TestGoFZF
test_preview_scroll_begin_expr	plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_expr$/;"	f	class:TestGoFZF
test_preview_size_0	plugged/fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestGoFZF
test_preview_update_on_select	plugged/fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestGoFZF
test_preview_window_follow	plugged/fzf/test/test_go.rb	/^  def test_preview_window_follow$/;"	f	class:TestGoFZF
test_process_completion	plugged/fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	module:CompletionTest
test_query_unicode	plugged/fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	plugged/fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_reload	plugged/fzf/test/test_go.rb	/^  def test_reload$/;"	f	class:TestGoFZF
test_reload_even_when_theres_no_match	plugged/fzf/test/test_go.rb	/^  def test_reload_even_when_theres_no_match$/;"	f	class:TestGoFZF
test_reload_should_update_preview	plugged/fzf/test/test_go.rb	/^  def test_reload_should_update_preview$/;"	f	class:TestGoFZF
test_replace	plugged/nvim-spectre/tests/helper.lua	/^M.test_replace = function(opts, f_replace)$/;"	f	unknown:M
test_scroll	plugged/fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_scroll_off	plugged/fzf/test/test_go.rb	/^  def test_scroll_off$/;"	f	class:TestGoFZF
test_scroll_off_large	plugged/fzf/test/test_go.rb	/^  def test_scroll_off_large$/;"	f	class:TestGoFZF
test_select_1	plugged/fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	plugged/fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	plugged/fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_select_deselect	plugged/fzf/test/test_go.rb	/^  def test_select_deselect$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	plugged/fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_strip_xterm_osc_sequence	plugged/fzf/test/test_go.rb	/^  def test_strip_xterm_osc_sequence$/;"	f	class:TestGoFZF
test_sync	plugged/fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	plugged/fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	plugged/fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	plugged/fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	plugged/fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	plugged/fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_begin_algo_v2	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestGoFZF
test_tiebreak_end	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	plugged/fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_toggle_preview_wrap	plugged/fzf/test/test_go.rb	/^  def test_toggle_preview_wrap$/;"	f	class:TestGoFZF
test_toggle_sort	plugged/fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_unbind	plugged/fzf/test/test_go.rb	/^  def test_unbind$/;"	f	class:TestGoFZF
test_unicode_case	plugged/fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	plugged/fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	module:CompletionTest
test_vanilla	plugged/fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	plugged/fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	plugged/fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_basic	plugged/fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	plugged/fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
testcov	plugged/lualine.nvim/Makefile	/^testcov:$/;"	t
testsuite	plugged/gitsigns.nvim/test/gitsigns_spec.lua	/^  local function testsuite(internal_diff)$/;"	f
text	plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
text	plugged/fzf/src/item.go	/^	text        util.Chars    \/\/ 32 = 24 + 1 + 1 + 2 + 4$/;"	m	struct:fzf.Item	typeref:typename:util.Chars
text	plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.Pattern	typeref:typename:[]rune
text	plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.term	typeref:typename:[]rune
text	plugged/fzf/src/tokenizer.go	/^	text         *util.Chars$/;"	m	struct:fzf.Token	typeref:typename:*util.Chars
text	plugged/fzf/src/tui/light.go	/^	text         string$/;"	m	struct:tui.wrappedLine	typeref:typename:string
text	plugged/nvim-spectre/lua/spectre/state_utils.lua	/^                text = function()$/;"	f
text	plugged/telescope.nvim/lua/telescope/make_entry.lua	/^      text = function(t)$/;"	f
text-table	plugged/coc.nvim/package-lock.json	/^        "text-table": "^0.2.0",$/;"	s	object:dependencies.eslint.requires
text-table	plugged/coc.nvim/package-lock.json	/^    "text-table": {$/;"	o	object:dependencies
textDocument	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.s
textDocument	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:d8.t
textobject_at_point	plugged/nvim-treesitter-textobjects/lua/nvim-treesitter/textobjects/shared.lua	/^function M.textobject_at_point(query_string, pos, bufnr, opts)$/;"	f	unknown:M
tf	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
tg	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
tge	plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	f
theme	plugged/fzf/src/terminal.go	/^	theme        *tui.ColorTheme$/;"	m	struct:fzf.Terminal	typeref:typename:*tui.ColorTheme
theme	plugged/fzf/src/tui/light.go	/^	theme         *ColorTheme$/;"	m	struct:tui.LightRenderer	typeref:typename:*ColorTheme
theme	plugged/fzf/src/tui/tui.go	/^	theme        *ColorTheme$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:*ColorTheme
theme	plugged/onedarkpro.nvim/lua/onedarkpro/config.lua	/^	theme = function() -- The theme to be used (opts: 'onedark' or 'onelight')$/;"	f
themes	plugged/github-nvim-theme/lua/github-theme/colors.lua	/^  local themes = function(options)$/;"	f
third	plugged/plenary.nvim/tests/plenary/async/condvar_spec.lua	/^    local third = function()$/;"	f
thread	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  local thread = co.create(async_function)$/;"	f
throat	plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-changed-files.requires
throat	plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-jasmine2.requires
throat	plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-runner.requires
throat	plugged/coc.nvim/package-lock.json	/^    "throat": {$/;"	o	object:dependencies
throttle_leading	plugged/gitsigns.nvim/lua/gitsigns/debounce.lua	/^function M.throttle_leading(ms, fn)$/;"	f	unknown:M
throttle_leading	plugged/telescope.nvim/lua/telescope/debounce.lua	/^function M.throttle_leading(fn, ms)$/;"	f	unknown:M
throttle_trailing	plugged/telescope.nvim/lua/telescope/debounce.lua	/^function M.throttle_trailing(fn, ms, last)$/;"	f	unknown:M
timeout	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.timeout = a.wrap(function(future, ms, callback)$/;"	f	unknown:M
timeoutInterval	plugged/fzf/src/tui/light_windows.go	/^	timeoutInterval = 10$/;"	c	package:tui
timeout_callback	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^  local timeout_callback = function(...)$/;"	f
timer	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.timer = function(ms)$/;"	f	unknown:M
timestamp	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
tinsert	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.tinsert(...)$/;"	f	unknown:util
tint_lualine_group	plugged/github-nvim-theme/lua/github-theme/colors.lua	/^  local tint_lualine_group = function(color)$/;"	f
title	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12400.e.o
title	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4af800.e.a
title	plugged/coc.nvim/data/schema.json	/^        "title": {$/;"	o	object:definitions.float.properties
title	plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
title	plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.hover.floatConfig.properties
title	plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.signature.floatConfig.properties
title	plugged/lualine.nvim/lua/lualine/extensions/quickfix.lua	/^local function title()$/;"	f
title	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^function Previewer:title(entry, dynamic)$/;"	f	unknown:Previewer
tj	plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
tk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
tl	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	c
tl-build	plugged/gitsigns.nvim/Makefile	/^tl-build: tlconfig.lua$/;"	t
tl-check	plugged/gitsigns.nvim/Makefile	/^tl-check:$/;"	t
tl-ensure	plugged/gitsigns.nvim/Makefile	/^tl-ensure: tl-build$/;"	t
tlaplus	plugged/nvim-treesitter/lockfile.json	/^  "tlaplus": {$/;"	o
tle	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
tm	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
tme	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
tmpl	plugged/coc.nvim/package-lock.json	/^        "tmpl": "1.0.x"$/;"	s	object:dependencies.makeerror.requires
tmpl	plugged/coc.nvim/package-lock.json	/^    "tmpl": {$/;"	o	object:dependencies
tmpname	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^function M.tmpname()$/;"	f	unknown:M
tmux	plugged/fzf/test/test_go.rb	/^  attr_reader :tmux$/;"	A	class:TestBase
tmux	plugged/github-nvim-theme/lua/github-theme/extra/tmux.lua	/^function M.tmux(config)$/;"	f	unknown:M
tmux	plugged/vim-tmux-navigator/README.md	/^### tmux$/;"	S	section:Vim Tmux Navigator""Installation
tmux_args=	plugged/fzf/bin/fzf-tmux	/^tmux_args=()$/;"	f
tmux_dark	plugged/github-nvim-theme/Makefile	/^tmux_dark: tmux_pre$/;"	t
tmux_dark_default	plugged/github-nvim-theme/Makefile	/^tmux_dark_default: tmux_pre$/;"	t
tmux_dimmed	plugged/github-nvim-theme/Makefile	/^tmux_dimmed: tmux_pre$/;"	t
tmux_light	plugged/github-nvim-theme/Makefile	/^tmux_light: tmux_pre$/;"	t
tmux_light_default	plugged/github-nvim-theme/Makefile	/^tmux_light_default: tmux_pre$/;"	t
tmux_navigator	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^augroup tmux_navigator$/;"	a
tmux_pre	plugged/github-nvim-theme/Makefile	/^tmux_pre:$/;"	t
tmux_theme	plugged/github-nvim-theme/Makefile	/^tmux_theme = ~\/.github-theme.tmux$/;"	m
to	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
to-fast-properties	plugged/coc.nvim/package-lock.json	/^        "to-fast-properties": "^2.0.0"$/;"	s	object:dependencies.@babel/types.requires
to-fast-properties	plugged/coc.nvim/package-lock.json	/^    "to-fast-properties": {$/;"	o	object:dependencies
to-object-path	plugged/coc.nvim/package-lock.json	/^        "to-object-path": "^0.3.0",$/;"	s	object:dependencies.cache-base.requires
to-object-path	plugged/coc.nvim/package-lock.json	/^    "to-object-path": {$/;"	o	object:dependencies
to-regex	plugged/coc.nvim/package-lock.json	/^            "to-regex": "^3.0.1"$/;"	s	object:dependencies.sane.dependencies.braces.requires
to-regex	plugged/coc.nvim/package-lock.json	/^            "to-regex": "^3.0.2"$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
to-regex	plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.expand-brackets.requires
to-regex	plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.extglob.requires
to-regex	plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.nanomatch.requires
to-regex	plugged/coc.nvim/package-lock.json	/^    "to-regex": {$/;"	o	object:dependencies
to-regex-range	plugged/coc.nvim/package-lock.json	/^            "to-regex-range": "^2.1.0"$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
to-regex-range	plugged/coc.nvim/package-lock.json	/^        "to-regex-range": "^5.0.1"$/;"	s	object:dependencies.fill-range.requires
to-regex-range	plugged/coc.nvim/package-lock.json	/^        "to-regex-range": {$/;"	o	object:dependencies.sane.dependencies
to-regex-range	plugged/coc.nvim/package-lock.json	/^    "to-regex-range": {$/;"	o	object:dependencies
toActions	plugged/fzf/src/terminal.go	/^func toActions(types ...actionType) []action {$/;"	f	package:fzf	typeref:typename:[]action
toAnsiString	plugged/fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f	package:fzf	typeref:typename:string
toJSON	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:e
toJSON	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
toString	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:e
toString	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
toString	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	m	class:r
to_func	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.to_func(a)$/;"	f	unknown:M
to_linear	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.to_linear = function(c)$/;"	f	unknown:hsluv
to_linear	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.to_linear = function(c)$/;"	f	unknown:hsluv
to_linear	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.to_linear = function(c)$/;"	f	unknown:hsluv
to_relative_string	plugged/gitsigns.nvim/lua/gitsigns/util.lua	/^   local to_relative_string = function(time, divisor, time_word)$/;"	f
to_rgb	plugged/toggleterm.nvim/lua/toggleterm/colors.lua	/^local function to_rgb(color)$/;"	f
to_s	plugged/nvcode-color-schemes.vim/generate	/^  def to_s$/;"	f	class:Highlight
to_style	plugged/bufferline.nvim/lua/bufferline/numbers.lua	/^local function to_style(map)$/;"	f
tobit	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.tobit(x)$/;"	f	unknown:M.bit
tobit	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.tobit(x)$/;"	f	unknown:M
toe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
toggle	plugged/indent-blankline.nvim/lua/indent_blankline/commands.lua	/^M.toggle = function(bang)$/;"	f	unknown:M
toggle	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^function M.toggle(find_file)$/;"	f	unknown:M
toggle	plugged/onedark.nvim/lua/onedark/init.lua	/^function M.toggle()$/;"	f	unknown:M
toggle	plugged/telescope.nvim/lua/telescope/pickers/multi.lua	/^function MultiSelect:toggle(entry)$/;"	f	unknown:MultiSelect
toggle	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.toggle(count, size, dir, direction)$/;"	f	unknown:M
toggle	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^function Terminal:toggle(size, direction)$/;"	f	unknown:Terminal
toggleItem	plugged/fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
toggleSort	plugged/fzf/src/terminal.go	/^	toggleSort   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
toggle_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function toggle_all(mod)$/;"	f
toggle_all	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.toggle_all(prompt_bufnr)$/;"	f	unknown:actions
toggle_all	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.toggle_all(force)$/;"	f	unknown:M
toggle_bufferline	plugged/bufferline.nvim/lua/bufferline.lua	/^function M.toggle_bufferline()$/;"	f	unknown:M
toggle_checked	plugged/nvim-spectre/lua/spectre/init.lua	/^M.toggle_checked = function()$/;"	f	unknown:M
toggle_command	plugged/toggleterm.nvim/lua/toggleterm.lua	/^function M.toggle_command(args, count)$/;"	f	unknown:M
toggle_current_line_blame	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.toggle_current_line_blame = function()$/;"	f	unknown:M
toggle_dotfiles	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.toggle_dotfiles()$/;"	f	unknown:M
toggle_eob	plugged/material.nvim/lua/material/functions.lua	/^ local toggle_eob = function ()$/;"	f
toggle_help	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.toggle_help()$/;"	f	unknown:M
toggle_help	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.toggle_help(tabpage)$/;"	f	unknown:M
toggle_hidden	plugged/bufferline.nvim/lua/bufferline/groups.lua	/^function M.toggle_hidden(group_id, name)$/;"	f	unknown:M
toggle_ignored	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.toggle_ignored()$/;"	f	unknown:M
toggle_line	plugged/nvim-spectre/lua/spectre/init.lua	/^M.toggle_line = function (line_visual)$/;"	f	unknown:M
toggle_linehl	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.toggle_linehl = function()$/;"	f	unknown:M
toggle_live_update	plugged/nvim-spectre/lua/spectre/init.lua	/^M.toggle_live_update = function()$/;"	f	unknown:M
toggle_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function toggle_module(mod, bufnr, lang)$/;"	f
toggle_nth_term	plugged/toggleterm.nvim/lua/toggleterm.lua	/^local function toggle_nth_term(num, size, dir, direction)$/;"	f
toggle_numhl	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.toggle_numhl = function()$/;"	f	unknown:M
toggle_padding	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:toggle_padding()$/;"	f	unknown:Picker
toggle_selection	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^function actions.toggle_selection(prompt_bufnr)$/;"	f	unknown:actions
toggle_selection	plugged/telescope.nvim/lua/telescope/pickers.lua	/^function Picker:toggle_selection(row)$/;"	f	unknown:Picker
toggle_signs	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.toggle_signs = function()$/;"	f	unknown:M
toggle_style	plugged/material.nvim/lua/material/functions.lua	/^ local toggle_style = function ()$/;"	f
toggle_word_diff	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.toggle_word_diff = function()$/;"	f	unknown:M
toggleterm_statusline	plugged/lualine.nvim/lua/lualine/extensions/toggleterm.lua	/^local function toggleterm_statusline()$/;"	f
tohex	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.bit.tohex(x, ...)$/;"	f	unknown:M.bit
tohex	plugged/plenary.nvim/lua/plenary/bit.lua	/^function M.tohex(x, n) -- BitOp style$/;"	f	unknown:M
tolist	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:tolist()$/;"	f	unknown:Iterator
tolistn	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:tolistn()$/;"	f	unknown:Iterator
tomap	plugged/plenary.nvim/lua/plenary/iterators.lua	/^function Iterator:tomap()$/;"	f	unknown:Iterator
toml	plugged/nvim-treesitter/lockfile.json	/^  "toml": {$/;"	o
top	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	p	class:results
top	plugged/fzf/src/tui/light.go	/^	top      int$/;"	m	struct:tui.LightWindow	typeref:typename:int
top	plugged/fzf/src/tui/tcell.go	/^	top         int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
top	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.top = function(sorting_strategy, max_results, num_results)$/;"	f	unknown:scroller
topLeft	plugged/fzf/src/tui/tui.go	/^	topLeft     rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
topRight	plugged/fzf/src/tui/tui.go	/^	topRight    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
tostr	plugged/plenary.nvim/lua/luassert/formatters/init.lua	/^local function tostr(arg)$/;"	f
touch	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:touch(opts)$/;"	f	unknown:Path
tough-cookie	plugged/coc.nvim/package-lock.json	/^        "tough-cookie": "^4.0.0",$/;"	s	object:dependencies.jsdom.requires
tough-cookie	plugged/coc.nvim/package-lock.json	/^    "tough-cookie": {$/;"	o	object:dependencies
tp	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
tpe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
tq	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
tr	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
tr46	plugged/coc.nvim/package-lock.json	/^        "tr46": "^2.0.2",$/;"	s	object:dependencies.whatwg-url.requires
tr46	plugged/coc.nvim/package-lock.json	/^    "tr46": {$/;"	o	object:dependencies
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {$/;"	o	object:definitions.languageServerBase.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerCommand.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerModule.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerSocket.properties
traceFormat	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:f
traceback_error	plugged/plenary.nvim/lua/plenary/errors.lua	/^M.traceback_error = function(s, level)$/;"	f	unknown:M
trail	plugged/which-key.nvim/lua/which-key/layout.lua	/^function Layout:trail()$/;"	f	unknown:Layout
trans	plugged/fzf/src/chunklist.go	/^	trans  ItemBuilder$/;"	m	struct:fzf.ChunkList	typeref:typename:ItemBuilder
transform	plugged/coc.nvim/package.json	/^    "transform": {$/;"	o	object:jest
transform	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^action_mt.transform = function(k, mt, mod, v)$/;"	f	unknown:action_mt
transformInput	plugged/fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Token
transform_devicons	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.transform_devicons = load_once(function()$/;"	f	unknown:utils
transform_line	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local transform_line = function(line)$/;"	f
transform_mod	plugged/telescope.nvim/lua/telescope/actions/mt.lua	/^action_mt.transform_mod = function(mod)$/;"	f	unknown:action_mt
transform_path	plugged/telescope.nvim/lua/telescope/utils.lua	/^utils.transform_path = function(opts, path)$/;"	f	unknown:utils
transformed	plugged/fzf/src/item.go	/^	transformed *[]Token      \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]Token
transfrom_file	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^      local transfrom_file = function()$/;"	f
transport	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
transport	plugged/coc.nvim/data/schema.json	/^        "transport": {$/;"	o	object:definitions.languageServerModule.properties
transportPort	plugged/coc.nvim/data/schema.json	/^        "transportPort": {$/;"	o	object:definitions.languageServerModule.properties
traverse	plugged/coc.nvim/package-lock.json	/^        "traverse": ">=0.3.0 <0.4"$/;"	s	object:dependencies.chainsaw.requires
traverse	plugged/coc.nvim/package-lock.json	/^    "traverse": {$/;"	o	object:dependencies
traverse	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traverse(funcs, ignoreobjs)$/;"	f
traversecdata	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traversecdata(env, t)$/;"	f
traversefunction	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traversefunction(env, obj)$/;"	f
traversestring	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traversestring(env, obj)$/;"	f
traversetable	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traversetable(env, obj)$/;"	f
traversethread	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traversethread(env, t)$/;"	f
traverseuserdata	plugged/plenary.nvim/scratch/_reference_count.lua	/^function traverseuserdata(env, obj)$/;"	f
tre	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
tree.closedIcon	plugged/coc.nvim/data/schema.json	/^    "tree.closedIcon": {$/;"	o	object:properties
tree.key.actions	plugged/coc.nvim/data/schema.json	/^    "tree.key.actions": {$/;"	o	object:properties
tree.key.activeFilter	plugged/coc.nvim/data/schema.json	/^    "tree.key.activeFilter": {$/;"	o	object:properties
tree.key.close	plugged/coc.nvim/data/schema.json	/^    "tree.key.close": {$/;"	o	object:properties
tree.key.collapseAll	plugged/coc.nvim/data/schema.json	/^    "tree.key.collapseAll": {$/;"	o	object:properties
tree.key.invoke	plugged/coc.nvim/data/schema.json	/^    "tree.key.invoke": {$/;"	o	object:properties
tree.key.selectNext	plugged/coc.nvim/data/schema.json	/^    "tree.key.selectNext": {$/;"	o	object:properties
tree.key.selectPrevious	plugged/coc.nvim/data/schema.json	/^    "tree.key.selectPrevious": {$/;"	o	object:properties
tree.key.toggle	plugged/coc.nvim/data/schema.json	/^    "tree.key.toggle": {$/;"	o	object:properties
tree.key.toggleSelection	plugged/coc.nvim/data/schema.json	/^    "tree.key.toggleSelection": {$/;"	o	object:properties
tree.openedIcon	plugged/coc.nvim/data/schema.json	/^    "tree.openedIcon": {$/;"	o	object:properties
treesitter	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^files.treesitter = function(opts)$/;"	f	unknown:files
treesitter_attach	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^local treesitter_attach = function(bufnr, ft)$/;"	f
tremove	plugged/plenary.nvim/lua/luassert/util.lua	/^function util.tremove(t, pos)$/;"	f	unknown:util
trim	plugged/nvim-spectre/lua/spectre/utils.lua	/^function M.trim(s)$/;"	f	unknown:M
trimLeft	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, int32)
trimLength	plugged/fzf/src/util/chars.go	/^	trimLength      uint16$/;"	m	struct:util.Chars	typeref:typename:uint16
trimLengthKnown	plugged/fzf/src/util/chars.go	/^	trimLengthKnown bool$/;"	m	struct:util.Chars	typeref:typename:bool
trimMessage	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimMessage(message string, maxWidth int) string {$/;"	f	struct:fzf.Terminal	typeref:typename:string
trimQuery	plugged/fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
trimRight	plugged/fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, bool) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, bool)
trimTrace	plugged/plenary.nvim/lua/plenary/busted.lua	/^  local function trimTrace(info)$/;"	f
trim_level	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^  local trim_level = function(level)$/;"	f
truediv	plugged/plenary.nvim/lua/plenary/operators.lua	/^  truediv = function(a, b)$/;"	f
truncate	plugged/bufferline.nvim/lua/bufferline.lua	/^local function truncate(before, current, after, available_width, marker, visible)$/;"	f
truncate	plugged/bufferline.nvim/lua/bufferline/duplicates.lua	/^local function truncate(dir, depth, max_size)$/;"	f
truncate	plugged/nvim-spectre/lua/spectre/utils.lua	/^M.truncate = function(str, len)$/;"	f	unknown:M
truncate	plugged/plenary.nvim/lua/plenary/strings.lua	/^M.truncate = function(str, len, dots, direction)$/;"	f	unknown:M
truncate	plugged/telescope.nvim/lua/telescope/algos/linked_list.lua	/^function LinkedList:truncate(max_results)$/;"	f	unknown:LinkedList
truncateQuery	plugged/fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f	struct:fzf.Terminal
truncate_by_cell	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^local function truncate_by_cell(str, col_limit)$/;"	f
truncate_filename	plugged/bufferline.nvim/lua/bufferline/utils.lua	/^function M.truncate_filename(filename, word_limit)$/;"	f	unknown:M
truncation_component	plugged/bufferline.nvim/lua/bufferline.lua	/^local function truncation_component(count, icon, hls)$/;"	f
truth	plugged/plenary.nvim/lua/plenary/operators.lua	/^  truth = function(a)$/;"	f
truthy	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function truthy(state, arguments, level)$/;"	f
truthy	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function truthy(state, arguments, level)$/;"	f
trySkip	plugged/fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f	package:algo	typeref:typename:int
try_close	plugged/plenary.nvim/lua/plenary/window/init.lua	/^window.try_close = function(win_id, force)$/;"	f	unknown:window
try_curl	plugged/fzf/install	/^try_curl() {$/;"	f
try_open	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.try_open(win_id)$/;"	f	unknown:M
try_wget	plugged/fzf/install	/^try_wget() {$/;"	f
ts-jest	plugged/coc.nvim/package-lock.json	/^    "ts-jest": {$/;"	o	object:dependencies
ts_highlighter	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.ts_highlighter = function(bufnr, ft)$/;"	f	unknown:utils
tslib	plugged/coc.nvim/package-lock.json	/^        "tslib": "^1.8.1"$/;"	s	object:dependencies.tsutils.requires
tslib	plugged/coc.nvim/package-lock.json	/^        "tslib": {$/;"	o	object:dependencies.tsutils.dependencies
tslib	plugged/coc.nvim/package-lock.json	/^    "tslib": {$/;"	o	object:dependencies
tsutils	plugged/coc.nvim/package-lock.json	/^        "tsutils": "^3.17.1"$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
tsutils	plugged/coc.nvim/package-lock.json	/^        "tsutils": "^3.17.1"$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
tsutils	plugged/coc.nvim/package-lock.json	/^    "tsutils": {$/;"	o	object:dependencies
tsx	plugged/nvim-treesitter/lockfile.json	/^  "tsx": {$/;"	o
ttyin	plugged/fzf/src/tui/light.go	/^	ttyin         *os.File$/;"	m	struct:tui.LightRenderer	typeref:typename:*os.File
ttyinChannel	plugged/fzf/src/tui/light.go	/^	ttyinChannel    chan byte$/;"	m	struct:tui.LightRenderer	typeref:typename:chan byte
ttyname	plugged/fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
ttyname	plugged/fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
tu	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
tui	plugged/fzf/src/terminal.go	/^	tui          tui.Renderer$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Renderer
tui	plugged/fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light_unix.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/light_windows.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tcell_test.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tui.go	/^package tui$/;"	p
tui	plugged/fzf/src/tui/tui_test.go	/^package tui$/;"	p
turtle	plugged/nvim-treesitter/lockfile.json	/^  "turtle": {$/;"	o
tv	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
tw	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
ty	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
typ	plugged/fzf/src/pattern.go	/^	typ           termType$/;"	m	struct:fzf.term	typeref:typename:termType
type	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
type	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.filetypes.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.rootPatterns.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerCommand.properties.args.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.args.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.execArgv.items
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.filetypes
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.rootPatterns
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerCommand.properties.args
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.args
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.execArgv
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.border
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.close
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.focusable
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.shadow
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.enable
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.detached
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.shell
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.maxHeight
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.maxWidth
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.winblend
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerModule.properties.transportPort
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerSocket.properties.port
type	plugged/coc.nvim/data/schema.json	/^          "type": "number",$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.env
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.settings
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.borderhighlight
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.highlight
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.title
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.cwd
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.trace.server
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerCommand.properties.command
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.module
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.runtime
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.transport
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerSocket.properties.host
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:properties.coc.preferences.jumpCommand.anyOf.0
type	plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.class
type	plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.color
type	plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constant
type	plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constructor
type	plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	s	object:properties.suggest.completionItemKindLabels.properties.default
type	plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enum
type	plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enumMember
type	plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.event
type	plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.field
type	plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.file
type	plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.folder
type	plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.function
type	plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.interface
type	plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.keyword
type	plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.method
type	plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.module
type	plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.operator
type	plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.property
type	plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.reference
type	plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.snippet
type	plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.struct
type	plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.text
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.rootPatterns.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.around.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.buffer.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.ignorePatterns.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.triggerCharacters.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.trimSameExts.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.outline.ctagsFilestypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.symbols.excludes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.suggest.invalidInsertCharacters.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.bottomUpFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.ignoredFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string",$/;"	s	object:properties.outline.codeActionKinds.items
type	plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.typeParameter
type	plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.unit
type	plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.value
type	plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.variable
type	plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	s	object:properties.coc.preferences.jumpCommand.anyOf.1
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.rootPatterns
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.around.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.buffer.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.ignorePatterns
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.triggerCharacters
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.trimSameExts
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.symbols.excludes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.outline.codeActionKinds
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.suggest.invalidInsertCharacters
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.bottomUpFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.ignoredFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.callHierarchy.enableTooltip
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.bracketEnterImprove
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.colorSupport
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMarkdown
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMessageDialog
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.floatActions
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.formatOnType
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptInput
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.semanticTokensHighlights
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.silentAutoupdate
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.firstMatch
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.firstMatch
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.ignoreHidden
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.codeLens.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.autoRefresh
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.checkCurrentLine
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.displayByAle
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableHighlightLineNumber
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.locationlistUpdate
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showDeprecated
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showUnused
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualText
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtonShortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtons
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.hover.autoHide
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.http.proxyStrictSSL
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.alignColumns
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.extendedSearchMode
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.previewSplitRight
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.source.diagnostics.includeCode
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.checkBufferSwitch
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.followCursor
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.keepWindow
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.showLineNumber
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.refactor.saveToFile
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.hideOnTextChange
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.preferShownAbove
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.asciiCharactersOnly
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableKind
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenu
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenuShortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.echodocSupport
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreselect
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreview
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.fixInsertedWord
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.floatEnable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.keepCompleteopt
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.localityBonus
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.noselect
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.numberSelect
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.removeDuplicateItems
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.snippetsSupport
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.triggerAfterInsertEnter
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.workspace.workspaceFolderCheckCwd
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.around.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.buffer.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.file.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.signature.triggerSignatureWait
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.highPrioritySourceLimit
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.lowPrioritySourceLimit
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.minTriggerInputLength
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.timeout
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.triggerCompletionWait
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlighLimit
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlightOffset
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.messageDelay
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.signPriority
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.virtualTextLines
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxWidth
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.hover.previewMaxHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.height
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.interactiveDebounceTime
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.limitLines
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxPreviewHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.signOffset
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginRight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginTop
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxWidth
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.minProgressWidth
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.outline.expandLevel
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.afterContext
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.beforeContext
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.detailMaxLength
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.labelMaxLength
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.languageSourcePriority
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxCompleteItemCount
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.float
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerBase
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerModule
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerSocket
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.diagnostic.filetypeMap
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.diagnostic.floatConfig
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.hover.floatConfig
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.languageserver
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.insertMappings
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.normalMappings
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.signature.floatConfig
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.completionItemKindLabels
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.floatConfig
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.callHierarchy.openCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.callHierarchy.splitCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.maxFileSize
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.messageLevel
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.snippetStatusText
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.watchmanPath
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.around.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.buffer.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.file.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.separator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.subseparator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.cancelKey
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.nextKey
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.previousKey
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.enableMessage
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.errorSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.format
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.hintSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.infoSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.level
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.messageTarget
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextPrefix
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.warningSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.dialog.confirmKey
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.hover.target
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxy
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxyCA
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.indicator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.matchHighlightGroup
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.nextKeymap
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previewHighlightGroup
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previousKeymap
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.selectedSignText
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.source.diagnostics.pathFormat
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.notification.highlightGroup
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.npm.binPath
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.outline.sortBy
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.outline.splitCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.refactor.openCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.signature.target
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.autoTrigger
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.defaultSortMethod
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.detailField
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.snippetIndicator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.closedIcon
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.actions
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.activeFilter
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.close
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.collapseAll
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.invoke
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.selectNext
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.selectPrevious
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.toggle
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.toggleSelection
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.openedIcon
type	plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	a	object:properties.list.statusLineSegments
type	plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	a	object:properties.http.proxyAuthorization
type	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatBorderHighlight
type	plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatHighlight
type	plugged/coc.nvim/package.json	/^    "type": "git",$/;"	s	object:repository
type	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^      type = 'function',$/;"	f
type	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:type()$/;"	f	unknown:TSRange
type-check	plugged/coc.nvim/package-lock.json	/^            "type-check": "~0.3.2"$/;"	s	object:dependencies.escodegen.dependencies.levn.requires
type-check	plugged/coc.nvim/package-lock.json	/^            "type-check": "~0.3.2",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
type-check	plugged/coc.nvim/package-lock.json	/^        "type-check": "^0.4.0",$/;"	s	object:dependencies.optionator.requires
type-check	plugged/coc.nvim/package-lock.json	/^        "type-check": "~0.4.0"$/;"	s	object:dependencies.levn.requires
type-check	plugged/coc.nvim/package-lock.json	/^        "type-check": {$/;"	o	object:dependencies.escodegen.dependencies
type-check	plugged/coc.nvim/package-lock.json	/^    "type-check": {$/;"	o	object:dependencies
type-detect	plugged/coc.nvim/package-lock.json	/^        "type-detect": "4.0.8"$/;"	s	object:dependencies.@sinonjs/commons.requires
type-detect	plugged/coc.nvim/package-lock.json	/^    "type-detect": {$/;"	o	object:dependencies
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.21.3"$/;"	s	object:dependencies.ansi-escapes.requires
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.6.0"$/;"	s	object:dependencies.read-pkg.requires
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.8.1"$/;"	s	object:dependencies.globals.requires
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.8.1"$/;"	s	object:dependencies.read-pkg-up.requires
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": {$/;"	o	object:dependencies.ansi-escapes.dependencies
type-fest	plugged/coc.nvim/package-lock.json	/^        "type-fest": {$/;"	o	object:dependencies.read-pkg.dependencies
type-fest	plugged/coc.nvim/package-lock.json	/^    "type-fest": {$/;"	o	object:dependencies
typeParameter	plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
type_definitions	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.type_definitions = function(opts)$/;"	f	unknown:lsp
type_fn	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local type_fn = type(capture_or_fn) == "function" and capture_or_fn$/;"	f
type_name	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^    type_name = function()$/;"	f
type_patterns	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^  local type_patterns = options.type_patterns or { "class", "function", "method" }$/;"	f
typedarray-to-buffer	plugged/coc.nvim/package-lock.json	/^        "typedarray-to-buffer": "^3.1.5"$/;"	s	object:dependencies.write-file-atomic.requires
typedarray-to-buffer	plugged/coc.nvim/package-lock.json	/^    "typedarray-to-buffer": {$/;"	o	object:dependencies
types	plugged/coc.nvim/data/schema.json	/^        "types": "string"$/;"	s	object:properties.list.statusLineSegments.items
typescript	coc-settings.json	/^        "typescript": ["javascript"]$/;"	a	object:snippets.extends
typescript	plugged/coc.nvim/package-lock.json	/^    "typescript": {$/;"	o	object:dependencies
typescript	plugged/nvim-treesitter/lockfile.json	/^  "typescript": {$/;"	o
tz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
u	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
u	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
u	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
u	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionaf1e5c4a13000
u	plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
u	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
u	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:Uz.o
u	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionaf1e5c4a33b00.e
u	plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionaf1e5c4a1fa00
u	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunctionaf1e5c4a29d00
u	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:WQ
u	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> u           :call b:buffergator_catalog_viewer.rebuild_cat/;"	m
u$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
u0	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
u5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
u6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
u7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
u8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
u9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
uB	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
uC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
uD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uG	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
uI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
uK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
uL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
uO	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
uS	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
uV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uX	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
uae	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
ud	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ue	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
uf	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
ufe	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
uge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
uh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
uint16	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint32	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint64	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint8	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uj	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ume	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
un	plugged/coc.nvim/build/index.js	/^`)),_.log(`Sending response '${z} - (${P.id})'. Processing request took ${Date.now()-K}ms`,ce)}e/;"	f
unbox-primitive	plugged/coc.nvim/package-lock.json	/^        "unbox-primitive": "^1.0.1"$/;"	s	object:dependencies.es-abstract.requires
unbox-primitive	plugged/coc.nvim/package-lock.json	/^    "unbox-primitive": {$/;"	o	object:dependencies
undefined	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	undefined;$/;"	v
underline	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
undo_stage_hunk	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^M.undo_stage_hunk = void(function()$/;"	f	unknown:M
unescape_single_quote	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^  local unescape_single_quote = function(v)$/;"	f
unhook	plugged/which-key.nvim/lua/which-key/view.lua	/^  local function unhook(nodes, nodes_buf)$/;"	f
unicode	plugged/fzf/src/terminal.go	/^	unicode      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
uninstall	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.uninstall(...)$/;"	f	unknown:M
union-value	plugged/coc.nvim/package-lock.json	/^        "union-value": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
union-value	plugged/coc.nvim/package-lock.json	/^    "union-value": {$/;"	o	object:dependencies
unique	plugged/plenary.nvim/lua/luassert/assertions.lua	/^local function unique(state, arguments, level)$/;"	f
unique	plugged/plenary.nvim/lua/luassert/matchers/core.lua	/^local function unique(state, arguments, level)$/;"	f
unit	plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
universalify	plugged/coc.nvim/package-lock.json	/^            "universalify": "^0.1.0"$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": "^0.1.2"$/;"	s	object:dependencies.tough-cookie.requires
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": "^1.0.0"$/;"	s	object:dependencies.fs-extra.requires
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": "^2.0.0"$/;"	s	object:dependencies.jsonfile.requires
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.jsonfile.dependencies
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.streamroller.dependencies
universalify	plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.tough-cookie.dependencies
universalify	plugged/coc.nvim/package-lock.json	/^    "universalify": {$/;"	o	object:dependencies
unknownFn	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunctionaf1e5c4a29d00.t
unm	plugged/plenary.nvim/lua/plenary/operators.lua	/^  unm = function(a)$/;"	f
unpack	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^function List:unpack()$/;"	f	unknown:List
unpack	plugged/plenary.nvim/lua/plenary/tbl.lua	/^function tbl.unpack(t, i, j)$/;"	f	unknown:tbl
unregister	plugged/plenary.nvim/lua/luassert/assert.lua	/^  unregister = function(self, nspace, name)$/;"	f
unroll_dir	plugged/nvim-tree.lua/lua/nvim-tree/lib.lua	/^function M.unroll_dir(node)$/;"	f	unknown:M
unset-value	plugged/coc.nvim/package-lock.json	/^        "unset-value": "^1.0.0"$/;"	s	object:dependencies.cache-base.requires
unset-value	plugged/coc.nvim/package-lock.json	/^    "unset-value": {$/;"	o	object:dependencies
unset_var	plugged/fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	module:TestShell
unstage_file	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.unstage_file = function(self)$/;"	f	unknown:Obj
until	plugged/fzf/test/test_go.rb	/^  def until(refresh = false)$/;"	f	class:Tmux
unwrap	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local unwrap = function(self)$/;"	f
unzip-stream	plugged/coc.nvim/package-lock.json	/^    "unzip-stream": {$/;"	o	object:dependencies
uoe	plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
up	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1e100.i
up	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
upOneLine	plugged/fzf/src/tui/light.go	/^	upOneLine     bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
update	plugged/bufferline.nvim/lua/bufferline.lua	/^function Context:update(o)$/;"	f	unknown:Context
update	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
update	plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
update	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
update	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	update: function(){$/;"	m	class:jQuery.fx
update	plugged/fzf/Makefile	/^update:$/;"	t
update	plugged/gitsigns.nvim/lua/gitsigns/current_line_blame.lua	/^M.update = void(function()$/;"	f	unknown:M
update	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^   M.update = function(bufnr, bcache)$/;"	f	unknown:M
update	plugged/gitsigns.nvim/lua/gitsigns/status.lua	/^function Status:update(bufnr, status)$/;"	f	unknown:Status
update	plugged/nvim-tree.lua/lua/nvim-tree/diagnostics.lua	/^function M.update()$/;"	f	unknown:M
update	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.update(options)$/;"	f	unknown:M
update	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.update(buf)$/;"	f	unknown:M
update0	plugged/gitsigns.nvim/lua/gitsigns/manager.lua	/^local update0 = function(bufnr, bcache)$/;"	f
updatePromptOffset	plugged/fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, []rune)
updateTerminalSize	plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
updateTerminalSize	plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
update_abbrev_head	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Repo.update_abbrev_head = function(self)$/;"	f	unknown:Repo
update_base_dir_with_filepath	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^local function update_base_dir_with_filepath(filepath, bufnr)$/;"	f
update_branch	plugged/lualine.nvim/lua/lualine/components/branch/git_branch.lua	/^local function update_branch()$/;"	f
update_buf_base	plugged/gitsigns.nvim/lua/gitsigns/actions.lua	/^local function update_buf_base(buf, bcache, base)$/;"	f
update_cached_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function update_cached_matches(bufnr, changed_tick, query_group)$/;"	f
update_diff_args	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^function M.update_diff_args()$/;"	f	unknown:M
update_draw_data	plugged/nvim-tree.lua/lua/nvim-tree/renderer/init.lua	/^local function update_draw_data(tree, depth, markers)$/;"	f
update_file_info	plugged/gitsigns.nvim/lua/gitsigns/git.lua	/^Obj.update_file_info = function(self)$/;"	f	unknown:Obj
update_ft_to_parsername	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^local function update_ft_to_parsername(name, parser)$/;"	f
update_git_diff	plugged/lualine.nvim/lua/lualine/components/diff/git_diff.lua	/^function M.update_git_diff()$/;"	f	unknown:M
update_highlights	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function M.update_highlights()$/;"	f	unknown:M
update_keymaps	plugged/which-key.nvim/lua/which-key/keys.lua	/^function M.update_keymaps(mode, buf)$/;"	f	unknown:M
update_origin_window	plugged/toggleterm.nvim/lua/toggleterm/ui.lua	/^function M.update_origin_window(term_window)$/;"	f	unknown:M
update_root_status	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^local function update_root_status(root)$/;"	f
update_scroll	plugged/telescope.nvim/lua/telescope/pickers.lua	/^local update_scroll = function(win, oldinfo, oldcursor, strategy, max_results)$/;"	f
update_selection	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.update_selection(buf, node, selection_mode)$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/component.lua	/^function M:update_status(is_focused) end$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/branch/init.lua	/^M.update_status = function(_, is_focused)$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/buffers/init.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/diagnostics/init.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/diff/init.lua	/^function M:update_status(is_focused)$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/fileformat.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/filename.lua	/^M.update_status = function(self)$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/filetype.lua	/^function M.update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/special/eval_func_component.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/special/function_component.lua	/^M.update_status = function(self, is_focused)$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/special/vim_var_component.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/lualine.nvim/lua/lualine/components/tabs/init.lua	/^function M:update_status()$/;"	f	unknown:M
update_status	plugged/nvim-tree.lua/lua/nvim-tree/git.lua	/^function M.update_status(entries, cwd, parent_node, with_redraw)$/;"	f	unknown:M
upper	plugged/plenary.nvim/lua/plenary/curl.lua	/^  local upper = function(str)$/;"	f
uq	plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	v
ur	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
uri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a10000.e.o
uri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4a12000.e.a.location
uri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunctionaf1e5c4afe00.e.o
uri	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.t
uri-js	plugged/coc.nvim/package-lock.json	/^        "uri-js": "^4.2.2"$/;"	s	object:dependencies.ajv.requires
uri-js	plugged/coc.nvim/package-lock.json	/^    "uri-js": {$/;"	o	object:dependencies
urix	plugged/coc.nvim/package-lock.json	/^        "urix": "^0.1.0"$/;"	s	object:dependencies.source-map-resolve.requires
urix	plugged/coc.nvim/package-lock.json	/^    "urix": {$/;"	o	object:dependencies
url	plugged/coc.nvim/package.json	/^    "url": "git+https:\/\/github.com\/neoclide\/coc.nvim.git"$/;"	s	object:repository
url	plugged/coc.nvim/package.json	/^    "url": "https:\/\/github.com\/neoclide\/coc.nvim\/issues"$/;"	s	object:bugs
url	plugged/plenary.nvim/lua/plenary/curl.lua	/^parse.url = function(xs, q)$/;"	f	unknown:parse
url_encode	plugged/plenary.nvim/lua/plenary/curl.lua	/^util.url_encode = function(str)$/;"	f	unknown:util
us	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
usage	plugged/fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c	package:fzf
use	plugged/coc.nvim/package-lock.json	/^        "use": "^3.1.0"$/;"	s	object:dependencies.snapdragon.requires
use	plugged/coc.nvim/package-lock.json	/^    "use": {$/;"	o	object:dependencies
use_git	plugged/nvim-tree.lua/lua/nvim-tree/config.lua	/^function M.use_git()$/;"	f	unknown:M
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
userAgent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var userAgent = navigator.userAgent.toLowerCase();$/;"	v
ut	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
utf_ptr2len	plugged/plenary.nvim/lua/plenary/strings.lua	/^    local function utf_ptr2len(str)$/;"	f
util	plugged/fzf/src/util/atomicbool.go	/^package util$/;"	p
util	plugged/fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/chars.go	/^package util$/;"	p
util	plugged/fzf/src/util/chars_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/eventbox.go	/^package util$/;"	p
util	plugged/fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/slab.go	/^package util$/;"	p
util	plugged/fzf/src/util/util.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_test.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_unix.go	/^package util$/;"	p
util	plugged/fzf/src/util/util_windows.go	/^package util$/;"	p
uuid	plugged/coc.nvim/package-lock.json	/^        "uuid": "^8.3.0",$/;"	s	object:dependencies.node-notifier.requires
uuid	plugged/coc.nvim/package-lock.json	/^        "uuid": {$/;"	o	object:dependencies.node-notifier.dependencies
uuid	plugged/coc.nvim/package-lock.json	/^    "uuid": {$/;"	o	object:dependencies
uuid	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
uv	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
uw	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
ux	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
uy	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uze	plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
v	plugged/coc.nvim/build/index.js	/^  var v = process.version$/;"	v
v	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
v	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
v	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><nowait><silent> v             :call startify#set_mark('V')<cr>$/;"	m
v$	plugged/coc.nvim/build/index.js	/^`}function sae(r){return r.replace(Woe,":")}function v$(r,e=null){if(!r)return[];e=e||Sn;let t=e/;"	f
v0	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
v5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
v6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
v7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
v8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
v8-compile-cache	plugged/coc.nvim/package-lock.json	/^        "v8-compile-cache": "^2.0.3"$/;"	s	object:dependencies.eslint.requires
v8-compile-cache	plugged/coc.nvim/package-lock.json	/^    "v8-compile-cache": {$/;"	o	object:dependencies
v8-to-istanbul	plugged/coc.nvim/package-lock.json	/^        "v8-to-istanbul": "^7.0.0"$/;"	s	object:dependencies.@jest/reporters.requires
v8-to-istanbul	plugged/coc.nvim/package-lock.json	/^    "v8-to-istanbul": {$/;"	o	object:dependencies
v9	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
vB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
vBe	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
vC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
vD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
vF	plugged/coc.nvim/build/index.js	/^`))this.outText=this.outText+n;else{let s=this.outText+t[0].toString();this.outText="",this.conn/;"	v
vG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
vK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
vN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
vQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
vV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
vW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
vX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
vY	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
vZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
v_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
va	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
val	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
val	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
valid_args	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function valid_args(name, pred, count, strict_count)$/;"	f
valid_oldfiles	plugged/telescope.nvim/media/demo_script.lua	/^local valid_oldfiles = vim.tbl_filter(function(val)$/;"	f
validate	plugged/bufferline.nvim/lua/bufferline/config.lua	/^function Config:validate(defaults)$/;"	f	unknown:Config
validate-npm-package-license	plugged/coc.nvim/package-lock.json	/^        "validate-npm-package-license": "^3.0.1"$/;"	s	object:dependencies.normalize-package-data.requires
validate-npm-package-license	plugged/coc.nvim/package-lock.json	/^    "validate-npm-package-license": {$/;"	o	object:dependencies
validateSign	plugged/fzf/src/options.go	/^func validateSign(sign string, signOptName string) error {$/;"	f	package:fzf	typeref:typename:error
validate_close_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function validate_close_tag(node)$/;"	f
validate_config	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^local function validate_config(config)$/;"	f
validate_layout_config	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^local function validate_layout_config(strategy_name, configuration, values, default_layout_confi/;"	f
validate_member_name	plugged/plenary.nvim/lua/plenary/enum.lua	/^local function validate_member_name(name)$/;"	f
validate_option_keywords	plugged/gitsigns.nvim/lua/gitsigns/mappings.lua	/^local function validate_option_keywords(options)$/;"	f
validate_rename	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function validate_rename()$/;"	f
validate_start_tag	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function validate_start_tag(node)$/;"	f
validate_tag_regex	plugged/nvim-ts-autotag/lua/nvim-ts-autotag/internal.lua	/^local function validate_tag_regex(node,start_regex,end_regex)$/;"	f
value	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:t
value	plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
values	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						values = [],$/;"	v
var	plugged/lualine.nvim/lua/lualine/utils/loader.lua	/^  var = function(component)$/;"	f
variable	plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
vee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
verilog	plugged/nvim-treesitter/lockfile.json	/^  "verilog": {$/;"	o
version	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.t
version	plugged/coc.nvim/package-lock.json	/^              "version": "2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^              "version": "2.0.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^              "version": "2.1.0",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
version	plugged/coc.nvim/package-lock.json	/^              "version": "3.2.2",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^              "version": "3.2.2",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.1.2",$/;"	s	object:dependencies.streamroller.dependencies.universalify
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.1.2",$/;"	s	object:dependencies.tough-cookie.dependencies.universalify
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.1.4",$/;"	s	object:dependencies.unset-value.dependencies.has-values
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.class-utils.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.expand-brackets.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.object-copy.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.snapdragon.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.static-extend.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.21.3",$/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.3.0",$/;"	s	object:dependencies.escodegen.dependencies.levn
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.3.1",$/;"	s	object:dependencies.unset-value.dependencies.has-value
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.3.2",$/;"	s	object:dependencies.escodegen.dependencies.type-check
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.3.8",$/;"	s	object:dependencies.cssstyle.dependencies.cssom
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.5.5",$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.6.0",$/;"	s	object:dependencies.read-pkg.dependencies.type-fest
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.7.3",$/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
version	plugged/coc.nvim/package-lock.json	/^          "version": "0.8.3",$/;"	s	object:dependencies.escodegen.dependencies.optionator
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.is-data-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.1",$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.1",$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.base.dependencies.is-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.cli-table.dependencies.color-name
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.14.1",$/;"	s	object:dependencies.tsutils.dependencies.tslib
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.2.0",$/;"	s	object:dependencies.execa.dependencies.shebang-command
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.3.1",$/;"	s	object:dependencies.execa.dependencies.which
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.cli-table.dependencies.color-convert
version	plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
version	plugged/coc.nvim/package-lock.json	/^          "version": "11.12.0",$/;"	s	object:dependencies.@babel/traverse.dependencies.globals
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.jsonfile.dependencies.universalify
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.sane.dependencies.anymatch
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.snapdragon.dependencies.ms
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.execa.dependencies.path-key
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.extglob.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.rc.dependencies.strip-json-comments
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.set-value.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.1.0",$/;"	s	object:dependencies.streamroller.dependencies.date-format
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.1.1",$/;"	s	object:dependencies.sane.dependencies.normalize-path
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.1.1",$/;"	s	object:dependencies.sane.dependencies.to-regex-range
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.3.2",$/;"	s	object:dependencies.sane.dependencies.braces
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.4.2",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.4.2",$/;"	s	object:dependencies.cli-table.dependencies.chalk
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.6.9",$/;"	s	object:dependencies.expand-brackets.dependencies.debug
version	plugged/coc.nvim/package-lock.json	/^          "version": "2.6.9",$/;"	s	object:dependencies.snapdragon.dependencies.debug
version	plugged/coc.nvim/package-lock.json	/^          "version": "20.2.7",$/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
version	plugged/coc.nvim/package-lock.json	/^          "version": "26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.cli-table.dependencies.has-flag
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.has-values.dependencies.is-number
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.sane.dependencies.is-number
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.1.0",$/;"	s	object:dependencies.table.dependencies.string-width
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.1.1",$/;"	s	object:dependencies.flat-cache.dependencies.flatted
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.1.10",$/;"	s	object:dependencies.sane.dependencies.micromatch
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.17.0-next.1",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.17.0-next.5",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.has-values.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.sane.dependencies.fill-range
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.1",$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.6",$/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.0.6",$/;"	s	object:dependencies.eslint.dependencies.ignore
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.1.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.1.0",$/;"	s	object:dependencies.table.dependencies.ansi-regex
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.expect.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^          "version": "4.3.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.1.0",$/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.escodegen.dependencies.estraverse
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esquery.dependencies.estraverse
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.table.dependencies.strip-ansi
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.5.0",$/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.5.0",$/;"	s	object:dependencies.cli-table.dependencies.supports-color
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.7.1",$/;"	s	object:dependencies.execa.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "5.7.1",$/;"	s	object:dependencies.normalize-package-data.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.0.5",$/;"	s	object:dependencies.execa.dependencies.cross-spawn
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.1.0-next.2",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.2.0",$/;"	s	object:dependencies.jest-validate.dependencies.camelcase
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.@babel/core.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.make-dir.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "7.0.3",$/;"	s	object:dependencies.table.dependencies.emoji-regex
version	plugged/coc.nvim/package-lock.json	/^          "version": "7.3.5",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^          "version": "8.1.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra
version	plugged/coc.nvim/package-lock.json	/^          "version": "8.3.0",$/;"	s	object:dependencies.jsdom.dependencies.acorn
version	plugged/coc.nvim/package-lock.json	/^          "version": "8.3.2",$/;"	s	object:dependencies.node-notifier.dependencies.uuid
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.0.1",$/;"	s	object:dependencies.concat-map
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.chainsaw
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.get-package-type
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.object-copy
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.urix
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.buffers
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.copy-descriptor
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.is-extendable
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.pascalcase
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.posix-character-classes
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.shellwords
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.10",$/;"	s	object:dependencies.int64-buffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.15",$/;"	s	object:dependencies.ret
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.event-lite
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.exit
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.static-extend
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.26",$/;"	s	object:dependencies.msgpack-lite
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.@istanbuljs/schema
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.deep-is
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.imurmurhash
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.is-data-descriptor
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.6",$/;"	s	object:dependencies.is-accessor-descriptor
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.1.6",$/;"	s	object:dependencies.is-descriptor
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.11.2",$/;"	s	object:dependencies.base
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.12.7",$/;"	s	object:dependencies.esbuild
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.decode-uri-component
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.text-table
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.fragment-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.is-arrayish
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.resolve-url
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.2",$/;"	s	object:dependencies.@eslint/eslintrc
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.2",$/;"	s	object:dependencies.map-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.3",$/;"	s	object:dependencies.@bcoe/v8-coverage
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.2.6",$/;"	s	object:dependencies.bs-logger
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.@types/cli-table
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.binary
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.to-object-path
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.1",$/;"	s	object:dependencies.unzip-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.2",$/;"	s	object:dependencies.array-unique
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.4",$/;"	s	object:dependencies.cli-table
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.6",$/;"	s	object:dependencies.class-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.6",$/;"	s	object:dependencies.exec-sh
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.3.9",$/;"	s	object:dependencies.traverse
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.asynckit
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.node-int64
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.type-check
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.json-schema-traverse
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.levn
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.source-map-url
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.24",$/;"	s	object:dependencies.iconv-lite
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.4.4",$/;"	s	object:dependencies.cssom
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.5.19",$/;"	s	object:dependencies.source-map-support
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.5.3",$/;"	s	object:dependencies.content-disposition
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.5.3",$/;"	s	object:dependencies.source-map-resolve
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.6.0",$/;"	s	object:dependencies.cjs-module-lexer
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.6.0",$/;"	s	object:dependencies.deep-extend
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.6.1",$/;"	s	object:dependencies.source-map
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.7.1",$/;"	s	object:dependencies.regextras
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.7.2",$/;"	s	object:dependencies.emittery
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.7.6",$/;"	s	object:dependencies.comment-parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.8.1",$/;"	s	object:dependencies.type-fest
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.8.2",$/;"	s	object:dependencies.snapdragon
version	plugged/coc.nvim/package-lock.json	/^      "version": "0.9.1",$/;"	s	object:dependencies.optionator
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.assign-symbols
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.astral-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.at-least-node
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.browser-process-hrtime
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.collection-visit
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.delayed-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.execa
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.fs.realpath
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.has-value
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.has-values
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-typedarray
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.isarray
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.map-visit
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.node-modules-regexp
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.p-finally
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.strip-eof
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.universalify
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.unset-value
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0-beta.2",$/;"	s	object:dependencies.gensync
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.@types/mkdirp
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.babel-preset-current-node-syntax
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.cache-base
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.collect-v8-coverage
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.functional-red-black-tree
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.has-bigints
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.is-potential-custom-element-name
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.object-visit
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.parent-module
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.path-is-absolute
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.rfc-3986
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.unbox-primitive
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.union-value
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.vscode-languageserver-textdocument
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.10",$/;"	s	object:dependencies.argparse
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.11",$/;"	s	object:dependencies.makeerror
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.balanced-match
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.call-bind
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.char-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.for-in
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.has-symbols
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.is-bigint
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.is-windows
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.regex-not
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.w3c-hr-time
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.which-boxed-primitive
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.wrappy
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.has
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.internal-slot
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.sprintf-js
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.30001235",$/;"	s	object:dependencies.caniuse-lite
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.@cnakazawa/watch
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.is-date-object
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.is-symbol
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.mkdirp
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.reusify
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.side-channel
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.string.prototype.trimend
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.string.prototype.trimstart
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.tmpl
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.escape-string-regexp
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.is-number-object
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.nice-try
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.sisteransi
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.whatwg-encoding
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.inflight
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.is-string
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.7",$/;"	s	object:dependencies.path-parse
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.7",$/;"	s	object:dependencies.walker
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.0.8",$/;"	s	object:dependencies.combined-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.arr-flatten
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.is-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.remove-trailing-separator
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.safe-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.buffer-from
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.function-bind
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.get-intrinsic
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.human-signals
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.is-boolean-object
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.object-keys
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.11",$/;"	s	object:dependencies.brace-expansion
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.2",$/;"	s	object:dependencies.@tootallnate/once
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.define-properties
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.is-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.4",$/;"	s	object:dependencies.color-name
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.4",$/;"	s	object:dependencies.repeat-element
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.6",$/;"	s	object:dependencies.is-buffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.6",$/;"	s	object:dependencies.lines-and-columns
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.1.73",$/;"	s	object:dependencies.node-releases
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.10.3",$/;"	s	object:dependencies.object-inspect
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.11.0",$/;"	s	object:dependencies.fastq
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.13.0",$/;"	s	object:dependencies.follow-redirects
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.18.3",$/;"	s	object:dependencies.es-abstract
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.debounce
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.decamelize
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.fast-diff
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.run-parallel
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.@types/marked
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.es-to-primitive
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.ieee754
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.prelude-ls
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.13",$/;"	s	object:dependencies.nanomatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.colorette
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.jest-pnp-resolver
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.is-callable
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.queue-microtask
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.word-wrap
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.5",$/;"	s	object:dependencies.marked
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.5",$/;"	s	object:dependencies.minimist
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.7",$/;"	s	object:dependencies.@nodelib/fs.walk
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.2.8",$/;"	s	object:dependencies.rc
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.20.0",$/;"	s	object:dependencies.resolve
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.component-emitter
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.growly
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.object.pick
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.rfdc
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.1",$/;"	s	object:dependencies.regexp.prototype.flags
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.@types/which
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.error-ex
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.mixin-deep
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.6",$/;"	s	object:dependencies.make-error
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.749",$/;"	s	object:dependencies.electron-to-chromium
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.3.8",$/;"	s	object:dependencies.ini
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.colors
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.esquery
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.natural-compare
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.once
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.1",$/;"	s	object:dependencies.merge2
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.4.4",$/;"	s	object:dependencies.end-of-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.48.0",$/;"	s	object:dependencies.mime-db
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.6.1",$/;"	s	object:dependencies.repeat-string
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.7.0",$/;"	s	object:dependencies.convert-source-map
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.8.0",$/;"	s	object:dependencies.psl
version	plugged/coc.nvim/package-lock.json	/^      "version": "1.8.3",$/;"	s	object:dependencies.@sinonjs/commons
version	plugged/coc.nvim/package-lock.json	/^      "version": "10.17.35",$/;"	s	object:dependencies.@types/node
version	plugged/coc.nvim/package-lock.json	/^      "version": "10.2.1",$/;"	s	object:dependencies.decimal.js
version	plugged/coc.nvim/package-lock.json	/^      "version": "11.0.3",$/;"	s	object:dependencies.globby
version	plugged/coc.nvim/package-lock.json	/^      "version": "12.4.0",$/;"	s	object:dependencies.globals
version	plugged/coc.nvim/package-lock.json	/^      "version": "15.0.13",$/;"	s	object:dependencies.@types/yargs
version	plugged/coc.nvim/package-lock.json	/^      "version": "15.4.1",$/;"	s	object:dependencies.yargs
version	plugged/coc.nvim/package-lock.json	/^      "version": "16.6.0",$/;"	s	object:dependencies.jsdom
version	plugged/coc.nvim/package-lock.json	/^      "version": "17.0.2",$/;"	s	object:dependencies.react-is
version	plugged/coc.nvim/package-lock.json	/^      "version": "18.1.3",$/;"	s	object:dependencies.yargs-parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.@types/fb-watchman
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.@types/stack-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.capture-exit
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.chownr
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.ci-info
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.data-urls
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.escodegen
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.is-ci
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.is-fullwidth-code-point
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.isexe
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.merge-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.require-main-filename
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.set-blocking
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.shebang-command
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.strip-final-newline
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.to-fast-properties
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.w3c-xmlserializer
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.which-module
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.color-convert
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.domexception
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.fb-watchman
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.html-encoding-sniffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.is-negative-zero
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.set-value
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.define-property
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.flatted
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.html-escaper
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.npm-run-path
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.which
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.@types/istanbul-lib-coverage
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.esutils
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.isuri
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.progress
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.stack-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.tslib
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.extglob
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.inherits
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.is-plain-object
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.@nodelib/fs.stat
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.abab
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.get-caller-file
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.fast-levenshtein
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.get-value
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.array-union
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.eslint-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.eslint-visitor-keys
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.fast-json-stable-stringify
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.fs-minipass
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.is-binary-path
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.is-generator-fn
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.mimic-fn
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.slice-ansi
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.tr46
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.bser
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.is-extglob
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.punycode
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.require-directory
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.snapdragon-node
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.terminal-link
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.atob
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.minizlib
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.ms
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.safer-buffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.vscode-uri
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.3",$/;"	s	object:dependencies.fsevents
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.31",$/;"	s	object:dependencies.mime-types
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.4",$/;"	s	object:dependencies.expand-brackets
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.1.5",$/;"	s	object:dependencies.@nodelib/fs.scandir
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.@types/minipass
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.binary-extensions
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.is-wsl
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.json5
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.nwsapi
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.p-each-series
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.p-try
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.supports-hyperlinks
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.xmlchars
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.1",$/;"	s	object:dependencies.is-docker
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.3",$/;"	s	object:dependencies.@types/prettier
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.2.4",$/;"	s	object:dependencies.streamroller
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.cssstyle
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.p-limit
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.picomatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.spdx-exceptions
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.v8-compile-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.whatwg-mimetype
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.1",$/;"	s	object:dependencies.json-parse-even-better-errors
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.1",$/;"	s	object:dependencies.jsonc-parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.3.6",$/;"	s	object:dependencies.enquirer
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.4.0",$/;"	s	object:dependencies.@types/normalize-package-data
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.4.0",$/;"	s	object:dependencies.is-core-module
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.4.1",$/;"	s	object:dependencies.prompts
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.5.0",$/;"	s	object:dependencies.normalize-package-data
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.5.2",$/;"	s	object:dependencies.jsesc
version	plugged/coc.nvim/package-lock.json	/^      "version": "2.8.9",$/;"	s	object:dependencies.hosted-git-info
version	plugged/coc.nvim/package-lock.json	/^      "version": "20.2.0",$/;"	s	object:dependencies.@types/yargs-parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "24.1.3",$/;"	s	object:dependencies.eslint-plugin-jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.0.0",$/;"	s	object:dependencies.jest-docblock
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.0.0",$/;"	s	object:dependencies.jest-regex-util
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.0.18",$/;"	s	object:dependencies.@types/jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.3.0",$/;"	s	object:dependencies.jest-get-type
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.4.4",$/;"	s	object:dependencies.ts-jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/console
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/environment
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/fake-timers
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/globals
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/reporters
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/source-map
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/test-result
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/transform
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/types
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.babel-plugin-jest-hoist
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.babel-preset-jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.diff-sequences
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.expect
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-changed-files
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-diff
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-each
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-environment-node
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-haste-map
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-leak-detector
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-matcher-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-message-util
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-mock
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-resolve
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-serializer
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-snapshot
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-util
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-validate
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-watcher
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-worker
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.pretty-format
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.@jest/core
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.@jest/test-sequencer
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.babel-jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-config
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-jasmine2
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-resolve-dependencies
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-runner
version	plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-runtime
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/debounce
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/events
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/istanbul-lib-report
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.date-format
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.doctrine
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.istanbul-lib-coverage
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.istanbul-lib-report
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.normalize-path
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.pump
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.resolve-cwd
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.shebang-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.slash
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.xml-name-validator
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.@types/istanbul-reports
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.dir-glob
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.form-data
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.isobject
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.snapdragon-util
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.spdx-expression-parse
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.braces
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.extend-shallow
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.import-local
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.istanbul-reports
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.rimraf
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.to-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.@types/minimatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.kleur
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.signal-exit
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.write-file-atomic
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.flat-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.minimatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.validate-npm-package-license
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.0.9",$/;"	s	object:dependencies.spdx-license-ids
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.arr-union
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.bytes
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.callsites
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.detect-newline
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.leven
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.make-dir
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.mimic-response
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.regexpp
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.split-string
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.escalade
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.path-key
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.spdx-correct
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.strip-json-comments
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.use
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.2",$/;"	s	object:dependencies.anymatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.2",$/;"	s	object:dependencies.promise.prototype.finally
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.fast-deep-equal
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.minipass
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.1.5",$/;"	s	object:dependencies.typedarray-to-buffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.14.1",$/;"	s	object:dependencies.js-yaml
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.15.1",$/;"	s	object:dependencies.vscode-languageserver-types
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.15.3",$/;"	s	object:dependencies.vscode-languageserver-protocol
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.2.4",$/;"	s	object:dependencies.symbol-tree
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.2.5",$/;"	s	object:dependencies.fast-glob
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.21.0",$/;"	s	object:dependencies.tsutils
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.3.0",$/;"	s	object:dependencies.import-fresh
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.4.3",$/;"	s	object:dependencies.chokidar
version	plugged/coc.nvim/package-lock.json	/^      "version": "3.5.0",$/;"	s	object:dependencies.readdirp
version	plugged/coc.nvim/package-lock.json	/^      "version": "30.7.13",$/;"	s	object:dependencies.eslint-plugin-jsdoc
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.arr-diff
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.has-flag
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.istanbul-lib-source-maps
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.js-tokens
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-exists
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-type
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.resolve-from
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.strip-bom
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.tough-cookie
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.yallist
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.esprima
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.http-proxy-agent
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.is-glob
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.pirates
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.2",$/;"	s	object:dependencies.string-length
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.istanbul-lib-instrument
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.string.prototype.matchall
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.y18n
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.4",$/;"	s	object:dependencies.@types/tar
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.4",$/;"	s	object:dependencies.micromatch
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.0.8",$/;"	s	object:dependencies.type-detect
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.find-up
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.get-stream
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.p-locate
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.sane
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.ansi-colors
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.chalk
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.debug
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.lodash.memoize
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.object.assign
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.typescript
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.1.5",$/;"	s	object:dependencies.@types/graceful-fs
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/scope-manager
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/types
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/visitor-keys
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.16.6",$/;"	s	object:dependencies.browserslist
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.17.21",$/;"	s	object:dependencies.lodash
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.pkg-dir
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.string-width
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.2.2",$/;"	s	object:dependencies.deepmerge
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.2.4",$/;"	s	object:dependencies.graceful-fs
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.esrecurse
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.estraverse
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.3.2",$/;"	s	object:dependencies.ansi-escapes
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.4.1",$/;"	s	object:dependencies.uri-js
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.6.0",$/;"	s	object:dependencies.co
version	plugged/coc.nvim/package-lock.json	/^      "version": "4.8.5",$/;"	s	object:dependencies.rsvp
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.ansi-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.ansi-styles
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.https-proxy-agent
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.locate-path
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.throat
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.saxes
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.to-regex-range
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.vscode-jsonrpc
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.1.1",$/;"	s	object:dependencies.eslint-scope
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.glob-parent
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.onetime
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.safe-buffer
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.1.8",$/;"	s	object:dependencies.ignore
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.2.0",$/;"	s	object:dependencies.parse-json
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.2.0",$/;"	s	object:dependencies.read-pkg
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.2.12",$/;"	s	object:dependencies.@chemzqm/neovim
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.3.1",$/;"	s	object:dependencies.acorn-jsx
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.3.1",$/;"	s	object:dependencies.camelcase
version	plugged/coc.nvim/package-lock.json	/^      "version": "5.4.6",$/;"	s	object:dependencies.table
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.acorn-globals
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.cliui
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.decompress-response
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.lru-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.strip-ansi
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.test-exclude
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.@sinonjs/fake-timers
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.file-entry-cache
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.parse5
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.2",$/;"	s	object:dependencies.agent-base
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.3",$/;"	s	object:dependencies.kind-of
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.0.5",$/;"	s	object:dependencies.tar
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.1.0",$/;"	s	object:dependencies.jsonfile
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.1.0",$/;"	s	object:dependencies.webidl-conversions
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.12.6",$/;"	s	object:dependencies.ajv
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.2.0",$/;"	s	object:dependencies.wrap-ansi
version	plugged/coc.nvim/package-lock.json	/^      "version": "6.3.0",$/;"	s	object:dependencies.log4js
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.0",$/;"	s	object:dependencies.is-number
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.1",$/;"	s	object:dependencies.fill-range
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.1",$/;"	s	object:dependencies.read-pkg-up
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.cross-spawn
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.uuid
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.0.7",$/;"	s	object:dependencies.@types/json-schema
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.1.0-next.4",$/;"	s	object:dependencies.vscode-languageserver
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.1.14",$/;"	s	object:dependencies.@types/babel__core
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.1.2",$/;"	s	object:dependencies.v8-to-istanbul
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.1.3",$/;"	s	object:dependencies.@types/glob
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.1.6",$/;"	s	object:dependencies.glob
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.11.1",$/;"	s	object:dependencies.@types/babel__traverse
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/code-frame
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-get-function-arity
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-optimise-call-expression
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-split-export-declaration
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/template
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.12.17",$/;"	s	object:dependencies.@babel/helper-validator-option
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.13.0",$/;"	s	object:dependencies.@babel/helper-plugin-utils
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-member-expression-to-functions
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-module-imports
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-simple-access
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/helper-validator-identifier
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/helpers
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/highlight
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/helper-function-name
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/helper-module-transforms
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/traverse
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.3",$/;"	s	object:dependencies.@babel/core
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.3",$/;"	s	object:dependencies.@babel/generator
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/compat-data
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/helper-compilation-targets
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/helper-replace-supers
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/parser
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/types
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.15.0",$/;"	s	object:dependencies.eslint
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.2.0",$/;"	s	object:dependencies.acorn-walk
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.2.0",$/;"	s	object:dependencies.supports-color
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.3.1",$/;"	s	object:dependencies.espree
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.3.2",$/;"	s	object:dependencies.semver
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.3.4",$/;"	s	object:dependencies.@types/semver
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.4.0",$/;"	s	object:dependencies.@types/babel__template
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.4.1",$/;"	s	object:dependencies.acorn
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.4.6",$/;"	s	object:dependencies.ws
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.6.2",$/;"	s	object:dependencies.@types/babel__generator
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-bigint
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
version	plugged/coc.nvim/package-lock.json	/^      "version": "7.8.4",$/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
version	plugged/coc.nvim/package-lock.json	/^      "version": "8.0.0",$/;"	s	object:dependencies.emoji-regex
version	plugged/coc.nvim/package-lock.json	/^      "version": "8.0.2",$/;"	s	object:dependencies.node-notifier
version	plugged/coc.nvim/package-lock.json	/^      "version": "8.3.0",$/;"	s	object:dependencies.@types/uuid
version	plugged/coc.nvim/package-lock.json	/^      "version": "8.5.0",$/;"	s	object:dependencies.whatwg-url
version	plugged/coc.nvim/package-lock.json	/^      "version": "9.0.0",$/;"	s	object:dependencies.jsdoctypeparser
version	plugged/coc.nvim/package-lock.json	/^      "version": "9.0.1",$/;"	s	object:dependencies.fs-extra
version	plugged/coc.nvim/package-lock.json	/^      "version": "9.0.6",$/;"	s	object:dependencies.@types/fs-extra
version	plugged/coc.nvim/package-lock.json	/^  "version": "0.0.80",$/;"	s
version	plugged/coc.nvim/package.json	/^  "version": "0.0.80",$/;"	s
version	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	version: (userAgent.match( \/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/ ) || [])[1],$/;"	p	class:jQuery.browser
version	plugged/fzf/install.ps1	/^$version="0.28.0"$/;"	v
version	plugged/fzf/main.go	/^var version string = "0.28"$/;"	v	package:main	typeref:typename:string
version	plugged/fzf/src/terminal.go	/^	version      int64$/;"	m	struct:fzf.Terminal	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version    int64$/;"	m	struct:fzf.previewer	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version  int64$/;"	m	struct:fzf.previewed	typeref:typename:int64
version	plugged/fzf/src/terminal.go	/^	version int64$/;"	m	struct:fzf.previewResult	typeref:typename:int64
vertical	plugged/fzf/src/tui/tui.go	/^	vertical    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
vf	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
vg	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
vge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
vi	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
vie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
view_mappings	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^  local view_mappings = vim.tbl_filter(function(map)$/;"	f
vim	plugged/nvim-treesitter/lockfile.json	/^  "vim": {$/;"	o
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim plugins for HTML and CSS hi-speed coding.	plugged/emmet-vim/docs/index.html	/^	<h2>vim plugins for HTML and CSS hi-speed coding.<\/h2>$/;"	i
vim-blade	plugged/vim-blade/README.md	/^# vim-blade #$/;"	c
vim-cool	plugged/vim-cool/README.md	/^# vim-cool$/;"	c
vim-easy-replace	plugged/vim-easy-replace/README.md	/^# vim-easy-replace$/;"	c
vim-startify	plugged/vim-devicons/DEVELOPER.md	/^##### vim-startify$/;"	T	subsubsection:API""Integration with other plugins
vim_enter	plugged/bufferline.nvim/tests/utils.lua	/^function M.vim_enter()$/;"	f	unknown:M
vim_function	plugged/lualine.nvim/lua/lualine/components/special/eval_func_component.lua	/^function M.vim_function(name)$/;"	f	unknown:M
vim_highlights	plugged/onedark.nvim/lua/onedark/highlights.lua	/^local function vim_highlights(highlights)$/;"	f
vim_lsp	plugged/lualine.nvim/lua/lualine/components/diagnostics/sources.lua	/^  vim_lsp = function()$/;"	f
vim_options	plugged/telescope.nvim/lua/telescope/builtin/internal.lua	/^internal.vim_options = function(opts)$/;"	f	unknown:internal
vim_replace_text	plugged/nvim-spectre/lua/spectre/utils.lua	/^function M.vim_replace_text(search_text, replace_text, search_line)$/;"	f	unknown:M
vimdiff	plugged/telescope.nvim/lua/telescope/builtin/git.lua	/^      local vimdiff = function(selection, command)$/;"	f
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define() abort$/;"	f
vimgrep	plugged/telescope.nvim/lua/telescope/previewers/buffer_previewer.lua	/^previewers.vimgrep = defaulter(function(opts)$/;"	f	unknown:previewers
vimgrep	plugged/telescope.nvim/lua/telescope/previewers/term_previewer.lua	/^previewers.vimgrep = defaulter(function(opts)$/;"	f	unknown:previewers
visibility	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
visible	plugged/bufferline.nvim/lua/bufferline/models.lua	/^function Buffer:visible()$/;"	f	unknown:Buffer
visual_selection_range	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function visual_selection_range()$/;"	f
vk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
vle	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
vm	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
vme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
vmove	plugged/fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f	struct:fzf.Terminal
void	plugged/plenary.nvim/lua/plenary/async/async.lua	/^M.void = function(func)$/;"	f	unknown:M
void	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.void = function(async_func)$/;"	f	unknown:M
voided	plugged/plenary.nvim/tests/plenary/async/async_spec.lua	/^    local voided = a.void(function(arg)$/;"	f
vp	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
vprint	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.vprint(obj)$/;"	f	unknown:M
vprintf	plugged/gitsigns.nvim/lua/gitsigns/debug.lua	/^function M.vprintf(obj, ...)$/;"	f	unknown:M
vr	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
vscode-jsonrpc	plugged/coc.nvim/package-lock.json	/^            "vscode-jsonrpc": "6.1.0-next.2",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol.requires
vscode-jsonrpc	plugged/coc.nvim/package-lock.json	/^        "vscode-jsonrpc": "^5.0.1",$/;"	s	object:dependencies.vscode-languageserver-protocol.requires
vscode-jsonrpc	plugged/coc.nvim/package-lock.json	/^        "vscode-jsonrpc": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-jsonrpc	plugged/coc.nvim/package-lock.json	/^    "vscode-jsonrpc": {$/;"	o	object:dependencies
vscode-languageserver	plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver": {$/;"	o	object:dependencies
vscode-languageserver-protocol	plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-protocol": "3.17.0-next.5"$/;"	s	object:dependencies.vscode-languageserver.requires
vscode-languageserver-protocol	plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-protocol": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-languageserver-protocol	plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-protocol": {$/;"	o	object:dependencies
vscode-languageserver-textdocument	plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-textdocument": {$/;"	o	object:dependencies
vscode-languageserver-types	plugged/coc.nvim/package-lock.json	/^            "vscode-languageserver-types": "3.17.0-next.1"$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol.requires
vscode-languageserver-types	plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-types": "3.15.1"$/;"	s	object:dependencies.vscode-languageserver-protocol.requires
vscode-languageserver-types	plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-types": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-languageserver-types	plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-types": {$/;"	o	object:dependencies
vscode-uri	plugged/coc.nvim/package-lock.json	/^    "vscode-uri": {$/;"	o	object:dependencies
vse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
vset	plugged/fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
vtype	plugged/gitsigns.nvim/gen_help.lua	/^    local vtype = (function()$/;"	f
vu	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
vue	plugged/nvim-treesitter/lockfile.json	/^  "vue": {$/;"	o
vue-html	coc-settings.json	/^        "vue-html": "html", $/;"	s	object:emmet.includeLanguages
vv	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
vw	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
vx	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
vy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
vz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
w	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
w	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
w	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
w	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
w$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
w0	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
w1	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
w3c-hr-time	plugged/coc.nvim/package-lock.json	/^        "w3c-hr-time": "^1.0.2",$/;"	s	object:dependencies.jsdom.requires
w3c-hr-time	plugged/coc.nvim/package-lock.json	/^    "w3c-hr-time": {$/;"	o	object:dependencies
w3c-xmlserializer	plugged/coc.nvim/package-lock.json	/^        "w3c-xmlserializer": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
w3c-xmlserializer	plugged/coc.nvim/package-lock.json	/^    "w3c-xmlserializer": {$/;"	o	object:dependencies
w4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
w4e	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
w5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
w6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
w8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
w9	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
wB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
wBe	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
wC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
wD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
wE	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
wG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
wK	plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
wL	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wM	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	v
wN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
wR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
wS	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wS          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wT	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
wV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
wV	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wV          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
wX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
wZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
w_	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
wae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
wait	plugged/fzf/src/reader.go	/^	wait     bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
wait	plugged/fzf/test/test_go.rb	/^def wait$/;"	f
wait	plugged/plenary.nvim/lua/plenary/async/control.lua	/^Condvar.wait = a.wrap(function(self, callback)$/;"	f	unknown:Condvar
wait	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^Condvar.wait = a.wrap(function(self, callback)$/;"	f	unknown:Condvar
wait	plugged/plenary.nvim/lua/plenary/job.lua	/^function Job:wait(timeout, wait_interval, should_redraw)$/;"	f	unknown:Job
wait_result	plugged/plenary.nvim/lua/plenary/job.lua	/^  local wait_result = vim.wait(timeout, function()$/;"	f
walk	plugged/which-key.nvim/lua/which-key/tree.lua	/^function Tree:walk(cb, node)$/;"	f	unknown:Tree
walker	plugged/coc.nvim/package-lock.json	/^        "walker": "^1.0.7"$/;"	s	object:dependencies.jest-haste-map.requires
walker	plugged/coc.nvim/package-lock.json	/^        "walker": "~1.0.5"$/;"	s	object:dependencies.sane.requires
walker	plugged/coc.nvim/package-lock.json	/^    "walker": {$/;"	o	object:dependencies
want	plugged/fzf/src/terminal_test.go	/^	want$/;"	M	struct:fzf.testCase	typeref:typename:want
want	plugged/fzf/src/terminal_test.go	/^type want struct {$/;"	s	package:fzf
warn	plugged/gitsigns.nvim/lua/gitsigns/config.lua	/^local function warn(s, ...)$/;"	f
warn	plugged/onedarkpro.nvim/lua/onedarkpro/utils.lua	/^function utils.warn(...)$/;"	f	unknown:utils
warn	plugged/which-key.nvim/lua/which-key/util.lua	/^function M.warn(msg)$/;"	f	unknown:M
watch_gitdir	plugged/gitsigns.nvim/lua/gitsigns.lua	/^local watch_gitdir = function(bufnr, gitdir)$/;"	f
watchman	plugged/coc.nvim/package.json	/^    "watchman": false,$/;"	b	object:jest
wc	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
wd	plugged/gitsigns.nvim/lua/gitsigns/popup.lua	/^      local wd = api.nvim_win_call(win_id, function()$/;"	f
we	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#pluginHome	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#pluginHome()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filetype$/;"	a
webidl-conversions	plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^5.0.0"$/;"	s	object:dependencies.domexception.requires
webidl-conversions	plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^6.1.0"$/;"	s	object:dependencies.whatwg-url.requires
webidl-conversions	plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^6.1.0",$/;"	s	object:dependencies.jsdom.requires
webidl-conversions	plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": {$/;"	o	object:dependencies.domexception.dependencies
webidl-conversions	plugged/coc.nvim/package-lock.json	/^    "webidl-conversions": {$/;"	o	object:dependencies
wee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wg	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
wge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
whats	plugged/emmet-vim/docs/index.html	/^			<article id="whats">$/;"	I
whatwg-encoding	plugged/coc.nvim/package-lock.json	/^        "whatwg-encoding": "^1.0.5"$/;"	s	object:dependencies.html-encoding-sniffer.requires
whatwg-encoding	plugged/coc.nvim/package-lock.json	/^        "whatwg-encoding": "^1.0.5",$/;"	s	object:dependencies.jsdom.requires
whatwg-encoding	plugged/coc.nvim/package-lock.json	/^    "whatwg-encoding": {$/;"	o	object:dependencies
whatwg-mimetype	plugged/coc.nvim/package-lock.json	/^        "whatwg-mimetype": "^2.3.0",$/;"	s	object:dependencies.data-urls.requires
whatwg-mimetype	plugged/coc.nvim/package-lock.json	/^        "whatwg-mimetype": "^2.3.0",$/;"	s	object:dependencies.jsdom.requires
whatwg-mimetype	plugged/coc.nvim/package-lock.json	/^    "whatwg-mimetype": {$/;"	o	object:dependencies
whatwg-url	plugged/coc.nvim/package-lock.json	/^        "whatwg-url": "^8.0.0"$/;"	s	object:dependencies.data-urls.requires
whatwg-url	plugged/coc.nvim/package-lock.json	/^        "whatwg-url": "^8.5.0",$/;"	s	object:dependencies.jsdom.requires
whatwg-url	plugged/coc.nvim/package-lock.json	/^    "whatwg-url": {$/;"	o	object:dependencies
which	plugged/coc.nvim/package-lock.json	/^            "which": "^1.2.9"$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
which	plugged/coc.nvim/package-lock.json	/^        "which": "^2.0.1"$/;"	s	object:dependencies.cross-spawn.requires
which	plugged/coc.nvim/package-lock.json	/^        "which": "^2.0.2"$/;"	s	object:dependencies.node-notifier.requires
which	plugged/coc.nvim/package-lock.json	/^        "which": {$/;"	o	object:dependencies.execa.dependencies
which	plugged/coc.nvim/package-lock.json	/^    "which": {$/;"	o	object:dependencies
which-boxed-primitive	plugged/coc.nvim/package-lock.json	/^        "which-boxed-primitive": "^1.0.2"$/;"	s	object:dependencies.unbox-primitive.requires
which-boxed-primitive	plugged/coc.nvim/package-lock.json	/^    "which-boxed-primitive": {$/;"	o	object:dependencies
which-module	plugged/coc.nvim/package-lock.json	/^        "which-module": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
which-module	plugged/coc.nvim/package-lock.json	/^    "which-module": {$/;"	o	object:dependencies
which_key	plugged/telescope.nvim/lua/telescope/actions/generate.lua	/^action_generate.which_key = function(opts)$/;"	f	unknown:action_generate
which_key	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^actions.which_key = function(prompt_bufnr, opts)$/;"	f	unknown:actions
white	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
whiteBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
whiteSuffix	plugged/fzf/src/terminal.go	/^var whiteSuffix *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
whole_file	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:whole_file(dirs)$/;"	f	unknown:Runner
width	plugged/fzf/src/terminal.go	/^	width    int$/;"	m	struct:fzf.itemLine	typeref:typename:int
width	plugged/fzf/src/tui/light.go	/^	width         int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
width	plugged/fzf/src/tui/light.go	/^	width    int$/;"	m	struct:tui.LightWindow	typeref:typename:int
width	plugged/fzf/src/tui/tcell.go	/^	width       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
width	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^      preview.width = resolve.resolve_width(if_nil(layout_config.preview_width, function(_, _)$/;"	f	unknown:preview
width	plugged/telescope.nvim/lua/telescope/pickers/layout_strategies.lua	/^      preview.width = resolve.resolve_width(if_nil(layout_config.preview_width, function(_, cols/;"	f	unknown:preview
width	plugged/telescope.nvim/lua/telescope/themes.lua	/^      width = function(_, max_columns, _)$/;"	f
wie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
will_block	plugged/plenary.nvim/lua/plenary/async/util.lua	/^M.will_block = function(async_func)$/;"	f	unknown:M
will_block	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.will_block = async(function(future)$/;"	f	unknown:M
win	plugged/fzf/test/test_go.rb	/^  attr_reader :win$/;"	A	class:Tmux
win_central_row	plugged/telescope.nvim/lua/telescope/actions/init.lua	/^  local win_central_row = function(win_nr)$/;"	f
win_open	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^function M.win_open(opts)$/;"	f	unknown:M
win_option	plugged/telescope.nvim/lua/telescope/config/resolve.lua	/^resolver.win_option = function(val, default)$/;"	f	unknown:resolver
winblend	plugged/coc.nvim/data/schema.json	/^        "winblend": {$/;"	o	object:definitions.float.properties
winblend	plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
winblend	plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.hover.floatConfig.properties
winblend	plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.signature.floatConfig.properties
winblend	plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.suggest.floatConfig.properties
window	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			window[ jsonp ] = function(tmp){$/;"	f	function:AnonymousFunctionc5b93c5ca100
window	plugged/fzf/src/terminal.go	/^	window       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
windowData	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
windowPosition	plugged/fzf/src/options.go	/^type windowPosition int$/;"	t	package:fzf	typeref:typename:int
window_options	plugged/nvim-tree.lua/lua/nvim-tree/config.lua	/^function M.window_options()$/;"	f	unknown:M
window_picker_exclude	plugged/nvim-tree.lua/lua/nvim-tree/config.lua	/^function M.window_picker_exclude()$/;"	f	unknown:M
wins_in_tabpage	plugged/nvim-tree.lua/lua/nvim-tree.lua	/^    local wins_in_tabpage = vim.tbl_filter(function(w)$/;"	f
wipe_rogue_buffer	plugged/nvim-tree.lua/lua/nvim-tree/view.lua	/^local function wipe_rogue_buffer()$/;"	f
with	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
with	plugged/plenary.nvim/lua/plenary/context_manager.lua	/^function context_manager.with(obj, callable)$/;"	f	unknown:context_manager
withIndex	plugged/fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f	package:fzf	typeref:typename:*Item
withPrefixLengths	plugged/fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
with_cr	plugged/toggleterm.nvim/lua/toggleterm/terminal.lua	/^local function with_cr(...)$/;"	f
with_displayed_output	plugged/plenary.nvim/lua/plenary/run.lua	/^run.with_displayed_output = function(title_text, cmd, opts)$/;"	f	unknown:run
with_preview_window	plugged/telescope.nvim/lua/telescope/previewers/utils.lua	/^utils.with_preview_window = function(status, bufnr, callable)$/;"	f	unknown:utils
withinElement	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var withinElement = function(event, elem) {$/;"	f
wme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
wombat	plugged/lualine.nvim/THEMES.md	/^### wombat$/;"	S	chapter:Available themes
word-wrap	plugged/coc.nvim/package-lock.json	/^            "word-wrap": "~1.2.3"$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
word-wrap	plugged/coc.nvim/package-lock.json	/^        "word-wrap": "^1.2.3"$/;"	s	object:dependencies.optionator.requires
word-wrap	plugged/coc.nvim/package-lock.json	/^    "word-wrap": {$/;"	o	object:dependencies
wordNext	plugged/fzf/src/terminal.go	/^	wordNext     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
wordRubout	plugged/fzf/src/terminal.go	/^	wordRubout   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
words	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local words = function(input)$/;"	f
workspace.bottomUpFiletypes	plugged/coc.nvim/data/schema.json	/^    "workspace.bottomUpFiletypes": {$/;"	o	object:properties
workspace.ignoredFiletypes	plugged/coc.nvim/data/schema.json	/^    "workspace.ignoredFiletypes": {$/;"	o	object:properties
workspace.workspaceFolderCheckCwd	plugged/coc.nvim/data/schema.json	/^    "workspace.workspaceFolderCheckCwd": {$/;"	o	object:properties
workspace_diagnostics	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.workspace_diagnostics = function(opts)$/;"	f	unknown:lsp
workspace_symbols	plugged/telescope.nvim/lua/telescope/builtin/lsp.lua	/^lsp.workspace_symbols = function(opts)$/;"	f	unknown:lsp
worse	plugged/telescope.nvim/lua/telescope/pickers/scroller.lua	/^scroller.worse = function(sorting_strategy)$/;"	f	unknown:scroller
wp	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
wr	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
wrap	plugged/fzf/src/options.go	/^	wrap        bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
wrap	plugged/plenary.nvim/lua/plenary/async/async.lua	/^M.wrap = function(func, argc)$/;"	f	unknown:M
wrap	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^M.wrap = function(func, argc)$/;"	f	unknown:M
wrap	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local function wrap(gen, param, state)$/;"	f
wrap-ansi	plugged/coc.nvim/package-lock.json	/^        "wrap-ansi": "^6.2.0"$/;"	s	object:dependencies.cliui.requires
wrap-ansi	plugged/coc.nvim/package-lock.json	/^    "wrap-ansi": {$/;"	o	object:dependencies
wrapLine	plugged/fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f	package:tui	typeref:typename:[]wrappedLine
wrap_cb_alive	plugged/lualine.nvim/lua/lualine/utils/job.lua	/^  wrap_cb_alive = function(self, name)$/;"	f
wrap_iter	plugged/plenary.nvim/lua/plenary/collections/py_list.lua	/^local function wrap_iter(f, l, n)$/;"	f
wrapped	plugged/plenary.nvim/tests/plenary/async/async_spec.lua	/^    local wrapped = a.wrap(function(inc, callback)$/;"	f
wrapped	plugged/plenary.nvim/tests/plenary/async/async_spec.lua	/^    local wrapped = a.wrap(function(inc, nil1, nil2, callback)$/;"	f
wrapped.newsink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrappedLine	plugged/fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	s	package:tui
wrapped_fn	plugged/telescope.nvim/lua/telescope/debounce.lua	/^    function wrapped_fn(...)$/;"	f
wrapped_fn	plugged/telescope.nvim/lua/telescope/debounce.lua	/^  local function wrapped_fn(...)$/;"	f
wrappy	plugged/coc.nvim/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.inflight.requires
wrappy	plugged/coc.nvim/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.once.requires
wrappy	plugged/coc.nvim/package-lock.json	/^    "wrappy": {$/;"	o	object:dependencies
write	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:o
write	plugged/github-nvim-theme/lua/github-theme/extra/init.lua	/^local function write(str, file_name)$/;"	f
write	plugged/plenary.nvim/lua/plenary/path.lua	/^function Path:write(txt, flag, mode)$/;"	f	unknown:Path
write	plugged/tokyonight.nvim/lua/tokyonight/extra/init.lua	/^local function write(str, fileName)$/;"	f
write-file-atomic	plugged/coc.nvim/package-lock.json	/^        "write-file-atomic": "^3.0.0"$/;"	s	object:dependencies.@jest/transform.requires
write-file-atomic	plugged/coc.nvim/package-lock.json	/^    "write-file-atomic": {$/;"	o	object:dependencies
writeTemporaryFile	plugged/fzf/src/terminal.go	/^func writeTemporaryFile(data []string, printSep string) string {$/;"	f	package:fzf	typeref:typename:string
write_async	plugged/telescope.nvim/lua/telescope/actions/history.lua	/^local write_async = function(path, txt, flag)$/;"	f
write_file	plugged/plenary.nvim/scripts/update_filetypes_from_github.lua	/^local write_file = function(path, string)$/;"	f
write_lockfile	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.write_lockfile(verbose, skip_langs)$/;"	f	unknown:M
write_to_file	plugged/gitsigns.nvim/lua/gitsigns/diff_ext.lua	/^local function write_to_file(path, text)$/;"	f
write_to_file	plugged/gitsigns.nvim/test/gs_helpers.lua	/^function M.write_to_file(path, text)$/;"	f	unknown:M
write_virtual_text	plugged/nvim-spectre/lua/spectre/utils.lua	/^function M.write_virtual_text(bufnr, ns, line, chunks, virt_text_pos)$/;"	f	unknown:M
writelines	plugged/fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
writer	plugged/telescope.nvim/lua/telescope/pickers/_test.lua	/^local writer = function(val)$/;"	f
ws	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ws	plugged/coc.nvim/package-lock.json	/^        "ws": "^7.4.5",$/;"	s	object:dependencies.jsdom.requires
ws	plugged/coc.nvim/package-lock.json	/^    "ws": {$/;"	o	object:dependencies
ws	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ws          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
wt	plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
wte	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wv	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wv          :call b:buffergator_catalog_viewer.visit_targe/;"	m
ww	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
wx	plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
wy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
wz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
x	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
x	plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
x	plugged/fzf/src/tui/light.go	/^	x             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
x	plugged/nvim-tree.lua/plugin/nvim-tree-startup.lua	/^local x = vim.tbl_filter(function(v)$/;"	f
x	plugged/nvim-treesitter/tests/indent/c/array.c	/^int x[] = {$/;"	v	typeref:typename:int[]
x	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^    int x, y;$/;"	m	struct:foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/c/struct.c	/^        int x;$/;"	m	struct:foo::bar	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    int x;$/;"	m	union:baz	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^    int x;$/;"	m	class:Foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    int x;$/;"	m	class:Foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/python/control_flow.py	/^    x = 1$/;"	v
x	plugged/nvim-treesitter/tests/indent/python/control_flow.py	/^    x = 2$/;"	v
x	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^    x: u32,$/;"	m	struct:Foo
x	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      x = function()$/;"	f
x	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      x = function(bufnr)$/;"	f
x	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      x = function(e)$/;"	f
x	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> x           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
x	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> x           :call b:buffergator_catalog_viewer.delete_targ/;"	m
x$	plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
x0	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
x3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x4	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
x6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
x7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
x8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
xB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
xC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
xD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
xE	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
xF	plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
xG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
xI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
xIe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
xK	plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
xN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xP	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
xQ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xR	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
xS	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
xV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
xX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
xZ	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
x_	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
xae	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
xc	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
xee	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xg	plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
xge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
xh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
xk	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
xl	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
xle	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
xme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
xml-name-validator	plugged/coc.nvim/package-lock.json	/^        "xml-name-validator": "^3.0.0"$/;"	s	object:dependencies.jsdom.requires
xml-name-validator	plugged/coc.nvim/package-lock.json	/^        "xml-name-validator": "^3.0.0"$/;"	s	object:dependencies.w3c-xmlserializer.requires
xml-name-validator	plugged/coc.nvim/package-lock.json	/^    "xml-name-validator": {$/;"	o	object:dependencies
xml_from_color_group	plugged/github-nvim-theme/lua/github-theme/extra/iterm.lua	/^local xml_from_color_group = function(key, color)$/;"	f
xmlchars	plugged/coc.nvim/package-lock.json	/^        "xmlchars": "^2.2.0"$/;"	s	object:dependencies.saxes.requires
xmlchars	plugged/coc.nvim/package-lock.json	/^    "xmlchars": {$/;"	o	object:dependencies
xn	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xoffset	plugged/fzf/src/terminal.go	/^	xoffset      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
xp	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
xp	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xpe	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
xr	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
xt	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
xte	plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
xw	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
xy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
xyz_to_luv	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.xyz_to_luv = function(tuple)$/;"	f	unknown:hsluv
xyz_to_luv	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.xyz_to_luv = function(tuple)$/;"	f	unknown:hsluv
xyz_to_luv	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.xyz_to_luv = function(tuple)$/;"	f	unknown:hsluv
xyz_to_rgb	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.xyz_to_rgb = function(tuple)$/;"	f	unknown:hsluv
xyz_to_rgb	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.xyz_to_rgb = function(tuple)$/;"	f	unknown:hsluv
xyz_to_rgb	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.xyz_to_rgb = function(tuple)$/;"	f	unknown:hsluv
y	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
y	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
y	plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
y	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
y	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
y	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
y	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
y	plugged/fzf/src/tui/light.go	/^	y             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
y	plugged/nvim-treesitter/tests/indent/c/array.c	/^int y[][2] = {$/;"	v	typeref:typename:int[][2]
y	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^    int x, y;$/;"	m	struct:foo	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^    int y;$/;"	m	class:Foo	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^        int y;$/;"	m	class:Foo::Bar	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^    y: u32,$/;"	m	struct:Foo
y	plugged/telescope.nvim/lua/tests/automated/action_spec.lua	/^      y = function()$/;"	f
y$	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
y0	plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
y0e	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
y18n	plugged/coc.nvim/package-lock.json	/^        "y18n": "^4.0.0",$/;"	s	object:dependencies.yargs.requires
y18n	plugged/coc.nvim/package-lock.json	/^    "y18n": {$/;"	o	object:dependencies
y2	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
y5	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
y6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
y7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
y8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
y9	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
yB	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
yC	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
yD	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
yG	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
yJ	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
yK	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
yN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
yPe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yV	plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
yW	plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
yX	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
y_	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
y_to_l	plugged/github-nvim-theme/lua/github-theme/hsluv.lua	/^hsluv.y_to_l = function(Y)$/;"	f	unknown:hsluv
y_to_l	plugged/onedarkpro.nvim/lua/onedarkpro/hsluv.lua	/^hsluv.y_to_l = function(Y)$/;"	f	unknown:hsluv
y_to_l	plugged/tokyonight.nvim/lua/tokyonight/hsluv.lua	/^hsluv.y_to_l = function(Y)$/;"	f	unknown:hsluv
yallist	plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.lru-cache.requires
yallist	plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.minipass.requires
yallist	plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.minizlib.requires
yallist	plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.tar.requires
yallist	plugged/coc.nvim/package-lock.json	/^    "yallist": {$/;"	o	object:dependencies
yaml	plugged/nvim-treesitter/lockfile.json	/^  "yaml": {$/;"	o
yang	plugged/nvim-treesitter/lockfile.json	/^  "yang": {$/;"	o
yanked	plugged/fzf/src/terminal.go	/^	yanked       []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
yargs	plugged/coc.nvim/package-lock.json	/^            "yargs": "^15.4.1"$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
yargs	plugged/coc.nvim/package-lock.json	/^        "yargs": "^15.4.1"$/;"	s	object:dependencies.jest-runtime.requires
yargs	plugged/coc.nvim/package-lock.json	/^    "yargs": {$/;"	o	object:dependencies
yargs-parser	plugged/coc.nvim/package-lock.json	/^        "yargs-parser": "20.x"$/;"	s	object:dependencies.ts-jest.requires
yargs-parser	plugged/coc.nvim/package-lock.json	/^        "yargs-parser": "^18.1.2"$/;"	s	object:dependencies.yargs.requires
yargs-parser	plugged/coc.nvim/package-lock.json	/^        "yargs-parser": {$/;"	o	object:dependencies.ts-jest.dependencies
yargs-parser	plugged/coc.nvim/package-lock.json	/^    "yargs-parser": {$/;"	o	object:dependencies
yc	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ye	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
yellow	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
yellowBright	plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
yf	plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
yge	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
yh	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
yie	plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
yield_now	plugged/plenary.nvim/lua/plenary/async_lib/util.lua	/^M.yield_now = async(function()$/;"	f	unknown:M
yle	plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
ym	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
yme	plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
yo	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yoffset	plugged/fzf/src/tui/light.go	/^	yoffset       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
yp	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
yr	plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yse	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
yt	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
yte	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yw	plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
yy	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
yze	plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
z	plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunctionaf1e5c4a1df00.n
z	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
z	plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
z	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    Bar z;$/;"	m	class:Foo	typeref:typename:Bar	file:
z$	plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
z0	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
z3	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
z3e	plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
z4	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
z5	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
z6	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
z7	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
z8	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
z9	plugged/coc.nvim/build/index.js	/^`+s),r.push(n+"m+"+Tp.exports.humanize(this.diff)+"[0m")}else r[0]=z9()+e+" "+r[0]}function z9(/;"	f
zB	plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
zC	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zD	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
zEe	plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
zG	plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
zH	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
zI	plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
zM	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zN	plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
zO	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
zP	plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
zT	plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
zV	plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
za	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
zb	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
zc	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
zce	plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
zd	plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
zeros	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local zeros = function()$/;"	f
zf	plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
zi	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
zie	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
zig	plugged/nvim-treesitter/lockfile.json	/^  "zig": {$/;"	o
zip	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local zip = function(...)$/;"	f
zip_gen	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local zip_gen = function(param, state)$/;"	f
zip_gen_r	plugged/plenary.nvim/lua/plenary/iterators.lua	/^local function zip_gen_r(param, state, state_new, ...)$/;"	f
zj	plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
zm	plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
zme	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
zoe	plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
zpe	plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
zsh	plugged/fzf/test/test_go.rb	/^    def zsh$/;"	S	class:Shell
zt	plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
zu	plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
zue	plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
zw	plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
zy	plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
zz	plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
~	plugged/bufferline.nvim/lua/bufferline.lua	/^  if type(callback) ~= "function" then$/;"	f
~	plugged/bufferline.nvim/lua/bufferline/custom_area.lua	/^      if type(section_fn) ~= "function" then$/;"	f
~	plugged/plenary.nvim/lua/plenary/async/async.lua	/^  if type(func) ~= "function" then$/;"	f
~	plugged/plenary.nvim/lua/plenary/async_lib/async.lua	/^  if type(func) ~= "function" then$/;"	f
~	plugged/telescope.nvim/lua/telescope/builtin/files.lua	/^  if opts.additional_args ~= nil and type(opts.additional_args) == "function" then$/;"	f
~	plugged/telescope.nvim/lua/telescope/previewers/previewer.lua	/^    if type(value) ~= "function" then$/;"	f
⌨️ Mappings	plugged/which-key.nvim/README.md	/^### ⌨️ Mappings$/;"	S	section:💥 Which Key""🪄 Setup
⚓ Installation	plugged/material.nvim/README.md	/^## ⚓ Installation$/;"	s	chapter:🌊 material.nvim
⚙️ Configuration	plugged/material.nvim/README.md	/^## ⚙️ Configuration$/;"	s	chapter:🌊 material.nvim
⚙️ Configuration	plugged/tokyonight.nvim/README.md	/^## ⚙️ Configuration$/;"	s	chapter:🏙 Tokyo Night
⚙️ Configuration	plugged/which-key.nvim/README.md	/^## ⚙️ Configuration$/;"	s	chapter:💥 Which Key
⚡️ Requirements	plugged/material.nvim/README.md	/^## ⚡️ Requirements$/;"	s	chapter:🌊 material.nvim
⚡️ Requirements	plugged/tokyonight.nvim/README.md	/^## ⚡️ Requirements$/;"	s	chapter:🏙 Tokyo Night
⚡️ Requirements	plugged/which-key.nvim/README.md	/^## ⚡️ Requirements$/;"	s	chapter:💥 Which Key
⛵ Functions	plugged/material.nvim/README.md	/^## ⛵ Functions$/;"	s	chapter:🌊 material.nvim
✨ Features	plugged/material.nvim/README.md	/^## ✨ Features$/;"	s	chapter:🌊 material.nvim
✨ Features	plugged/tokyonight.nvim/README.md	/^## ✨ Features$/;"	s	chapter:🏙 Tokyo Night
✨ Features	plugged/which-key.nvim/README.md	/^## ✨ Features$/;"	s	chapter:💥 Which Key
🌊 material.nvim	plugged/material.nvim/README.md	/^# 🌊 material.nvim$/;"	c
🍭 Extras	plugged/tokyonight.nvim/README.md	/^## 🍭 Extras$/;"	s	chapter:🏙 Tokyo Night
🎨 Colors	plugged/which-key.nvim/README.md	/^## 🎨 Colors$/;"	s	chapter:💥 Which Key
🏙 Tokyo Night	plugged/tokyonight.nvim/README.md	/^# 🏙 Tokyo Night$/;"	c
🐬 Usage	plugged/material.nvim/README.md	/^## 🐬 Usage$/;"	s	chapter:🌊 material.nvim
💥 Which Key	plugged/which-key.nvim/README.md	/^# 💥 Which Key$/;"	c
📦 Installation	plugged/tokyonight.nvim/README.md	/^## 📦 Installation$/;"	s	chapter:🏙 Tokyo Night
📦 Installation	plugged/which-key.nvim/README.md	/^## 📦 Installation$/;"	s	chapter:💥 Which Key
📺 Screenshot	plugged/github-nvim-theme/README.md	/^## 📺 Screenshot$/;"	s
🔥 Contributing	plugged/tokyonight.nvim/README.md	/^## 🔥 Contributing$/;"	s	chapter:🏙 Tokyo Night
🔥 Plugins	plugged/which-key.nvim/README.md	/^## 🔥 Plugins$/;"	s	chapter:💥 Which Key
🔱 Info	plugged/material.nvim/README.md	/^## 🔱 Info$/;"	s	chapter:🌊 material.nvim
🚀 Usage	plugged/tokyonight.nvim/README.md	/^## 🚀 Usage$/;"	s	chapter:🏙 Tokyo Night
🚀 Usage	plugged/which-key.nvim/README.md	/^## 🚀 Usage$/;"	s	chapter:💥 Which Key
🚙 Operators, Motions and Text Objects	plugged/which-key.nvim/README.md	/^### 🚙 Operators, Motions and Text Objects$/;"	S	section:💥 Which Key""🪄 Setup
🪄 Setup	plugged/which-key.nvim/README.md	/^## 🪄 Setup$/;"	s	chapter:💥 Which Key
