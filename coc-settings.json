{
    "emmet.includeLanguages": {
        "vue-hmtll": "hmtl",
        "javascript": "javascriptreact",
        "vue": "html",
        "django-html": "html",
        "blade" : "html"
    },


    "snippets.extends": {
        "cpp": ["c"],
        "javascriptreact": ["javascript"],
        "typescript": ["javascript"]
    },

    "snippets.ultisnips.enable": true,

    "snippets.ultisnips.trace": false,

    "snippets.snipmate.enable": true,


    "markdownlint.config": {
        "line_length": false
    },

    "diagnostic.errorSign": "x",
    "diagnostic.infoSign": "!",
    //"diagnostic.warningSign": "⚠",
    "diagnostic.warningSign": "!",
    "diagnostic.hintSign": "¿",

    "explorer.icon.enableNerdfont": true,
    "explorer.icon.source": "builtin",
    "explorer.file.showHiddenFiles": true,
    "explorer.file.column.indent.indentLine": true,
    "explorer.enableFloatinput": true,
    "explorer.quitOnOpen": true,
    "explorer.git.enable": false,
    "explorer.position": "right",
    //"explorer.position": "floating",
    //"explorer.contentWidth": 0,
    "explorer.contentWidthType": "win-width",
    //"explorer.file.child.labelingTemplate": "[fullpath][link][diagnosticError][diagnosticWarning][git][timeAccessed][timeModified][timeCreated][readonly][modified]",
    //"explorer.file.root.labelingTemplate": "[fullpath][git]",
    "explorer.file.child.template": "[git | 2] [selection | clip | 1] [indent][icon | 1] [diagnosticError & 1][filename omitCenter 1][modified][readonly] [linkIcon & 1][link growRight 1 omitCenter 5]",
    "explorer.keyMappings.global": {
        //"<cr>": ["wait", "expanded?", "collapse", "expand"],
        //"<cr>": ["wait", "expanded?", "collapse", "expand"],
        "<cr>": ["wait", "expandable?", ["wait", "expanded?", "collapse", "expand"], "open"],
        "o": ["wait", "expandable?", "cd", "open"]
    },


    "languageserver": {
        // "clangd": {
        //     "command": "clangd",
        //     "rootPatterns": ["compile_flags.txt", "compile_commands.json"],
        //     "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"]
        // },
        "ccls": {
            "command": "ccls",
            "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
            "rootPatterns": [".ccls-root", "compile_commands.json"],
            "initializationOptions": {
                "cache": {
                    "directory": ".ccls-cache"
                },
                "client": {
                    "snippetSupport": true
                }
            }
        }
    }
}
